// made by Ronald#1000 using his automated composing software
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CitizenFX.Core;
using CitizenFX.Core.Native;

/// <summary>
/// Replacement lib for CitizenFX.Core.Native;
/// https://vespura.com/doc/natives
/// </summary>
namespace RedLib
{
	/// <summary>
	/// Replaces CitizenFX.Core.Native.API;
	/// </summary>
	public partial class Lib
	{
		// :####################: //
		// : namespace: BUILTIN : //
		// :####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Wait(int _ms)
		{
			Function.Call((Hash)0x4EDE34FBADD967A6, _ms);
		}
		/// <summary>
		/// Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
		/// </summary>
		public static int Timera()
		{
			return Function.Call<int>((Hash)0x83666F9FB8FEBD4B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Timerb()
		{
			return Function.Call<int>((Hash)0xC9D9444186B5A374);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Settimera(int _value)
		{
			Function.Call((Hash)0xC1B1E9A034A63A62, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Settimerb(int _value)
		{
			Function.Call((Hash)0x5AE11BC36633DE4E, _value);
		}
		/// <summary>
		/// Gets the current frame time.
		/// </summary>
		public static float Timestep()
		{
			return Function.Call<float>((Hash)0x0000000050597EE2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Sin(float _value)
		{
			return Function.Call<float>((Hash)0x0BADBFA3B172435F, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Cos(float _value)
		{
			return Function.Call<float>((Hash)0xD0FFB162F40A139C, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Sqrt(float _value)
		{
			return Function.Call<float>((Hash)0x71D93B57D07F9804, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Pow(float _base, float _exponent)
		{
			return Function.Call<float>((Hash)0xE3621CC40F31FE2E, _base, _exponent);
		}
		/// <summary>
		/// Old name: _LOG10
		/// </summary>
		public static float Log10(float _value)
		{
			return Function.Call<float>((Hash)0xE816E655DE37FE20, _value);
		}
		/// <summary>
		/// Calculates the magnitude of a vector.
		/// </summary>
		public static float Vmag(float _x, float _y, float _z)
		{
			return Function.Call<float>((Hash)0x652D2EEEF1D3E62C, _x, _y, _z);
		}
		/// <summary>
		/// Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
		/// </summary>
		public static float Vmag2(float _x, float _y, float _z)
		{
			return Function.Call<float>((Hash)0xA8CEACB4F35AE058, _x, _y, _z);
		}
		/// <summary>
		/// Calculates distance between vectors.
		/// </summary>
		public static float Vdist(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			return Function.Call<float>((Hash)0x2A488C176D52CCA5, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
		/// </summary>
		public static float Vdist2(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			return Function.Call<float>((Hash)0xB7A628320EFF8E47, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ShiftLeft(int _value, int _bitShift)
		{
			return Function.Call<int>((Hash)0xEDD95A39E5544DE8, _value, _bitShift);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ShiftRight(int _value, int _bitShift)
		{
			return Function.Call<int>((Hash)0x97EF1E5BCE9DC075, _value, _bitShift);
		}
		/// <summary>
		/// Rounds a float value down to the next whole number
		/// </summary>
		public static int Floor(float _value)
		{
			return Function.Call<int>((Hash)0xF34EE736CF047844, _value);
		}
		/// <summary>
		/// Rounds a float value up to the next whole number
		/// </summary>
		public static int Ceil(float _value)
		{
			return Function.Call<int>((Hash)0x11E019C8F43ACC8A, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Round(float _value)
		{
			return Function.Call<int>((Hash)0xF2DB717A73826179, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float ToFloat(int _value)
		{
			return Function.Call<float>((Hash)0xBBDA792448DB5A89, _value);
		}
		/// <summary>
		/// THREAD_PRIO_HIGHEST = 0
		/// THREAD_PRIO_NORMAL = 1
		/// THREAD_PRIO_LOWEST = 2
		/// THREAD_PRIO_MANUAL_UPDATE = 100
		/// </summary>
		public static void SetThisThreadPriority(int _priority)
		{
			Function.Call((Hash)0x42B65DEEF2EDF2A1, _priority);
		}
		// :#########################: //
		// : namespace: AICOVERPOINT : //
		// :#########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x53e4d0c079ca6855(int _handle)
		{
			return Function.Call<int>((Hash)0x53E4D0C079CA6855, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesCoverPointExist(int _handle)
		{
			return Function.Call<bool>((Hash)0xC276FE69DDA22BAD, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5f5b1b7e8e8f94c6(int _ped)
		{
			return Function.Call<int>((Hash)0x5F5B1B7E8E8F94C6, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskEnterCover(int _ped)
		{
			Function.Call((Hash)0x4972A022AE6DAFA1, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskExitCover(int _ped)
		{
			Function.Call((Hash)0x2BC4A6D92D140112, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x957d7e750216d74b(int _ped)
		{
			return Function.Call<int>((Hash)0x957D7E750216D74B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x89783fddf079c88d(int _p0)
		{
			Function.Call((Hash)0x89783FDDF079C88D, _p0);
		}
		/// <summary>
		/// coverLayer: see levels_0/levels/rdr3/coverlayers
		/// </summary>
		public static void Hash_0x64340dc208d671d5(string _coverLayer)
		{
			Function.Call((Hash)0x64340DC208D671D5, _coverLayer);
		}
		/// <summary>
		/// coverLayer: see levels_0/levels/rdr3/coverlayers
		/// </summary>
		public static void Hash_0x7a1fdcf35eaa140f(string _coverLayer)
		{
			Function.Call((Hash)0x7A1FDCF35EAA140F, _coverLayer);
		}
		/// <summary>
		/// Makes ped flinch (if in cover) like they have been shot at
		/// </summary>
		public static void RequestFlinchCoverAnim(int _ped)
		{
			Function.Call((Hash)0x2A31D13C5F021D0D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3c7a9c2c953128fe(int _ped)
		{
			Function.Call((Hash)0x3C7A9C2C953128FE, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeba51a294c73292e(int _args)
		{
			Function.Call((Hash)0xEBA51A294C73292E, _args);
		}
		/// <summary>
		/// weaponHash can also be -1
		/// </summary>
		public static void Hash_0x140b3cb1d424a945(int _ped, uint _weaponHash)
		{
			Function.Call((Hash)0x140B3CB1D424A945, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreLoadCoverAnimsLoaded(int _ped)
		{
			return Function.Call<bool>((Hash)0x8CBE916CFC64AD5C, _ped);
		}
		/// <summary>
		/// Stops running cover anims and releases them
		/// _STOP_RENDERING_* - _STOP_SCRIPTED*
		/// </summary>
		public static void StopRunningCoverAnims(int _ped)
		{
			Function.Call((Hash)0x1A7A802B2301EDC0, _ped);
		}
		/// <summary>
		/// args: f_0 = Volume Handle, f_2 = integer (-1, 32 used in R* Scripts)
		/// </summary>
		public static void Hash_0x733077295ab51304(int _args)
		{
			Function.Call((Hash)0x733077295AB51304, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddScriptedCoverPoint(int _data)
		{
			return Function.Call<int>((Hash)0x975BD6351648935F, _data);
		}
		// :########################: //
		// : namespace: AITRANSPORT : //
		// :########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskEnterTransport(int _args)
		{
			Function.Call((Hash)0xAEE3ADD08829CB6F, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskExitTransport(int _args)
		{
			Function.Call((Hash)0xC273A5B8488F7838, _args);
		}
		/// <summary>
		/// seat: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static void SetPedOnTransportSeat(int _ped, int _transportEntity, int _seat, int _flags)
		{
			Function.Call((Hash)0xE588B5A8A005CB5E, _ped, _transportEntity, _seat, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedOffTransportSeat(int _ped, int _flags)
		{
			Function.Call((Hash)0x8886D83A430537FD, _ped, _flags);
		}
		/// <summary>
		/// flagId:
		/// enum eTransportConfigFlags
		/// {
		/// 	TCF_NotConsideredForEntryByLocalPlayer,
		/// 	TCF_0xB78D6624,
		/// 	TCF_0xA9700425,
		/// 	TCF_0x8D7E4641,
		/// 	TCF_0xF24BAA1F,
		/// 	TCF_0x63B77935,
		/// 	TCF_NotConsideredForEntryByAllPlayers,
		/// 	TCF_0xD17A2AFD,
		/// 	TCF_0xD4E4FDD5,
		/// 	TCF_0x8227C929,
		/// 	TCF_0x812C1070,
		/// 	TCF_0x0E1AB26F,
		/// 	TCF_0xBF4EC863,
		/// 	TCF_0x75660C36,
		/// 	TCF_0xA2539E20,
		/// 	TCF_0x9162C633,
		/// 	TCF_DisableHonorModifiers,
		/// 	TCF_0xF9E71CB6,
		/// 	TCF_0x933ECD3F,
		/// 	TCF_0x18513A34
		/// };
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
		/// </summary>
		public static void SetTransportConfigFlag(int _transportEntity, int _flagId, bool _value)
		{
			Function.Call((Hash)0xBA8818212633500A, _transportEntity, _flagId, _value);
		}
		/// <summary>
		/// flagId: see SET_TRANSPORT_CONFIG_FLAG
		/// </summary>
		public static bool GetTransportConfigFlag(int _transportEntity, int _flagId, bool _p2)
		{
			return Function.Call<bool>((Hash)0xF382C92CCC1CCDBC, _transportEntity, _flagId, _p2);
		}
		/// <summary>
		/// See _SET_TRANSPORT_USAGE_FLAGS
		/// </summary>
		public static int GetTransportUsageFlags(int _transportEntity, int _flags)
		{
			return Function.Call<int>((Hash)0xE195C5A82156321D, _transportEntity, _flags);
		}
		/// <summary>
		/// enum eTransportUsageFlags
		/// {
		/// 	TUF_INVALID = 0,
		/// 	TUF_ALLOW_DRIVER_ME = (1 << 0),
		/// 	TUF_ALLOW_DRIVER_GANG = (1 << 1),
		/// 	TUF_ALLOW_DRIVER_CREW = (1 << 2),
		/// 	TUF_ALLOW_DRIVER_FRIENDS = (1 << 3),
		/// 	TUF_ALLOW_DRIVER_ANYONE = (1 << 4),
		/// 	TUF_ALLOW_PASSENGER_ME = (1 << 5),
		/// 	TUF_ALLOW_PASSENGER_GANG = (1 << 6),
		/// 	TUF_ALLOW_PASSENGER_CREW = (1 << 7),
		/// 	TUF_ALLOW_PASSENGER_FRIENDS = (1 << 8),
		/// 	TUF_ALLOW_PASSENGER_ANYONE = (1 << 9),
		/// 	TUF_ALLOW_ACCESS_AI = (1 << 10)
		/// };
		/// </summary>
		public static void SetTransportUsageFlags(int _transportEntity, int _flags)
		{
			Function.Call((Hash)0xE2487779957FE897, _transportEntity, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTransportAccessibleSeatFlags(int _transportEntity, int _flags)
		{
			Function.Call((Hash)0xDD0660C997DE94FD, _transportEntity, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4b6c9a43f7d9109b(int _p0, int _p1)
		{
			Function.Call((Hash)0x4B6C9A43F7D9109B, _p0, _p1);
		}
		/// <summary>
		/// Checks if ped is placed on target transportEntity
		/// </summary>
		public static bool IsPedOnTransportEntity(int _ped, int _transportEntity)
		{
			return Function.Call<bool>((Hash)0x159EF5B6EDCE00E8, _ped, _transportEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedOnTransportSeat(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0xDC44F405A6B98D03, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTransportSeatOccupied(int _transportEntity, int _seatIndex)
		{
			return Function.Call<bool>((Hash)0x2E2E06023D07631E, _transportEntity, _seatIndex);
		}
		/// <summary>
		/// Called together with IS_VEHICLE_SEAT_FREE
		/// </summary>
		public static bool IsTransportSeatFree(int _transportEntity, int _seatIndex)
		{
			return Function.Call<bool>((Hash)0x43FF27FC1829C202, _transportEntity, _seatIndex);
		}
		/// <summary>
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static int GetPedInTransportSeat(int _transportEntity, int _seatIndex)
		{
			return Function.Call<int>((Hash)0xFFEC4B0A1A3ED515, _transportEntity, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedEnteringTransport(int _ped, int _transportEntity, bool _p2)
		{
			return Function.Call<bool>((Hash)0x619E63980BFC0096, _ped, _transportEntity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedExitingTransport(int _ped, int _transportEntity)
		{
			return Function.Call<bool>((Hash)0x660639BC60157048, _ped, _transportEntity);
		}
		/// <summary>
		/// _SET_TRANSPORT_*
		/// </summary>
		public static void Hash_0x4248ab2eeb3c75ad(int _transportEntity, int _ped, bool _p2)
		{
			Function.Call((Hash)0x4248AB2EEB3C75AD, _transportEntity, _ped, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedUseTransportSeatPreference(int _ped, int _transportEntity, int _preferenceSlot, int _p3, int _seatIndex)
		{
			Function.Call((Hash)0xB7079F4C72896756, _ped, _transportEntity, _preferenceSlot, _p3, _seatIndex);
		}
		/// <summary>
		/// _CLEAR_A*
		/// </summary>
		public static void Hash_0x5639fbea922788da(int _transportEntity)
		{
			Function.Call((Hash)0x5639FBEA922788DA, _transportEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAiCanUseTransport(int _transportEntity, bool _state)
		{
			Function.Call((Hash)0x67F7CEAC2391E114, _transportEntity, _state);
		}
		/// <summary>
		/// _SET_TRANSPORT_*
		/// </summary>
		public static void Hash_0x8c8371edfaf014a0(int _ped, float _p1)
		{
			Function.Call((Hash)0x8C8371EDFAF014A0, _ped, _p1);
		}
		/// <summary>
		/// _SET_TRANSPORT_*
		/// </summary>
		public static void Hash_0xf8c20282b237e3f7(int _ped)
		{
			Function.Call((Hash)0xF8C20282B237E3F7, _ped);
		}
		/// <summary>
		/// _SET_TRANSPORT_*
		/// </summary>
		public static void Hash_0x13f138225c202f66(int _transportEntity, int _p1)
		{
			Function.Call((Hash)0x13F138225C202F66, _transportEntity, _p1);
		}
		// :######################: //
		// : namespace: ANIMSCENE : //
		// :######################: //
		/// <summary>
		/// flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/_CREATE_ANIM_SCENE/README.md
		/// </summary>
		public static int CreateAnimScene(string _animDict, int _flags, string _playbackListName, bool _p3, bool _p4)
		{
			return Function.Call<int>((Hash)0x1FCA98E33C1437B3, _animDict, _flags, _playbackListName, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteAnimScene(int _animScene)
		{
			Function.Call((Hash)0x84EEDB2C6E650000, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TriggerAnimSceneSkip(int _animScene)
		{
			Function.Call((Hash)0x4B85B3CF9197AEDF, _animScene);
		}
		/// <summary>
		/// Used in Script Function CUTSCENE_MANAGE_SKIP
		/// _CHECK_* (?)
		/// </summary>
		public static bool Hash_0x4b85b3cf91972222(int _animScene)
		{
			return Function.Call<bool>((Hash)0x4B85B3CF91972222, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAnimSceneWasSkipped(int _animScene)
		{
			Function.Call((Hash)0x8A8208AE92BF87A5, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesAnimSceneExist(int _animScene)
		{
			return Function.Call<bool>((Hash)0x25557E324489393C, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesEntityWithIdExistInAnimScene(int _animScene, string _entityId)
		{
			return Function.Call<bool>((Hash)0x6F1F0B17109309DA, _animScene, _entityId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesAnimSceneOwnershipOfEntityExist(int _animScene, string _entityName)
		{
			return Function.Call<bool>((Hash)0x9D1ECA9337BE9FC3, _animScene, _entityName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void LoadAnimScene(int _animScene)
		{
			Function.Call((Hash)0xAF068580194D9DC7, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneLoaded(int _animScene, bool _p1, bool _p2)
		{
			return Function.Call<bool>((Hash)0x477122B8D05E7968, _animScene, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneLoading(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0x59606519FF9D3EC2, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneMetadataAssetInRangeLoading(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0xF8D1D2DAB6007EEF, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneMetadataLoaded(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0x95531A4A20CCE7BC, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAnimScenePlaybackListPhaseAudioLoadStress(int _animScene, string _phaseName)
		{
			return Function.Call<int>((Hash)0x9E036D5204FFBBC8, _animScene, _phaseName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartAnimScene(int _animScene)
		{
			Function.Call((Hash)0xF4D94AF761768700, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetAnimScene(int _animScene, string _playbackListName)
		{
			Function.Call((Hash)0x8FDF221F13537936, _animScene, _playbackListName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AbortAnimScene(int _animScene, bool _p1)
		{
			Function.Call((Hash)0x718CF1328D20C2B3, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResumeAnimSceneFromLastCheckpoint(int _animScene)
		{
			Function.Call((Hash)0x8E1BA705F63C1925, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneRunning(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0xCBFC7725DE6CE2E0, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneFinished(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0xD8254CB2C586412B, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneExitingThisFrame(int _animScene)
		{
			return Function.Call<bool>((Hash)0xCDC5512A407CF08D, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasAnimSceneExited(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0xF94692EB9DC15D74, _animScene, _p1);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _CO* - _CR*
		/// </summary>
		public static bool Hash_0x73616e64696c132e(int _animScene, bool _p1)
		{
			return Function.Call<bool>((Hash)0x73616E64696C132E, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneInSection(int _animScene, string _sectionName, bool _p2)
		{
			return Function.Call<bool>((Hash)0x8D81E7824B7753F7, _animScene, _sectionName, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneSkippable(int _animScene)
		{
			return Function.Call<bool>((Hash)0x4CDFFE3189EBDBD0, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimSceneAborted(int _animScene)
		{
			return Function.Call<bool>((Hash)0x34A0671BE613D3D0, _animScene);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _IS_ANIM_SCENE_*
		/// </summary>
		public static bool Hash_0xd70c7a30412f8fa0(int _animScene)
		{
			return Function.Call<bool>((Hash)0xD70C7A30412F8FA0, _animScene);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _IS_ANIM_SCENE_*
		/// </summary>
		public static bool Hash_0x9aae3c1148a09bca(int _animScene)
		{
			return Function.Call<bool>((Hash)0x9AAE3C1148A09BCA, _animScene);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _WAS_ANIM_SCENE_*
		/// </summary>
		public static bool Hash_0xa96619fe85159ed2(int _animScene)
		{
			return Function.Call<bool>((Hash)0xA96619FE85159ED2, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FadeAnimSceneAudioIn(int _animScene, float _p1)
		{
			Function.Call((Hash)0xA41351EA2A18A0AD, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FadeAnimSceneAudioOut(int _animScene, float _p1)
		{
			Function.Call((Hash)0x323E3AD772BA5D57, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BlockAnimSceneFadingNextFrame(bool _p0, bool _p1)
		{
			Function.Call((Hash)0x1B70811D3BF75DB9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimSceneOrigin(int _animScene, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, int _order)
		{
			Function.Call((Hash)0x020894BF17A02EF2, _animScene, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _order);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetAnimSceneOrigin(int _animScene, Vector3 _position, Vector3 _rotation, int _order)
		{
			Function.Call((Hash)0xADF1D53F3B1FE0A7, _animScene, _position, _rotation, _order);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimScenePaused(int _animScene, bool _toggle)
		{
			Function.Call((Hash)0xD6824B7D24DC0CE0, _animScene, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimScenePaused(int _animScene)
		{
			return Function.Call<bool>((Hash)0x4B4038796F0D6566, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimSceneRate(int _animScene, float _rate)
		{
			Function.Call((Hash)0x75820B801CFF262A, _animScene, _rate);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAnimSceneRate(int _animScene)
		{
			return Function.Call<float>((Hash)0x43C21623E42B821B, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAnimScenePhase(int _animScene)
		{
			return Function.Call<float>((Hash)0x3FBC3F51BF12DFBF, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAnimSceneTime(int _animScene)
		{
			return Function.Call<float>((Hash)0x61BE7D6186260002, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAnimSceneDuration(int _animScene)
		{
			return Function.Call<float>((Hash)0x49F1D143ADE32656, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimSceneEntity(int _animScene, string _entityName, int _entity, int _flags)
		{
			Function.Call((Hash)0x8B720AD451CA2AB3, _animScene, _entityName, _entity, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAnimSceneEntity(int _animScene, string _entityName, int _entity)
		{
			Function.Call((Hash)0x2BF96692C67F3E53, _animScene, _entityName, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityExitingAnimSceneThisFrame(int _animScene, string _entityName)
		{
			return Function.Call<bool>((Hash)0x005E6F28DD7ED58D, _animScene, _entityName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CouldAnimSceneEntityReachExitNextFrame(int _animScene, string _entityName, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x73616E64696C616E, _animScene, _entityName, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityExitedAnimScene(int _animScene, string _entityName)
		{
			return Function.Call<bool>((Hash)0xB89FCFF19DAFFF28, _animScene, _entityName);
		}
		/// <summary>
		/// _HAS_L* (?)
		/// </summary>
		public static bool HasEntityEnteredAnimScene(int _animScene, string _entityName)
		{
			return Function.Call<bool>((Hash)0x337F1CC8EE895601, _animScene, _entityName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAnimScenePed(int _animScene, string _name, bool _isNetwork)
		{
			return Function.Call<int>((Hash)0xE5822422197BBBA3, _animScene, _name, _isNetwork);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAnimSceneObject(int _animScene, string _name, bool _isNetwork)
		{
			return Function.Call<int>((Hash)0xFB5674687A1B2814, _animScene, _name, _isNetwork);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAnimSceneVehicle(int _animScene, string _name, bool _isNetwork)
		{
			return Function.Call<int>((Hash)0x430EE0A19BC5A287, _animScene, _name, _isNetwork);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimSceneBool(int _animScene, string _name, bool _value, bool _p3)
		{
			Function.Call((Hash)0x519E96C2C68B404B, _animScene, _name, _value, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetAnimSceneBool(int _animScene, string _name)
		{
			return Function.Call<bool>((Hash)0x07A6F6447ECA9B64, _animScene, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimSceneFloat(int _animScene, string _name, float _value, bool _p3, bool _p4)
		{
			Function.Call((Hash)0x6BC5104E68CBEFE8, _animScene, _name, _value, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAnimSceneFloat(int _animScene, string _name)
		{
			return Function.Call<float>((Hash)0xCC24CB07F60B496E, _animScene, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimSceneInt(int _animScene, string _name, int _value, bool _p3)
		{
			Function.Call((Hash)0x3A379D2166CF5B92, _animScene, _name, _value, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAnimSceneInt(int _animScene, string _name)
		{
			return Function.Call<int>((Hash)0x2B7277484CC095FD, _animScene, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetAnimSceneEntityLocationData(int _animScene, string _entityName, Vector3 _matrix, bool _p3, string _playbackListName, int _p5)
		{
			return Function.Call<bool>((Hash)0x8398438D8F14F56D, _animScene, _entityName, _matrix, _p3, _playbackListName, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityPlayingAnimScene(int _entity, int _animScene)
		{
			return Function.Call<bool>((Hash)0x3AB6C7B0BB0DF4B1, _entity, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachAnimSceneToEntity(int _animScene, int _entity, int _p2)
		{
			Function.Call((Hash)0xDC418495DBA327A1, _animScene, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachAnimSceneToEntityPreservingLocation(int _animScene, int _entity, int _p2)
		{
			Function.Call((Hash)0x1C0B105C3F30B88D, _animScene, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachAnimScene(int _animScene)
		{
			Function.Call((Hash)0x6843A1AA3A336DFF, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachAnimScenePreservingLocation(int _animScene)
		{
			Function.Call((Hash)0xA2507C4948C83D2E, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TakeOwnershipOfAnimScene(int _animScene)
		{
			Function.Call((Hash)0xF7A4C571E572D237, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CheckOwnershipOfAnimScene(int _animScene)
		{
			return Function.Call<bool>((Hash)0x661B8683611B9B97, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimScenePlaybackList(int _animScene, string _playbackListName)
		{
			Function.Call((Hash)0xAB5E7CAB074D6B84, _animScene, _playbackListName);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _IS_ANIM_SCENE_P*
		/// </summary>
		public static bool Hash_0x1c5d33a4293e6dde(int _animScene, string _phaseName)
		{
			return Function.Call<bool>((Hash)0x1C5D33A4293E6DDE, _animScene, _phaseName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesAnimScenePlayListExist(int _animScene, string _playbackListName)
		{
			return Function.Call<bool>((Hash)0xA9016536015DE29D, _animScene, _playbackListName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimScenePlayList(int _animScene, string _playlistName, bool _p2)
		{
			Function.Call((Hash)0x15598CFB25F3DC7E, _animScene, _playlistName, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimScenePlaybackListPhaseActive(int _animScene, string _phaseName)
		{
			return Function.Call<bool>((Hash)0x1F0E401031E20146, _animScene, _phaseName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RequestAnimScenePlayList(int _animScene, string _playlistName)
		{
			return Function.Call<bool>((Hash)0xDF7B5144E25CD3FE, _animScene, _playlistName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ReleaseAnimScenePlayList(int _animScene, string _playlistName)
		{
			return Function.Call<bool>((Hash)0xAE6ADA8FE7E84ACC, _animScene, _playlistName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetAnimSceneDict(int _animScene)
		{
			return Function.Call<uint>((Hash)0xAE5ADA4FE3E21ADC, _animScene);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// Params: p1 = 2B-LowHonor, 2A-HighHonor
		/// </summary>
		public static bool Hash_0x1407f5115fb9583e(int _animScene, string _p1)
		{
			return Function.Call<bool>((Hash)0x1407F5115FB9583E, _animScene, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimScenePlaybackListPhaseLoaded(int _animScene, string _phaseName)
		{
			return Function.Call<bool>((Hash)0x23E33CB9F4A3F547, _animScene, _phaseName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimScenePlaybackListPhaseLoading(int _animScene, string _phaseName)
		{
			return Function.Call<bool>((Hash)0x0DF57F86FE71DBE5, _animScene, _phaseName);
		}
		/// <summary>
		/// Used in braithwaites2 SP R* Scripts only
		/// _A*
		/// </summary>
		public static void Hash_0x1ad896bf43619551()
		{
			Function.Call((Hash)0x1AD896BF43619551);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAnimSceneCurrentActiveCameraCount(int _animScene)
		{
			return Function.Call<int>((Hash)0x4822A65D5AF64E69, _animScene);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
		/// </summary>
		public static bool Hash_0x5d7bfda2290b4e39(string _p0)
		{
			return Function.Call<bool>((Hash)0x5D7BFDA2290B4E39, _p0);
		}
		/// <summary>
		/// MGM stands for MiniGameMoments.
		/// </summary>
		public static bool IsMgmSystemLoaded(string _mgmFilename)
		{
			return Function.Call<bool>((Hash)0xFDFC14799373283F, _mgmFilename);
		}
		/// <summary>
		/// Used to request MiniGameMoments Assets.
		/// 
		/// mgmFilename's:
		/// Poker
		/// PokerArthur
		/// PokerArthurCamp
		/// PokerJohn
		/// PokerJohnCamp
		/// </summary>
		public static bool LoadMgmAssets(string _mgmFilename)
		{
			return Function.Call<bool>((Hash)0xB727A847862CB00A, _mgmFilename);
		}
		/// <summary>
		/// Returns mgmHandle
		/// </summary>
		public static int CreateMgmSystem(string _mgmFilename)
		{
			return Function.Call<int>((Hash)0xA1300DE03E5D1973, _mgmFilename);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteMgmSystem(int _mgmHandle)
		{
			Function.Call((Hash)0x53CB3970BA02E3CC, _mgmHandle);
		}
		/// <summary>
		/// _PREPARE_* - _REGISTER_*
		/// </summary>
		public static void Hash_0xb1a196bafe650402(int _mgmHandle, int _ped)
		{
			Function.Call((Hash)0xB1A196BAFE650402, _mgmHandle, _ped);
		}
		/// <summary>
		/// _UNLOAD_* - _WAS_ANIM_SCENE_*
		/// </summary>
		public static void Hash_0xae6de22de0ed4554(int _mgmHandle, int _ped)
		{
			Function.Call((Hash)0xAE6DE22DE0ED4554, _mgmHandle, _ped);
		}
		/// <summary>
		/// Only used in tg_p R* Script
		/// Returns true when mgm event success
		/// _PREPARE_* - _REGISTER_*
		/// </summary>
		public static bool Hash_0x61b2aaef645ddaf0(int _mgmEventHandle, string _p1, int _seatId, int _p3, bool _p4)
		{
			return Function.Call<bool>((Hash)0x61B2AAEF645DDAF0, _mgmEventHandle, _p1, _seatId, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMgmEvent(int _mgmEventHandle, string _p1, int _seatId, int _p3, float _p4)
		{
			Function.Call((Hash)0x07706C4CC9C6CC9E, _mgmEventHandle, _p1, _seatId, _p3, _p4);
		}
		/// <summary>
		/// p2: MINIGAME_GET_SECONDARY_VOICE_STRING
		/// _SET_*
		/// </summary>
		public static void Hash_0x3641fcd53e59b335(int _mgmHandle, int _ped, string _secondaryVoiceString)
		{
			Function.Call((Hash)0x3641FCD53E59B335, _mgmHandle, _ped, _secondaryVoiceString);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBreakoutArchetype(int _ped, string _archetype)
		{
			Function.Call((Hash)0x99B2A2E3655DEAF1, _ped, _archetype);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearBreakoutArchetype(int _ped)
		{
			Function.Call((Hash)0xBC781D24AA11F179, _ped);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _IS_*
		/// </summary>
		public static bool Hash_0x3b393716c3fd8237(int _ped)
		{
			return Function.Call<bool>((Hash)0x3B393716C3FD8237, _ped);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _SET_B* - _SET_C*
		/// </summary>
		public static void Hash_0xe12d7b4b959644cd()
		{
			Function.Call((Hash)0xE12D7B4B959644CD);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _RESUME_* - _SET_A*
		/// </summary>
		public static void Hash_0xc1193521e3b9fadd(int _entity, bool _p1)
		{
			Function.Call((Hash)0xC1193521E3B9FADD, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestPhotoModeFreeze()
		{
			Function.Call((Hash)0x7C709C01D43D94CD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestPhotoModeDefreeze()
		{
			Function.Call((Hash)0x41AFA5F228B0B6B0);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _IS_PED_* - _IS_SC*
		/// </summary>
		public static bool Hash_0x2db524750dc41ed4()
		{
			return Function.Call<bool>((Hash)0x2DB524750DC41ED4);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _PAUSE_* - _PLAY_*
		/// </summary>
		public static bool Hash_0xea41d44a8d42057b()
		{
			return Function.Call<bool>((Hash)0xEA41D44A8D42057B);
		}
		/// <summary>
		/// Pauses all script threads except the one that called it.
		/// </summary>
		public static void PauseScriptThreads(bool _toggle)
		{
			Function.Call((Hash)0x37C1257849DEF24A, _toggle);
		}
		/// <summary>
		/// Used in SP R* Scripts only
		/// _SET_P*
		/// </summary>
		public static void Hash_0xcdcd7b2d49aee73a(bool _p0)
		{
			Function.Call((Hash)0xCDCD7B2D49AEE73A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WasAnimSceneSkipped(int _animScene)
		{
			return Function.Call<bool>((Hash)0xEF324E9550A394D5, _animScene);
		}
		// :########################: //
		// : namespace: _NAMESPACE4 : //
		// :########################: //
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xc31c44c43b48fde3(int _gamerHandle, int _badSportBehaviorType)
		{
			Function.Call((Hash)0xC31C44C43B48FDE3, _gamerHandle, _badSportBehaviorType);
		}
		// :######################: //
		// : namespace: ATTRIBUTE : //
		// :######################: //
		/// <summary>
		/// attributeIndex:
		/// enum ePedAttribute
		/// {
		/// 	PA_HEALTH,
		/// 	PA_STAMINA,
		/// 	PA_SPECIALABILITY,
		/// 	PA_COURAGE,
		/// 	PA_AGILITY,
		/// 	PA_SPEED,
		/// 	PA_ACCELERATION,
		/// 	PA_BONDING,
		/// 	SA_HUNGER,
		/// 	SA_FATIGUED,
		/// 	SA_INEBRIATED,
		/// 	SA_POISONED,
		/// 	SA_BODYHEAT,
		/// 	SA_BODYWEIGHT,
		/// 	SA_OVERFED,
		/// 	SA_SICKNESS,
		/// 	SA_DIRTINESS,
		/// 	SA_DIRTINESSHAT,
		/// 	MTR_STRENGTH,
		/// 	MTR_GRIT,
		/// 	MTR_INSTINCT,
		/// 	PA_UNRULINESS,
		/// 	SA_DIRTINESSSKIN
		/// };
		/// </summary>
		public static void SetAttributeBaseRank(int _ped, int _attributeIndex, int _newValue)
		{
			Function.Call((Hash)0x5DA12E025D47D4E5, _ped, _attributeIndex, _newValue);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetAttributeRank(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0xA4C8E23E29040DE0, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetAttributeBaseRank(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0x147149F2E909323C, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetAttributeBonusRank(int _ped, int _coreIndex)
		{
			return Function.Call<int>((Hash)0x0EFA71F4B4330E04, _ped, _coreIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetMaxAttributeRank(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0x704674A0535A471D, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static void SetAttributeBonusRank(int _ped, int _attributeIndex, int _newValue)
		{
			Function.Call((Hash)0x920F9488BD115EFB, _ped, _attributeIndex, _newValue);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetDefaultAttributeRank(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0x958DD43D41F89A47, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetDefaultMaxAttributeRank(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0x7C059C55AD940CB4, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static void AddAttributePoints(int _ped, int _attributeIndex, int _p2)
		{
			Function.Call((Hash)0x75415EE0CB583760, _ped, _attributeIndex, _p2);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static void SetAttributePoints(int _ped, int _attributeIndex, int _p2)
		{
			Function.Call((Hash)0x09A59688C26D88DF, _ped, _attributeIndex, _p2);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetAttributePoints(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0x219DA04BAA9CB065, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetMaxAttributePoints(int _ped, int _attributeIndex)
		{
			return Function.Call<int>((Hash)0x223BF310F854871C, _ped, _attributeIndex);
		}
		/// <summary>
		/// coreIndex:
		/// enum eAttributeCore
		/// {
		/// 	ATTRIBUTE_CORE_HEALTH,
		/// 	ATTRIBUTE_CORE_STAMINA,
		/// 	ATTRIBUTE_CORE_DEADEYE
		/// };
		/// </summary>
		public static void SetAttributeCoreValue(int _ped, int _coreIndex, int _value)
		{
			Function.Call((Hash)0xC6258F41D86676E0, _ped, _coreIndex, _value);
		}
		/// <summary>
		/// Gets the ped's core value on a scale of 0 to 100.
		/// coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
		/// </summary>
		public static int GetAttributeCoreValue(int _ped, int _coreIndex)
		{
			return Function.Call<int>((Hash)0x36731AC041289BB1, _ped, _coreIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static int GetDefaultAttributePointsNeededForRank(uint _modelHash, int _attributeIndex, int _rank)
		{
			return Function.Call<int>((Hash)0x94A7F191DB49A44D, _modelHash, _attributeIndex, _rank);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// 
		/// Old name: _SET_ATTRIBUTE_OVERPOWER_VALUE
		/// </summary>
		public static void EnableAttributeOverpower(int _ped, int _attributeIndex, float _value, bool _makeSound)
		{
			Function.Call((Hash)0xF6A7C08DF2E28B28, _ped, _attributeIndex, _value, _makeSound);
		}
		/// <summary>
		/// coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
		/// 
		/// Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
		/// </summary>
		public static void EnableAttributeCoreOverpower(int _ped, int _coreIndex, float _value, bool _makeSound)
		{
			Function.Call((Hash)0x4AF5A4C7B9157D14, _ped, _coreIndex, _value, _makeSound);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static void DisableAttributeOverpower(int _ped, int _attributeIndex)
		{
			Function.Call((Hash)0xF8DAC3D85636C241, _ped, _attributeIndex);
		}
		/// <summary>
		/// attributeIndex: see SET_ATTRIBUTE_BASE_RANK
		/// </summary>
		public static bool IsAttributeOverpowered(int _ped, int _attributeIndex)
		{
			return Function.Call<bool>((Hash)0x103C2F885ABEB00B, _ped, _attributeIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAttributeCoreOverpowered(int _ped, int _coreIndex)
		{
			return Function.Call<bool>((Hash)0x200373A8DF081F22, _ped, _coreIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAttributeOverpowerSecondsLeft(int _ped, int _attributeIndex)
		{
			return Function.Call<float>((Hash)0x4C9F782180712742, _ped, _attributeIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAttributeCoreOverpowerSecondsLeft(int _ped, int _coreIndex)
		{
			return Function.Call<float>((Hash)0xB429F58803D285B1, _ped, _coreIndex);
		}
		/// <summary>
		/// Params: p1 is related to satchel_category
		/// </summary>
		public static void StartItemPreview(int _p0, int _p1)
		{
			Function.Call((Hash)0x7E2C766ADB2C5F1A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopItemPreview()
		{
			Function.Call((Hash)0xD962F8579D702DB5);
		}
		/// <summary>
		/// Displays status effects on core icons (includes warnings).
		/// 
		/// enum eUiRpgStatusEffect
		/// {
		/// 	STATUS_NONE,
		/// 	STATUS_COLD,
		/// 	STATUS_HOT,
		/// 	STATUS_OVERFED,
		/// 	STATUS_DIRTY,
		/// 	STATUS_SNAKE_VENOM,
		/// 	STATUS_ARROW_WOUNDED,
		/// 	STATUS_ARROW_DRAINED,
		/// 	STATUS_ARROW_DISORIENTED,
		/// 	STATUS_ARROW_TRACKED,
		/// 	STATUS_ARROW_CONFUSION,
		/// 	STATUS_UNDERWEIGHT,
		/// 	STATUS_OVERWEIGHT,
		/// 	STATUS_SICK_1,
		/// 	STATUS_SICK_2,
		/// 	STATUS_PREDATOR_INVULNERABLE
		/// };
		/// </summary>
		public static void SetStatusEffectCoreIcon(int _statusEffectType)
		{
			Function.Call((Hash)0xA4D3A1C008F250DF, _statusEffectType);
		}
		/// <summary>
		/// Starts core periodic icon.
		/// statusEffectType: see 0xA4D3A1C008F250DF
		/// </summary>
		public static void SetStatusEffectPeriodicIcon(int _statusEffectType)
		{
			Function.Call((Hash)0xFB6E111908502871, _statusEffectType);
		}
		/// <summary>
		/// Stops periodic icon.
		/// statusEffectType: see 0xA4D3A1C008F250DF
		/// </summary>
		public static void StopStatusEffectPeriodicIcon(int _statusEffectType)
		{
			Function.Call((Hash)0x3FC4C027FD0936F4, _statusEffectType);
		}
		// :##################: //
		// : namespace: AUDIO : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7455cd705f7e933e()
		{
			Function.Call((Hash)0x7455CD705F7E933E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearConversationHistory()
		{
			Function.Call((Hash)0x33D51F801CB16E4F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearConversationHistoryForScriptedConversation(string _convoRoot)
		{
			Function.Call((Hash)0xEF51242E35242B47, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CreateNewScriptedConversation(string _convoRoot)
		{
			return Function.Call<bool>((Hash)0xD2C91A0B572AAE56, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xdf947fe0d551684e(int _ped, string _p1)
		{
			return Function.Call<bool>((Hash)0xDF947FE0D551684E, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddPedToConversation(string _convoRoot, int _ped, string _characterName)
		{
			Function.Call((Hash)0x95D9F4BC443956E7, _convoRoot, _ped, _characterName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa2323a2eae32a290(int _listeningToPed, int _ped, string _listenerName)
		{
			Function.Call((Hash)0xA2323A2EAE32A290, _listeningToPed, _ped, _listenerName);
		}
		/// <summary>
		/// Only used in R* SP Script cv_mus_shared
		/// </summary>
		public static bool Hash_0x79f9c57b8d0dfe90(string _convoRoot, int _animScene)
		{
			return Function.Call<bool>((Hash)0x79F9C57B8D0DFE90, _convoRoot, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartScriptConversation(string _convoRoot, bool _p1, bool _p2, bool _clone)
		{
			Function.Call((Hash)0x6B17C62C9635D2DC, _convoRoot, _p1, _p2, _clone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PreloadScriptConversation(string _convoRoot, bool _p1, bool _p2, bool _clone)
		{
			Function.Call((Hash)0x3B3CAD6166916D87, _convoRoot, _p1, _p2, _clone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartPreloadedConversation(string _convoRoot)
		{
			Function.Call((Hash)0x23641AFE870AF385, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0cb3d1919e8d7cba(string _convoRoot)
		{
			return Function.Call<bool>((Hash)0x0CB3D1919E8D7CBA, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xfe5c6177064bd390(bool _p0)
		{
			return Function.Call<bool>((Hash)0xFE5C6177064BD390, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScriptedConversationCreated(string _convoRoot)
		{
			return Function.Call<bool>((Hash)0xD89504D9D7D5057D, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x5a13586a9447931f(bool _p0)
		{
			return Function.Call<bool>((Hash)0x5A13586A9447931F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScriptedConversationLoaded(string _convoRoot)
		{
			return Function.Call<bool>((Hash)0xDF0D54BE7A776737, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyConversationPlaying(bool _p0)
		{
			return Function.Call<bool>((Hash)0xA2CAC9DEF0195E6F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScriptedConversationPlaying(string _p0)
		{
			return Function.Call<bool>((Hash)0x1ECC76792F661CF5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScriptedConversionOngoing(string _p0)
		{
			return Function.Call<bool>((Hash)0xF01C570E0A0A1E67, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x847748ae5d7b1071(bool _p0)
		{
			return Function.Call<bool>((Hash)0x847748AE5D7B1071, _p0);
		}
		/// <summary>
		/// _IS_SCRIPTED_CONVERSATION_*
		/// </summary>
		public static bool Hash_0xd0730c1fa40348d9(string _convoRoot)
		{
			return Function.Call<bool>((Hash)0xD0730C1FA40348D9, _convoRoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCurrentScriptedConversationLine(string _p0)
		{
			return Function.Call<int>((Hash)0x480357EE890C295A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PauseScriptedConversation(string _p0, bool _p1, bool _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0x8530AD776CD72B12, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RestartScriptedConversation(string _p0)
		{
			Function.Call((Hash)0x9AEB285D1818C9AC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopAllScriptedConversions(bool _p0, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x36559148B78853B3, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StopScriptedConversation(string _p0, bool _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0xD79DEEFB53455EBA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SkipToNextScriptedConversationLine(string _p0)
		{
			Function.Call((Hash)0x9663FE6B7A61EB00, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf336e9f989b3518f(string _p0)
		{
			return Function.Call<int>((Hash)0xF336E9F989B3518F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x254b0241e964b450(string _p0, int _currentScriptedConvoLine)
		{
			return Function.Call<int>((Hash)0x254B0241E964B450, _p0, _currentScriptedConvoLine);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x152ed1b56e8f1f50(string _p0, int _currentScriptedConvoLine)
		{
			return Function.Call<int>((Hash)0x152ED1B56E8F1F50, _p0, _currentScriptedConvoLine);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x935dbd96d4a3da1f(string _p0, int _currentScriptedConvoLine)
		{
			return Function.Call<int>((Hash)0x935DBD96D4A3DA1F, _p0, _currentScriptedConvoLine);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x295859eb18f48d82(string _p0)
		{
			return Function.Call<int>((Hash)0x295859EB18F48D82, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x40ca665ab9d8d505(string _convoRoot, int _singleLineIndex)
		{
			Function.Call((Hash)0x40CA665AB9D8D505, _convoRoot, _singleLineIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf232c2c546ac16d0(string _p0)
		{
			Function.Call((Hash)0xF232C2C546AC16D0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1e6f9a9fe1a99f36(string _audSpeechEvent)
		{
			Function.Call((Hash)0x1E6F9A9FE1A99F36, _audSpeechEvent);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void RegisterScriptWithAudio(int _p0)
		{
			Function.Call((Hash)0xC6ED9D5092438D91, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void UnregisterScriptWithAudio()
		{
			Function.Call((Hash)0xA8638BE228D4751A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RequestScriptAudioBank(string _audioBank)
		{
			return Function.Call<bool>((Hash)0x2F844A8B08D76685, _audioBank);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseNamedScriptAudioBank(string _audioBank)
		{
			Function.Call((Hash)0x77ED170667F50170, _audioBank);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseScriptAudioBank()
		{
			Function.Call((Hash)0x7A2D8AD0A9EB9C3F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetSoundId()
		{
			return Function.Call<int>((Hash)0x430386FE9BF80B45);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseSoundId(int _soundId)
		{
			Function.Call((Hash)0x353FC880830B88FA, _soundId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlaySound(string _audioName, string _audioRef, bool _p2, int _p3, bool _p4, int _p5)
		{
			Function.Call((Hash)0x7FF4944CC209192D, _audioName, _audioRef, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
		/// </summary>
		public static void PlaySoundFrontend(string _audioName, string _audioRef, bool _p2, int _p3)
		{
			Function.Call((Hash)0x67C540AA08E4A6F5, _audioName, _audioRef, _p2, _p3);
		}
		/// <summary>
		/// item: value returned from 0x2E1CDC1FF3B8473E
		/// soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
		/// </summary>
		public static void PlaySoundFromItem(uint _item, uint _soundSet, int _p2)
		{
			Function.Call((Hash)0xE8EAFF7B41EDD291, _item, _soundSet, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlaySoundFromEntity(string _audioName, int _entity, string _audioRef, bool _isNetwork, int _p4, int _p5)
		{
			Function.Call((Hash)0x6FB1DA3CA9DA7D90, _audioName, _entity, _audioRef, _isNetwork, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlaySoundFromPosition(string _audioName, float _x, float _y, float _z, string _audioRef, bool _isNetwork, int _p6, bool _p7, int _p8)
		{
			Function.Call((Hash)0xCCE219C922737BFA, _audioName, _x, _y, _z, _audioRef, _isNetwork, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopSoundWithName(string _audioName, string _audioRef)
		{
			Function.Call((Hash)0x0F2A2175734926D8, _audioName, _audioRef);
		}
		/// <summary>
		/// _IS_SOUND_RUNNING(?)
		/// </summary>
		public static bool Hash_0x580d71dfe0088e34(string _audioName, string _audioRef)
		{
			return Function.Call<bool>((Hash)0x580D71DFE0088E34, _audioName, _audioRef);
		}
		/// <summary>
		/// item: FUSE, value returned from 0x2E1CDC1FF3B8473E
		/// soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
		/// </summary>
		public static bool IsScriptedAudioCustom(uint _item, uint _soundSet)
		{
			return Function.Call<bool>((Hash)0x6DF942C4179BE5AB, _item, _soundSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVariableOnSoundWithName(string _variableName, float _variableValue, string _audioName, string _audioRef)
		{
			Function.Call((Hash)0x9821B68CD3E05F2B, _variableName, _variableValue, _audioName, _audioRef);
		}
		/// <summary>
		/// whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
		/// </summary>
		public static void SetWhistleConfigForPed(int _ped, string _whistleConfig, float _value)
		{
			Function.Call((Hash)0x9963681A8BC69BF3, _ped, _whistleConfig, _value);
		}
		/// <summary>
		/// p1: Entity.Relationship
		/// p2: Player, Enemy, Teammate, Neutral
		/// </summary>
		public static void SetSoundRelationshipOnPed(int _ped, string _p1, string _p2)
		{
			Function.Call((Hash)0x2E31ACA7477CF00F, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlaySoundFrontendWithSoundId(int _soundId, string _name, string _soundSet, bool _p3)
		{
			Function.Call((Hash)0xCE5D0FFE83939AF1, _soundId, _name, _soundSet, _p3);
		}
		/// <summary>
		/// Params: p5 seems to be always 0
		/// </summary>
		public static void PlaySoundFromEntityWithSet(int _soundId, string _soundName, int _entity, string _soundsetName, bool _p4, int _p5)
		{
			Function.Call((Hash)0xF1C5310FEAA36B48, _soundId, _soundName, _entity, _soundsetName, _p4, _p5);
		}
		/// <summary>
		/// Starts Audio Loop
		/// _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
		/// </summary>
		public static void PlaySoundFromPositionWithId(int _soundId, string _soundName, float _x, float _y, float _z, string _soundsetName, bool _p6, int _p7, bool _p8)
		{
			Function.Call((Hash)0xDCF5BA95BBF0FABA, _soundId, _soundName, _x, _y, _z, _soundsetName, _p6, _p7, _p8);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void UpdateSoundPosition(int _soundId, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x0286617C8FC50A53, _soundId, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopSoundWithId(int _soundId)
		{
			Function.Call((Hash)0x3210BCB36AF7621B, _soundId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVariableOnSoundWithId(int _soundId, string _variableName, float _variableValue)
		{
			Function.Call((Hash)0x503703EC1781B7D6, _soundId, _variableName, _variableValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PrepareSound(string _soundName, string _soundsetName, int _soundId)
		{
			return Function.Call<bool>((Hash)0xE368E8422C860BA7, _soundName, _soundsetName, _soundId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseShardSounds(string _soundName, string _soundsetName)
		{
			Function.Call((Hash)0x9D746964E0CF2C5F, _soundName, _soundsetName);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
		/// </summary>
		public static bool PrepareSoundset(string _soundsetName, bool _p1)
		{
			return Function.Call<bool>((Hash)0xD9130842D7226045, _soundsetName, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseSoundset(string _soundsetName)
		{
			Function.Call((Hash)0x531A78D6BF27014B, _soundsetName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PrepareSoundWithEntity(string _soundName, int _entity, string _soundsetName, int _soundId)
		{
			return Function.Call<bool>((Hash)0x4AD019591E94C064, _soundName, _entity, _soundsetName, _soundId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3e93dddcbb6111e4(string _p0, float _p1)
		{
			Function.Call((Hash)0x3E93DDDCBB6111E4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasSoundAudioNameFinished(string _audioName, string _soundsetName)
		{
			return Function.Call<bool>((Hash)0x714A0EA7DE1167BE, _audioName, _soundsetName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasSoundIdFinished(int _soundId)
		{
			return Function.Call<bool>((Hash)0x84848E1C0FC67DBB, _soundId);
		}
		/// <summary>
		/// struct ScriptedSpeechParams
		/// {
		/// 	const char* speechName;
		/// 	const char* voiceName;
		/// 	alignas(8) int v3;
		/// 	alignas(8) Hash speechParamHash;
		/// 	alignas(8) Entity entity;
		/// 	alignas(8) BOOL v6;
		/// 	alignas(8) int v7;
		/// 	alignas(8) int v8;
		/// };
		/// 
		/// static_assert(sizeof(ScriptedSpeechParams) == 0x40, "incorrect ScriptedSpeechParams size");
		/// 
		/// 
		/// Example:
		/// 
		/// ScriptedSpeechParams params{"RE_PH_RHD_V3_AGGRO", "0405_U_M_M_RhdSheriff_01", 1, 0x67F3AB43, 0, true, 1, 1};
		/// PLAY_PED_AMBIENT_SPEECH_NATIVE(PLAYER_PED_ID(), (Any*)&params);
		/// 
		/// Old name: _PLAY_AMBIENT_SPEECH1
		/// https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_banks
		/// </summary>
		public static bool PlayPedAmbientSpeechNative(int _ped, int _params)
		{
			return Function.Call<bool>((Hash)0x8E04FEDD28D42462, _ped, _params);
		}
		/// <summary>
		/// Old name: _PLAY_AMBIENT_SPEECH_AT_COORDS
		/// </summary>
		public static bool PlayAmbientSpeechFromPositionNative(float _x, float _y, float _z, int _params)
		{
			return Function.Call<bool>((Hash)0xED640017ED337E45, _x, _y, _z, _params);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x72e4d1c4639bc465(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x72E4D1C4639BC465, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb18fec133c7c6c69(int _p0)
		{
			return Function.Call<int>((Hash)0xB18FEC133C7C6C69, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc93f0948f2c28f4(int _p0)
		{
			Function.Call((Hash)0xDC93F0948F2C28F4, _p0);
		}
		/// <summary>
		/// Related to audio events of some sort
		/// </summary>
		public static void Hash_0x0d7fd6a55fd63aef(int _p0, int _p1, bool _p2)
		{
			Function.Call((Hash)0x0D7FD6A55FD63AEF, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x660a8f876df1d4f8(int _p0)
		{
			Function.Call((Hash)0x660A8F876DF1D4F8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x380a2e353ad30917(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x380A2E353AD30917, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0faf7171bf613b80(int _p0)
		{
			Function.Call((Hash)0x0FAF7171BF613B80, _p0);
		}
		/// <summary>
		/// Valid pain IDs: 0..12
		/// </summary>
		public static void PlayPain(int _ped, int _painId, float _p2, bool _p3, bool _isNetwork)
		{
			Function.Call((Hash)0xBC9AE166038A5CEC, _ped, _painId, _p2, _p3, _isNetwork);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6652b0c8f3d414d0(int _p0)
		{
			Function.Call((Hash)0x6652B0C8F3D414D0, _p0);
		}
		/// <summary>
		/// Name: ROPE_SETTINGS_DEFAULT
		/// </summary>
		public static void Hash_0xf092b6030d6fd49c(int _ropeId, string _name)
		{
			Function.Call((Hash)0xF092B6030D6FD49C, _ropeId, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2651ddc0ea269073(int _ropeId, float _p1)
		{
			Function.Call((Hash)0x2651DDC0EA269073, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientVoiceName(int _ped, string _name)
		{
			Function.Call((Hash)0x6C8065A3B780185B, _ped, _name);
		}
		/// <summary>
		/// Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
		/// </summary>
		public static void SetVofxPedVoice(int _ped, uint _voice)
		{
			Function.Call((Hash)0x2703EFB583F0949A, _ped, _voice);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopCurrentPlayingSpeech(int _ped, int _p1)
		{
			Function.Call((Hash)0x79D2F0E66F81D90D, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopCurrentPlayingAmbientSpeech(int _ped, int _p1)
		{
			Function.Call((Hash)0xB8BEC0CA6F0EDB0F, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAmbientSpeechPlaying(int _ped)
		{
			return Function.Call<bool>((Hash)0x9072C8B49907BFAD, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScriptedSpeechPlaying(int _p0)
		{
			return Function.Call<bool>((Hash)0xCC9AA18DCC7084F4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnySpeechPlaying(int _ped)
		{
			return Function.Call<bool>((Hash)0x729072355FA39EC9, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2b101ad9f651243a()
		{
			return Function.Call<int>((Hash)0x2B101AD9F651243A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4a98e228a936dbcc(int _p0)
		{
			return Function.Call<int>((Hash)0x4A98E228A936DBCC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6bffb7c276866996(int _p0)
		{
			return Function.Call<int>((Hash)0x6BFFB7C276866996, _p0);
		}
		/// <summary>
		/// Checks if the ped can play the speech or has the speech file, last parameter is usually false.
		/// </summary>
		public static bool DoesContextExistForThisPed(int _ped, string _speechName, bool _unk)
		{
			return Function.Call<bool>((Hash)0x49B99BF3FDA89A7A, _ped, _speechName, _unk);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf0ee69f500952fa5(int _p0)
		{
			return Function.Call<int>((Hash)0xF0EE69F500952FA5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9d6dec9791a4e501(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x9D6DEC9791A4E501, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void Hash_0x864a842b86993851(int _ped)
		{
			Function.Call((Hash)0x864A842B86993851, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInCurrentConversation(string _p0, int _ped, int _p2)
		{
			return Function.Call<bool>((Hash)0x049E937F18F4020C, _p0, _ped, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInAnyConversation(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x54B187F111D9C6F8, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedIsDrunk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x95D2D383D5396B8A, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3a00d87b20a2a5e4(int _p0, int _p1)
		{
			Function.Call((Hash)0x3A00D87B20A2A5E4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd47d47efbf103fb8(int _p0, int _p1)
		{
			Function.Call((Hash)0xD47D47EFBF103FB8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayAnimalVocalization(int _ped, string _vocalizationName, bool _p2)
		{
			Function.Call((Hash)0xEE066C7006C49C0A, _ped, _vocalizationName, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayAnimalVocalizationPheromoneVialResponse(int _ped, uint _p1, bool _p2)
		{
			Function.Call((Hash)0x0E53530D9B2DB01D, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimalVocalizationPlaying(int _pedHandle)
		{
			return Function.Call<bool>((Hash)0xC265DF9FB44A9FBD, _pedHandle);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void SetAnimalMood(int _animal, int _mood)
		{
			Function.Call((Hash)0xCC97B29285B1DC3B, _animal, _mood);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfcdec42b1c78b7f8(int _p0, int _p1)
		{
			Function.Call((Hash)0xFCDEC42B1C78B7F8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeb4d592620b8c209(int _p0)
		{
			Function.Call((Hash)0xEB4D592620B8C209, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa6847bba4fcdd13f(int _p0, int _p1)
		{
			Function.Call((Hash)0xA6847BBA4FCDD13F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStaticEmitterEnabled(string _emitterName, bool _toggle)
		{
			Function.Call((Hash)0x399D2D3B33F1B8EB, _emitterName, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayEndCreditsMusic(bool _play)
		{
			Function.Call((Hash)0xCD536C4D33DCC900, _play);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7678fe0455ed1145(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x7678FE0455ED1145, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xffe9c53deea3db0b(int _p0, int _p1, float _x, float _y, float _z, bool _isSrlLoaded, int _p6)
		{
			return Function.Call<int>((Hash)0xFFE9C53DEEA3DB0B, _p0, _p1, _x, _y, _z, _isSrlLoaded, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5e3ccf03995388b5(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x5E3CCF03995388B5, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x43037abfe214a851()
		{
			Function.Call((Hash)0x43037ABFE214A851);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientZoneState(string _zoneName, bool _isEnabled, bool _p2)
		{
			Function.Call((Hash)0xBDA07E5950085E46, _zoneName, _isEnabled, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAmbientZoneState(string _zoneName, bool _p1)
		{
			Function.Call((Hash)0x218DD44AAAC964FF, _zoneName, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientZoneListState(string _ambientZone, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x9748FA4DE50CCE3E, _ambientZone, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAmbientZoneListState(string _ambientZone, bool _p1)
		{
			Function.Call((Hash)0x120C48C614909FA4, _ambientZone, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientZoneStatePersistent(string _ambientZone, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x1D6650420CEC9D3B, _ambientZone, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientZoneListStatePersistent(string _ambientZone, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xF3638DAE8C4045E1, _ambientZone, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientZonePosition(string _ambientZone, float _x, float _y, float _z, float _heading)
		{
			Function.Call((Hash)0x3743CE6948194349, _ambientZone, _x, _y, _z, _heading);
		}
		/// <summary>
		/// Checks whether the horn of a vehicle is currently played.
		/// </summary>
		public static bool IsHornActive(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x9D6BFC12B05C6121, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfd461d0aba5559b1(int _p0, int _p1)
		{
			Function.Call((Hash)0xFD461D0ABA5559B1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsStreamPlaying(int _streamId)
		{
			return Function.Call<bool>((Hash)0xD11FA52EB849D978, _streamId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LoadStream(string _streamName, string _soundSet)
		{
			return Function.Call<bool>((Hash)0x1F1F957154EC51DF, _streamName, _soundSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayStreamFromPed(int _ped, int _streamId)
		{
			Function.Call((Hash)0x89049DD63C08B5D1, _ped, _streamId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayStreamFrontend(int _streamId)
		{
			Function.Call((Hash)0x58FCE43488F9F5F4, _streamId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayStreamFromPosition(float _x, float _y, float _z, int _streamId)
		{
			Function.Call((Hash)0x21442F412E8DE56B, _x, _y, _z, _streamId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3a3be6b920525237(int _p0, int _p1)
		{
			Function.Call((Hash)0x3A3BE6B920525237, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopStream(int _streamId)
		{
			Function.Call((Hash)0xA4718A1419D18151, _streamId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopPedSpeaking(int _ped, bool _shaking)
		{
			Function.Call((Hash)0x9D64D7405520E3D3, _ped, _shaking);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisablePedPainAudio(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xA9A41C1E940FB0E8, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAmbientSpeechDisabled(int _ped)
		{
			return Function.Call<bool>((Hash)0x932C2D096A2C3FFF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SetIsScriptedSpeechDisabled(int _ped, bool _disabled)
		{
			return Function.Call<int>((Hash)0xB2DE3AEBE31150E2, _ped, _disabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BlockSpeechContext(string _context, bool _block)
		{
			Function.Call((Hash)0x6378A235374B852F, _context, _block);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x87e6302fc61208cc(int _p0)
		{
			Function.Call((Hash)0x87E6302FC61208CC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetHornEnabled(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x76D683C108594D0E, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAudioVehiclePriority(int _vehicle, int _p1)
		{
			Function.Call((Hash)0xE5564483E407F914, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x259acc5b52a2b2d9(int _p0, int _p1)
		{
			Function.Call((Hash)0x259ACC5B52A2B2D9, _p0, _p1);
		}
		/// <summary>
		/// Old name: _FORCE_VEHICLE_ENGINE_AUDIO
		/// </summary>
		public static void ForceUseAudioGameObject(int _vehicle, string _audioName)
		{
			Function.Call((Hash)0x4F0C413926060B38, _vehicle, _audioName);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetGpsActive(bool _active)
		{
			Function.Call((Hash)0x3BD3F52BA9B1E4E8, _active);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartAudioSceneset(string _audioName, string _sceneset)
		{
			return Function.Call<bool>((Hash)0x6339C1EA3979B5F7, _audioName, _sceneset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopAudioSceneset(string _sceneset)
		{
			Function.Call((Hash)0x9428447DED71FC7E, _sceneset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetAudioSceneset(string _audioName, string _sceneset)
		{
			return Function.Call<bool>((Hash)0xAC84686C06184B0D, _audioName, _sceneset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartAudioScene(string _scene)
		{
			return Function.Call<bool>((Hash)0x013A80FC08F6E4F2, _scene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdc2f83a0612ca34d(int _p0)
		{
			return Function.Call<int>((Hash)0xDC2F83A0612CA34D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopAudioScene(string _scene)
		{
			Function.Call((Hash)0xDFE8422B3B94E688, _scene);
		}
		/// <summary>
		/// _STOP_AUDIO_*
		/// </summary>
		public static void Hash_0x6ab944df68b512d3(int _p0)
		{
			Function.Call((Hash)0x6AB944DF68B512D3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopAudioScenes()
		{
			Function.Call((Hash)0xBAC7FC81A75EC1A1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAudioSceneActive(string _scene)
		{
			return Function.Call<bool>((Hash)0xB65B60556E2A9225, _scene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAudioSceneVariable(string _scene, string _variable, float _value)
		{
			Function.Call((Hash)0xEF21A9EF089A2668, _scene, _variable, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetEntityAudioMixGroup(int _entity)
		{
			return Function.Call<uint>((Hash)0x8B25A18E390F75BF, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddEntityToAudioMixGroup(int _entity, string _groupName, float _p2)
		{
			Function.Call((Hash)0x153973AB99FE8980, _entity, _groupName, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x131ec9247e7a2903(int _p0)
		{
			return Function.Call<int>((Hash)0x131EC9247E7A2903, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveEntityFromAudioMixGroup(int _entity, float _p1)
		{
			Function.Call((Hash)0x18EB48CFC41F2EA0, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe600f61f54a444a6()
		{
			return Function.Call<int>((Hash)0xE600F61F54A444A6);
		}
		/// <summary>
		/// Old name: AUDIO_IS_SCRIPTED_MUSIC_PLAYING
		/// </summary>
		public static bool AudioIsMusicPlaying()
		{
			return Function.Call<bool>((Hash)0x845FFC3A4FEEFA3E);
		}
		/// <summary>
		/// Checks for MOONSHINE_BAND
		/// </summary>
		public static uint Hash_0xbe28db99556ff8d9(int _entity)
		{
			return Function.Call<uint>((Hash)0xBE28DB99556FF8D9, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8e901b65206c2d3e(int _ped)
		{
			Function.Call((Hash)0x8E901B65206C2D3E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc4cfce4c656ef480(int _ped)
		{
			Function.Call((Hash)0xC4CFCE4C656EF480, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xabdb4863d3d72021(int _entity, int _p1, int _p2, float _p3, int _p4)
		{
			Function.Call((Hash)0xABDB4863D3D72021, _entity, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
		/// </summary>
		public static void Hash_0xb93a769b8b726950(int _ped, uint _p1)
		{
			Function.Call((Hash)0xB93A769B8B726950, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe891504b2f0e2dba(int _p0, int _p1)
		{
			Function.Call((Hash)0xE891504B2F0E2DBA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9eb779765e68c52e(int _p0, int _p1)
		{
			Function.Call((Hash)0x9EB779765E68C52E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe9694b2d6cb87b06(int _entity, int _p1)
		{
			Function.Call((Hash)0xE9694B2D6CB87B06, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x886657c5b3d8ede3(int _entity)
		{
			return Function.Call<int>((Hash)0x886657C5B3D8EDE3, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc68c02de259c927c(int _p0)
		{
			return Function.Call<int>((Hash)0xC68C02DE259C927C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2fff4a78384affdf(int _entity)
		{
			return Function.Call<int>((Hash)0x2FFF4A78384AFFDF, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x62377977e4f08668(int _entity)
		{
			return Function.Call<int>((Hash)0x62377977E4F08668, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedSongIndexHost(int _ped)
		{
			return Function.Call<int>((Hash)0x2DBBF0C5E19383EE, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd05a460328560477(int _p0)
		{
			return Function.Call<int>((Hash)0xD05A460328560477, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8d29fdf565ded9ae(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x8D29FDF565DED9AE, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x448f2647dd6f2e27(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x448F2647DD6F2E27, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x139a4b9df2d26cbf(int _p0, int _p1)
		{
			Function.Call((Hash)0x139A4B9DF2D26CBF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x018abe833ca64d2a(int _p0, int _p1)
		{
			Function.Call((Hash)0x018ABE833CA64D2A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbc07ca8fd710e7fd(int _p0, int _p1)
		{
			Function.Call((Hash)0xBC07CA8FD710E7FD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PrepareMusicEvent(string _eventName)
		{
			return Function.Call<bool>((Hash)0x1E5185B72EF5158A, _eventName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CancelMusicEvent(string _eventName)
		{
			return Function.Call<bool>((Hash)0x5B17A90291133DA5, _eventName);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
		/// </summary>
		public static bool TriggerMusicEvent(string _eventName)
		{
			return Function.Call<bool>((Hash)0x706D57B0F50DA710, _eventName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int TriggerMusicEventWithHash(uint _eventName)
		{
			return Function.Call<int>((Hash)0x05D6195FB4D428F4, _eventName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMusicPlaytime()
		{
			return Function.Call<int>((Hash)0xE7A0D23DC414507B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf64034d533ce8aac(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xF64034D533CE8AAC, _p0, _p1, _p2);
		}
		/// <summary>
		/// https://en.m.wikipedia.org/wiki/Walla
		/// </summary>
		public static void SetPedWallaDensity(float _p0, float _p1)
		{
			Function.Call((Hash)0x149AEE66F0CB3A99, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdad6cd07caa4f382()
		{
			Function.Call((Hash)0xDAD6CD07CAA4F382);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedInteriorWallaDensity(float _p0, float _p1)
		{
			Function.Call((Hash)0x8BF907833BE275DE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForcePedPanicWalla()
		{
			Function.Call((Hash)0x062D5EAD4DA2FA6A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x138adb94f8b90616()
		{
			Function.Call((Hash)0x138ADB94F8B90616);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UseFootstepScriptSweeteners(int _ped, bool _p1, uint _hash)
		{
			Function.Call((Hash)0xBF4DC1784BE94DFA, _ped, _p1, _hash);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
		/// </summary>
		public static void SetAudioFlag(string _flagName, bool _toggle)
		{
			Function.Call((Hash)0xB9EFD5C25018725A, _flagName, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6da15746d5cc1a92(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x6DA15746D5CC1A92, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x078f77fd1a43eab3(int _p0, int _p1)
		{
			Function.Call((Hash)0x078F77FD1A43EAB3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3d0bbccf401b5fdb()
		{
			Function.Call((Hash)0x3D0BBCCF401B5FDB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPortalSettingsOverride(string _p0, string _p1)
		{
			Function.Call((Hash)0x044DBAD7A7FA2BE5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePortalSettingsOverride(string _p0)
		{
			Function.Call((Hash)0xB4BBFD9CD8B3922B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xea546c31fd45f8cd(int _p0)
		{
			Function.Call((Hash)0xEA546C31FD45F8CD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x44a5eef54f62e823(int _p0)
		{
			return Function.Call<int>((Hash)0x44A5EEF54F62E823, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x017492b2201e3428(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x017492B2201E3428, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc886cd666add42e1(int _p0, int _p1)
		{
			Function.Call((Hash)0xC886CD666ADD42E1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5ae0cb5f35f034fd(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x5AE0CB5F35F034FD, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x821c32c728b24477(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x821C32C728B24477, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x06c5df5ee444bc6b(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x06C5DF5EE444BC6B, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x341cdd17efc2472e(int _p0, int _p1)
		{
			Function.Call((Hash)0x341CDD17EFC2472E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7e176c676f8652a9(int _p0)
		{
			Function.Call((Hash)0x7E176C676F8652A9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2b9c37c01bf25edb(int _p0)
		{
			return Function.Call<int>((Hash)0x2B9C37C01BF25EDB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa6a3a3f96b8b030e()
		{
			return Function.Call<int>((Hash)0xA6A3A3F96B8B030E);
		}
		/// <summary>
		/// Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
		/// https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
		/// </summary>
		public static int GetLoadedStreamIdFromCreation(string _streamName, string _soundSet)
		{
			return Function.Call<int>((Hash)0x0556C784FA056628, _streamName, _soundSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc369e2234e34a0ca(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC369E2234E34A0CA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x35b8c070e0c16e2f(int _p0, int _p1)
		{
			Function.Call((Hash)0x35B8C070E0C16E2F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe7e6cb8b713ed190()
		{
			Function.Call((Hash)0xE7E6CB8B713ED190);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x569abc36e28ddeaa()
		{
			Function.Call((Hash)0x569ABC36E28DDEAA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x839c9f124be74d94(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x839C9F124BE74D94, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AudioTriggerExplosion(string _name, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x374F0E716BFCDE82, _name, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3e98ac9d8c56c62c(int _p0)
		{
			Function.Call((Hash)0x3E98AC9D8C56C62C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcbf2bebb468a34f3(int _p0)
		{
			Function.Call((Hash)0xCBF2BEBB468A34F3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa2b851605748ad0e()
		{
			Function.Call((Hash)0xA2B851605748AD0E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcfad2c8cd1054523(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xCFAD2C8CD1054523, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd733528b6c35647a(int _p0, int _p1)
		{
			Function.Call((Hash)0xD733528B6C35647A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5bc885ebd75faa7d(int _p0, int _p1)
		{
			Function.Call((Hash)0x5BC885EBD75FAA7D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6b7a88a61b41e589(int _p0)
		{
			Function.Call((Hash)0x6B7A88A61B41E589, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4be3ec91c01f0fe8()
		{
			Function.Call((Hash)0x4BE3EC91C01F0FE8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAudioOnlineTransitionStage(string _p0)
		{
			Function.Call((Hash)0x9B1FC259187C97C0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2e399eafbeea74d5()
		{
			Function.Call((Hash)0x2E399EAFBEEA74D5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x64b956f4e761df5c(int _p0)
		{
			Function.Call((Hash)0x64B956F4E761DF5C, _p0);
		}
		// :###################: //
		// : namespace: BOUNTY : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestPayOffBounty(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0x537CE992BD2D7BCB, _outRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestPayOffBountyEx(int _outRpcGuid, uint _p1, uint _costType)
		{
			return Function.Call<bool>((Hash)0x587BCEC31D64F382, _outRpcGuid, _p1, _costType);
		}
		/// <summary>
		/// crimeType: see _REPORT_CRIME
		/// </summary>
		public static bool BountyRequestSelfReportCrime(int _outRpcGuid, uint _crimeType, bool _p2)
		{
			return Function.Call<bool>((Hash)0x188B748861B5BA17, _outRpcGuid, _crimeType, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestSelfReportKilledByBountyHunter(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0xB462D69D406A2602, _outRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyGetBountyOnPlayer(int _gamerHandle, int _bountyData)
		{
			return Function.Call<bool>((Hash)0x4EF23E04A0C8FF51, _gamerHandle, _bountyData);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyIsRequestPending(int _rpcGuid)
		{
			return Function.Call<bool>((Hash)0x03B61CD51097DE60, _rpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestBeginWantedPoster(int _outRpcGuid, int _p1)
		{
			return Function.Call<bool>((Hash)0xFFA13742E43507E3, _outRpcGuid, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x81847c2134039bdc(int _p0)
		{
			return Function.Call<bool>((Hash)0x81847C2134039BDC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestCompleteWantedPoster(int _outRpcGuid, int _p1)
		{
			return Function.Call<bool>((Hash)0x727AB6F008BB9F29, _outRpcGuid, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestCompleteSplitWantedPoster(int _outRpcGuid, int _p1)
		{
			return Function.Call<bool>((Hash)0xFBD137BF0EC50FC9, _outRpcGuid, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BountyCancelWantedPoster()
		{
			Function.Call((Hash)0x6A9DF0FCD0C87FF9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestBeginLegendaryMission(int _outRpcGuid, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xFC81D7C7A151CFAA, _outRpcGuid, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestBeginLegendaryMissionForPosse(int _outRpcGuid, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x48E4E23F1739E197, _outRpcGuid, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestCompleteLegendaryMission(int _outRpcGuid, int _p1)
		{
			return Function.Call<bool>((Hash)0xA7309AC0DCF6D950, _outRpcGuid, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BountyCancelLegendaryMission()
		{
			Function.Call((Hash)0x2BA1BCC99826CDA2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyGetWantedPosterSlot(uint _p0, uint _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xB395A44A0C7CA615, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyGetLegendaryTarget(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x85E4D7B225A30ED1, _p0, _p1);
		}
		/// <summary>
		/// _BOUNTY_C* or _BOUNTY_GET_*
		/// </summary>
		public static bool Hash_0x86ec5f83867c4b70(int _p0)
		{
			return Function.Call<bool>((Hash)0x86EC5F83867C4B70, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyGetCooldownCollection(int _p0)
		{
			return Function.Call<bool>((Hash)0x8FAF4D262FABA99C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestBecomeTargetOfCharacterBountyHunt(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0xB096547D61868254, _outRpcGuid);
		}
		/// <summary>
		/// _BOUNTY_IS_* or _BOUNTY_REQUEST_*
		/// </summary>
		public static bool Hash_0x27d3a0e1fe090a43(int _p0)
		{
			return Function.Call<bool>((Hash)0x27D3A0E1FE090A43, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestClaimCharacterBounty(int _outRpcGuid, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xA9C3B0F746375162, _outRpcGuid, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestPosseLeaderClaimCharacterBounty(int _outRpcGuid, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x5B53CA0E2AC3FF45, _outRpcGuid, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestPosseMemberClaimCharacterBountyShare(int _outRpcGuid, int _p1)
		{
			return Function.Call<bool>((Hash)0x22D3A61CE053270C, _outRpcGuid, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BountyClearBeingBountyHunter()
		{
			Function.Call((Hash)0xA59D1997ECD99F0A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestEscapedCharacterBountyHunt(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0x12E981D53B07BF48, _outRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestPosseLeaderEscapedCharacterBountyHunt(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0x2D874BA20E8E1F20, _outRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestPosseMemberEscapedCharacterBountyHunt(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0x8521C2E235558278, _outRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BountyClearBeingTarget()
		{
			Function.Call((Hash)0x932DB3C05A7465D1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestServedFullJailSentence(int _outRpcGuid)
		{
			return Function.Call<bool>((Hash)0x3F73AED12A5EF0FF, _outRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BountyRequestBribeJailGuard(int _outRpcGuid, int _p1)
		{
			return Function.Call<bool>((Hash)0x28717806D3BDD0D0, _outRpcGuid, _p1);
		}
		/// <summary>
		/// _BOUNTY_GET_*
		/// </summary>
		public static int Hash_0xf8bcc5eca33ac9c1()
		{
			return Function.Call<int>((Hash)0xF8BCC5ECA33AC9C1);
		}
		/// <summary>
		/// _BOUNTY_GET_*
		/// </summary>
		public static int Hash_0xd6a67e2ff373d0e3(int _p0)
		{
			return Function.Call<int>((Hash)0xD6A67E2FF373D0E3, _p0);
		}
		// :##################: //
		// : namespace: BRAIN : //
		// :##################: //
		/// <summary>
		/// Registers a script for any object with a specific model hash.
		/// </summary>
		public static void RegisterObjectScriptBrain(string _scriptName, uint _modelHash, int _p2, float _activationRange, int _p4, int _p5)
		{
			Function.Call((Hash)0x16AF9B4EEAC3B305, _scriptName, _modelHash, _p2, _activationRange, _p4, _p5);
		}
		/// <summary>
		/// Returns threadId
		/// </summary>
		public static int StartPreloadedScriptBrain(int _entity, string _scriptName, int _scriptStackSize, bool _p3)
		{
			return Function.Call<int>((Hash)0x4E4507CC5E4DB869, _entity, _scriptName, _scriptStackSize, _p3);
		}
		/// <summary>
		/// Returns threadId
		/// </summary>
		public static int StartScriptBrain(int _entity, string _scriptName, int _p2, int _p3, int _p4, bool _p5)
		{
			return Function.Call<int>((Hash)0x6F62FAE266DCFC81, _entity, _scriptName, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveScriptBrainEntity(int _entity)
		{
			Function.Call((Hash)0x38F1E09224EECA09, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetScriptBrainEntity()
		{
			return Function.Call<int>((Hash)0x6818D1A194E29983);
		}
		/// <summary>
		/// Common flags: 250, 99999
		/// _SET_SCRIPT_BRAIN*
		/// </summary>
		public static void Hash_0xa6ac35db4a7957a8(int _flag)
		{
			Function.Call((Hash)0xA6AC35DB4A7957A8, _flag);
		}
		/// <summary>
		/// Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
		/// _SET_SCRIPT_BRAIN*
		/// </summary>
		public static void Hash_0x4aa5ea1edfb25786(int _flag)
		{
			Function.Call((Hash)0x4AA5EA1EDFB25786, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableScriptBrainSet(int _brainSet)
		{
			Function.Call((Hash)0x1CF6E5C6750EADBD, _brainSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableScriptBrainSet(int _brainSet)
		{
			Function.Call((Hash)0x3F44EA613A5B2676, _brainSet);
		}
		/// <summary>
		/// Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
		/// Alternative name _REGISTER_SCRIPT_BRAIN
		/// 
		/// Old name: _PREPARE_SCRIPT_BRAIN
		/// </summary>
		public static void ReactivateAllObjectBrainsThatAreWaitingTillOutOfRange()
		{
			Function.Call((Hash)0xA32B0B05EFF75730);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReactivateNamedObjectBrainsWaitingTillOutOfRange(string _scriptName)
		{
			Function.Call((Hash)0x74C333E34DF74E8A, _scriptName);
		}
		// :################: //
		// : namespace: CAM : //
		// :################: //
		/// <summary>
		/// ease - smooth transition between the camera's positions
		/// easeTime - Time in milliseconds for the transition to happen
		/// 
		/// If you have created a script (rendering) camera, and want to go back to the 
		/// character (gameplay) camera, call this native with render set to FALSE.
		/// Setting ease to TRUE will smooth the transition.
		/// </summary>
		public static void RenderScriptCams(bool _render, bool _ease, int _easeTime, bool _p3, bool _p4, int _p5)
		{
			Function.Call((Hash)0x33281167E4942E4F, _render, _ease, _easeTime, _p3, _p4, _p5);
		}
		/// <summary>
		/// This native makes the gameplay camera zoom into first person/third person with a special effect.
		/// blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP/README.md
		/// </summary>
		public static void StopRenderingScriptCamsUsingCatchUp(bool _render, float _distance, int _blendBackSmoothingType, bool _p3, bool _p4, bool _p5)
		{
			Function.Call((Hash)0x8C7C7FF7CF0E5153, _render, _distance, _blendBackSmoothingType, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateCam(string _camName, bool _p1)
		{
			return Function.Call<int>((Hash)0xE72CDBA7F0A02DD6, _camName, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateCamWithParams(string _camName, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, float _fov, bool _p8, int _p9)
		{
			return Function.Call<int>((Hash)0x40C23491CE83708E, _camName, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _fov, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateCamera(uint _camHash, bool _p1)
		{
			return Function.Call<int>((Hash)0x57CDF879EA466C46, _camHash, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateCameraWithParams(uint _camHash, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, float _fov, bool _p8, int _p9)
		{
			return Function.Call<int>((Hash)0x98B99B9F27E2D60B, _camHash, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _fov, _p8, _p9);
		}
		/// <summary>
		/// BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
		/// </summary>
		public static void DestroyCam(int _cam, bool _p1)
		{
			Function.Call((Hash)0x4E67E0B6D7FD5145, _cam, _p1);
		}
		/// <summary>
		/// BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
		/// </summary>
		public static void DestroyAllCams(bool _p0)
		{
			Function.Call((Hash)0x163600D6E136C9F8, _p0);
		}
		/// <summary>
		/// Returns whether or not the passed camera handle exists.
		/// </summary>
		public static bool DoesCamExist(int _cam)
		{
			return Function.Call<bool>((Hash)0x153AD457764FD704, _cam);
		}
		/// <summary>
		/// Set camera as active/inactive.
		/// </summary>
		public static void SetCamActive(int _cam, bool _active)
		{
			Function.Call((Hash)0x87295BCA613800C8, _cam, _active);
		}
		/// <summary>
		/// Returns whether or not the passed camera handle is active.
		/// </summary>
		public static bool IsCamActive(int _cam)
		{
			return Function.Call<bool>((Hash)0x63EFCC7E1810B8E6, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCamRendering(int _cam)
		{
			return Function.Call<bool>((Hash)0x4415F8A6C536D39F, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRenderingCam()
		{
			return Function.Call<int>((Hash)0x03A8931ECC8015D6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetCamCoord(int _cam)
		{
			return Function.Call<Vector3>((Hash)0x6B12F11C2A9F0344, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetCamRot(int _cam, int _rotationOrder)
		{
			return Function.Call<Vector3>((Hash)0x9BF96B57254E7889, _cam, _rotationOrder);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetCamFov(int _cam)
		{
			return Function.Call<float>((Hash)0x8101D32A0A6B0F60, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamParams(int _cam, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, float _fieldOfView, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13)
		{
			Function.Call((Hash)0xA47BBFFFB83D4D0A, _cam, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _fieldOfView, _p8, _p9, _p10, _p11, _p12, _p13);
		}
		/// <summary>
		/// Sets the position of the cam.
		/// </summary>
		public static void SetCamCoord(int _cam, float _posX, float _posY, float _posZ)
		{
			Function.Call((Hash)0xF9EE7D419EE49DE6, _cam, _posX, _posY, _posZ);
		}
		/// <summary>
		/// Sets the rotation of the cam.
		/// </summary>
		public static void SetCamRot(int _cam, float _rotX, float _rotY, float _rotZ, int _rotationOrder)
		{
			Function.Call((Hash)0x63DFA6810AD78719, _cam, _rotX, _rotY, _rotZ, _rotationOrder);
		}
		/// <summary>
		/// Sets the field of view of the cam.
		/// 
		/// Min: 1.0f
		/// Max: 130.0f
		/// </summary>
		public static void SetCamFov(int _cam, float _fieldOfView)
		{
			Function.Call((Hash)0x27666E5988D9D429, _cam, _fieldOfView);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamNearClip(int _cam, float _nearClip)
		{
			Function.Call((Hash)0xA924028272A61364, _cam, _nearClip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamFarClip(int _cam, float _farClip)
		{
			Function.Call((Hash)0x5E32817BF6302111, _cam, _farClip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamMotionBlurStrength(int _cam, float _strength)
		{
			Function.Call((Hash)0x45FD891364181F9E, _cam, _strength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfc3f638be2b6bb02()
		{
			Function.Call((Hash)0xFC3F638BE2B6BB02);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe4b7945ef4f1bfb2(int _cam, float _p1)
		{
			Function.Call((Hash)0xE4B7945EF4F1BFB2, _cam, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1fc6c727d30ffdde(int _p0)
		{
			Function.Call((Hash)0x1FC6C727D30FFDDE, _p0);
		}
		/// <summary>
		/// Last param determines if its relative to the Entity
		/// </summary>
		public static void AttachCamToEntity(int _cam, int _entity, float _xOffset, float _yOffset, float _zOffset, bool _isRelative)
		{
			Function.Call((Hash)0xFDC0DF7F6FB0A592, _cam, _entity, _xOffset, _yOffset, _zOffset, _isRelative);
		}
		/// <summary>
		/// boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
		/// </summary>
		public static void AttachCamToPedBone(int _cam, int _ped, int _boneIndex, float _x, float _y, float _z, bool _heading)
		{
			Function.Call((Hash)0xDFC1E4A44C0324CA, _cam, _ped, _boneIndex, _x, _y, _z, _heading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachCam(int _cam)
		{
			Function.Call((Hash)0x05B41DDBEB559556, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PointCamAtCoord(int _cam, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x948B39341C3A40C2, _cam, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PointCamAtEntity(int _cam, int _entity, float _p2, float _p3, float _p4, bool _p5)
		{
			Function.Call((Hash)0xFC2867E6074D3A61, _cam, _entity, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopCamPointing(int _cam)
		{
			Function.Call((Hash)0xCA1B30A3357C71F1, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamFocusDistance(int _cam, float _distance)
		{
			Function.Call((Hash)0x11F32BB61B756732, _cam, _distance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PauseCameraFocus(int _cam, bool _pause)
		{
			Function.Call((Hash)0x9F97E85EC142255E, _cam, _pause);
		}
		/// <summary>
		/// Allows you to aim and shoot at the direction the camera is facing.
		/// </summary>
		public static void SetCamAffectsAiming(int _cam, bool _toggle)
		{
			Function.Call((Hash)0x3CB9E8BDE5E76F33, _cam, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamControlsMiniMapHeading(int _cam, bool _p1)
		{
			Function.Call((Hash)0x1B8F3CE5A6001298, _cam, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AllowMotionBlurDecay(int _cam, bool _p1)
		{
			Function.Call((Hash)0x42ED56B02E05D109, _cam, _p1);
		}
		/// <summary>
		/// p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
		/// 
		/// p8 big values ~100 will slow down the camera movement before reaching this node
		/// 
		/// p9 != 0 seems to override the rotation/pitch (bool?)
		/// </summary>
		public static void AddCamSplineNode(int _camera, float _x, float _y, float _z, float _xRot, float _yRot, float _zRot, int _length, int _p8, int _p9)
		{
			Function.Call((Hash)0xF1F57F9D230F9CD1, _camera, _x, _y, _z, _xRot, _yRot, _zRot, _length, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamSplinePhase(int _cam, float _p1)
		{
			Function.Call((Hash)0xF1898A68E7C15636, _cam, _p1);
		}
		/// <summary>
		/// Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
		/// 
		/// (returns 1.0f when no nodes has been added, reached end of non existing spline)
		/// </summary>
		public static float GetCamSplinePhase(int _cam)
		{
			return Function.Call<float>((Hash)0x095EDCD24D90033A, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamSplineDuration(int _cam, int _timeDuration)
		{
			Function.Call((Hash)0xFF6311652CA91015, _cam, _timeDuration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamSplineSmoothingStyle(int _cam, int _smoothingStyle)
		{
			Function.Call((Hash)0x84B3645618E726B0, _cam, _smoothingStyle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCamActiveWithInterp(int _camTo, int _camFrom, int _duration, int _easeLocation, int _easeRotation)
		{
			Function.Call((Hash)0x8B15AE2987C1AC8F, _camTo, _camFrom, _duration, _easeLocation, _easeRotation);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCamInterpolating(int _cam)
		{
			return Function.Call<bool>((Hash)0x578F8F1CAA17BD2B, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShakeCam(int _cam, string _type, float _amplitude)
		{
			Function.Call((Hash)0xF9A7BCF5D050D4E7, _cam, _type, _amplitude);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCamShaking(int _cam)
		{
			return Function.Call<bool>((Hash)0x2EEB402BD7320159, _cam);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopCamShaking(int _cam, bool _p1)
		{
			Function.Call((Hash)0xB78CC4B4706614B0, _cam, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PlayCamAnim(int _cam, string _animName, string _animDictionary, float _x, float _y, float _z, float _xRot, float _yRot, float _zRot, bool _p9, int _p10)
		{
			return Function.Call<bool>((Hash)0xA263DDF694D563F6, _cam, _animName, _animDictionary, _x, _y, _z, _xRot, _yRot, _zRot, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcf69ea05cd9c33c9()
		{
			Function.Call((Hash)0xCF69EA05CD9C33C9);
		}
		/// <summary>
		/// Only used in R* Script camera_photomode
		/// </summary>
		public static bool IsAnimSceneCamActive()
		{
			return Function.Call<bool>((Hash)0x20389408F0E93B9A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScreenFadedOut()
		{
			return Function.Call<bool>((Hash)0xF5472C80DF2FF847);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScreenFadedIn()
		{
			return Function.Call<bool>((Hash)0x37F9A426FBCF4AF2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScreenFadingOut()
		{
			return Function.Call<bool>((Hash)0x02F39BEFE7B88D00);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScreenFadingIn()
		{
			return Function.Call<bool>((Hash)0x0CECCC63FFA2EF24);
		}
		/// <summary>
		/// Fades the screen in.
		/// 
		/// duration: The time the fade should take, in milliseconds.
		/// </summary>
		public static void DoScreenFadeIn(int _duration)
		{
			Function.Call((Hash)0x6A053CF596F67DF7, _duration);
		}
		/// <summary>
		/// Fades the screen out.
		/// 
		/// duration: The time the fade should take, in milliseconds.
		/// </summary>
		public static void DoScreenFadeOut(int _duration)
		{
			Function.Call((Hash)0x40C719A5E410B9E4, _duration);
		}
		/// <summary>
		/// More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
		/// </summary>
		public static bool HasLetterBox()
		{
			return Function.Call<bool>((Hash)0x81DCFD13CF39920E);
		}
		/// <summary>
		/// Creates Cinematic Black Bars (at top and bottom)
		/// Disable instantly: false/false, Enable instantly: true/true
		/// </summary>
		public static void RequestLetterBoxNow(bool _p0, bool _p1)
		{
			Function.Call((Hash)0x69D65E89FFD72313, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestLetterBoxOvertime(int _p0, int _p1, bool _p2, int _p3, bool _p4, bool _p5)
		{
			Function.Call((Hash)0xE296208C273BD7F0, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceLetterBoxThisUpdate()
		{
			Function.Call((Hash)0xC64ABC0676AF262B);
		}
		/// <summary>
		/// More info: see HAS_LETTER_BOX
		/// </summary>
		public static float GetLetterBoxRatio()
		{
			return Function.Call<float>((Hash)0xA2B1C7EF759A63CE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x73ff6be63dc18819()
		{
			return Function.Call<int>((Hash)0x73FF6BE63DC18819);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x450769c833d58844()
		{
			return Function.Call<int>((Hash)0x450769C833D58844);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWidescreenBorders(bool _p0, int _p1)
		{
			Function.Call((Hash)0xD7F4D54CF80AFA34, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetGameplayCamCoord()
		{
			return Function.Call<Vector3>((Hash)0x595320200B98596E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetGameplayCamRot(int _rotationOrder)
		{
			return Function.Call<Vector3>((Hash)0x0252D2B5582957A6, _rotationOrder);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetGameplayCamFov()
		{
			return Function.Call<float>((Hash)0xF6A96E5ACEEC6E50);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayCamMaxMotionBlurStrengthThisUpdate(float _p0)
		{
			Function.Call((Hash)0x8459B3E64257B21D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetGameplayCamRelativeHeading()
		{
			return Function.Call<float>((Hash)0xC4ABF536048998AA);
		}
		/// <summary>
		/// Sets the camera position relative to heading in float from -360 to +360.
		/// 
		/// Heading is always 0 in aiming camera.
		/// </summary>
		public static void SetGameplayCamRelativeHeading(float _heading, float _p1)
		{
			Function.Call((Hash)0x5D1EB123EAC5D071, _heading, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetGameplayCamRelativePitch()
		{
			return Function.Call<float>((Hash)0x99AADEBBA803F827);
		}
		/// <summary>
		/// Sets the camera pitch.
		/// 
		/// Parameters:
		/// x = pitches the camera on the x axis.
		/// Value2 = always seems to be hex 0x3F800000 (1.000000 float).
		/// </summary>
		public static void SetGameplayCamRelativePitch(float _x, float _Value2)
		{
			Function.Call((Hash)0xFB760AF4F537B8BF, _x, _Value2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0961b089947ba6d0(int _p0)
		{
			Function.Call((Hash)0x0961B089947BA6D0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x04084490cc302cfb()
		{
			Function.Call((Hash)0x04084490CC302CFB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScriptedCameraIsFirstPersonThisFrame(bool _p0)
		{
			Function.Call((Hash)0x1DD95A8D6B24A0C9, _p0);
		}
		/// <summary>
		/// Returns true if player is in first person
		/// </summary>
		public static bool IsInFullFirstPersonMode()
		{
			return Function.Call<bool>((Hash)0xD1BA66940E94C547);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShakeGameplayCam(string _shakeName, float _intensity)
		{
			Function.Call((Hash)0xD9B31B4650520529, _shakeName, _intensity);
		}
		/// <summary>
		/// _RES*
		/// </summary>
		public static void Hash_0xc3e9e5d4f413b773(string _shakeName, float _intensity)
		{
			Function.Call((Hash)0xC3E9E5D4F413B773, _shakeName, _intensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGameplayCamShaking()
		{
			return Function.Call<bool>((Hash)0xEA4C5F4AA0A4DBEF);
		}
		/// <summary>
		/// shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
		/// _IS_GAMEPLAY_*
		/// </summary>
		public static bool Hash_0x0060b31968e60e41(string _shakeName)
		{
			return Function.Call<bool>((Hash)0x0060B31968E60E41, _shakeName);
		}
		/// <summary>
		/// Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
		/// </summary>
		public static void SetGameplayCamShakeAmplitude(float _amplitude)
		{
			Function.Call((Hash)0x570E35F5C4A44838, _amplitude);
		}
		/// <summary>
		/// _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
		/// </summary>
		public static void Hash_0xfefddc6e8fdf8a75(string _shakeName, float _intensity)
		{
			Function.Call((Hash)0xFEFDDC6E8FDF8A75, _shakeName, _intensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopGameplayCamShaking(bool _p0)
		{
			Function.Call((Hash)0xE0DE43D290FB65F9, _p0);
		}
		/// <summary>
		/// script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
		/// script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
		/// _STOP_GAMEPLAY_CAM* - _STOP_I*
		/// </summary>
		public static void Hash_0x4285804fd65d8066(string _shakeName, bool _p1)
		{
			Function.Call((Hash)0x4285804FD65D8066, _shakeName, _p1);
		}
		/// <summary>
		/// Forces gameplay cam to specified ped as if you were the ped or spectating it
		/// </summary>
		public static void SetGameplayCamFollowPedThisUpdate(int _ped)
		{
			Function.Call((Hash)0x82E41D6ADE924FCA, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGameplayCamRendering()
		{
			return Function.Call<bool>((Hash)0x8660EA714834E412);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInterpolatingFromScriptCams()
		{
			return Function.Call<bool>((Hash)0x251241CAEC707106);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInterpolatingToScriptCams()
		{
			return Function.Call<bool>((Hash)0x43AB9D5A7D415478);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGameplayCamLookingBehind()
		{
			return Function.Call<bool>((Hash)0x8FE0D24FFD04D5A2);
		}
		/// <summary>
		/// Old name: _DISABLE_CAM_COLLISION_FOR_ENTITY
		/// </summary>
		public static void SetGameplayCamIgnoreEntityCollisionThisUpdate(int _entity)
		{
			Function.Call((Hash)0xD904F75DBD7AB865, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableCamCollisionForObject(int _entity)
		{
			Function.Call((Hash)0x7E3F546ACFE6C8D9, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x39073da4eddbc91d(int _p0)
		{
			Function.Call((Hash)0x39073DA4EDDBC91D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x70a6658d476c6187()
		{
			Function.Call((Hash)0x70A6658D476C6187);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x18c3dfac458783bb()
		{
			Function.Call((Hash)0x18C3DFAC458783BB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf1a6feedf3776ef9()
		{
			Function.Call((Hash)0xF1A6FEEDF3776EF9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe6f364de6c2fdefe()
		{
			Function.Call((Hash)0xE6F364DE6C2FDEFE);
		}
		/// <summary>
		/// _DISABLE_*
		/// </summary>
		public static void Hash_0x0f1ffef5d54ae832()
		{
			Function.Call((Hash)0x0F1FFEF5D54AE832);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3c8f74e8fe751614()
		{
			Function.Call((Hash)0x3C8F74E8FE751614);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x06557f6d96c86881()
		{
			Function.Call((Hash)0x06557F6D96C86881);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSphereVisible(float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0x2E941B5FFA2989C6, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x190f7da1ac09a8ef()
		{
			return Function.Call<int>((Hash)0x190F7DA1AC09A8EF);
		}
		/// <summary>
		/// Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
		/// </summary>
		public static void SetGameplayCamInitialZoom(float _camInitialZoom)
		{
			Function.Call((Hash)0xBCDA0BA8762FACB9, _camInitialZoom);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayCamInitialHeading(float _camInitialHeading)
		{
			Function.Call((Hash)0x6C1053C433A573CF, _camInitialHeading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayCamInitialPitch(float _camInitialPitch)
		{
			Function.Call((Hash)0x449995EA846D3FC2, _camInitialPitch);
		}
		/// <summary>
		/// minimum: Degrees between -180f and 180f.
		/// maximum: Degrees between -180f and 180f.
		/// 
		/// Clamps the gameplay camera's current yaw.
		/// 
		/// Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
		/// 
		/// Old name: _CLAMP_GAMEPLAY_CAM_YAW
		/// </summary>
		public static void SetThirdPersonCamRelativeHeadingLimitsThisUpdate(float _minimum, float _maximum)
		{
			Function.Call((Hash)0x14F3947318CA8AD2, _minimum, _maximum);
		}
		/// <summary>
		/// minimum: Degrees between -90f and 90f.
		/// maximum: Degrees between -90f and 90f.
		/// 
		/// Clamps the gameplay camera's current pitch.
		/// 
		/// Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
		/// 
		/// Old name: _CLAMP_GAMEPLAY_CAM_PITCH
		/// </summary>
		public static void SetThirdPersonCamRelativePitchLimitsThisUpdate(float _minimum, float _maximum)
		{
			Function.Call((Hash)0x326C7AA308F3DF6A, _minimum, _maximum);
		}
		/// <summary>
		/// Old name: _ANIMATE_GAMEPLAY_CAM_ZOOM
		/// </summary>
		public static void SetThirdPersonCamOrbitDistanceLimitsThisUpdate(float _p0, float _distance)
		{
			Function.Call((Hash)0x2126C740A4AC370B, _p0, _distance);
		}
		/// <summary>
		/// Forces gameplay cam to specified vehicle as if you were in it
		/// </summary>
		public static void SetInVehicleCamStateThisUpdate(int _vehicle, int _p1)
		{
			Function.Call((Hash)0xFA1D5E8D1C3CCD67, _vehicle, _p1);
		}
		/// <summary>
		/// Old name: _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
		/// </summary>
		public static void DisableOnFootFirstPersonViewThisUpdate()
		{
			Function.Call((Hash)0x9C473089A934C930);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void DisableFirstPersonFlashEffectThisUpdate()
		{
			Function.Call((Hash)0x77D65669A05D1A1A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableCinematicModeThisFrame()
		{
			Function.Call((Hash)0x8910C24B7E0046EC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInCinematicMode()
		{
			return Function.Call<bool>((Hash)0x74F1D22EFA71FAB8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x718c6ecf5e8cbdd4()
		{
			Function.Call((Hash)0x718C6ECF5E8CBDD4);
		}
		/// <summary>
		/// Forces camera position to second furthest 3rd person
		/// </summary>
		public static void ForceThirdPersonCamThisFrame()
		{
			Function.Call((Hash)0x8370D34BD2E60B73);
		}
		/// <summary>
		/// Forces camera position to furthest 3rd person
		/// </summary>
		public static void ForceThirdPersonCamFarThisFrame()
		{
			Function.Call((Hash)0x1CFB749AD4317BDE);
		}
		/// <summary>
		/// Returns true if first person camera is active in saloon1.ysc
		/// </summary>
		public static bool ForceFirstPersonCamThisFrame()
		{
			return Function.Call<bool>((Hash)0x90DA5BA5C2635416);
		}
		/// <summary>
		/// Does the same as 0x9C473089A934C930
		/// </summary>
		public static void DisableFirstPersonCamThisFrame2()
		{
			Function.Call((Hash)0x05AB44D906738426);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x632be8d84846fa56()
		{
			Function.Call((Hash)0x632BE8D84846FA56);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x71d71e08a7ed5bd7(int _p0)
		{
			Function.Call((Hash)0x71D71E08A7ED5BD7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsFollowVehicleCamActive()
		{
			return Function.Call<bool>((Hash)0xA40C2F51FB589E9A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7e40a01b11398fcb()
		{
			Function.Call((Hash)0x7E40A01B11398FCB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAimCamActive()
		{
			return Function.Call<bool>((Hash)0x698F456FB909E077);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsFirstPersonAimCamActive()
		{
			return Function.Call<bool>((Hash)0xF63134C54B6EC212);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsFirstPersonCameraActive(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xA24C1D341C6E0D53, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdc62cd70658e7a02()
		{
			return Function.Call<int>((Hash)0xDC62CD70658E7A02);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x796085220adcc847()
		{
			return Function.Call<int>((Hash)0x796085220ADCC847);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb6a80e1e3a5444f1()
		{
			return Function.Call<int>((Hash)0xB6A80E1E3A5444F1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8b1a5fe7e41e52b2()
		{
			return Function.Call<int>((Hash)0x8B1A5FE7E41E52B2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetFirstPersonAimCamZoomFactor()
		{
			return Function.Call<float>((Hash)0xB4132CA1B0EE1365);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFirstPersonAimCamRelativeHeadingLimitsThisUpdate(float _p0, float _p1)
		{
			Function.Call((Hash)0x05BD5E4088B30A66, _p0, _p1);
		}
		/// <summary>
		/// Old name: _SET_FIRST_PERSON_CAM_PITCH_RANGE
		/// </summary>
		public static void SetFirstPersonAimCamRelativePitchLimitsThisUpdate(float _p0, float _p1)
		{
			Function.Call((Hash)0x715B7F5E8BED32A2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc205b3c54c6a4e37(int _p0)
		{
			Function.Call((Hash)0xC205B3C54C6A4E37, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetFinalRenderedCamCoord()
		{
			return Function.Call<Vector3>((Hash)0x5352E025EC2B416F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetFinalRenderedCamRot(int _rotationOrder)
		{
			return Function.Call<Vector3>((Hash)0x602685BD85DD26CA, _rotationOrder);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetFinalRenderedCamFov()
		{
			return Function.Call<float>((Hash)0x04AF77971E508F6A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayCoordHint(float _x, float _y, float _z, int _duration, int _blendOutDuration, int _blendInDuration, int _unk)
		{
			Function.Call((Hash)0xFA33B8C69A4A6A0F, _x, _y, _z, _duration, _blendOutDuration, _blendInDuration, _unk);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayPedHint(int _p0, float _x1, float _y1, float _z1, bool _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x90FB951648851733, _p0, _x1, _y1, _z1, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayVehicleHint(int _p0, float _p1, float _p2, float _p3, bool _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xE2B2BB7DAC280515, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayObjectHint(int _p0, float _p1, float _p2, float _p3, bool _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xC40551D65F2BF297, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// p6 & p7 - possibly length or time
		/// </summary>
		public static void SetGameplayEntityHint(int _entity, float _xOffset, float _yOffset, float _zOffset, bool _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xD1F7F32640ADFD12, _entity, _xOffset, _yOffset, _zOffset, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGameplayHintActive()
		{
			return Function.Call<bool>((Hash)0x2E04AB5FEE042D4A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopGameplayHint(bool _p0)
		{
			Function.Call((Hash)0x1BCEC33D54CFCA8A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopCodeGameplayHint(bool _p0)
		{
			Function.Call((Hash)0x93759A83D0D844E7, _p0);
		}
		/// <summary>
		/// UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
		/// Return type char in ida
		/// _SET_GAMEPLAY_HINT_*
		/// </summary>
		public static void Hash_0x88544c0e3291dcae(bool _p0)
		{
			Function.Call((Hash)0x88544C0E3291DCAE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayHintFov(float _FOV)
		{
			Function.Call((Hash)0x661E58BC6F00A49A, _FOV);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayHintFollowDistanceScalar(float _p0)
		{
			Function.Call((Hash)0xDDDC54181868F81F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameplayHintBaseOrbitPitchOffset(float _p0)
		{
			Function.Call((Hash)0x421192A2DA48FD01, _p0);
		}
		/// <summary>
		/// Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETX
		/// </summary>
		public static void SetGameplayHintCameraRelativeSideOffset(float _p0)
		{
			Function.Call((Hash)0xF86B6F93727C59C9, _p0);
		}
		/// <summary>
		/// Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETY
		/// </summary>
		public static void SetGameplayHintCameraRelativeVerticalOffset(float _p0)
		{
			Function.Call((Hash)0x29E74F819150CC32, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf48664e9c83825e3(int _p0, int _p1)
		{
			Function.Call((Hash)0xF48664E9C83825E3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1f6ebd94680252ce(int _p0, int _p1)
		{
			Function.Call((Hash)0x1F6EBD94680252CE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe28f73212a813e82(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xE28F73212A813E82, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4d2f46d1b28d90fb(int _p0, int _p1)
		{
			Function.Call((Hash)0x4D2F46D1B28D90FB, _p0, _p1);
		}
		/// <summary>
		/// [SHOP_CAMERA_SUPPORT_START_NEW_ORBIT]
		/// p0: struct<32> /*256*/
		/// </summary>
		public static void StartCameraOrbit(int _p0)
		{
			Function.Call((Hash)0x65B205BF30C13DDB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x641092322a8852ab()
		{
			Function.Call((Hash)0x641092322A8852AB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdb382fe20c2da222(int _p0)
		{
			Function.Call((Hash)0xDB382FE20C2DA222, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2dd3149dc34a3f4c(int _p0)
		{
			Function.Call((Hash)0x2DD3149DC34A3F4C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FreezeGameplayCamThisFrame()
		{
			Function.Call((Hash)0x027CAB2C3AF27010);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3c486e334520579d()
		{
			Function.Call((Hash)0x3C486E334520579D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x41e452a3c580d1a7()
		{
			Function.Call((Hash)0x41E452A3C580D1A7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCinematicButtonActive(bool _p0)
		{
			Function.Call((Hash)0xB90411F480457A6C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCinematicCamRendering()
		{
			return Function.Call<bool>((Hash)0xBF7C780731AADBF8);
		}
		/// <summary>
		/// Old name: _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
		/// </summary>
		public static void DisableCinematicBonnetCameraThisUpdate()
		{
			Function.Call((Hash)0xA5929C2E57AC90D1);
		}
		/// <summary>
		/// Old name: _INVALIDATE_VEHICLE_IDLE_CAM
		/// </summary>
		public static void InvalidateCinematicVehicleIdleMode()
		{
			Function.Call((Hash)0x634F4A0562CF19B8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceCinematicRenderingThisUpdate(bool _p0)
		{
			Function.Call((Hash)0x702B75DC9D3EDE56, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9ac65a36d3c0c189(int _p0)
		{
			Function.Call((Hash)0x9AC65A36D3C0C189, _p0);
		}
		/// <summary>
		/// _IS_SCRIPTED_S*
		/// </summary>
		public static bool Hash_0x975f6ebb62632fe3()
		{
			return Function.Call<bool>((Hash)0x975F6EBB62632FE3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCinematicModeActive(bool _p0)
		{
			Function.Call((Hash)0xCE7A90B160F75046, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x1811a02277a9e49d()
		{
			return Function.Call<bool>((Hash)0x1811A02277A9E49D);
		}
		/// <summary>
		/// Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
		/// Params: targetPed = death cam focuses on it
		/// </summary>
		public static void ForceCinematicDeathCamOnPed(int _targetPed)
		{
			Function.Call((Hash)0xE3639DB78B3B5400, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x986f7a51ee3e1f92(int _p0, int _p1)
		{
			Function.Call((Hash)0x986F7A51EE3E1F92, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5b637d6f3b67716a(int _p0)
		{
			Function.Call((Hash)0x5B637D6F3B67716A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc252c0cc969af79a(int _p0)
		{
			Function.Call((Hash)0xC252C0CC969AF79A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe2bb2d6a9fe2ecde(int _p0)
		{
			Function.Call((Hash)0xE2BB2D6A9FE2ECDE, _p0);
		}
		/// <summary>
		/// Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
		/// _SET_P* - _SET_S*
		/// </summary>
		public static void SetStartCinematicDeathCam(bool _p0)
		{
			Function.Call((Hash)0x6E969927CF632608, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6072b7420a83a03f()
		{
			return Function.Call<int>((Hash)0x6072B7420A83A03F);
		}
		/// <summary>
		/// Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
		/// _IS_SC(REEN_)* (?)
		/// </summary>
		public static bool Hash_0x1204eb53a5fbc63d()
		{
			return Function.Call<bool>((Hash)0x1204EB53A5FBC63D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6519238858af5479(int _p0)
		{
			Function.Call((Hash)0x6519238858AF5479, _p0);
		}
		/// <summary>
		/// Creates Kill Cam for specified Ped Handle
		/// </summary>
		public static void CreateKillCam(int _ped)
		{
			Function.Call((Hash)0x2F994CC29CAA9D22, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCamPhotofxRunning()
		{
			return Function.Call<bool>((Hash)0xA14D5FE82BCB1D9E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6dfd37e586d4f44f()
		{
			return Function.Call<int>((Hash)0x6DFD37E586D4F44F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x80d7a3e39b120bc4()
		{
			return Function.Call<int>((Hash)0x80D7A3E39B120BC4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x63e5841a9264d016(int _p0)
		{
			Function.Call((Hash)0x63E5841A9264D016, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TriggerMissionFailedCam()
		{
			Function.Call((Hash)0x9A92C06ACBAF9731);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x16e9abdd34ddd931()
		{
			Function.Call((Hash)0x16E9ABDD34DDD931);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDeathFailCameraRunning()
		{
			return Function.Call<bool>((Hash)0x139EFB0A71DD9011);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7ce9dc58e3e4755f()
		{
			return Function.Call<int>((Hash)0x7CE9DC58E3E4755F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3b8e3ad9677ce12b(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x3B8E3AD9677CE12B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdf7f5be9150e47e4(int _p0)
		{
			Function.Call((Hash)0xDF7F5BE9150E47E4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb85c13e0bf1f2a1c(int _p0)
		{
			Function.Call((Hash)0xB85C13E0BF1F2A1C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x066167c63111d8cf(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x066167C63111D8CF, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// _DISABLE_*
		/// </summary>
		public static void Hash_0xa8ba2e0204d8486f()
		{
			Function.Call((Hash)0xA8BA2E0204D8486F);
		}
		/// <summary>
		/// Camera will be or is running
		/// </summary>
		public static void Hash_0xc3742f1fdf0a6824()
		{
			Function.Call((Hash)0xC3742F1FDF0A6824);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0ff7125f07deb84f(int _p0, int _p1)
		{
			Function.Call((Hash)0x0FF7125F07DEB84F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6cab0ba160b168d2()
		{
			Function.Call((Hash)0x6CAB0BA160B168D2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void LoadCinematicCamLocation(string _locationDictName)
		{
			Function.Call((Hash)0x1B3C2D961F5FC0E1, _locationDictName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnloadCinematicCameraLocation(string _dictionaryName)
		{
			Function.Call((Hash)0x2412216FCC7B4E3E, _dictionaryName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xaa235e2f2c09e952(string _sLocationDictName)
		{
			return Function.Call<bool>((Hash)0xAA235E2F2C09E952, _sLocationDictName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x595550376b7ea230(int _p0)
		{
			return Function.Call<int>((Hash)0x595550376B7EA230, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x465f04f68ad38197(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x465F04F68AD38197, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xea113bf9b0c0c5d7(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xEA113BF9B0C0C5D7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CinematicLocationTriggerScriptedShotEvent2(string _dictionary, string _shotName, int _duration)
		{
			Function.Call((Hash)0xBC016635D6A73B31, _dictionary, _shotName, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CinematicLocationTriggerScriptedShotEvent(string _dictionary, string _shotName, string _cameraName, int _p3)
		{
			Function.Call((Hash)0x02389579A53C3276, _dictionary, _shotName, _cameraName, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa54d643d0773eb65(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xA54D643D0773EB65, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CinematicLocationStopScriptedShotEvent(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x6D4D25C2137FF511, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xc3aebb276825a359(string _dictionary, string _shotName, int _duration)
		{
			return Function.Call<bool>((Hash)0xC3AEBB276825A359, _dictionary, _shotName, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x1d931b7cc0ee3956(string _dictionary, string _shotName, string _cameraName)
		{
			return Function.Call<bool>((Hash)0x1D931B7CC0EE3956, _dictionary, _shotName, _cameraName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CinematicLocationSetLocationAndRotation(string _name, float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ)
		{
			Function.Call((Hash)0x0E94C95EC3185FA9, _name, _x, _y, _z, _rotX, _rotY, _rotZ);
		}
		/// <summary>
		/// Only used in R* Script fm_mission_controller
		/// </summary>
		public static void CinematicLocationOverrideTargetEntityThisUpdate(string _name, int _entity)
		{
			Function.Call((Hash)0x0B0F914459731F60, _name, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void LoadCameraDataDict(string _cameraDictionary)
		{
			Function.Call((Hash)0x6A4D224FC7643941, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnloadCameraDataDict(string _cameraDictionary)
		{
			Function.Call((Hash)0x798BE43C9393632B, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCamDataDictLoaded(string _cameraDictionary)
		{
			return Function.Call<bool>((Hash)0xDD0B7C5AE58F721D, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc285fd21294a1c49(int _p0)
		{
			return Function.Call<int>((Hash)0xC285FD21294A1C49, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CamCreate(string _cameraDictionary)
		{
			Function.Call((Hash)0xB8B207C34285E978, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CamDestroy(string _cameraDictionary)
		{
			Function.Call((Hash)0x0A5A4F1979ABB40E, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCameraAvailable(string _cameraDictionary)
		{
			return Function.Call<bool>((Hash)0x927B810E43E99932, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4138ee36bc3dc0a7(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x4138EE36BC3DC0A7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfeb8646818294c75(int _p0, int _p1)
		{
			Function.Call((Hash)0xFEB8646818294C75, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x29e6655df3590b0d(int _p0)
		{
			Function.Call((Hash)0x29E6655DF3590B0D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xac77757c05de9e5a(string _cameraDictionary)
		{
			Function.Call((Hash)0xAC77757C05DE9E5A, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8e036b41c37d0e5f(int _p0)
		{
			Function.Call((Hash)0x8E036B41C37D0E5F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1d9f72dd4fd9a9d7(int _p0)
		{
			Function.Call((Hash)0x1D9F72DD4FD9A9D7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CamCreate2(string _cameraDictionary)
		{
			Function.Call((Hash)0x7B0279170961A73F, _cameraDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x728491fb3dffef99(int _p0)
		{
			Function.Call((Hash)0x728491FB3DFFEF99, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x14c4a49e36c29e49()
		{
			return Function.Call<int>((Hash)0x14C4A49E36C29E49);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf824530b612fe0ce()
		{
			return Function.Call<int>((Hash)0xF824530B612FE0CE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xef9a3132a0aa6b19()
		{
			return Function.Call<int>((Hash)0xEF9A3132A0AA6B19);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5060fa977cea4455()
		{
			return Function.Call<int>((Hash)0x5060FA977CEA4455);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPhotoModeFocalLength()
		{
			return Function.Call<float>((Hash)0x2533BAFFBE737E54);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPhotoModeFocusDistance()
		{
			return Function.Call<float>((Hash)0x18FC740FFDCD7454);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPhotoModeDof()
		{
			return Function.Call<float>((Hash)0x4653A741D17F2CD0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2ab7c81b3f70570c()
		{
			return Function.Call<int>((Hash)0x2AB7C81B3F70570C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8505e05fc8822843(int _p0)
		{
			Function.Call((Hash)0x8505E05FC8822843, _p0);
		}
		// :##################: //
		// : namespace: CLOCK : //
		// :##################: //
		/// <summary>
		/// SET_CLOCK_TIME(12, 34, 56);
		/// </summary>
		public static void SetClockTime(int _hour, int _minute, int _second)
		{
			Function.Call((Hash)0x3A52C59FFB2DEED8, _hour, _minute, _second);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PauseClock(bool _toggle, int _unused)
		{
			Function.Call((Hash)0x4D1A590C92BF377E, _toggle, _unused);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PauseClockThisFrame(bool _toggle)
		{
			Function.Call((Hash)0x568D998A9FF96774, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AdvanceClockTimeTo(int _hour, int _minute, int _second)
		{
			Function.Call((Hash)0x0184750AE88D0B1D, _hour, _minute, _second);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddToClockTime(int _hours, int _minutes, int _seconds)
		{
			Function.Call((Hash)0xAB7C251C7701D336, _hours, _minutes, _seconds);
		}
		/// <summary>
		/// Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
		/// </summary>
		public static int GetClockHours()
		{
			return Function.Call<int>((Hash)0xC82CF208C2B19199);
		}
		/// <summary>
		/// Gets the current ingame clock minute.
		/// </summary>
		public static int GetClockMinutes()
		{
			return Function.Call<int>((Hash)0x4E162231B823DBBF);
		}
		/// <summary>
		/// Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
		/// </summary>
		public static int GetClockSeconds()
		{
			return Function.Call<int>((Hash)0xB6101ABE62B5F080);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMillisecondsPerGameMinute(int _ms)
		{
			Function.Call((Hash)0x04EEDB3848DACF68, _ms);
		}
		/// <summary>
		/// Base year is 1898.
		/// </summary>
		public static int GetSecondsSinceBaseYear()
		{
			return Function.Call<int>((Hash)0x78FD8BE812E436B2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetClockDate(int _day, int _month, int _year)
		{
			Function.Call((Hash)0x02AD3092562941E2, _day, _month, _year);
		}
		/// <summary>
		/// Gets the current day of the week.
		/// 
		/// 0: Sunday
		/// 1: Monday
		/// 2: Tuesday
		/// 3: Wednesday
		/// 4: Thursday
		/// 5: Friday
		/// 6: Saturday
		/// </summary>
		public static int GetClockDayOfWeek()
		{
			return Function.Call<int>((Hash)0x4DD02D4C7FB30076);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetClockDayOfMonth()
		{
			return Function.Call<int>((Hash)0xDF2FD796C54480A5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetClockMonth()
		{
			return Function.Call<int>((Hash)0x2D44E8FC79EAB1AC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetClockYear()
		{
			return Function.Call<int>((Hash)0xE136DCA28C4A48BA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMillisecondsPerGameMinute()
		{
			return Function.Call<int>((Hash)0xE4CB8D126501EC52);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetPosixTime(int _year, int _month, int _day, int _hour, int _minute, int _second)
		{
			Function.Call((Hash)0x90338AD4A784E455, _year, _month, _day, _hour, _minute, _second);
		}
		/// <summary>
		/// Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
		/// </summary>
		public static void GetPosixTimeStruct(int _outTime)
		{
			Function.Call((Hash)0x86A68E84E5884951, _outTime);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddTimeToDateTime(int _inDateTime, int _timeToAdd, int _outDateTime)
		{
			Function.Call((Hash)0x28EEACE9B43D9597, _inDateTime, _timeToAdd, _outDateTime);
		}
		// :#######################: //
		// : namespace: COLLECTION : //
		// :#######################: //
		/// <summary>
		/// Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
		/// Returns collectableCategory Hash
		/// </summary>
		public static uint CollectableGetCategory(uint _collectableItem)
		{
			return Function.Call<uint>((Hash)0x725D52F21A5E9EF6, _collectableItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CollectableGetSubcategory(uint _collectableItem)
		{
			return Function.Call<uint>((Hash)0x6052B4DE6657684F, _collectableItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CollectableGetIpl(uint _collectableItem)
		{
			return Function.Call<uint>((Hash)0x922A79CD4A033B8B, _collectableItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 CollectableGetPlacementLocation(uint _collectableItem)
		{
			return Function.Call<Vector3>((Hash)0x1F1DD794908C2BFA, _collectableItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CollectableGetNumFound(uint _collectableItem)
		{
			return Function.Call<int>((Hash)0xF83D3DDA4D3C8169, _collectableItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CollectableGetNumTurnedIn(uint _collectableItem)
		{
			return Function.Call<int>((Hash)0x9A03F22AD446EEAC, _collectableItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CollectableIncrementNumFound(uint _collectableItem, int _amount)
		{
			Function.Call((Hash)0x3EA62E56F386C997, _collectableItem, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CollectableIncrementNumTurnedIn(uint _collectableItem, int _amount)
		{
			Function.Call((Hash)0x398FAB9C96A81924, _collectableItem, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CollectableCategoryGetNumCollectables(uint _collectableCategory, uint _collectableSubcategory)
		{
			return Function.Call<int>((Hash)0x62CAB7DB62EAD434, _collectableCategory, _collectableSubcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CollectableGetCollectableItemHash(int _index, uint _collectableCategory, uint _collectableSubcategory)
		{
			return Function.Call<uint>((Hash)0x126CBEBBA46693CF, _index, _collectableCategory, _collectableSubcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CollectableCategoryGetNumFound(uint _collectableCategory, uint _collectableSubcategory)
		{
			return Function.Call<int>((Hash)0x5461C821D00FE15A, _collectableCategory, _collectableSubcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CollectableCategoryGetNumTurnedIn(uint _collectableCategory, uint _collectableSubcategory)
		{
			return Function.Call<int>((Hash)0x3A65F4844913A047, _collectableCategory, _collectableSubcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x33825a7388a6b9f6(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0x33825A7388A6B9F6, _collectableCategory, _p1);
		}
		/// <summary>
		/// Returns p2 (index?) for 0xB9020EC89C07DF04
		/// </summary>
		public static int Hash_0x755901c7598b97bc(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0x755901C7598B97BC, _collectableCategory, _p1);
		}
		/// <summary>
		/// Accepts more hashes than 0xCC644BC1DD655269
		/// </summary>
		public static int Hash_0xb9020ec89c07df04(uint _collectableCategory, int _p1, int _index)
		{
			return Function.Call<int>((Hash)0xB9020EC89C07DF04, _collectableCategory, _p1, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xfc832b06127d8e99(uint _collectableCategory, int _p1)
		{
			return Function.Call<bool>((Hash)0xFC832B06127D8E99, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CollectableCategorySetHasReceivedList(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x0B6D275D2F242E17, _p0, _p1, _p2);
		}
		/// <summary>
		/// Params: collectableCategory = WEEKLY_COLLECTABLES
		/// </summary>
		public static bool Hash_0x6bab7aced1017204(uint _collectableCategory, int _p1)
		{
			return Function.Call<bool>((Hash)0x6BAB7ACED1017204, _collectableCategory, _p1);
		}
		/// <summary>
		/// Params: collectableCategory = WEEKLY_COLLECTABLES
		/// </summary>
		public static bool Hash_0x61befba3ce7a3bc8(uint _collectableCategory, int _p1)
		{
			return Function.Call<bool>((Hash)0x61BEFBA3CE7A3BC8, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc4ac39719c1bb559(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0xC4AC39719C1BB559, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x93f2e7b5db85657b(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x93F2E7B5DB85657B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CollectableGetCategoryItemSetBuyAward(uint _collectableCategory, uint _p1)
		{
			return Function.Call<uint>((Hash)0xCC644BC1DD655269, _collectableCategory, _p1);
		}
		/// <summary>
		/// Params: collectableCategory = WEEKLY_COLLECTABLES
		/// </summary>
		public static uint Hash_0x9adee485726025d4(uint _collectableCategory)
		{
			return Function.Call<uint>((Hash)0x9ADEE485726025D4, _collectableCategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd1806fb3eded6d11(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0xD1806FB3EDED6D11, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3fd91f1a148a0468(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0x3FD91F1A148A0468, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc3ca424e1f12ed0c(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0xC3CA424E1F12ED0C, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CollectableCategoryGetToastTextureName(uint _collectableCategory, uint _collectableSubcategory)
		{
			return Function.Call<uint>((Hash)0xD52D20B0C76BB26D, _collectableCategory, _collectableSubcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CollectableCategoryGetToastTextureDictionary(uint _collectableCategory, uint _collectableSubcategory)
		{
			return Function.Call<uint>((Hash)0x13AAECDA43318BFE, _collectableCategory, _collectableSubcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd297f68928a58130(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0xD297F68928A58130, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x775fa1fc87666847(uint _collectableCategory, int _p1)
		{
			return Function.Call<int>((Hash)0x775FA1FC87666847, _collectableCategory, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xec3959e9950bf56b(int _p0)
		{
			return Function.Call<int>((Hash)0xEC3959E9950BF56B, _p0);
		}
		// :######################: //
		// : namespace: COMPANION : //
		// :######################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd730281e496621fb(int _ped, uint _p1)
		{
			Function.Call((Hash)0xD730281E496621FB, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbf6583e926d13890(int _p0, int _p1)
		{
			Function.Call((Hash)0xBF6583E926D13890, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0a8fd91ede7b328a(int _p0, int _p1)
		{
			Function.Call((Hash)0x0A8FD91EDE7B328A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x991e3346d788f20f(int _p0, int _p1)
		{
			Function.Call((Hash)0x991E3346D788F20F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xce27824b5968b79a(int _p0, int _p1)
		{
			Function.Call((Hash)0xCE27824B5968B79A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf06cbb8ccca823c0(int _p0, int _p1)
		{
			Function.Call((Hash)0xF06CBB8CCCA823C0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2917e634206b9e17(int _ped, int _p1)
		{
			Function.Call((Hash)0x2917E634206B9E17, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd428c3f92fc3f6f8(int _ped, string _p1)
		{
			Function.Call((Hash)0xD428C3F92FC3F6F8, _ped, _p1);
		}
		/// <summary>
		/// Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
		/// </summary>
		public static void Hash_0xdeb369f6ad168c58(int _ped, int _p1)
		{
			Function.Call((Hash)0xDEB369F6AD168C58, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1740e3dee0ae4d27(int _ped, int _p1)
		{
			Function.Call((Hash)0x1740E3DEE0AE4D27, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0de02da3c0f66955(int _p0, int _p1)
		{
			Function.Call((Hash)0x0DE02DA3C0F66955, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0f1cd8ca9e65d5f6(int _groupId, uint _p1)
		{
			Function.Call((Hash)0x0F1CD8CA9E65D5F6, _groupId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb7e0590c86e1711f(int _p0)
		{
			return Function.Call<int>((Hash)0xB7E0590C86E1711F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa079ff7cfb9ac8bd(int _p0, int _p1)
		{
			Function.Call((Hash)0xA079FF7CFB9AC8BD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x61bda07407754a5c(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x61BDA07407754A5C, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd55a871e1ce3481b(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xD55A871E1CE3481B, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0c6a00dae896614c(int _p0, int _p1)
		{
			Function.Call((Hash)0x0C6A00DAE896614C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8fb98b719aa0075a(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x8FB98B719AA0075A, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9c902084f48d2e6c(int _p0)
		{
			Function.Call((Hash)0x9C902084F48D2E6C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd747979c053efa7a(int _p0)
		{
			Function.Call((Hash)0xD747979C053EFA7A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3caad93fa5b9579a(int _volume, int _p1, int _p2)
		{
			Function.Call((Hash)0x3CAAD93FA5B9579A, _volume, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7274f84b1501b523(int _p0)
		{
			Function.Call((Hash)0x7274F84B1501B523, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x722fbe08ef5b87bd(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x722FBE08EF5B87BD, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ActivateCompanionAnalysis(int _groupId)
		{
			Function.Call((Hash)0xCBD9EC60495C728C, _groupId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeactivateCompanionAnalysis(int _groupId)
		{
			Function.Call((Hash)0x72B7F65F11FC8896, _groupId);
		}
		// :#######################: //
		// : namespace: COMPENDIUM : //
		// :#######################: //
		/// <summary>
		/// _COMPENDIUM_GET_*
		/// </summary>
		public static int Hash_0x725d52f21a5e9e22(uint _category)
		{
			return Function.Call<int>((Hash)0x725D52F21A5E9E22, _category);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetNumOfEntriesInCategory(uint _category)
		{
			return Function.Call<int>((Hash)0x729D52F61A5A9E22, _category);
		}
		/// <summary>
		/// _COMPENDIUM_GET_*
		/// </summary>
		public static int Hash_0x729d52461aea9e22(uint _category)
		{
			return Function.Call<int>((Hash)0x729D52461AEA9E22, _category);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CompendiumGetShortDescriptionFromPed(int _ped)
		{
			return Function.Call<uint>((Hash)0x6C5E5D48E48B4C65, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CompendiumGetSubcategoryPedIsIn(uint _category, int _ped)
		{
			return Function.Call<uint>((Hash)0x9B657550DF55EC96, _category, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CompendiumGetSubcategoryHashFromAnimalType(uint _category, uint _animalType)
		{
			return Function.Call<uint>((Hash)0xCD278B6BFBDBDC22, _category, _animalType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetNumEntriesInSubcategory(uint _category, uint _subcategory)
		{
			return Function.Call<int>((Hash)0xF58A0C0E086E8E36, _category, _subcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetEntryByIndexInSubcategory(uint _category, uint _subcategory, int _count)
		{
			return Function.Call<int>((Hash)0x5CEB63B2E3D9895F, _category, _subcategory, _count);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetEntryByPedIndex(uint _category, int _ped)
		{
			return Function.Call<int>((Hash)0x1CFA0219D8E1CF25, _category, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetEntryByStatItem(uint _category, uint _animalType)
		{
			return Function.Call<int>((Hash)0x66EC938394D76C85, _category, _animalType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetSubcategoryToastAppId(uint _category, uint _subcategory)
		{
			return Function.Call<int>((Hash)0x2BF30D9D4D680112, _category, _subcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CompendiumGetMapDiscoverableFromStatItem(uint _animalStatItem, float _x, float _y, float _z)
		{
			return Function.Call<uint>((Hash)0x729D54121A5E9E20, _animalStatItem, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumAnimalObservedByStatName(uint _animalType, bool _disableCompendiumToast)
		{
			Function.Call((Hash)0x725D52F26A5E9E10, _animalType, _disableCompendiumToast);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CompendiumWasAnimalObserved(int _ped)
		{
			return Function.Call<bool>((Hash)0x23B5E9C5160BC04F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumAnimalSetDiscovered(int _compendiumEntry)
		{
			Function.Call((Hash)0x67F35C7C9F2BDCFE, _compendiumEntry);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumGetStudyAwardId(int _ped)
		{
			return Function.Call<int>((Hash)0x9F678782720349E4, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumAnimalGetSampleInventoryItem(int _compendiumEntry)
		{
			return Function.Call<int>((Hash)0x4E4ACAE1C671A9DA, _compendiumEntry);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CompendiumAnimalHasSample(int _compendiumEntry)
		{
			return Function.Call<bool>((Hash)0x6FC24625E4FCAC27, _compendiumEntry);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CompendiumAnimalHasStamp(int _compendiumEntry)
		{
			return Function.Call<bool>((Hash)0xBCF569FC32FFF456, _compendiumEntry);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string CompendiumGetSubcategorySampleToastTitle(uint _category, uint _subcategory)
		{
			return Function.Call<string>((Hash)0x5E50C67EB60951E6, _category, _subcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string CompendiumGetSubcategorySampleToastDescProgress(uint _category, uint _subcategory)
		{
			return Function.Call<string>((Hash)0x82BFB5B367957699, _category, _subcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string CompendiumGetSubcategorySampleToastDescComplete(uint _category, uint _subcategory)
		{
			return Function.Call<string>((Hash)0x59D4D68CDB82427C, _category, _subcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumFishCaught(int _ped, uint _category)
		{
			Function.Call((Hash)0x725D52F21A5E9E00, _ped, _category);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompendiumFishGetLureSuitabilityByStatItem(uint _animalType, uint _baitType)
		{
			return Function.Call<int>((Hash)0x725D52F21A5E9E81, _animalType, _baitType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumGangCampFound(int _p0, int _p1)
		{
			Function.Call((Hash)0x725D52F21A5E9E03, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumGangAmbushSurvived(int _p0)
		{
			Function.Call((Hash)0x725D52F21A5E9E04, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumGangEncountered(int _p0)
		{
			Function.Call((Hash)0x725D52F21A5E9E05, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumGangBountyCaptured(int _p0)
		{
			Function.Call((Hash)0x725D52F21A5E9E06, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumGangMemberKilled(int _p0)
		{
			Function.Call((Hash)0x725D52F21A5E9E07, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumGangHideoutFound(int _p0, int _p1)
		{
			Function.Call((Hash)0x725D52F21A5E9E08, _p0, _p1);
		}
		/// <summary>
		/// herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
		/// Vector3: Player Location
		/// </summary>
		public static void CompendiumHerbPicked(uint _herbType, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x725D52F21A5E9E09, _herbType, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CompendiumHorseBonding(int _ped, int _bondingLevel)
		{
			Function.Call((Hash)0x725D52F21A5E9E50, _ped, _bondingLevel);
		}
		/// <summary>
		/// NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
		/// </summary>
		public static void CompendiumHorseWildBroken(int _ped)
		{
			Function.Call((Hash)0x725852D21A2E9E50, _ped);
		}
		/// <summary>
		/// Only gets called if bSetObserved is true and animalType is matching
		/// </summary>
		public static void CompendiumHorseObserved(int _ped, bool _disableCompendiumToast)
		{
			Function.Call((Hash)0x725D58F2125E5E50, _ped, _disableCompendiumToast);
		}
		// :#####################: //
		// : namespace: CRASHLOG : //
		// :#####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0fd3ecf9d0c8655f(string _p0)
		{
			Function.Call((Hash)0x0FD3ECF9D0C8655F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xca0bac376c541978(string _p0)
		{
			Function.Call((Hash)0xCA0BAC376C541978, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3a66f1963b223f61(string _p0)
		{
			return Function.Call<bool>((Hash)0x3A66F1963B223F61, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x7c680ff55617f82f()
		{
			return Function.Call<bool>((Hash)0x7C680FF55617F82F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd8e3d22aa4f0e0a5(string _p0)
		{
			return Function.Call<bool>((Hash)0xD8E3D22AA4F0E0A5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa67f0b039d9cd513(bool _p0)
		{
			return Function.Call<bool>((Hash)0xA67F0B039D9CD513, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xe72e234b30da7b7a(int _p0)
		{
			return Function.Call<bool>((Hash)0xE72E234B30DA7B7A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x87f005c969ef1563(float _p0)
		{
			return Function.Call<bool>((Hash)0x87F005C969EF1563, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x23ccab8f40b9cbee(float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0x23CCAB8F40B9CBEE, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xf0d545c1eead614a()
		{
			return Function.Call<bool>((Hash)0xF0D545C1EEAD614A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x33c1d63e55fa4284(string _p0)
		{
			return Function.Call<bool>((Hash)0x33C1D63E55FA4284, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4e42ca5bcd45444a()
		{
			Function.Call((Hash)0x4E42CA5BCD45444A);
		}
		/// <summary>
		/// unused = true
		/// </summary>
		public static void Hash_0xda05310ea94dc8c6(string _p0, string _p1)
		{
			Function.Call((Hash)0xDA05310EA94DC8C6, _p0, _p1);
		}
		// :#################: //
		// : namespace: CREW : //
		// :#################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkFindGamersInCrew(int _crewId)
		{
			return Function.Call<bool>((Hash)0xE532D6811B3A4D2A, _crewId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanServiceIsValid()
		{
			return Function.Call<bool>((Hash)0x579CCED0265D4896);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanPlayerIsActive(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0xB124B57F571D8F18, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanPlayerGetDesc(int _clanDesc, int _bufferSize, int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0xEEE6EACBE8874FBA, _clanDesc, _bufferSize, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkClanGetLocalMembershipsCount()
		{
			return Function.Call<int>((Hash)0x1F471B79ACC90BEF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanGetMembershipDesc(int _memberDesc, int _p1)
		{
			return Function.Call<bool>((Hash)0x48DE78AF2C8885B8, _memberDesc, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x58d378af2c8765b7(int _p0)
		{
			return Function.Call<bool>((Hash)0x58D378AF2C8765B7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanInvitePlayer(int _p0)
		{
			return Function.Call<bool>((Hash)0xC685B014CE3D988B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAcceptClanInvite(int _crewInviteIndex)
		{
			return Function.Call<bool>((Hash)0x8E2143144B8E188D, _crewInviteIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanRequestEmblem(int _p0)
		{
			return Function.Call<bool>((Hash)0x13518FF1C6B28938, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkClanIsEmblemReady(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xA134777FF7F33331, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClanReleaseEmblem(int _p0)
		{
			Function.Call((Hash)0x113E6E3E50E286B0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPrimaryClanDataClear()
		{
			return Function.Call<int>((Hash)0x9AA46BADAD0E27ED);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetPrimaryClanDataStart(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xCE86D8191B762107, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPrimaryClanDataPending()
		{
			return Function.Call<int>((Hash)0xB5074DB804E28CE7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPrimaryClanDataSuccess()
		{
			return Function.Call<int>((Hash)0x5B4F04F19376A0BA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetPrimaryClanDataNew(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xC080FF658B2E41DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkClanSetActive(int _p0)
		{
			return Function.Call<int>((Hash)0xC080FF658B2E51DA, _p0);
		}
		// :########################: //
		// : namespace: DATABINDING : //
		// :########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingGetDataContainerFromPath(string _p0)
		{
			return Function.Call<int>((Hash)0x0C827D175F1292F2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingGetDataContainerFromChildIndex(uint _entryId, int _p1)
		{
			return Function.Call<int>((Hash)0x0C827D175F1292F3, _entryId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd7db94ab78e8ebe4(string _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0xD7DB94AB78E8EBE4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataContainerFromPath(string _p0, string _p1)
		{
			return Function.Call<int>((Hash)0x0C827D175F1292F4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataContainerByHash(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x98BB14345BB68257, _p0, _p1);
		}
		/// <summary>
		/// Returns entryId Hash
		/// </summary>
		public static uint DatabindingAddDataContainer(uint _entryId, string _p1)
		{
			return Function.Call<uint>((Hash)0xEB4F9A3537EEABCD, _entryId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataBoolFromPath(string _p0, string _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x37BB86A751148A6A, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataBoolByHash(int _p0, uint _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0xBC95D3AE2ECA70D6, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataBool(int _p0, string _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x58BAA5F635DA2FF4, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataIntByHash(int _p0, uint _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x267F9527F4350ADE, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataInt(int _p0, string _p1, uint _p2)
		{
			return Function.Call<int>((Hash)0x307A3247C5457BDE, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataFloat(int _p0, string _p1, float _p2)
		{
			return Function.Call<int>((Hash)0x5154228273ADB9A6, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataHashByHash(int _p0, uint _p1, uint _p2)
		{
			return Function.Call<int>((Hash)0x8E173DFB041993C6, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataHash(int _p0, string _p1, uint _p2)
		{
			return Function.Call<int>((Hash)0x8538F1205D60ECA6, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataStringFromPath(string _p0, string _p1, string _p2)
		{
			return Function.Call<int>((Hash)0xA381DE86EE170C4A, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataStringByHash(int _p0, uint _p1, string _p2)
		{
			return Function.Call<int>((Hash)0xEAD09E76E22630C3, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataString(int _p0, string _p1, string _p2)
		{
			return Function.Call<int>((Hash)0x617FCA1C5652BBAD, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataGangId(int _p0, string _p1, int _gangId)
		{
			return Function.Call<int>((Hash)0x7D0F2014DB28DD00, _p0, _p1, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddDataPosseId(int _p0, string _p1, int _posseId)
		{
			return Function.Call<int>((Hash)0x7D0F2014DB28DD01, _p0, _p1, _posseId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x294af5323f44b053(int _p0, string _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x294AF5323F44B053, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddUiItemListFromPath(string _p0, string _p1)
		{
			return Function.Call<int>((Hash)0xDB5B9A474148F699, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddUiItemListByHash(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x3C7799283325181B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddUiItemList(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0xFE74FA57E0CE6824, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingInsertUiItemToListFromContextStringAlias(int _p0, int _index, string _p2, int _p3)
		{
			Function.Call((Hash)0x5859E970794D92F3, _p0, _index, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingInsertUiItemToListFromContextHashAlias(int _p0, int _index, uint _p2, int _p3)
		{
			Function.Call((Hash)0xEE97A05C05F16E41, _p0, _index, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingInsertUiItemToListFromPathStringAlias(int _p0, int _p1, string _p2, int _p3)
		{
			Function.Call((Hash)0x5740774F608E4FC8, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6318fb3be37e11b3(uint _entryId, int _index)
		{
			Function.Call((Hash)0x6318FB3BE37E11B3, _entryId, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingRemoveBindingArrayItemByDataContextId(int _p0, uint _entryId)
		{
			Function.Call((Hash)0xF68B1726EAF7B285, _p0, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingClearBindingArray(uint _entryId)
		{
			Function.Call((Hash)0xA1F15C1D03DF802D, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingGetItemContextByIndex(int _p0, int _index)
		{
			return Function.Call<int>((Hash)0xE96D7F9FEFCC105F, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingSetTemplatedUiItemListSize(int _p0, int _p1)
		{
			Function.Call((Hash)0xFE74FA57E0CE6825, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingSetTemplatedUiItemHashAlias(int _p0, int _p1, uint _p2)
		{
			Function.Call((Hash)0x0AE7138D0541F2DE, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd48993a61938c64d(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0xD48993A61938C64D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddHashArray(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0x52F5F08278EA5D75, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingAddStringArray(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0x1B23E0627BDBFE85, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1919d59e60fd516e(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x1919D59E60FD516E, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7fc60c94c83c5cd7(int _p0, uint _p1, int _p2)
		{
			Function.Call((Hash)0x7FC60C94C83C5CD7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc900cec8a172375b(int _p0, string _p1, int _p2)
		{
			Function.Call((Hash)0xC900CEC8A172375B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x02b21b6beedd83cc(uint _entryId, int _p1)
		{
			return Function.Call<int>((Hash)0x02B21B6BEEDD83CC, _entryId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf47e33f8d2523825(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xF47E33F8D2523825, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3bf0767cf33fcc88(uint _entryId)
		{
			Function.Call((Hash)0x3BF0767CF33FCC88, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingGetArrayCount(uint _entryId)
		{
			return Function.Call<int>((Hash)0xD23F5DE04FE717E2, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataScriptVariables(int _p0, int _p1)
		{
			Function.Call((Hash)0xAB888B4B91046771, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataBool(int _p0, bool _p1)
		{
			Function.Call((Hash)0xAB888B4B91046770, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataBoolFromParent(int _p0, string _p1, bool _p2)
		{
			Function.Call((Hash)0xBDFE546E4C2D0E21, _p0, _p1, _p2);
		}
		/// <summary>
		/// _DATABINDING_WRITE_DATA_*
		/// </summary>
		public static void Hash_0xbfc83da249befcc9(int _p0, uint _p1, int _p2)
		{
			Function.Call((Hash)0xBFC83DA249BEFCC9, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataInt(int _p0, int _p1)
		{
			Function.Call((Hash)0x335C3F6B3766B8D9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataIntFromParent(int _p0, string _p1, int _p2)
		{
			Function.Call((Hash)0x9EFA98238BA08FC4, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataIntFromParentByHash(int _p0, uint _p1, int _p2)
		{
			Function.Call((Hash)0x9D6E10A41D6ED6EC, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataFloat(int _p0, float _p1)
		{
			Function.Call((Hash)0xDF504BECEB15DA93, _p0, _p1);
		}
		/// <summary>
		/// _DATABINDING_WRITE_DATA_*
		/// </summary>
		public static void Hash_0x05ac9e1e02975afb(int _p0, string _p1, float _p2)
		{
			Function.Call((Hash)0x05AC9E1E02975AFB, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataHashString(int _p0, uint _p1)
		{
			Function.Call((Hash)0xACDEF586BD71B1FD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataHashStringFromParent(int _p0, string _p1, uint _p2)
		{
			Function.Call((Hash)0x0971F04E1EAA7AE8, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataHashStringFromParentByHash(int _p0, uint _p1, int _p2)
		{
			Function.Call((Hash)0x20209529689E0953, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataString(int _p0, string _p1)
		{
			Function.Call((Hash)0xE1BD342F2872AEE9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteStringFromParent(int _p0, string _p1, string _p2)
		{
			Function.Call((Hash)0x4FF713B2F17A391E, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteStringFromHash(int _p0, uint _p1, string _p2)
		{
			Function.Call((Hash)0xA3BD6FF95E713EE5, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataGangId(int _p0, string _p1, int _gangId)
		{
			Function.Call((Hash)0xC70041408E16BE2D, _p0, _p1, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingWriteDataPosseId(int _p0, string _p1, int _posseId)
		{
			Function.Call((Hash)0xC70041408E16BE2E, _p0, _p1, _posseId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x422179c7f6ad9304(int _p0, int _gamerHandle)
		{
			Function.Call((Hash)0x422179C7F6AD9304, _p0, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataBool(int _p0)
		{
			return Function.Call<int>((Hash)0x5EEFBD4B6D7CD6EB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataBoolFromParent(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0xA8EDE09FE07BD77F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataBoolFromParentByHash(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x4CDC3FDDFAE07EB3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadInt(int _p0)
		{
			return Function.Call<int>((Hash)0x570784D782597512, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataIntFromParent(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0xFFC566A4801F6B40, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataIntFromParentByHash(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0xB5F668B648EC0970, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float DatabindingReadFloat(uint _entryId)
		{
			return Function.Call<float>((Hash)0x5FE444EB67C70AD4, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint DatabindingReadHash(uint _entryId)
		{
			return Function.Call<uint>((Hash)0x81D7183E7A8ECA72, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataHashStringFromParent(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0x9B535990B01B62DE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataHashStringFromParentByHash(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x1F43BC25A119B252, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataString(int _p0)
		{
			return Function.Call<int>((Hash)0x3D290B5FFA7C5151, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatabindingReadDataStringFromParent(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0x6323AD277C4A2AFB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6329c34bee5bff4b(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x6329C34BEE5BFF4B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe6aab897120492d6(int _p0, string _p1)
		{
			return Function.Call<int>((Hash)0xE6AAB897120492D6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe6aab897120492d7(int _p0, string _p1, int _p2)
		{
			Function.Call((Hash)0xE6AAB897120492D7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb138ca787f3dd858(int _p0, string _p1, int _p2)
		{
			Function.Call((Hash)0xB138CA787F3DD858, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatabindingIsEntryValid(uint _entryId)
		{
			return Function.Call<bool>((Hash)0x1E7130793AAAAB8D, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatabindingRemoveDataEntry(uint _entryId)
		{
			Function.Call((Hash)0x0AE9938D0541F2DA, _entryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VirtualCollectionSetSize(int _p0, int _size)
		{
			Function.Call((Hash)0x9DCE9B01A93B58BC, _p0, _size);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VirtualCollectionSetInterestIndex(int _p0, int _interestIndex)
		{
			Function.Call((Hash)0x49A8447533308BCF, _p0, _interestIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VirtualCollectionItemAdd(int _p0, int _index, uint _p2, int _p3)
		{
			Function.Call((Hash)0x6DCBF187221CF73D, _p0, _index, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VirtualCollectionReset(int _p0)
		{
			Function.Call((Hash)0x09D95666ED2B5F60, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int VirtualCollectionExists(int _p0)
		{
			return Function.Call<int>((Hash)0x37963B56755BFB35, _p0);
		}
		// :#####################: //
		// : namespace: DATAFILE : //
		// :#####################: //
		/// <summary>
		/// Adds the given request ID to the watch list.
		/// </summary>
		public static void DatafileWatchRequestId(int _id)
		{
			Function.Call((Hash)0xA5834834CA8FD7FC, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatafileHasLoadedFileData(int _p0)
		{
			return Function.Call<bool>((Hash)0x17279C820464CEE0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatafileHasValidFileData(int _p0)
		{
			return Function.Call<bool>((Hash)0xE60100389E50EADE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatafileSelectActiveFile(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x46102A0989AD80B5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatafileDeleteRequestedFile(int _p0)
		{
			return Function.Call<bool>((Hash)0x604B8ED1A482F9DF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Ugc2SetPlayerData(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xE79C70E77E0973C7, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
		/// </summary>
		public static int DatafileUgcSelectData(int _ugcRequestId, int _index, int _p2)
		{
			return Function.Call<int>((Hash)0x790EC421078F5C4E, _ugcRequestId, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatafileCreate(int _index)
		{
			Function.Call((Hash)0x56B7291FB953DD51, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatafileDelete(int _index)
		{
			Function.Call((Hash)0x9FB90EEDEA9F2D5C, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string DatafileGetFileDict(int _index)
		{
			return Function.Call<string>((Hash)0xBBD8CF823CAE557C, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatadictIsDictValid(int _p0)
		{
			return Function.Call<bool>((Hash)0x4607D57C5F7D332A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatadictIsArrayValid(int _p0)
		{
			return Function.Call<bool>((Hash)0xB04B69CF277D15C0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DatadictSetInt(int _objectData, string _key, int _value)
		{
			Function.Call((Hash)0x26FDF5E99AA2F3E9, _objectData, _key, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DatadictGetBool(int _objectData, string _key)
		{
			return Function.Call<bool>((Hash)0x175E915A486EE548, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatadictGetInt(int _objectData, string _key)
		{
			return Function.Call<int>((Hash)0x9D896A3B87D96E2B, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float DatadictGetFloat(int _objectData, string _key)
		{
			return Function.Call<float>((Hash)0x814643ECA258ADF5, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string DatadictGetString(int _objectData, string _key)
		{
			return Function.Call<string>((Hash)0xE37B38C0B4E95DFA, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 DatadictGetVector(int _objectData, string _key)
		{
			return Function.Call<Vector3>((Hash)0xE459C941431E0FFA, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatadictGetDict(int _objectData, string _key)
		{
			return Function.Call<int>((Hash)0x4D7A30130F46AC9C, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DatadictGetArray(int _objectData, string _key)
		{
			return Function.Call<int>((Hash)0x1B5447CF18544B18, _objectData, _key);
		}
		/// <summary>
		/// Types:
		/// 1 = Boolean
		/// 2 = Integer
		/// 3 = Float
		/// 4 = String
		/// 5 = Vector3
		/// 6 = Object
		/// 7 = Array
		/// </summary>
		public static int DatadictGetType(int _objectData, string _key)
		{
			return Function.Call<int>((Hash)0x92E11E3CA4C7CDF0, _objectData, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbc0df006a4952c68(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xBC0DF006A4952C68, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9f130129ebc31b34(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x9F130129EBC31B34, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x277251c161b4c3f4(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x277251C161B4C3F4, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1c65cc931c0f946f(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x1C65CC931C0F946F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7681b677400c7071(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x7681B677400C7071, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DataarrayGetBool(int _arrayData, int _arrayIndex)
		{
			return Function.Call<bool>((Hash)0xAB1231D2DE52F2D3, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DataarrayGetInt(int _arrayData, int _arrayIndex)
		{
			return Function.Call<int>((Hash)0x96DEA500B6EBBE53, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float DataarrayGetFloat(int _arrayData, int _arrayIndex)
		{
			return Function.Call<float>((Hash)0xA9D003CF419CB81E, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string DataarrayGetString(int _arrayData, int _arrayIndex)
		{
			return Function.Call<string>((Hash)0xB6790A8FF80F889F, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 DataarrayGetVector(int _arrayData, int _arrayIndex)
		{
			return Function.Call<Vector3>((Hash)0x850DA2750DA14E9A, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DataarrayGetDict(int _arrayData, int _arrayIndex)
		{
			return Function.Call<int>((Hash)0xA010655985853485, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DataarrayGetCount(int _arrayData)
		{
			return Function.Call<int>((Hash)0x6A885BF69239E539, _arrayData);
		}
		/// <summary>
		/// Types:
		/// 1 = Boolean
		/// 2 = Integer
		/// 3 = Float
		/// 4 = String
		/// 5 = Vector3
		/// 6 = Object
		/// 7 = Array
		/// </summary>
		public static int DataarrayGetType(int _arrayData, int _arrayIndex)
		{
			return Function.Call<int>((Hash)0x151DAFE6B3B9888F, _arrayData, _arrayIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4f9e3ed7617123ac(int _p0)
		{
			return Function.Call<int>((Hash)0x4F9E3ED7617123AC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xca56dd6ab7a39f64(int _p0)
		{
			return Function.Call<int>((Hash)0xCA56DD6AB7A39F64, _p0);
		}
		/// <summary>
		/// LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
		/// Returns parseddata script fileHandle
		/// </summary>
		public static int ParseddataLoadFileHash(uint _p0)
		{
			return Function.Call<int>((Hash)0xD97D8D905F1562F2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ParseddataUnloadFile(int _fileHandle)
		{
			Function.Call((Hash)0x129567F0C05F81B9, _fileHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ParseddataIsFileValid(int _fileHandle)
		{
			return Function.Call<bool>((Hash)0x7907969497EA92F5, _fileHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ParseddataIsFileLoaded(int _fileHandle)
		{
			return Function.Call<bool>((Hash)0x603AC35FD4602C76, _fileHandle);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x3168ba5d6dece323()
		{
			Function.Call((Hash)0x3168BA5D6DECE323);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ParseddataRegisterQuery(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xAE156A747C39A741, _p0, _p1, _p2);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_DATA_NODE_INDEX
		/// </summary>
		public static bool ParseddataRqFilloutNode(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x83C3ED532B6E5D07, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ParseddataRqGetNumNodes(int _p0)
		{
			return Function.Call<int>((Hash)0xDF01B1F7A886B42D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe13634bb6baf0734(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xE13634BB6BAF0734, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ParseddataGetNumChildren(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x6BEB168D5195E7AB, _p0, _p1);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_HASH
		/// </summary>
		public static bool ParseddataRqFilloutHash(uint _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xFBFF3FF2F5E80C0B, _p0, _p1);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_STRING
		/// </summary>
		public static bool ParseddataRqFilloutString63(string _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x08EAF8E9F2EB7B2E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ParseddataRqFilloutString127(string _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x951327435DC5164B, _p0, _p1);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_VECTOR
		/// </summary>
		public static bool ParseddataRqFilloutVector(Vector3 _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x06FBF89B12DA279C, _p0, _p1);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_FLOAT
		/// </summary>
		public static bool ParseddataRqFilloutFloat(float _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x7F034FC3E891B57A, _p0, _p1);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_INT
		/// </summary>
		public static bool ParseddataRqFilloutInt(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xEF44ACC657352A35, _p0, _p1);
		}
		/// <summary>
		/// Old name: _DATAFILE_GET_BOOL
		/// </summary>
		public static bool ParseddataRqFilloutBool(bool _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x0D9138F3F8261DF7, _p0, _p1);
		}
		/// <summary>
		/// Opens file.
		/// </summary>
		public static void ParseddataGetFile(int _p0)
		{
			Function.Call((Hash)0x91DED5DD64BB2691, _p0);
		}
		/// <summary>
		/// Returns false when there are no entries.
		/// </summary>
		public static bool ParseddataGetEntries(int _p0)
		{
			return Function.Call<bool>((Hash)0xED4413CEE1BF142C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb2b42607f7867576(int _p0, int _p1, uint _p2)
		{
			return Function.Call<bool>((Hash)0xB2B42607F7867576, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x52fc26d2d2fc2987(int _p0, int _p1, uint _p2)
		{
			return Function.Call<bool>((Hash)0x52FC26D2D2FC2987, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ParseddataGetSection(int _p0, int _p1, uint _section)
		{
			return Function.Call<bool>((Hash)0x44B3A36933AC009C, _p0, _p1, _section);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa63cd20f19b961ab(int _p0, int _p1, uint _p2)
		{
			return Function.Call<bool>((Hash)0xA63CD20F19B961AB, _p0, _p1, _p2);
		}
		// :##################: //
		// : namespace: DEBUG : //
		// :##################: //
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int Hash_0xacf9cb705befa8cb()
		{
			return Function.Call<int>((Hash)0xACF9CB705BEFA8CB);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int Hash_0xa8d970d8a72640a6()
		{
			return Function.Call<int>((Hash)0xA8D970D8A72640A6);
		}
		/// <summary>
		/// Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
		/// 
		/// Old name: _GET_GAME_BUILD_STRING
		/// </summary>
		public static string GetGameVersionName()
		{
			return Function.Call<string>((Hash)0x05A5F662AD35C573);
		}
		// :######################: //
		// : namespace: DECORATOR : //
		// :######################: //
		/// <summary>
		/// This function sets metadata of type bool to specified entity.
		/// 
		/// </summary>
		public static bool DecorSetBool(int _entity, string _propertyName, bool _value)
		{
			return Function.Call<bool>((Hash)0xFE26E4609B1C3772, _entity, _propertyName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DecorSetFloat(int _entity, string _propertyName, float _value)
		{
			return Function.Call<bool>((Hash)0x238F8B0C1C7FE834, _entity, _propertyName, _value);
		}
		/// <summary>
		/// Sets property to int.
		/// </summary>
		public static bool DecorSetInt(int _entity, string _propertyName, int _value)
		{
			return Function.Call<bool>((Hash)0xE88F4D7F52A6090F, _entity, _propertyName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DecorSetUint8(int _entity, string _propertyName, int _value)
		{
			return Function.Call<bool>((Hash)0x4BDC83150D43772D, _entity, _propertyName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DecorSetString(int _entity, string _propertyName, string _value)
		{
			return Function.Call<bool>((Hash)0x0671C1A3FF7AFDFC, _entity, _propertyName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DecorGetBool(int _entity, string _propertyName)
		{
			return Function.Call<bool>((Hash)0xDEF3F1B071ABB197, _entity, _propertyName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float DecorGetFloat(int _entity, string _propertyName)
		{
			return Function.Call<float>((Hash)0xE5FF70CD842CA9D4, _entity, _propertyName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DecorGetInt(int _entity, string _propertyName)
		{
			return Function.Call<int>((Hash)0x44DB62727762FD9B, _entity, _propertyName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DecorGetUint8(int _entity, string _propertyName)
		{
			return Function.Call<int>((Hash)0xB1682B2443F0540B, _entity, _propertyName);
		}
		/// <summary>
		/// Returns whether or not the specified property is set for the entity.
		/// </summary>
		public static bool DecorExistOn(int _entity, string _propertyName)
		{
			return Function.Call<bool>((Hash)0xD9D1CDBF3464DCDF, _entity, _propertyName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DecorRemove(int _entity, string _propertyName)
		{
			return Function.Call<bool>((Hash)0x2BA7F5877A088A1D, _entity, _propertyName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DecorRemoveAll(int _entity)
		{
			return Function.Call<bool>((Hash)0x88942780E0ADEA42, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DecorRegister(string _propertyName, int _type)
		{
			Function.Call((Hash)0x0B253D644E3C36B3, _propertyName, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DecorRegister2(string _propertyName, int _type, bool _p2)
		{
			Function.Call((Hash)0x4587374F88B7F6C2, _propertyName, _type, _p2);
		}
		/// <summary>
		/// type: see DECOR_REGISTER
		/// </summary>
		public static bool DecorIsRegisteredAsType(string _propertyName, int _type)
		{
			return Function.Call<bool>((Hash)0x72355278C069F272, _propertyName, _type);
		}
		// :################: //
		// : namespace: DLC : //
		// :################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDlcPresent(uint _dlcHash)
		{
			return Function.Call<bool>((Hash)0x2763DC12BBE2BB6F, _dlcHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsLoadingScreenActive()
		{
			return Function.Call<bool>((Hash)0x71D4BF5890659B0C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetSpecialEditionCoreStatsBonusEnabled()
		{
			return Function.Call<bool>((Hash)0xA16B4FBA7887D7BA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetSpecialEditionCashCampBonusEnabled()
		{
			return Function.Call<bool>((Hash)0x1DB9D61E505AE3FC);
		}
		// :###################: //
		// : namespace: ENTITY : //
		// :###################: //
		/// <summary>
		/// Checks if the Entity exists
		/// </summary>
		public static bool DoesEntityExist(int _entity)
		{
			return Function.Call<bool>((Hash)0xD42BD6EB2E0F1677, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesEntityBelongToThisScript(int _entity, bool _p1)
		{
			return Function.Call<bool>((Hash)0x622B1980CBE13332, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesEntityHaveDrawable(int _entity)
		{
			return Function.Call<bool>((Hash)0x20487F0DA9AF164A, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesEntityHavePhysics(int _entity)
		{
			return Function.Call<bool>((Hash)0xA512B3F1B2A0B51C, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenDamagedByAnyObject(int _entity)
		{
			return Function.Call<bool>((Hash)0x73BB763880CD23A6, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenDamagedByAnyPed(int _entity)
		{
			return Function.Call<bool>((Hash)0x9934E9C42D52D87E, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenDamagedByAnyVehicle(int _entity)
		{
			return Function.Call<bool>((Hash)0x695D7C26DE65C423, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenDamagedByEntity(int _entity1, int _entity2, bool _p2, bool _p3)
		{
			return Function.Call<bool>((Hash)0x7B6E7BEC1143AC86, _entity1, _entity2, _p2, _p3);
		}
		/// <summary>
		/// Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
		/// </summary>
		public static bool Hash_0x3ec28da1ffac9ddd(int _entity1, int _entity2, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x3EC28DA1FFAC9DDD, _entity1, _entity2, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xaf72ec7e1b54539b(int _entity)
		{
			return Function.Call<int>((Hash)0xAF72EC7E1B54539B, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityClearLosToEntity(int _entity1, int _entity2, int _traceType)
		{
			return Function.Call<bool>((Hash)0xFCDFF7B72D23A1AC, _entity1, _entity2, _traceType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityClearLosToCoord(int _entity, float _x, float _y, float _z, int _flags)
		{
			return Function.Call<bool>((Hash)0x0C9DBF48C6BA6E4C, _entity, _x, _y, _z, _flags);
		}
		/// <summary>
		/// Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
		/// </summary>
		public static bool HasEntityClearLosToEntityInFront(int _entity1, int _entity2, int _traceType)
		{
			return Function.Call<bool>((Hash)0xE88F19660651D566, _entity1, _entity2, _traceType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityCollidedWithAnything(int _entity)
		{
			return Function.Call<bool>((Hash)0xDF18751EC74F90FF, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0x6d58167f62238284(int _vehicle)
		{
			return Function.Call<float>((Hash)0x6D58167F62238284, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0xdfc2b226d56d85f6(int _p0, int _p1)
		{
			return Function.Call<float>((Hash)0xDFC2B226D56D85F6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAnimDuration(string _animDict, string _animName)
		{
			return Function.Call<float>((Hash)0x9FFAF4940A54CC09, _animDict, _animName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityAttachedTo(int _entity)
		{
			return Function.Call<int>((Hash)0x56D713888A566481, _entity);
		}
		/// <summary>
		/// Gets the current coordinates for a specified entity.
		/// `entity` = The entity to get the coordinates from.
		/// `alive` = Unused by the game, potentially used by debug builds in order to assert whether or not an entity was alive.
		/// 
		/// If entity is a ped and it's in a vehicle or on a mount the coords of that entity are returned. Set 'realCoords' to true when you need the true ped coords.
		/// </summary>
		public static Vector3 GetEntityCoords(int _entity, bool _alive, bool _realCoords)
		{
			return Function.Call<Vector3>((Hash)0xA86D5F069399F44D, _entity, _alive, _realCoords);
		}
		/// <summary>
		/// Gets the entity's forward vector.
		/// </summary>
		public static Vector3 GetEntityForwardVector(int _entity)
		{
			return Function.Call<Vector3>((Hash)0x2412D9C05BB09B97, _entity);
		}
		/// <summary>
		/// Gets the X-component of the entity's forward vector.
		/// </summary>
		public static float GetEntityForwardX(int _entity)
		{
			return Function.Call<float>((Hash)0xDB0954E9960F6457, _entity);
		}
		/// <summary>
		/// Gets the Y-component of the entity's forward vector.
		/// </summary>
		public static float GetEntityForwardY(int _entity)
		{
			return Function.Call<float>((Hash)0x9A5C073ECBDA7EE7, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x935a30aa88fb1014(int _p0)
		{
			return Function.Call<Vector3>((Hash)0x935A30AA88FB1014, _p0);
		}
		/// <summary>
		/// Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
		/// </summary>
		public static float GetEntityHeading(int _entity)
		{
			return Function.Call<float>((Hash)0xC230DD956E2F5507, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityHealth(int _entity)
		{
			return Function.Call<int>((Hash)0x82368787EA73C0F7, _entity);
		}
		/// <summary>
		/// Returns (CUR_HEALTH / MAX_HEALTH)
		/// </summary>
		public static float GetEntityHealthFloat(int _entity)
		{
			return Function.Call<float>((Hash)0x96C638784DB4C815, _entity);
		}
		/// <summary>
		/// Alters entity's health by 'amount'. Can be negative (to drain health).
		/// In the scripts entity2 and weaponHash are unused (zero).
		/// </summary>
		public static bool ChangeEntityHealth(int _entity, float _amount, int _entity2, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x835F131E7DC8F97A, _entity, _amount, _entity2, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityMaxHealth(int _entity, bool _p1)
		{
			return Function.Call<int>((Hash)0x15D757606D170C3C, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityMaxHealth(int _entity, int _value)
		{
			Function.Call((Hash)0x166E7CF68597D8B5, _entity, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetEntityHeight(int _entity, float _X, float _Y, float _Z, bool _atTop, bool _inWorldCoords)
		{
			return Function.Call<float>((Hash)0x296DEBC84474B375, _entity, _X, _Y, _Z, _atTop, _inWorldCoords);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetEntityHeightAboveGround(int _entity)
		{
			return Function.Call<float>((Hash)0x0D3B5BAEA08F63E9, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetEntityWorldPositionOfDimensions(int _entity, Vector3 _minimum, Vector3 _maximum)
		{
			Function.Call((Hash)0xF3FDA9A617A15145, _entity, _minimum, _maximum);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetEntityMatrix(int _entity, Vector3 _rightVector, Vector3 _forwardVector, Vector3 _upVector, Vector3 _position)
		{
			Function.Call((Hash)0x3A9B1120AF13FBF2, _entity, _rightVector, _forwardVector, _upVector, _position);
		}
		/// <summary>
		/// Returns the model hash from the entity
		/// </summary>
		public static uint GetEntityModel(int _entity)
		{
			return Function.Call<uint>((Hash)0xDA76A9F39210D365, _entity);
		}
		/// <summary>
		/// Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
		/// Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
		/// </summary>
		public static uint GetPedAnimalType(int _ped)
		{
			return Function.Call<uint>((Hash)0x964000D355219FC0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsAnimal(int _entity)
		{
			return Function.Call<bool>((Hash)0x9A100F1CF4546629, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsBird(int _entity)
		{
			return Function.Call<bool>((Hash)0xC346A546612C49A9, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsPredator(int _entity)
		{
			return Function.Call<bool>((Hash)0x5594AFE9DE0C01B7, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetOffsetFromEntityGivenWorldCoords(int _entity, float _posX, float _posY, float _posZ)
		{
			return Function.Call<Vector3>((Hash)0x497C6B1A2C9AE69C, _entity, _posX, _posY, _posZ);
		}
		/// <summary>
		/// Offset values are relative to the entity.
		/// 
		/// x = left/right
		/// y = forward/backward
		/// z = up/down
		/// </summary>
		public static Vector3 GetOffsetFromEntityInWorldCoords(int _entity, float _offsetX, float _offsetY, float _offsetZ)
		{
			return Function.Call<Vector3>((Hash)0x1899F328B0E12848, _entity, _offsetX, _offsetY, _offsetZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetEntityPitch(int _entity)
		{
			return Function.Call<float>((Hash)0xEF355ABEFF7F5005, _entity);
		}
		/// <summary>
		/// Displays the current ROLL axis of the entity [-180.0000/180.0000+]
		/// (Sideways Roll) such as a vehicle tipped on its side
		/// </summary>
		public static float GetEntityRoll(int _entity)
		{
			return Function.Call<float>((Hash)0xBF966536FA8B6879, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetEntityRotation(int _entity, int _rotationOrder)
		{
			return Function.Call<Vector3>((Hash)0xE09CAF86C32CB48F, _entity, _rotationOrder);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetEntityScript(int _entity, int _argStruct)
		{
			return Function.Call<uint>((Hash)0x2A08A32B6D49906F, _entity, _argStruct);
		}
		/// <summary>
		/// Result is in meters per second (m/s)
		/// </summary>
		public static float GetEntitySpeed(int _entity)
		{
			return Function.Call<float>((Hash)0xFB6BA510A533DF81, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetEntitySpeedVector(int _entity, bool _relative)
		{
			return Function.Call<Vector3>((Hash)0xF2DB09816A419DC5, _entity, _relative);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetEntityUprightValue(int _entity)
		{
			return Function.Call<float>((Hash)0x56398BE65160C3BE, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetEntityVelocity(int _entity, int _p1)
		{
			return Function.Call<Vector3>((Hash)0x4805D2B1D8CF94A9, _entity, _p1);
		}
		/// <summary>
		/// Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
		/// </summary>
		public static int GetObjectIndexFromEntityIndex(int _entity)
		{
			return Function.Call<int>((Hash)0x280BBE5601EAA983, _entity);
		}
		/// <summary>
		/// Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
		/// </summary>
		public static int GetPedIndexFromEntityIndex(int _entity)
		{
			return Function.Call<int>((Hash)0x0F16D042BD640EA3, _entity);
		}
		/// <summary>
		/// Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
		/// </summary>
		public static int GetVehicleIndexFromEntityIndex(int _entity)
		{
			return Function.Call<int>((Hash)0xDF1E5AAC561AFC59, _entity);
		}
		/// <summary>
		/// Returns the coordinates of an entity-bone.
		/// https://github.com/femga/rdr3_discoveries/tree/master/boneNames
		/// </summary>
		public static Vector3 GetWorldPositionOfEntityBone(int _entity, int _boneIndex)
		{
			return Function.Call<Vector3>((Hash)0x82CFA50E34681CA5, _entity, _boneIndex);
		}
		/// <summary>
		/// Attaches scenario to bone with an offset
		/// _GET_I* - _GET_M*
		/// </summary>
		public static Vector3 Hash_0x5e214112806591ea(int _entity, int _boneIndex)
		{
			return Function.Call<Vector3>((Hash)0x5E214112806591EA, _entity, _boneIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x3ab3a77672f6473f(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<Vector3>((Hash)0x3AB3A77672F6473F, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNearestPlayerToEntity(int _entity, int _playerPedToIgnore, int _flags)
		{
			return Function.Call<int>((Hash)0x990E294FC387FB88, _entity, _playerPedToIgnore, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNearestPlayerToEntityOnTeam(int _entity, int _team, int _playerPedToIgnore, int _flags)
		{
			return Function.Call<int>((Hash)0xB2C30C3B4AFF718C, _entity, _team, _playerPedToIgnore, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNearestParticipantToEntity(int _entity)
		{
			return Function.Call<int>((Hash)0x6888A43C35A5F630, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PlaceEntityOnGroundProperly(int _entity, bool _p1)
		{
			return Function.Call<bool>((Hash)0x9587913B9E772D29, _entity, _p1);
		}
		/// <summary>
		/// Returns:
		/// 0 = no entity
		/// 1 = ped
		/// 2 = vehicle
		/// 3 = object
		/// </summary>
		public static int GetEntityType(int _entity)
		{
			return Function.Call<int>((Hash)0x97F696ACA466B4E0, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityPopulationType(int _entity)
		{
			return Function.Call<int>((Hash)0xADE28862B6D7B85B, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnEntity(int _handle)
		{
			return Function.Call<bool>((Hash)0x27CFF3E5A286D3DF, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAPed(int _entity)
		{
			return Function.Call<bool>((Hash)0xCF8176912DDA4EA5, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAMissionEntity(int _entity)
		{
			return Function.Call<bool>((Hash)0x138190F64DB4BBD1, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAVehicle(int _entity)
		{
			return Function.Call<bool>((Hash)0xC3D96AF45FCCEC4C, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAnObject(int _entity)
		{
			return Function.Call<bool>((Hash)0x0A27A546A375FDEF, _entity);
		}
		/// <summary>
		/// Checks if entity is within x/y/zSize distance of x/y/z. 
		/// 
		/// Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
		/// </summary>
		public static bool IsEntityAtCoord(int _entity, float _xPos, float _yPos, float _zPos, float _xSize, float _ySize, float _zSize, bool _p7, bool _p8, int _p9)
		{
			return Function.Call<bool>((Hash)0x5E58342602E94718, _entity, _xPos, _yPos, _zPos, _xSize, _ySize, _zSize, _p7, _p8, _p9);
		}
		/// <summary>
		/// Checks if entity1 is within the box defined by x/y/zSize of entity2.
		/// 
		/// Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
		/// </summary>
		public static bool IsEntityAtEntity(int _entity1, int _entity2, float _xSize, float _ySize, float _zSize, bool _p5, bool _p6, int _p7)
		{
			return Function.Call<bool>((Hash)0xC057F02B837A27F6, _entity1, _entity2, _xSize, _ySize, _zSize, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAttached(int _entity)
		{
			return Function.Call<bool>((Hash)0xEE6AD63ABF59C0B7, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAttachedToAnyObject(int _entity)
		{
			return Function.Call<bool>((Hash)0x306C1F6178F01AB3, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAttachedToAnyPed(int _entity)
		{
			return Function.Call<bool>((Hash)0xC841153DED2CA89A, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAttachedToAnyVehicle(int _entity)
		{
			return Function.Call<bool>((Hash)0x12DF6E0D2E736749, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityAttachedToEntity(int _from, int _to)
		{
			return Function.Call<bool>((Hash)0x154A3C529497053E, _from, _to);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityOwnedByPersistenceSystem(int _entity)
		{
			return Function.Call<bool>((Hash)0xA7E51B53309EAC97, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityDead(int _entity)
		{
			return Function.Call<bool>((Hash)0x7D5B1F88E7504BBA, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityInAir(int _entity, int _p1)
		{
			return Function.Call<bool>((Hash)0x886E37EC497200B6, _entity, _p1);
		}
		/// <summary>
		/// Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
		/// 
		/// Angle is measured in degrees.
		/// </summary>
		public static bool IsEntityInAngledArea(int _entity, float _originX, float _originY, float _originZ, float _edgeX, float _edgeY, float _edgeZ, float _angle, bool _p8, bool _p9, int _p10)
		{
			return Function.Call<bool>((Hash)0xD3151E53134595E5, _entity, _originX, _originY, _originZ, _edgeX, _edgeY, _edgeZ, _angle, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityInArea(int _entity, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _p7, bool _p8, int _p9)
		{
			return Function.Call<bool>((Hash)0x0C2634C40A16193E, _entity, _x1, _y1, _z1, _x2, _y2, _z2, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityInVolume(int _entity, int _volume, bool _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x5A5526BC09C06623, _entity, _volume, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityInWater(int _entity)
		{
			return Function.Call<bool>((Hash)0xDDE5C125AC446723, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityUnderwater(int _entity, bool _p1)
		{
			return Function.Call<bool>((Hash)0xD4E5C1E93C466127, _entity, _p1);
		}
		/// <summary>
		/// Get how much of the entity is submerged.  1.0f is whole entity.
		/// </summary>
		public static float GetEntitySubmergedLevel(int _entity)
		{
			return Function.Call<float>((Hash)0x4A77C3F73FD9E831, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityRequiresMoreExpensiveRiverCheck(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x850C940EE3E7B8B5, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7a49d40de437bc8d(int _p0, int _p1)
		{
			Function.Call((Hash)0x7A49D40DE437BC8D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x978aa2323ed32209(int _p0, int _p1)
		{
			Function.Call((Hash)0x978AA2323ED32209, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x002aac783ed323ed(int _p0, int _p1)
		{
			Function.Call((Hash)0x002AAC783ED323ED, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x007aac783ed323ed(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x007AAC783ED323ED, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityOnScreen(int _entity)
		{
			return Function.Call<bool>((Hash)0x613C15D5D8DB781F, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityPlayingAnim(int _entity, string _animDict, string _animName, int _taskFlag)
		{
			return Function.Call<bool>((Hash)0xDEE49D5CA6C49148, _entity, _animDict, _animName, _taskFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0b7cb1300cbfe19c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x0B7CB1300CBFE19C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityStatic(int _entity)
		{
			return Function.Call<bool>((Hash)0x86468ADFA0F6B861, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityTouchingEntity(int _entity, int _targetEntity)
		{
			return Function.Call<bool>((Hash)0x9A2304A64C3C8423, _entity, _targetEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityTouchingModel(int _entity, uint _modelHash)
		{
			return Function.Call<bool>((Hash)0x2AE3EBC8DEB9768B, _entity, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityUpright(int _entity, float _angle)
		{
			return Function.Call<bool>((Hash)0xF6F6AFD8D4FB2658, _entity, _angle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityUpsidedown(int _entity)
		{
			return Function.Call<bool>((Hash)0x109DE3DA41AAD94A, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityVisible(int _entity)
		{
			return Function.Call<bool>((Hash)0xFFC96ECB7FA404CA, _entity);
		}
		/// <summary>
		/// SET_ENTITY_LO*
		/// </summary>
		public static void Hash_0xff9965c47fa404da(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xFF9965C47FA404DA, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityVisibleToScript(int _entity)
		{
			return Function.Call<bool>((Hash)0xF213C724E77F321A, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3f08c6163a4ab1d6(int _p0)
		{
			Function.Call((Hash)0x3F08C6163A4AB1D6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0db41d59e0f1502b(int _p0)
		{
			Function.Call((Hash)0x0DB41D59E0F1502B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTrackedEntityVisible(int _entity)
		{
			return Function.Call<bool>((Hash)0xC8CCDB712FBCBA92, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityOccluded(int _entity)
		{
			return Function.Call<bool>((Hash)0x140188E884645624, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WouldEntityBeOccluded(uint _entityModelHash, float _x, float _y, float _z, bool _p4)
		{
			return Function.Call<bool>((Hash)0x3546FAB293FF2981, _entityModelHash, _x, _y, _z, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityWaitingForWorldCollision(int _entity)
		{
			return Function.Call<bool>((Hash)0x5E1CC2E8DC3111DD, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityOnTrainTrack(int _entity)
		{
			return Function.Call<bool>((Hash)0x857ACB0AB4BD0D55, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcdb682bb47c02f0a(int _entity, uint _p1)
		{
			Function.Call((Hash)0xCDB682BB47C02F0A, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe19035eb65ab2932(int _p0, int _p1)
		{
			Function.Call((Hash)0xE19035EB65AB2932, _p0, _p1);
		}
		/// <summary>
		/// Sets the loot table an entity will carry. Returns true if loot table has been successfully set.
		/// </summary>
		public static bool Hash_0x8c03cd6b5e0e85e8(int _entity, uint _lootTable)
		{
			return Function.Call<bool>((Hash)0x8C03CD6B5E0E85E8, _entity, _lootTable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x1e804ea9b12030a4(int _entity, uint _p1)
		{
			return Function.Call<bool>((Hash)0x1E804EA9B12030A4, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa88e215ceb0435c0(int _mount, int _argStruct, uint _p2, int _p3, int _p4, bool _p5)
		{
			return Function.Call<bool>((Hash)0xA88E215CEB0435C0, _mount, _argStruct, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe31fc20319874cb3(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xE31FC20319874CB3, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x582f73acfe969571(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x582F73ACFE969571, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xba2a089e60ed1163(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0xBA2A089E60ED1163, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// enum eCarriableState
		/// {
		/// 	CARRIABLE_STATE_NONE,
		/// 	CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
		/// 	CARRIABLE_STATE_CARRIABLE_INTRO,
		/// 	CARRIABLE_STATE_CARRIABLE,
		/// 	CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
		/// 	CARRIABLE_STATE_CARRIED_BY_HUMAN,
		/// 	CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
		/// 	CARRIABLE_STATE_CARRIED_BY_MOUNT,
		/// 	CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
		/// 	CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
		/// 	CARRIABLE_STATE_BEING_CUT_FREE,
		/// 	CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
		/// 	CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
		/// };
		/// </summary>
		public static int GetCarriableEntityState(int _entity)
		{
			return Function.Call<int>((Hash)0x61914209C36EFDDB, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd46bf94c4c66fab0(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xD46BF94C4C66FAB0, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Valid indices: 0 - 3
		/// Index 1 always returns a `hogtied` config, doesn't matter the entity.
		/// It's for humans only and the ped must be resurrected first if it's dead.
		/// </summary>
		public static uint GetOptimalCarryConfig(int _entity, int _index)
		{
			return Function.Call<uint>((Hash)0x34F008A7E48C496B, _entity, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd21c7418c590bb40(int _p0)
		{
			return Function.Call<int>((Hash)0xD21C7418C590BB40, _p0);
		}
		/// <summary>
		/// Returns zero if the entity is not a carriable
		/// </summary>
		public static uint GetEntityCarryConfig(int _entity)
		{
			return Function.Call<uint>((Hash)0x0FD25587BB306C86, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsCarriableModel(uint _model)
		{
			return Function.Call<bool>((Hash)0x5AFFA9DDC87846F8, _model);
		}
		/// <summary>
		/// Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
		/// </summary>
		public static uint GetCarriableFromEntity(int _entity)
		{
			return Function.Call<uint>((Hash)0x31FEF6A20F00B963, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCarcassType(int _entity, uint _type)
		{
			Function.Call((Hash)0x399657ED871B3A6C, _entity, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2a77ef9bec8518f4(int _p0)
		{
			return Function.Call<int>((Hash)0x2A77EF9BEC8518F4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteCarriable(int _entity)
		{
			Function.Call((Hash)0x0D0DB2B6AF19A987, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityFullyLooted(int _entity)
		{
			return Function.Call<bool>((Hash)0x8DE41E9902E85756, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6bcf5f3d8ffe988d(int _entity, bool _p1)
		{
			Function.Call((Hash)0x6BCF5F3D8FFE988D, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xef2d9ed7ce684f08(int _p0)
		{
			return Function.Call<int>((Hash)0xEF2D9ED7CE684F08, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0ccefc6c2c95da2a(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x0CCEFC6C2C95DA2A, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Used when checking if ped is in water
		/// </summary>
		public static bool Hash_0x383f64263f946e45(int _p0, int _entity, int _p2, int _ped, int _p4, int _p5)
		{
			return Function.Call<bool>((Hash)0x383F64263F946E45, _p0, _entity, _p2, _ped, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8e10df0ffa63fb65(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x8E10DF0FFA63FB65, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// flagId: see _SET_ENTITY_CARRYING_FLAG
		/// </summary>
		public static bool GetEntityCarryingFlag(int _entity, int _flagId)
		{
			return Function.Call<bool>((Hash)0x808077647856DE62, _entity, _flagId);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
		/// flagId:
		/// enum eCarryingFlag
		/// {
		/// 	CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
		/// 	CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
		/// 	CARRYING_FLAG_CAN_BE_DROPPED = 4,
		/// 	CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
		/// 	CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
		/// 	CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
		/// 	CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
		/// 	CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
		/// 	CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
		/// 	CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
		/// 	CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
		/// 	CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
		/// 	CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
		/// };
		/// </summary>
		public static void SetEntityCarryingFlag(int _entity, int _flagId, bool _value)
		{
			Function.Call((Hash)0x18FF3110CF47115D, _entity, _flagId, _value);
		}
		/// <summary>
		/// Returns BOOL in ida
		/// </summary>
		public static void Hash_0xc3abcfbc7d74afa5(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0xC3ABCFBC7D74AFA5, _ped, _p1, _p2);
		}
		/// <summary>
		/// Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
		/// </summary>
		public static void Hash_0x371d179701d9c082(int _entity)
		{
			Function.Call((Hash)0x371D179701D9C082, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa48e4801debdf7e4(int _entity, bool _p1)
		{
			Function.Call((Hash)0xA48E4801DEBDF7E4, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsCarriablePelt(int _entity)
		{
			return Function.Call<bool>((Hash)0x255B6DB4E3AD3C3E, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf59fde7b4d31a630(int _p0)
		{
			return Function.Call<int>((Hash)0xF59FDE7B4D31A630, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x120376c23f019c6c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x120376C23F019C6C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5744562e973e33cd(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x5744562E973E33CD, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdd03fc2089ad093c(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xDD03FC2089AD093C, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb16c780c51e51e2b(int _p0)
		{
			return Function.Call<int>((Hash)0xB16C780C51E51E2B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xef259aa1e097e0ad(int _entity, int _p1)
		{
			Function.Call((Hash)0xEF259AA1E097E0AD, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbd94cecfb2d65119(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xBD94CECFB2D65119, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCustomPickupRadius(int _entity, float _radius)
		{
			Function.Call((Hash)0x482D17E45665DA44, _entity, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe75eea8db59a9f39(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xE75EEA8DB59A9F39, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x188736456d1dede6(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x188736456D1DEDE6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc6a1a3d63f122de7(int _p0, int _p1)
		{
			Function.Call((Hash)0xC6A1A3D63F122DE7, _p0, _p1);
		}
		/// <summary>
		/// p6/relative - makes the xyz force not relative to world coords, but to something else
		/// p7/highForce - setting false will make the force really low
		/// </summary>
		public static void ApplyForceToEntityCenterOfMass(int _entity, int _forceType, float _x, float _y, float _z, bool _p5, bool _isDirectionRel, bool _isForceRel, bool _p8)
		{
			Function.Call((Hash)0x31DA7CEC5334DB37, _entity, _forceType, _x, _y, _z, _p5, _isDirectionRel, _isForceRel, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ApplyForceToEntity(int _entity, int _forceFlags, float _x, float _y, float _z, float _offX, float _offY, float _offZ, int _boneIndex, bool _isDirectionRel, bool _ignoreUpVec, bool _isForceRel, bool _p12, bool _p13)
		{
			Function.Call((Hash)0xF15E8F5D333F09C4, _entity, _forceFlags, _x, _y, _z, _offX, _offY, _offZ, _boneIndex, _isDirectionRel, _ignoreUpVec, _isForceRel, _p12, _p13);
		}
		/// <summary>
		/// Attaches entity1 to bone (boneIndex) of entity2.
		/// 
		/// boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
		/// https://github.com/femga/rdr3_discoveries/tree/master/boneNames
		/// 
		/// useSoftPinning - if set to false attached entity will not detach when fixed
		/// collision - controls collision between the two entities (FALSE disables collision).
		/// isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
		/// vertexIndex - position of vertex
		/// fixedRot - if false it ignores entity vector
		/// </summary>
		public static void AttachEntityToEntity(int _entity1, int _entity2, int _boneIndex, float _xPos, float _yPos, float _zPos, float _xRot, float _yRot, float _zRot, bool _p9, bool _useSoftPinning, bool _collision, bool _isPed, int _vertexIndex, bool _fixedRot, bool _p15, bool _p16)
		{
			Function.Call((Hash)0x6B9BBD38AB0796DF, _entity1, _entity2, _boneIndex, _xPos, _yPos, _zPos, _xRot, _yRot, _zRot, _p9, _useSoftPinning, _collision, _isPed, _vertexIndex, _fixedRot, _p15, _p16);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachEntityToEntityPhysically(int _entity1, int _entity2, int _p2, int _boneIndex, float _offsetX, float _offsetY, float _offsetZ, float _p7, float _p8, float _p9, float _p10, float _p11, float _p12, float _p13, bool _p14, bool _p15, bool _p16, bool _p17, int _p18, bool _p19, float _p20, float _p21)
		{
			Function.Call((Hash)0xB629A43CA1643481, _entity1, _entity2, _p2, _boneIndex, _offsetX, _offsetY, _offsetZ, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15, _p16, _p17, _p18, _p19, _p20, _p21);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x445d7d8ea66e373e(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14, int _p15)
		{
			Function.Call((Hash)0x445D7D8EA66E373E, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x16908e859c3ab698(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x16908E859C3AB698, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityBoneIndexByName(int _entity, string _boneName)
		{
			return Function.Call<int>((Hash)0xBACA8FE9C76C124E, _entity, _boneName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearEntityLastDamageEntity(int _entity)
		{
			Function.Call((Hash)0xBB19AC7D4DCEFD0F, _entity);
		}
		/// <summary>
		/// Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
		/// </summary>
		public static void DeleteEntity(int _entity)
		{
			Function.Call((Hash)0x4CD38C78BD19A497, _entity);
		}
		/// <summary>
		/// Must be called from a background script, otherwise it will do nothing.
		/// </summary>
		public static void DeleteEntity2(int _entity)
		{
			Function.Call((Hash)0x5E94EA09E7207C16, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachEntity(int _entity, bool _p1, bool _collision)
		{
			Function.Call((Hash)0x64CDE9D6BF8ECAD3, _entity, _p1, _collision);
		}
		/// <summary>
		/// Getter for FREEZE_ENTITY_POSITION
		/// </summary>
		public static bool IsEntityFrozen(int _entity)
		{
			return Function.Call<bool>((Hash)0x083D497D57B7400F, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FreezeEntityPosition(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x7D9EFB7AD6B19754, _entity, _toggle);
		}
		/// <summary>
		/// Old name: _SET_ENTITY_CLEANUP_BY_ENGINE
		/// </summary>
		public static void SetEntityShouldFreezeWaitingOnCollision(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x740CB4F3F602C9F4, _entity, _toggle);
		}
		/// <summary>
		/// Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
		/// </summary>
		public static void SetEntityAsMissionEntity(int _entity, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xDC19C288082E586E, _entity, _p1, _p2);
		}
		/// <summary>
		/// Marks the specified entity (ped, vehicle or object) as no longer needed.
		/// Entities marked as no longer needed, will be deleted as the engine sees fit.
		/// </summary>
		public static void SetEntityAsNoLongerNeeded(int _entity)
		{
			Function.Call((Hash)0x4971D2F8162B9674, _entity);
		}
		/// <summary>
		/// This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
		/// </summary>
		public static void SetPedAsNoLongerNeeded(int _ped)
		{
			Function.Call((Hash)0x2595DD4236549CE3, _ped);
		}
		/// <summary>
		/// This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
		/// </summary>
		public static void SetVehicleAsNoLongerNeeded(int _vehicle)
		{
			Function.Call((Hash)0x629BFA74418D6239, _vehicle);
		}
		/// <summary>
		/// This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
		/// </summary>
		public static void SetObjectAsNoLongerNeeded(int _object)
		{
			Function.Call((Hash)0x3AE22DEB5BA5A3E6, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x20faee47427a4497()
		{
			Function.Call((Hash)0x20FAEE47427A4497);
		}
		/// <summary>
		/// Returns true if calling script owns specified entity
		/// </summary>
		public static bool DoesThreadOwnThisEntity(int _entity)
		{
			return Function.Call<bool>((Hash)0x88AD6CC10D8D35B2, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x56e0735d6273b227(int _p0, int _p1)
		{
			Function.Call((Hash)0x56E0735D6273B227, _p0, _p1);
		}
		/// <summary>
		/// SET_ENTITY_A*
		/// </summary>
		public static void Hash_0xc0edef16d90661ee(int _entity, float _p1)
		{
			Function.Call((Hash)0xC0EDEF16D90661EE, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0fd7d7c232876e72(int _p0)
		{
			Function.Call((Hash)0x0FD7D7C232876E72, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0939e773925c4719()
		{
			Function.Call((Hash)0x0939E773925C4719);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCanBeDamaged(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x0D06D522B90E861F, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetEntityCanBeDamaged(int _entity)
		{
			return Function.Call<bool>((Hash)0x75DF9E73F2F005FD, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCanBeDamagedByRelationshipGroup(int _entity, bool _bCanBeDamaged, uint _relGroup)
		{
			Function.Call((Hash)0x0EF1AFB18649E015, _entity, _bCanBeDamaged, _relGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff83af534156b399(int _p0, int _p1)
		{
			Function.Call((Hash)0xFF83AF534156B399, _p0, _p1);
		}
		/// <summary>
		/// Sets whether the entity can be targeted without being in line-of-sight.
		/// </summary>
		public static void SetEntityCanBeTargetedWithoutLos(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x6D09F32E284D0FB7, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetEntityCollisionDisabled(int _entity)
		{
			return Function.Call<bool>((Hash)0xAA2FADD30F45A9DA, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCollision(int _entity, bool _toggle, bool _keepPhysics)
		{
			Function.Call((Hash)0xF66F820909453B8C, _entity, _toggle, _keepPhysics);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCompletelyDisableCollision(int _entity, bool _toggle, bool _keepPhysics)
		{
			Function.Call((Hash)0xE0580EC84813875A, _entity, _toggle, _keepPhysics);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCoords(int _entity, float _xPos, float _yPos, float _zPos, bool _xAxis, bool _yAxis, bool _zAxis, bool _clearArea)
		{
			Function.Call((Hash)0x06843DA7060A026B, _entity, _xPos, _yPos, _zPos, _xAxis, _yAxis, _zAxis, _clearArea);
		}
		/// <summary>
		/// Axis - Invert Axis Flags
		/// </summary>
		public static void SetEntityCoordsNoOffset(int _entity, float _xPos, float _yPos, float _zPos, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			Function.Call((Hash)0x239A3351AC1DA385, _entity, _xPos, _yPos, _zPos, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityDynamic(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xFBFC4473F66CE344, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityHeading(int _entity, float _heading)
		{
			Function.Call((Hash)0xCF2B9C0645C4651B, _entity, _heading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCoordsAndHeading(int _entity, float _xPos, float _yPos, float _zPos, float _heading, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			Function.Call((Hash)0x203BEFFDBE12E96A, _entity, _xPos, _yPos, _zPos, _heading, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityCoordsAndHeadingNoOffset(int _entity, float _xPos, float _yPos, float _zPos, float _heading, bool _p5, bool _p6)
		{
			Function.Call((Hash)0x0918E3565C20F03C, _entity, _xPos, _yPos, _zPos, _heading, _p5, _p6);
		}
		/// <summary>
		/// Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
		/// </summary>
		public static void SetEntityHealth(int _entity, int _healthAmount, int _entityKilledBy)
		{
			Function.Call((Hash)0xAC2767ED8BDFAB15, _entity, _healthAmount, _entityKilledBy);
		}
		/// <summary>
		/// Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
		/// </summary>
		public static void SetEntityInvincible(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xA5C38736C426FCB8, _entity, _toggle);
		}
		/// <summary>
		/// SET_ENTITY_LO*
		/// </summary>
		public static void Hash_0xaf7f3099b9feb535(int _entity, float _p1, float _p2, float _p3)
		{
			Function.Call((Hash)0xAF7F3099B9FEB535, _entity, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityIsTargetPriority(int _entity, bool _p1, float _p2)
		{
			Function.Call((Hash)0x0A5D170C44CB2189, _entity, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb38a29ccd5447783(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xB38A29CCD5447783, _p0, _p1, _p2);
		}
		/// <summary>
		/// tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/_SET_ENTITY_THREAT_TIER/README.md
		/// </summary>
		public static void SetEntityThreatTier(int _entity, int _tier, bool _p2)
		{
			Function.Call((Hash)0x4B436BAC8CBE9B07, _entity, _tier, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityThreatTier(int _entity)
		{
			return Function.Call<int>((Hash)0xE12F56CB25D9CE23, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2d40bcbfe9305dea(int _p0, int _p1)
		{
			Function.Call((Hash)0x2D40BCBFE9305DEA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityLightsEnabled(int _entity, bool _enabled)
		{
			Function.Call((Hash)0xEBDC12861D079ABA, _entity, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityLoadCollisionFlag(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x9B9EE31AED48072E, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasCollisionLoadedAroundEntity(int _entity)
		{
			return Function.Call<bool>((Hash)0xBEB1600952B9CF5C, _entity);
		}
		/// <summary>
		/// Old name: _HAS_COLLISION_LOADED_AT_COORDS
		/// </summary>
		public static bool HasCollisionLoadedAroundPosition(float _xPos, float _yPos, float _zPos)
		{
			return Function.Call<bool>((Hash)0x6BFBDC46139C45AB, _xPos, _yPos, _zPos);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityOnlyDamagedByPlayer(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x473598683095D430, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityOnlyDamagedByRelationshipGroup(int _entity, bool _p1, uint _relationshipGroup)
		{
			Function.Call((Hash)0x6C1F6AA2F0ADD104, _entity, _p1, _relationshipGroup);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
		/// BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
		/// </summary>
		public static void SetEntityProofs(int _entity, int _proofsBitset, bool _specialFlag)
		{
			Function.Call((Hash)0xFAEE099C6F890BB8, _entity, _proofsBitset, _specialFlag);
		}
		/// <summary>
		/// Note: this native was removed in 1232 but added back in 1311
		/// </summary>
		public static int GetEntityProofs(int _entity)
		{
			return Function.Call<int>((Hash)0x6CF0DAD7FA1088EA, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityQuaternion(int _entity, float _x, float _y, float _z, float _w)
		{
			Function.Call((Hash)0x100E7007D13E3687, _entity, _x, _y, _z, _w);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityRotation(int _entity, float _pitch, float _roll, float _yaw, int _rotationOrder, bool _p5)
		{
			Function.Call((Hash)0x9CC8314DFEDE441E, _entity, _pitch, _roll, _yaw, _rotationOrder, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd45bb89b53fc0cfd(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xD45BB89B53FC0CFD, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityVisible(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x1794B4FCC84D812F, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x80fdeb3a9e9aa578(int _entity, bool _p1)
		{
			Function.Call((Hash)0x80FDEB3A9E9AA578, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9c6906ef8cb20c5f(int _entity)
		{
			Function.Call((Hash)0x9C6906EF8CB20C5F, _entity);
		}
		/// <summary>
		/// Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
		/// </summary>
		public static void SetEntityVelocity(int _entity, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x1C99BB7B6E96D16F, _entity, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityHasGravity(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x0CEDB728A1083FA7, _entity, _toggle);
		}
		/// <summary>
		/// LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
		/// </summary>
		public static void SetEntityLodDist(int _entity, int _value)
		{
			Function.Call((Hash)0x5FB407F0A7C877BF, _entity, _value);
		}
		/// <summary>
		/// Returns the LOD distance of an entity.
		/// </summary>
		public static int GetEntityLodDist(int _entity)
		{
			return Function.Call<int>((Hash)0xDF240D0C2A948683, _entity);
		}
		/// <summary>
		/// skin - everything alpha except skin
		/// Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
		/// </summary>
		public static void SetEntityAlpha(int _entity, int _alphaLevel, bool _skin)
		{
			Function.Call((Hash)0x0DF7692B1D9E7BA7, _entity, _alphaLevel, _skin);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityAlpha(int _entity)
		{
			return Function.Call<int>((Hash)0x1BB501624FAF2BEA, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetEntityAlpha(int _entity)
		{
			Function.Call((Hash)0x744B9EF44779D9AB, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityFadeIn(int _entity)
		{
			Function.Call((Hash)0xA91E6CF94404E8C9, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityAlwaysPrerender(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xACAD101E1FB66689, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityRenderScorched(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x85B8A7534E44BC23, _entity, _toggle);
		}
		/// <summary>
		/// Seems to return true if entity is burned / scorched
		/// _GET_ENTITY_*
		/// </summary>
		public static int Hash_0x37b01666bae8f7ef(int _entity)
		{
			return Function.Call<int>((Hash)0x37B01666BAE8F7EF, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa9e6d8f2ddfc4db9(int _p0, int _p1)
		{
			Function.Call((Hash)0xA9E6D8F2DDFC4DB9, _p0, _p1);
		}
		/// <summary>
		/// Only works with objects!
		/// </summary>
		public static void CreateModelSwap(float _x, float _y, float _z, float _radius, uint _originalModel, uint _newModel, bool _p6)
		{
			Function.Call((Hash)0x10B2218320B6F5AC, _x, _y, _z, _radius, _originalModel, _newModel, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveModelSwap(float _x, float _y, float _z, float _radius, uint _originalModel, uint _newModel, bool _p6)
		{
			Function.Call((Hash)0x824E1C26A14CB817, _x, _y, _z, _radius, _originalModel, _newModel, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CreateModelHide(float _x, float _y, float _z, float _radius, uint _model, bool _p5)
		{
			Function.Call((Hash)0x069848B3FB3C4426, _x, _y, _z, _radius, _model, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CreateModelHideExcludingScriptObjects(float _x, float _y, float _z, float _radius, uint _model, bool _p5)
		{
			Function.Call((Hash)0xD136090A9AAAB17D, _x, _y, _z, _radius, _model, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveModelHide(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x3F38A98576F6213A, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd4636c2edb0dea8a(int _p0)
		{
			return Function.Call<int>((Hash)0xD4636C2EDB0DEA8A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CreateForcedObject(float _x, float _y, float _z, int _p3, uint _modelHash, bool _p5)
		{
			Function.Call((Hash)0x0961A905AFBC34C7, _x, _y, _z, _p3, _modelHash, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveForcedObject(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x553FA683F2BCD814, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityNoCollisionEntity(int _entity1, int _entity2, bool _thisFrameOnly)
		{
			Function.Call((Hash)0xE037BF068223C38D, _entity1, _entity2, _thisFrameOnly);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityMotionBlur(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x516C6ABD18322B63, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCanAutoVaultOnEntity(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x80646744FA88F9D7, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCanClimbOnEntity(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x24AED2A608F93C4C, _entity, _toggle);
		}
		/// <summary>
		/// Old name: _SET_ENTITY_DECALS_DISABLED
		/// </summary>
		public static void SetEntityNoweapondecals(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xC64E597783BE9A1D, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntitiesNearPoint(float _x, float _y, float _z, float _radius, int _itemSet, int _p5)
		{
			return Function.Call<int>((Hash)0x59B57C4B06531E1E, _x, _y, _z, _radius, _itemSet, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMatchingEntities(int _volume, int _itemSet, int _entityType, int _p3, uint _p4, string _p5)
		{
			return Function.Call<int>((Hash)0x84CCF9A12942C83D, _volume, _itemSet, _entityType, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntitiesInVolume(int _volume, int _itemSet, int _entityType)
		{
			return Function.Call<int>((Hash)0x886171A12F400B89, _volume, _itemSet, _entityType);
		}
		/// <summary>
		/// Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
		/// </summary>
		public static int SearchBuildingPoolForEntityWithThisModel(uint _modelHash)
		{
			return Function.Call<int>((Hash)0x66B2B83B94B22458, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc2e71d7e0a7b4c89(int _p0)
		{
			return Function.Call<int>((Hash)0xC2E71D7E0A7B4C89, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6c31b06e91518269(int _p0, int _p1)
		{
			Function.Call((Hash)0x6C31B06E91518269, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x119a5714578f4e05(int _p0, int _p1)
		{
			Function.Call((Hash)0x119A5714578F4E05, _p0, _p1);
		}
		/// <summary>
		/// Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
		/// https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
		/// </summary>
		public static int GetEntityByDoorhash(uint _doorHash, int _p1)
		{
			return Function.Call<int>((Hash)0xF7424890E4A094C0, _doorHash, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool FindAnimEventPhase(string _animDictionary, string _animName, string _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0x42718CC559BD7776, _animDictionary, _animName, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceEntityAiAndAnimationUpdate(int _entity, bool _p1)
		{
			Function.Call((Hash)0x4C9E96473D4F1A88, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetEntityAnimCurrentTime(int _entity, string _animDict, string _animName)
		{
			return Function.Call<float>((Hash)0x627520389E288A73, _entity, _animDict, _animName);
		}
		/// <summary>
		/// Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
		/// _GET_ENTITY_*
		/// </summary>
		public static float Hash_0x8e46e18aa828334f(int _entity, string _animDict, string _animClip)
		{
			return Function.Call<float>((Hash)0x8E46E18AA828334F, _entity, _animDict, _animClip);
		}
		/// <summary>
		/// Hardcoded to return zero/false.
		/// </summary>
		public static int Hash_0xdf8e49ea89a01db1(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xDF8E49EA89A01DB1, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasAnimEventFired(int _entity, uint _actionHash)
		{
			return Function.Call<bool>((Hash)0x5851CC48405F4A07, _entity, _actionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityAnimFinished(int _entity, string _animDict, string _animName, int _p3)
		{
			return Function.Call<bool>((Hash)0xAEB40615337EF1E3, _entity, _animDict, _animName, _p3);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/animations
		/// </summary>
		public static bool PlayEntityAnim(int _entity, string _animName, string _animDict, float _p3, bool _loop, bool _stayInAnim, bool _p6, float _delta, int _bitset)
		{
			return Function.Call<bool>((Hash)0xDC6D22FAB76D4874, _entity, _animName, _animDict, _p3, _loop, _stayInAnim, _p6, _delta, _bitset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityAnimCurrentTime(int _entity, string _animDict, string _animName, float _time)
		{
			Function.Call((Hash)0x11CDABDC7783B2BC, _entity, _animDict, _animName, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityAnimSpeed(int _entity, string _animDict, string _animName, float _speedMultiplier)
		{
			Function.Call((Hash)0xEAA885BA3CEA4E4A, _entity, _animDict, _animName, _speedMultiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StopEntityAnim(int _entity, string _animation, string _animGroup, float _p3)
		{
			return Function.Call<int>((Hash)0x786591D986DE9159, _entity, _animation, _animGroup, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x669655ffb29ef1a9(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x669655FFB29EF1A9, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddEntityTrackingTrails(int _entity)
		{
			Function.Call((Hash)0x1AD922AB5038DEF3, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5826efd6d73c4de5(int _entity)
		{
			Function.Call((Hash)0x5826EFD6D73C4DE5, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PauseEntityTracking(int _entity, bool _pause)
		{
			Function.Call((Hash)0x36EB4D34D4A092C5, _entity, _pause);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateFootpathTrail(int _p0, string _waypointRecord, bool _bUseSnowOffset, float _p3, float _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, bool _bInit)
		{
			return Function.Call<int>((Hash)0x29BA9F78321E5A6C, _p0, _waypointRecord, _bUseSnowOffset, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _bInit);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc76e94a78127412b(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xC76E94A78127412B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7f20092547b4ddea(int _p0)
		{
			Function.Call((Hash)0x7F20092547B4DDEA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf41e2979d5bc5370(int _p0)
		{
			Function.Call((Hash)0xF41E2979D5BC5370, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xaaacb74442c1bed3(int _p0)
		{
			return Function.Call<int>((Hash)0xAAACB74442C1BED3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PinClosestMapEntity(uint _modelHash, float _x, float _y, float _z, int _flags)
		{
			return Function.Call<int>((Hash)0x6F3068258A499E52, _modelHash, _x, _y, _z, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnpinMapEntity(int _entity)
		{
			Function.Call((Hash)0xD2B9C78537ED5759, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMapEntityPinned(int _p0)
		{
			return Function.Call<bool>((Hash)0x1FF441D7954F8709, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPinnedMapEntity(int _p0)
		{
			return Function.Call<int>((Hash)0x4735E2A4BB83D9DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeab3d91d30a344f1(int _p0)
		{
			Function.Call((Hash)0xEAB3D91D30A344F1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x37ceb637ba3b1a47(int _p0)
		{
			Function.Call((Hash)0x37CEB637BA3B1A47, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x350e9211074955af(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x350E9211074955AF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x898586729db5221d(int _ped)
		{
			Function.Call((Hash)0x898586729DB5221D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe9e7a0bac7f57746(int _p0, int _p1)
		{
			Function.Call((Hash)0xE9E7A0BAC7F57746, _p0, _p1);
		}
		// :##################: //
		// : namespace: EVENT : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDecisionMaker(int _ped, uint _name)
		{
			Function.Call((Hash)0x8AE2F981CDDB8FA4, _ped, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDecisionMakerToDefault(int _ped)
		{
			Function.Call((Hash)0x6B9C5C38838FB6E6, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateShockingEvent(int _args)
		{
			return Function.Call<int>((Hash)0xCA1315C33B9A2847, _args);
		}
		/// <summary>
		/// eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
		/// </summary>
		public static int AddShockingEventAtPosition(uint _eventType, float _x, float _y, float _z, float _p4, float _p5, float _p6, float _p7, float _p8, int _p9, int _p10)
		{
			return Function.Call<int>((Hash)0xD9F8455409B525E9, _eventType, _x, _y, _z, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// </summary>
		public static int AddShockingEventForEntity(uint _eventType, int _entity, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, bool _p8, bool _p9, int _p10, int _p11)
		{
			return Function.Call<int>((Hash)0x7FD8F3BE76F89422, _eventType, _entity, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11);
		}
		/// <summary>
		/// eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// </summary>
		public static bool IsShockingEventInSphere(uint _eventType, float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0x9DB47E16060D6354, _eventType, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RemoveShockingEvent(int _event)
		{
			return Function.Call<bool>((Hash)0xE8BB3CC253A34559, _event);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAllShockingEvents(bool _p0)
		{
			Function.Call((Hash)0xD47A168C2AB90DC4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAllShockingEventsInArea(float _x, float _y, float _z, float _radius, bool _p4)
		{
			Function.Call((Hash)0xB4C71BA9CAB097BD, _x, _y, _z, _radius, _p4);
		}
		/// <summary>
		/// eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// </summary>
		public static void RemoveAllShockingEventsOfTypeInArea(uint _eventType, float _x, float _y, float _z, float _radius, bool _p5)
		{
			Function.Call((Hash)0x6A648D42BF271DC7, _eventType, _x, _y, _z, _radius, _p5);
		}
		/// <summary>
		/// eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// </summary>
		public static void RemoveAllShockingEventsOfType(uint _eventType, bool _p1)
		{
			Function.Call((Hash)0x118873DD538490B4, _eventType, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveShockingEventSpawnBlockingAreas()
		{
			Function.Call((Hash)0xDB249021652420C5);
		}
		/// <summary>
		/// _ADD* (_ADD_SHOCKING_EVENT_* ?)
		/// </summary>
		public static int Hash_0x36d0f2ba2c0d9bde(int _entity, int _p1)
		{
			return Function.Call<int>((Hash)0x36D0F2BA2C0D9BDE, _entity, _p1);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// Hash only used in R* Script mob3.ysc: ROBBERY
		/// _ADD_PED*
		/// </summary>
		public static void Hash_0x7c511e91738a0828(int _ped1, int _ped2, int _p2, uint _p3)
		{
			Function.Call((Hash)0x7C511E91738A0828, _ped1, _ped2, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SuppressShockingEventsNextFrame()
		{
			Function.Call((Hash)0x84994FAD4E4E4E69);
		}
		/// <summary>
		/// _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
		/// </summary>
		public static void Hash_0xb6f4825153920582()
		{
			Function.Call((Hash)0xB6F4825153920582);
		}
		/// <summary>
		/// Only used in R* SP Script coachrobberies
		/// _SET_S*
		/// </summary>
		public static void Hash_0x4b2b1a891d437ca7(float _p0)
		{
			Function.Call((Hash)0x4B2B1A891D437CA7, _p0);
		}
		/// <summary>
		/// _SET_P*
		/// </summary>
		public static void Hash_0x9520175b35e2268d(int _ped, bool _p1)
		{
			Function.Call((Hash)0x9520175B35E2268D, _ped, _p1);
		}
		/// <summary>
		/// Only used in R* SP Script beat_rat_infestation and homeinvasion
		/// </summary>
		public static int Hash_0x18e93ebfc1fcfa48(int _volume, bool _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x18E93EBFC1FCFA48, _volume, _p1, _p2);
		}
		/// <summary>
		/// Only used in R* SP Script beat_rat_infestation
		/// Params: p0 = value returned by 0x18E93EBFC1FCFA48
		/// </summary>
		public static void Hash_0x56b3410626a473e7(int _p0)
		{
			Function.Call((Hash)0x56B3410626A473E7, _p0);
		}
		/// <summary>
		/// Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
		/// </summary>
		public static void AddModelToEventMonitor(uint _model, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x608AD36A644A97FE, _model, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4465c3d1475bd3fd(uint _model)
		{
			Function.Call((Hash)0x4465C3D1475BD3FD, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2dd42fad06e6f19e(int _object, bool _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x2DD42FAD06E6F19E, _object, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa86b0ee9b39d15d6(int _object)
		{
			Function.Call((Hash)0xA86B0EE9B39D15D6, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x26054eb81ac0893b(int _object)
		{
			return Function.Call<bool>((Hash)0x26054EB81AC0893B, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEventTrackerForPed(int _ped, string _eventName, int _p2)
		{
			Function.Call((Hash)0xBB1E41DD3D3C6250, _ped, _eventName, _p2);
		}
		/// <summary>
		/// Might return time since some (?) event.
		/// </summary>
		public static int Hash_0xad17a18215dd23d6(int _entity, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xAD17A18215DD23D6, _entity, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int EventGetTimeSinceEvent(int _entity, uint _eventType, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xC6A7DC546E94FED5, _entity, _eventType, _p2, _p3);
		}
		/// <summary>
		/// Returns eventType
		/// </summary>
		public static uint EventGetRecentEvent(int _entity, int _p1, int _p2)
		{
			return Function.Call<uint>((Hash)0x796EECFF0C6D39BE, _entity, _p1, _p2);
		}
		/// <summary>
		/// _IS_EVENT
		/// </summary>
		public static bool Hash_0x797b3d4d92e56094(string _eventName, uint _eventType)
		{
			return Function.Call<bool>((Hash)0x797B3D4D92E56094, _eventName, _eventType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int EventGetSourceEntityFromEvent(int _entity, uint _eventType, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x822A001BCEA5BD81, _entity, _eventType, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int EventGetTargetEntityFromEvent(int _entity, uint _eventType, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x38497F139981C5C9, _entity, _eventType, _p2, _p3);
		}
		/// <summary>
		/// _GET*
		/// </summary>
		public static int Hash_0x1d1b448d719415ab(int _ped)
		{
			return Function.Call<int>((Hash)0x1D1B448D719415AB, _ped);
		}
		/// <summary>
		/// _GET*
		/// </summary>
		public static int Hash_0x83d43f0fd5276e4d(int _entity, int _p1)
		{
			return Function.Call<int>((Hash)0x83D43F0FD5276E4D, _entity, _p1);
		}
		/// <summary>
		/// HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
		/// </summary>
		public static void Hash_0xe28d7fc9fd32abeb(int _entity, uint _eventType, int _p2)
		{
			Function.Call((Hash)0xE28D7FC9FD32ABEB, _entity, _eventType, _p2);
		}
		/// <summary>
		/// AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
		/// </summary>
		public static void Hash_0x1a5c5d350068a673(int _ped, int _p1)
		{
			Function.Call((Hash)0x1A5C5D350068A673, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EventFlushAllEventTrackers(int _ped)
		{
			Function.Call((Hash)0xAD8F2424C6E1E3A8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe2c2fbb7825ffc66()
		{
			Function.Call((Hash)0xE2C2FBB7825FFC66);
		}
		// :#################: //
		// : namespace: FIRE : //
		// :#################: //
		/// <summary>
		/// Starts a fire:
		/// 
		/// xyz: Location of fire
		/// maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
		/// isGasFire: Whether or not the fire is powered by gasoline.
		/// </summary>
		public static int StartScriptFire(float _x, float _y, float _z, int _p3, float _p4, bool _p5, string _soundsetName, float _p7, int _p8)
		{
			return Function.Call<int>((Hash)0x6B83617E04503888, _x, _y, _z, _p3, _p4, _p5, _soundsetName, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveScriptFire(int _fireHandle)
		{
			Function.Call((Hash)0x790125C36E194069, _fireHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartEntityFire(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xC4DC7418A44D6822, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopEntityFire(int _p0, int _p1)
		{
			Function.Call((Hash)0x8390751DC40C1E98, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityOnFire(int _entity)
		{
			return Function.Call<bool>((Hash)0x1BD7C371CE257C3E, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x754937c28271bc65(int _p0)
		{
			Function.Call((Hash)0x754937C28271BC65, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumberOfFiresInRange(float _x, float _y, float _z, float _radius)
		{
			return Function.Call<int>((Hash)0xF9617BC6FAE61E08, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopFireInRange(float _x, float _y, float _z, float _radius)
		{
			Function.Call((Hash)0xDB38F247BD421708, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopFireInBox(float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			Function.Call((Hash)0xB7C7BDC375AEA9A4, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetClosestFirePos(Vector3 _outPosition, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xB646FB657F448261, _outPosition, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x559fc1d310813031(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			return Function.Call<int>((Hash)0x559FC1D310813031, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x41b87a6495ee13dd(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			return Function.Call<int>((Hash)0x41B87A6495EE13DD, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa4454592dcf7c992(int _p0)
		{
			return Function.Call<int>((Hash)0xA4454592DCF7C992, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityConsumedByFire(int _entity)
		{
			return Function.Call<bool>((Hash)0xCDC25355C0D65963, _entity);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
		/// 
		/// explosionType:
		/// enum eExplosionTag
		/// {
		/// 	EXP_TAG_DONTCARE = -1,
		/// 	EXP_TAG_GRENADE,
		/// 	EXP_TAG_STICKYBOMB,
		/// 	EXP_TAG_MOLOTOV,
		/// 	EXP_TAG_MOLOTOV_VOLATILE,
		/// 	EXP_TAG_HI_OCTANE,
		/// 	EXP_TAG_CAR,
		/// 	EXP_TAG_PLANE,
		/// 	EXP_TAG_PETROL_PUMP,
		/// 	EXP_TAG_DIR_STEAM,
		/// 	EXP_TAG_DIR_FLAME,
		/// 	EXP_TAG_DIR_WATER_HYDRANT,
		/// 	EXP_TAG_BOAT,
		/// 	EXP_TAG_BULLET,
		/// 	EXP_TAG_SMOKEGRENADE,
		/// 	EXP_TAG_BZGAS,
		/// 	EXP_TAG_GAS_CANISTER,
		/// 	EXP_TAG_EXTINGUISHER,
		/// 	EXP_TAG_TRAIN,
		/// 	EXP_TAG_DIR_FLAME_EXPLODE,
		/// 	EXP_TAG_VEHICLE_BULLET,
		/// 	EXP_TAG_BIRD_CRAP,
		/// 	EXP_TAG_FIREWORK,
		/// 	EXP_TAG_TORPEDO,
		/// 	EXP_TAG_TORPEDO_UNDERWATER,
		/// 	EXP_TAG_LANTERN,
		/// 	EXP_TAG_DYNAMITE,
		/// 	EXP_TAG_DYNAMITESTACK,
		/// 	EXP_TAG_DYNAMITE_VOLATILE,
		/// 	EXP_TAG_RIVER_BLAST,
		/// 	EXP_TAG_PLACED_DYNAMITE,
		/// 	EXP_TAG_FIRE_ARROW,
		/// 	EXP_TAG_DYNAMITE_ARROW,
		/// 	EXP_TAG_PHOSPHOROUS_BULLET,
		/// 	EXP_TAG_LIGHTNING_STRIKE,
		/// 	EXP_TAG_TRACKING_ARROW,
		/// 	EXP_TAG_POISON_BOTTLE
		/// };
		/// </summary>
		public static void AddExplosion(float _x, float _y, float _z, int _explosionType, float _damageScale, bool _isAudible, bool _isInvisible, float _cameraShake)
		{
			Function.Call((Hash)0x7D6F58F69DA92530, _x, _y, _z, _explosionType, _damageScale, _isAudible, _isInvisible, _cameraShake);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static void AddOwnedExplosion(int _ped, float _x, float _y, float _z, int _explosionType, float _damageScale, bool _isAudible, bool _isInvisible, float _cameraShake)
		{
			Function.Call((Hash)0xD84A917A64D4D016, _ped, _x, _y, _z, _explosionType, _damageScale, _isAudible, _isInvisible, _cameraShake);
		}
		/// <summary>
		/// _ADD_EXPLOSION_*(ON ENTITY?)
		/// </summary>
		public static void Hash_0xb7df150605eedc9b(int _entity, int _p1, float _x, float _y, float _z, int _explosionType, float _damageScale, bool _isAudible, bool _isInvisible, float _cameraShake)
		{
			Function.Call((Hash)0xB7DF150605EEDC9B, _entity, _p1, _x, _y, _z, _explosionType, _damageScale, _isAudible, _isInvisible, _cameraShake);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// Change explosionFx (Visual Effect) for specified explosionType
		/// </summary>
		public static void AddExplosionWithUserVfx(float _x, float _y, float _z, int _explosionType, uint _explosionFx, float _damageScale, bool _isAudible, bool _isInvisible, float _cameraShake)
		{
			Function.Call((Hash)0x53BA259F3A67A99E, _x, _y, _z, _explosionType, _explosionFx, _damageScale, _isAudible, _isInvisible, _cameraShake);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x34ae85c7ca4857aa(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0x34AE85C7CA4857AA, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static bool IsExplosionInArea(int _explosionType, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			return Function.Call<bool>((Hash)0x8391BA4313A25AD3, _explosionType, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static bool IsExplosionActiveInArea(int _explosionType, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			return Function.Call<bool>((Hash)0xD96E82AEBFFAAFF0, _explosionType, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static bool IsExplosionInSphere(int _explosionType, float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0xD62DD846D82CBB90, _explosionType, _x, _y, _z, _radius);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static bool IsExplosionInAngledArea(int _explosionType, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _angle)
		{
			return Function.Call<bool>((Hash)0x5AE661ECD18524C9, _explosionType, _x1, _y1, _z1, _x2, _y2, _z2, _angle);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static bool IsExplosionInVolume(int _explosionType, int _volume)
		{
			return Function.Call<bool>((Hash)0xE24822A4CFC9107A, _explosionType, _volume);
		}
		/// <summary>
		/// explosionType: see ADD_EXPLOSION
		/// </summary>
		public static int GetOwnerOfExplosionInAngledArea(int _explosionType, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _radius)
		{
			return Function.Call<int>((Hash)0x8002DDAB58594D78, _explosionType, _x1, _y1, _z1, _x2, _y2, _z2, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x68f6a75fdf5a70d6(float _x, float _y, float _z, float _p3)
		{
			Function.Call((Hash)0x68F6A75FDF5A70D6, _x, _y, _z, _p3);
		}
		/// <summary>
		/// Only used in R* SP Related Camp Scripts
		/// </summary>
		public static void Hash_0x24db6b9f2b719043(float _p0)
		{
			Function.Call((Hash)0x24DB6B9F2B719043, _p0);
		}
		/// <summary>
		/// Tested with fire & dynamite. Only returns true using value p1 = 1 and when the ped is affected by fire.
		/// </summary>
		public static bool IsPedShockingEventActive(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0xAB7993BA61A4674F, _ped, _p1);
		}
		// :##################: //
		// : namespace: FLOCK : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static float GetSpeciesTuningFloatParam(uint _p0, int _p1, int _p2)
		{
			return Function.Call<float>((Hash)0xE108489621422F91, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSpeciesTuningFloatParam(uint _p0, int _p1, int _p2, float _p3)
		{
			Function.Call((Hash)0x963240B6C252BA49, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSpeciesTuningBoolParam(uint _p0, int _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0x6D1D94C2459B42EE, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
		/// </summary>
		public static float GetAnimalTuningFloatParam(int _animal, int _index)
		{
			return Function.Call<float>((Hash)0x4BC3ECFDA0297E27, _animal, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimalTuningFloatParam(int _animal, int _index, float _value)
		{
			Function.Call((Hash)0xCBDA22C87977244F, _animal, _index, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetAnimalTuningFloatParam(int _animal, int _index)
		{
			Function.Call((Hash)0xE776A195488FC520, _animal, _index);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
		/// </summary>
		public static bool GetAnimalTuningBoolParam(int _animal, int _index)
		{
			return Function.Call<bool>((Hash)0x1C1993824A396603, _animal, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimalTuningBoolParam(int _animal, int _index, bool _value)
		{
			Function.Call((Hash)0x9FF1E042FA597187, _animal, _index, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetAnimalTuningBoolParam(int _animal, int _index)
		{
			Function.Call((Hash)0x96AA1304D30E6BC3, _animal, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8049b17bec937662(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0x8049B17BEC937662, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe93415b3307208e5(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			return Function.Call<int>((Hash)0xE93415B3307208E5, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x19870c40c7ee15be(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x19870C40C7EE15BE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0816c31480764ab0(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x0816C31480764AB0, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc3d581a34bc0a1f0(int _p0, int _p1)
		{
			Function.Call((Hash)0xC3D581A34BC0A1F0, _p0, _p1);
		}
		/// <summary>
		/// species: SPECIES_BIRD_CROW
		/// </summary>
		public static void Hash_0xf2cca7b68cfab2b9(uint _species, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _x3, float _y3, float _z3, float _p10, float _p11, float _p12, float _p13)
		{
			Function.Call((Hash)0xF2CCA7B68CFAB2B9, _species, _x1, _y1, _z1, _x2, _y2, _z2, _x3, _y3, _z3, _p10, _p11, _p12, _p13);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfb16f08f47b83b4c(int _p0)
		{
			Function.Call((Hash)0xFB16F08F47B83B4C, _p0);
		}
		/// <summary>
		/// Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
		/// Used for: REL_DOMESTICATED_ANIMAL
		/// </summary>
		public static bool GetAnimalIsWild(int _ped)
		{
			return Function.Call<bool>((Hash)0x3B005FF0538ED2A9, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimalIsWild(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xAEB97D84CDF3C00B, _ped, _toggle);
		}
		/// <summary>
		/// enum eAnimalRarityLevel
		/// {
		/// 	ARL_COMMON,
		/// 	ARL_RARE,
		/// 	ARL_LEGENDARY,
		/// 	ARL_NUMRARITYLEVELS
		/// };
		/// </summary>
		public static int GetAnimalRarity(int _ped)
		{
			return Function.Call<int>((Hash)0xF8B48A361DC388AE, _ped);
		}
		/// <summary>
		/// rarityLevel: see _GET_ANIMAL_RARITY
		/// </summary>
		public static void SetAnimalRarity(int _ped, int _rarityLevel)
		{
			Function.Call((Hash)0x8B6F0F59B1B99801, _ped, _rarityLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff1e339ce40eaaaf(int _p0, int _p1)
		{
			Function.Call((Hash)0xFF1E339CE40EAAAF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8d913e493bafe0a3(int _p0)
		{
			return Function.Call<int>((Hash)0x8D913E493BAFE0A3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateHerd()
		{
			return Function.Call<int>((Hash)0xCB4EF7EDAE2E16F1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe0961aed72642b80(int _p0)
		{
			Function.Call((Hash)0xE0961AED72642B80, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddPedToFlock(int _p0, int _ped)
		{
			Function.Call((Hash)0x933E5D31A7D13069, _p0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x408d1149c5e39c1e(int _p0, int _p1)
		{
			Function.Call((Hash)0x408D1149C5E39C1E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9e13acc38ba8f9c3(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x9E13ACC38BA8F9C3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x34b9c4d86df2c2f3(int _p0)
		{
			return Function.Call<int>((Hash)0x34B9C4D86DF2C2F3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x1da6cb02071055d5(int _p0)
		{
			return Function.Call<Vector3>((Hash)0x1DA6CB02071055D5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc95611869e14f8af(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xC95611869E14F8AF, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x09ee00b8f858e0be(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0x09EE00B8F858E0BE, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe36d2cb540597ef7(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xE36D2CB540597EF7, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd95f04a4e73be85e(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xD95F04A4E73BE85E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x17e3e5c46eccd308(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x17E3E5C46ECCD308, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc72ce37081dae625(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xC72CE37081DAE625, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x67a43ea3f6fe0076(int _p0)
		{
			Function.Call((Hash)0x67A43EA3F6FE0076, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x36486af7da93a464(int _p0)
		{
			return Function.Call<int>((Hash)0x36486AF7DA93A464, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6c57bea886a20c6b(int _p0, int _p1)
		{
			Function.Call((Hash)0x6C57BEA886A20C6B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1520626ffafffa8f(int _p0, int _p1)
		{
			Function.Call((Hash)0x1520626FFAFFFA8F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfa821997794f48e7(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xFA821997794F48E7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcc6b5aafc87bfc7b(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xCC6B5AAFC87BFC7B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfdb008b3bcf5992f(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xFDB008B3BCF5992F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2df3d457d86f8e57(int _p0, int _p1)
		{
			Function.Call((Hash)0x2DF3D457D86F8E57, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x706b434fefad6a24(int _p0)
		{
			Function.Call((Hash)0x706B434FEFAD6A24, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa881f5c77a560906(int _p0)
		{
			Function.Call((Hash)0xA881F5C77A560906, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x53187e563f938e76(int _p0)
		{
			return Function.Call<int>((Hash)0x53187E563F938E76, _p0);
		}
		// :#####################: //
		// : namespace: GRAPHICS : //
		// :#####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void FreeMemoryForMissionCreatorPhoto()
		{
			Function.Call((Hash)0x7DFF8F94937D2659);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LoadMissionCreatorPhoto(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x84F0BA7462FF8D58, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetStatusOfLoadMissionCreatorPhoto(int _p0)
		{
			return Function.Call<int>((Hash)0xC71B50AE58D07369, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BeginTakeHighQualityPhoto()
		{
			return Function.Call<bool>((Hash)0xA15BFFC0A01B34E1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetStatusOfTakeHighQualityPhoto()
		{
			return Function.Call<int>((Hash)0x4A3DA74C3CCB1725);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FreeMemoryForHighQualityPhoto()
		{
			Function.Call((Hash)0xD45547D8396F002A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPhotoSelfStat(bool _p0)
		{
			Function.Call((Hash)0x2705D18C11B61046, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPhotoStudioStat(int _p0)
		{
			Function.Call((Hash)0x8E6AFF353C09652E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPosseIdForPhoto(int _posseId)
		{
			Function.Call((Hash)0x564837D4A9EDE296, _posseId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9f6d859c80708b26(bool _p0, bool _p1)
		{
			Function.Call((Hash)0x9F6D859C80708B26, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPhotoFrame()
		{
			return Function.Call<bool>((Hash)0x86076AE35CBBE55F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPhotoInPhotomodeStat(bool _p0)
		{
			Function.Call((Hash)0xFA91736933AB3D93, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPhotoOverlayEffectStat(int _p0)
		{
			Function.Call((Hash)0x8B3296278328B5EB, _p0);
		}
		/// <summary>
		/// Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
		/// </summary>
		public static void Hash_0x0d5b19c34068fee7(int _p0)
		{
			Function.Call((Hash)0x0D5B19C34068FEE7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerAppearInPhoto(int _player)
		{
			Function.Call((Hash)0x75D568607909333E, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRegionPhotoTakenStat(string _p0)
		{
			Function.Call((Hash)0xD1031B83AC093BC7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDistrictPhotoTakenStat(string _p0)
		{
			Function.Call((Hash)0x9937FACBBF267244, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStatePhotoTakenStat(string _p0)
		{
			Function.Call((Hash)0x8952E857696B8A79, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SaveHighQualityPhoto(int _unused)
		{
			return Function.Call<bool>((Hash)0x57639FD876B68A91, _unused);
		}
		/// <summary>
		/// 0 = succeeded
		/// 1 = getting status
		/// 2 = failed
		/// </summary>
		public static int GetStatusOfSaveHighQualityPhoto()
		{
			return Function.Call<int>((Hash)0xD6663EC374092383);
		}
		/// <summary>
		/// Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
		/// </summary>
		public static bool BeginCreateLowQualityCopyOfPhoto(int _p0)
		{
			return Function.Call<bool>((Hash)0x494A9874F17A7D50, _p0);
		}
		/// <summary>
		/// Old name: _GET_STATUS_OF_DRAW_LOW_QUALITY_PHOTO
		/// </summary>
		public static int GetStatusOfCreateLowQualityCopyOfPhoto(int _p0)
		{
			return Function.Call<int>((Hash)0x13430D3D5A45F14B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FreeMemoryForLowQualityPhoto()
		{
			Function.Call((Hash)0x614682E715ADBAAC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DrawLowQualityPhotoToPhone(bool _p0, bool _p1)
		{
			Function.Call((Hash)0xF1142E5D64B47802, _p0, _p1);
		}
		/// <summary>
		/// Always returns 200.
		/// </summary>
		public static int GetMaxNumberOfLocalPhotos()
		{
			return Function.Call<int>((Hash)0x8E587FCD30E05592);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCurrentNumberOfLocalPhotos()
		{
			return Function.Call<int>((Hash)0x78C56B8A7B1D000C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int QueueOperationToCreateSortedListOfPhotos()
		{
			return Function.Call<int>((Hash)0xA42EDF1E88734A7E);
		}
		/// <summary>
		/// 0 = succeeded
		/// 1 = getting status
		/// 2 = failed
		/// </summary>
		public static int GetStatusOfSortedListOperation()
		{
			return Function.Call<int>((Hash)0xB28894CD7408BD0C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DrawLightWithRange(float _posX, float _posY, float _posZ, int _colorR, int _colorG, int _colorB, float _range, float _intensity)
		{
			Function.Call((Hash)0xD2D9E04C0DF927F4, _posX, _posY, _posZ, _colorR, _colorG, _colorB, _range, _intensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UpdateLightsOnEntity(int _entity)
		{
			Function.Call((Hash)0xBDBACB52A03CC760, _entity);
		}
		/// <summary>
		/// https://gfycat.com/meagerfaireyra
		/// </summary>
		public static void SetLightsColorForEntity(int _entity, int _red, int _green, int _blue)
		{
			Function.Call((Hash)0x6EC2A67962296F49, _entity, _red, _green, _blue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLightsIntensityForEntity(int _entity, float _intensity)
		{
			Function.Call((Hash)0x07C0F87AAC57F2E4, _entity, _intensity);
		}
		/// <summary>
		/// type must be less than or equal to 20
		/// </summary>
		public static void SetLightsTypeForEntity(int _entity, int _type)
		{
			Function.Call((Hash)0xAB72C67163DC4DB4, _entity, _type);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
		/// </summary>
		public static void DrawMarker(uint _type, float _posX, float _posY, float _posZ, float _dirX, float _dirY, float _dirZ, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ, int _red, int _green, int _blue, int _alpha, bool _bobUpAndDown, bool _faceCamera, int _p19, bool _rotate, string _textureDict, string _textureName, bool _drawOnEnts)
		{
			Function.Call((Hash)0x2A32FAA57B937173, _type, _posX, _posY, _posZ, _dirX, _dirY, _dirZ, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ, _red, _green, _blue, _alpha, _bobUpAndDown, _faceCamera, _p19, _rotate, _textureDict, _textureName, _drawOnEnts);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateCheckpointWithNamehash(uint _typeHash, float _posX1, float _posY1, float _posZ1, float _posX2, float _posY2, float _posZ2, float _radius, int _red, int _green, int _blue, int _alpha, int _reserved)
		{
			return Function.Call<int>((Hash)0x175668836B44CBB0, _typeHash, _posX1, _posY1, _posZ1, _posX2, _posY2, _posZ2, _radius, _red, _green, _blue, _alpha, _reserved);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesCheckpointHaveFx(int _checkpoint)
		{
			return Function.Call<bool>((Hash)0x4C11CCACB7C02B6E, _checkpoint);
		}
		/// <summary>
		/// Sets the checkpoint color.
		/// </summary>
		public static void SetCheckpointRgba(int _checkpoint, int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0xCAAFC225E33B1D15, _checkpoint, _red, _green, _blue, _alpha);
		}
		/// <summary>
		/// Sets the checkpoint icon color.
		/// </summary>
		public static void SetCheckpointRgba2(int _checkpoint, int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0x99AFF17222D4DEB4, _checkpoint, _red, _green, _blue, _alpha);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcc3b787e73e64160(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xCC3B787E73E64160, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x171c18e994c1a395(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x171C18E994C1A395, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteCheckpoint(int _checkpoint)
		{
			Function.Call((Hash)0x0DED5B0C8EBAAE12, _checkpoint);
		}
		/// <summary>
		/// Draws a rectangle on the screen.
		/// 
		/// -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
		/// 
		/// -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
		/// 
		/// -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
		/// 
		/// -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
		/// 
		/// -R: Red part of the color. (0-255)
		/// 
		/// -G: Green part of the color. (0-255)
		/// 
		/// -B: Blue part of the color. (0-255)
		/// 
		/// -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
		/// </summary>
		public static void DrawRect(float _x, float _y, float _width, float _height, int _red, int _green, int _blue, int _alpha, bool _p8, bool _p9)
		{
			Function.Call((Hash)0x405224591DF02025, _x, _y, _width, _height, _red, _green, _blue, _alpha, _p8, _p9);
		}
		/// <summary>
		/// Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
		/// </summary>
		public static void SetScriptGfxDrawBehindPausemenu(bool _toggle)
		{
			Function.Call((Hash)0x906B86E6D7896B9E, _toggle);
		}
		/// <summary>
		/// Sets the draw order for script draw commands.
		/// </summary>
		public static void SetScriptGfxDrawOrder(int _drawOrder)
		{
			Function.Call((Hash)0xCFCC78391C8B3814, _drawOrder);
		}
		/// <summary>
		/// Draws a 2D sprite on the screen.
		/// 
		/// Parameters:
		/// textureDict - Name of texture dictionary to load texture from
		/// 
		/// textureName - Name of texture to load from texture dictionary
		/// 
		/// screenX/Y - Screen offset (0.5 = center)
		/// scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
		/// 
		/// heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
		/// 
		/// red,green,blue - Sprite color (default = 255/255/255)
		/// 
		/// alpha - opacity level
		/// 
		/// https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
		/// </summary>
		public static void DrawSprite(string _textureDict, string _textureName, float _screenX, float _screenY, float _width, float _height, float _heading, int _red, int _green, int _blue, int _alpha, bool _p11)
		{
			Function.Call((Hash)0xC9884ECADE94CB34, _textureDict, _textureName, _screenX, _screenY, _width, _height, _heading, _red, _green, _blue, _alpha, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachTvAudioToEntity(int _entity)
		{
			Function.Call((Hash)0x40866A418EB8EFDE, _entity);
		}
		/// <summary>
		/// Probably changes tvs from being a 3d audio to being "global" audio
		/// </summary>
		public static void SetTvAudioFrontend(bool _toggle)
		{
			Function.Call((Hash)0x64437C98FCC5F291, _toggle);
		}
		/// <summary>
		/// Hardcoded to always set x to 1280 and y to 720.
		/// </summary>
		public static void GetScreenResolution(int _x, int _y)
		{
			Function.Call((Hash)0x66773C92835D0909, _x, _y);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa04ef43030593abc(int _p0, int _p1)
		{
			Function.Call((Hash)0xA04EF43030593ABC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa21af60c9f99ccc5()
		{
			Function.Call((Hash)0xA21AF60C9F99CCC5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc28f62ac9774fc1b()
		{
			return Function.Call<int>((Hash)0xC28F62AC9774FC1B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeb48ce48eec41fd4(int _p0)
		{
			Function.Call((Hash)0xEB48CE48EEC41FD4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetScreenCoordFromWorldCoord(float _worldX, float _worldY, float _worldZ, float _screenX, float _screenY)
		{
			return Function.Call<bool>((Hash)0xCB50D7AFCC8B0EC6, _worldX, _worldY, _worldZ, _screenX, _screenY);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTextureInDict(uint _txdHash, uint _dict)
		{
			return Function.Call<bool>((Hash)0xA2A51869BDED733B, _txdHash, _dict);
		}
		/// <summary>
		/// Does not affect weapons, particles, fire/explosions, flashlights or the sun.
		/// When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
		/// 
		/// state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
		/// </summary>
		public static void SetArtificialLightsState(bool _state)
		{
			Function.Call((Hash)0xB2797619A7C7747B, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableHdtexThisFrame()
		{
			Function.Call((Hash)0x98A7CD5EA379A854);
		}
		/// <summary>
		/// Used in shop scripts for CATALOG_BOOK
		/// false = Normal -> [CATALOG_BOOK_SHUTDOWN]
		/// true = Trees flickering? -> [CATALOG_BOOK_OPEN]
		/// </summary>
		public static void Hash_0x1a9f09ab458d49c6(bool _p0)
		{
			Function.Call((Hash)0x1A9F09AB458D49C6, _p0);
		}
		/// <summary>
		/// Creates a tracked point, useful for checking the visibility of a 3D point on screen.
		/// </summary>
		public static int CreateTrackedPoint()
		{
			return Function.Call<int>((Hash)0xFB405CB357C69CB9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTrackedPointInfo(int _point, float _x, float _y, float _z, float _radius)
		{
			Function.Call((Hash)0xF6FDA3D4404D4F2C, _point, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTrackedPointVisible(int _point)
		{
			return Function.Call<bool>((Hash)0xCBB056BA159FB48D, _point);
		}
		/// <summary>
		/// Returns iNumPixels, iPixelsVisible
		/// </summary>
		public static int Hash_0xdfe332a5da6fe7c9(int _iTrackedPoint)
		{
			return Function.Call<int>((Hash)0xDFE332A5DA6FE7C9, _iTrackedPoint);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DestroyTrackedPoint(int _point)
		{
			Function.Call((Hash)0x37A59922109F8F1C, _point);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTrackedPointValid(int _point)
		{
			return Function.Call<bool>((Hash)0xF2FDDCC8C6BAE1B3, _point);
		}
		/// <summary>
		/// Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
		/// </summary>
		public static int SetGrassCullSphere(float _x, float _y, float _z, float _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x27219300C36A8D40, _x, _y, _z, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveGrassCullSphere(int _handle)
		{
			Function.Call((Hash)0xAE7BF7CA9E4BA48D, _handle);
		}
		/// <summary>
		/// Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
		/// Returns veg modifier handle
		/// </summary>
		public static int AddVegModifierZone(int _volume, int _p1, int _flags, int _p3)
		{
			return Function.Call<int>((Hash)0xBD3324281E8B9933, _volume, _p1, _flags, _p3);
		}
		/// <summary>
		/// Returns veg modifier handle
		/// </summary>
		public static int AddVegModifierSphere(float _x, float _y, float _z, float _radius, int _modType, int _flags, int _p6)
		{
			return Function.Call<int>((Hash)0xFA50F79257745E74, _x, _y, _z, _radius, _modType, _flags, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveVegModifierSphere(int _vegModifierHandle, int _p1)
		{
			Function.Call((Hash)0x9CF1836C03FB67A2, _vegModifierHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableStaticVegModifier(uint _p0)
		{
			Function.Call((Hash)0xDFEA23EC90113657, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableStaticVegModifier(uint _p0)
		{
			Function.Call((Hash)0xDD0BC0EDCB2162F6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsStaticVegModifierEnabled(uint _p0)
		{
			return Function.Call<bool>((Hash)0xDE9BAD3292AA6D5E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xec3f7f24eeeb3ba3()
		{
			Function.Call((Hash)0xEC3F7F24EEEB3BA3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9f158a49b0d84c3c(int _p0)
		{
			Function.Call((Hash)0x9F158A49B0D84C3C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x910e260aead855de()
		{
			Function.Call((Hash)0x910E260AEAD855DE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CreateSwatchTextureDict(int _slots)
		{
			return Function.Call<bool>((Hash)0x3D084D5568FB4028, _slots);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DestroySwatchTextureDict()
		{
			Function.Call((Hash)0xDAD7FB8402651654);
		}
		/// <summary>
		/// Example: https://pastebin.com/tTgpER9A
		/// </summary>
		public static void GenerateSwatchTextureDirectly(int _slot, int _p1)
		{
			Function.Call((Hash)0x646ED1A1D28487DF, _slot, _p1);
		}
		/// <summary>
		/// Example:
		/// local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
		/// _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
		/// metapedType: see 0xEC9A1261BF0CE510
		/// </summary>
		public static void GenerateSwatchTexture(int _slotId, uint _componentHash, int _metapedType, bool _p3)
		{
			Function.Call((Hash)0x160921255327C591, _slotId, _componentHash, _metapedType, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CascadeShadowsSetCascadeBounds(int _p0, bool _p1, float _p2, float _p3, float _p4, float _p5, bool _p6, float _p7)
		{
			Function.Call((Hash)0xD9EDB2E4512D563E, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// When this is set to ON, shadows only draw as you get nearer.
		/// 
		/// When OFF, they draw from a further distance.
		/// </summary>
		public static void CascadeShadowsEnableEntityTracker(bool _toggle)
		{
			Function.Call((Hash)0x8FBFD2AEB196B369, _toggle);
		}
		/// <summary>
		/// Possible values:
		/// "CSM_ST_POINT"
		/// "CSM_ST_LINEAR"
		/// "CSM_ST_BOX3x3"
		/// "CSM_ST_BOX4x4"
		/// "CSM_ST_DITHER2_LINEAR"
		/// "CSM_ST_CUBIC"
		/// "CSM_ST_POISSON16"
		/// "CSM_ST_SOFT8"
		/// "CSM_ST_SOFT16"
		/// "CSM_ST_SOFT32"
		/// "CSM_ST_DITHER16_RPDB"
		/// "CSM_ST_POISSON16_RPDB_GNORM"
		/// "CSM_ST_HIGHRES_BOX4x4"
		/// "CSM_ST_ESM"
		/// </summary>
		public static void CascadeShadowsSetShadowSampleType(string _type)
		{
			Function.Call((Hash)0xCE4774E0F9AD48D1, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CascadeShadowsClearShadowSampleType()
		{
			Function.Call((Hash)0xF7C29D7C12C36F03);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x503941f65dba24ec(int _p0)
		{
			Function.Call((Hash)0x503941F65DBA24EC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x815653a42c5abe76()
		{
			Function.Call((Hash)0x815653A42C5ABE76);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff8018c778349234(int _p0)
		{
			Function.Call((Hash)0xFF8018C778349234, _p0);
		}
		/// <summary>
		/// Sets an unknown value related to timecycles.
		/// </summary>
		public static void ResetAdaptation(int _unk)
		{
			Function.Call((Hash)0x297B72E2AF094742, _unk);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TogglePausedRenderphases(bool _toggle)
		{
			Function.Call((Hash)0xEF9E1C45732F55FA, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetTogglePausedRenderphasesStatus()
		{
			return Function.Call<bool>((Hash)0x86ED21BDB2791CE8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPausedRenderphases()
		{
			Function.Call((Hash)0xCCD9AAD85E1B559E);
		}
		/// <summary>
		/// Old name: _SET_HIDOF_ENV_BLUR_PARAMS
		/// </summary>
		public static void SetHidofOverride(bool _p0, bool _p1, float _p2, float _p3, float _p4, float _p5)
		{
			Function.Call((Hash)0xCC23AA1A7CBFE840, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
		/// Triggers the binocular scaleform
		/// </summary>
		public static void Hash_0x21f00e08cbb5f37b(string _component)
		{
			Function.Call((Hash)0x21F00E08CBB5F37B, _component);
		}
		/// <summary>
		/// Closes the the binocular scaleform
		/// </summary>
		public static void Hash_0x5ac6e0fa028369de()
		{
			Function.Call((Hash)0x5AC6E0FA028369DE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xec3d8c228fe553d7(bool _p0)
		{
			return Function.Call<bool>((Hash)0xEC3D8C228FE553D7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf5793bb386e1ff9c(int _p0)
		{
			Function.Call((Hash)0xF5793BB386E1FF9C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5cd6a2cce5087161(int _p0)
		{
			Function.Call((Hash)0x5CD6A2CCE5087161, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc8d0611d9a0cf5d3(int _p0)
		{
			Function.Call((Hash)0xC8D0611D9A0CF5D3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPhotoModeExposure()
		{
			return Function.Call<float>((Hash)0x06C0D8BB6B04A709);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x62b9f9a1272aed80(int _p0)
		{
			Function.Call((Hash)0x62B9F9A1272AED80, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPhotoModeContrast()
		{
			return Function.Call<float>((Hash)0x98F4154989B81EC6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9229ed770975bd9e()
		{
			Function.Call((Hash)0x9229ED770975BD9E);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
		/// </summary>
		public static int StartParticleFxNonLoopedAtCoord(string _effectName, float _xPos, float _yPos, float _zPos, float _xRot, float _yRot, float _zRot, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<int>((Hash)0x2E80BF72EF7C87AC, _effectName, _xPos, _yPos, _zPos, _xRot, _yRot, _zRot, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartNetworkedParticleFxNonLoopedAtCoord(string _effectName, float _xPos, float _yPos, float _zPos, float _xRot, float _yRot, float _zRot, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<bool>((Hash)0xFB97618457994A62, _effectName, _xPos, _yPos, _zPos, _xRot, _yRot, _zRot, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartParticleFxNonLoopedOnPedBone(string _effectName, int _ped, float _offsetX, float _offsetY, float _offsetZ, float _rotX, float _rotY, float _rotZ, int _boneIndex, float _scale, bool _axisX, bool _axisY, bool _axisZ)
		{
			return Function.Call<bool>((Hash)0x3FAA72BD940C3AC0, _effectName, _ped, _offsetX, _offsetY, _offsetZ, _rotX, _rotY, _rotZ, _boneIndex, _scale, _axisX, _axisY, _axisZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartParticleFxNonLoopedOnEntity(string _effectName, int _entity, float _offsetX, float _offsetY, float _offsetZ, float _rotX, float _rotY, float _rotZ, float _scale, bool _axisX, bool _axisY, bool _axisZ)
		{
			return Function.Call<bool>((Hash)0xFF4C64C513388C12, _effectName, _entity, _offsetX, _offsetY, _offsetZ, _rotX, _rotY, _rotZ, _scale, _axisX, _axisY, _axisZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartNetworkedParticleFxNonLoopedOnEntity(string _effectName, int _entity, float _offsetX, float _offsetY, float _offsetZ, float _rotX, float _rotY, float _rotZ, float _scale, bool _axisX, bool _axisY, bool _axisZ)
		{
			return Function.Call<bool>((Hash)0xE6CFE43937061143, _effectName, _entity, _offsetX, _offsetY, _offsetZ, _rotX, _rotY, _rotZ, _scale, _axisX, _axisY, _axisZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartParticleFxNonLoopedOnPedBone2(string _effectName, int _ped, float _offsetX, float _offsetY, float _offsetZ, float _rotX, float _rotY, float _rotZ, int _boneIndex, float _scale, bool _axisX, bool _axisY, bool _axisZ)
		{
			return Function.Call<bool>((Hash)0xC695870B8A149B96, _effectName, _ped, _offsetX, _offsetY, _offsetZ, _rotX, _rotY, _rotZ, _boneIndex, _scale, _axisX, _axisY, _axisZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxNonLoopedColour(float _r, float _g, float _b)
		{
			Function.Call((Hash)0x60B85BED6577A35B, _r, _g, _b);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxNonLoopedAlpha(float _alpha)
		{
			Function.Call((Hash)0xE8A35938A7026CEA, _alpha);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxNonLoopedEmitterScale(float _p0, float _p1, float _p2)
		{
			Function.Call((Hash)0x56C392C2BD78B024, _p0, _p1, _p2);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
		/// </summary>
		public static int StartParticleFxLoopedAtCoord(string _effectName, float _x, float _y, float _z, float _xRot, float _yRot, float _zRot, float _scale, bool _xAxis, bool _yAxis, bool _zAxis, bool _p11)
		{
			return Function.Call<int>((Hash)0xBA32867E86125D3A, _effectName, _x, _y, _z, _xRot, _yRot, _zRot, _scale, _xAxis, _yAxis, _zAxis, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartParticleFxLoopedOnPedBone(string _effectName, int _ped, float _xOffset, float _yOffset, float _zOffset, float _xRot, float _yRot, float _zRot, int _boneIndex, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<int>((Hash)0xE689C1B1432BB8AF, _effectName, _ped, _xOffset, _yOffset, _zOffset, _xRot, _yRot, _zRot, _boneIndex, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartParticleFxLoopedOnEntity(string _effectName, int _entity, float _xOffset, float _yOffset, float _zOffset, float _xRot, float _yRot, float _zRot, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<int>((Hash)0xBD41E1440CE39800, _effectName, _entity, _xOffset, _yOffset, _zOffset, _xRot, _yRot, _zRot, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartParticleFxLoopedOnEntityBone(string _effectName, int _entity, float _xOffset, float _yOffset, float _zOffset, float _xRot, float _yRot, float _zRot, int _boneIndex, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<int>((Hash)0xD3BA6EC7F2FBD5E9, _effectName, _entity, _xOffset, _yOffset, _zOffset, _xRot, _yRot, _zRot, _boneIndex, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartNetworkedParticleFxLoopedOnEntity(string _effectName, int _entity, float _xOffset, float _yOffset, float _zOffset, float _xRot, float _yRot, float _zRot, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<int>((Hash)0x8F90AB32E1944BDE, _effectName, _entity, _xOffset, _yOffset, _zOffset, _xRot, _yRot, _zRot, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartNetworkedParticleFxLoopedOnEntityBone(string _effectName, int _entity, float _xOffset, float _yOffset, float _zOffset, float _xRot, float _yRot, float _zRot, int _boneIndex, float _scale, bool _xAxis, bool _yAxis, bool _zAxis)
		{
			return Function.Call<int>((Hash)0x9C56621462FFE7A6, _effectName, _entity, _xOffset, _yOffset, _zOffset, _xRot, _yRot, _zRot, _boneIndex, _scale, _xAxis, _yAxis, _zAxis);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopParticleFxLooped(int _ptfxHandle, bool _p1)
		{
			Function.Call((Hash)0x22970F3A088B133B, _ptfxHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesParticleFxLoopedExist(int _ptfxHandle)
		{
			return Function.Call<bool>((Hash)0x9DD5AFF561E88F2A, _ptfxHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxLoopedOffsets(int _ptfxHandle, float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ)
		{
			Function.Call((Hash)0xD3A4A95FC94FE83B, _ptfxHandle, _x, _y, _z, _rotX, _rotY, _rotZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxLoopedEvolution(int _ptfxHandle, string _propertyName, float _amount, bool _noNetwork)
		{
			Function.Call((Hash)0x3674F389B0FACD80, _ptfxHandle, _propertyName, _amount, _noNetwork);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxLoopedColour(int _ptfxHandle, float _r, float _g, float _b, bool _p4)
		{
			Function.Call((Hash)0x239879FC61C610CC, _ptfxHandle, _r, _g, _b, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxLoopedAlpha(int _ptfxHandle, float _alpha)
		{
			Function.Call((Hash)0x88786E76234F7054, _ptfxHandle, _alpha);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxLoopedScale(int _ptfxHandle, float _scale)
		{
			Function.Call((Hash)0x1A9E1C0D98D093B7, _ptfxHandle, _scale);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxLoopedFarClipDist(int _ptfxHandle, float _range)
		{
			Function.Call((Hash)0x9B04D471DA0AD7AA, _ptfxHandle, _range);
		}
		/// <summary>
		/// _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
		/// </summary>
		public static void SetParticleFxLoopedUpdateDistantSmoke(int _ptfxHandle, float _scalar)
		{
			Function.Call((Hash)0x9DDC222D85D5AF2A, _ptfxHandle, _scalar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveParticleFx(int _ptfxHandle, bool _p1)
		{
			Function.Call((Hash)0x459598F579C98929, _ptfxHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveParticleFxFromEntity(int _entity)
		{
			Function.Call((Hash)0x92884B4A49D81325, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveParticleFxInRange(float _X, float _Y, float _Z, float _radius)
		{
			Function.Call((Hash)0x87B5905ECA623B68, _X, _Y, _Z, _radius);
		}
		/// <summary>
		/// fxName: see data_0/data/effects/ptfx/fxlists/
		/// </summary>
		public static void UseParticleFxAsset(string _fxName)
		{
			Function.Call((Hash)0xA10DB07FC234DD12, _fxName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxOverride(string _oldAsset, string _newAsset)
		{
			Function.Call((Hash)0xBE711A169E9C7E95, _oldAsset, _newAsset);
		}
		/// <summary>
		/// Resets the effect of SET_PARTICLE_FX_OVERRIDE
		/// </summary>
		public static void ResetParticleFxOverride(string _name)
		{
			Function.Call((Hash)0x274B3DABF7E72DEF, _name);
		}
		/// <summary>
		/// p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
		/// p2: EMIT
		/// p3: either 0.0f or 1.0f
		/// </summary>
		public static void Hash_0x4fb67d172c4476f3(int _entity, string _p1, string _p2, float _p3)
		{
			Function.Call((Hash)0x4FB67D172C4476F3, _entity, _p1, _p2, _p3);
		}
		/// <summary>
		/// Related to Campfires.
		/// p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
		/// </summary>
		public static void SetParticleFxAmbientColour(int _entity, string _p1, float _r, float _g, float _b)
		{
			Function.Call((Hash)0x3C61B52B00848C26, _entity, _p1, _r, _g, _b);
		}
		/// <summary>
		/// Only used in R* Script nb_stalking_hunter
		/// </summary>
		public static void Hash_0xd1472aff30c103d6(float _p0)
		{
			Function.Call((Hash)0xD1472AFF30C103D6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxBulletImpactScale(float _scale)
		{
			Function.Call((Hash)0xA53C8D7D0F8C74D0, _scale);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxBulletImpactLodrangeScale(float _p0)
		{
			Function.Call((Hash)0x8DCCC98DC0DBF9E4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSniperGlintsEnabled(bool _enabled)
		{
			Function.Call((Hash)0x6E8EB45A4F4460EB, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParticleFxFootLodrangeScale(float _p0)
		{
			Function.Call((Hash)0x2A1625858887D4E6, _p0);
		}
		/// <summary>
		/// _DISABLE_*
		/// </summary>
		public static void Hash_0x4046493d2eeaca0e()
		{
			Function.Call((Hash)0x4046493D2EEACA0E);
		}
		/// <summary>
		/// https://imgur.com/a/I2swSDJ
		/// 
		/// Old name: _SET_PICKUP_OBJECT_GLOW_ENABLED
		/// </summary>
		public static void SetPickupLight(int _object, bool _toggle)
		{
			Function.Call((Hash)0x7DFB49BCDB73089A, _object, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BlockPickupObjectLight(int _pickupObject, bool _toggle)
		{
			Function.Call((Hash)0x50C14328119E1DD1, _pickupObject, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BlockPickupPlacementLight(int _pickup, bool _toggle)
		{
			Function.Call((Hash)0x0552AA3FFC5B87AA, _pickup, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AllowPickupLightSync(int _pickupObject, bool _allow)
		{
			Function.Call((Hash)0x7C348310A6E2FB91, _pickupObject, _allow);
		}
		/// <summary>
		/// Enables/disables a kind of 'shiny' effect on metals.
		/// </summary>
		public static void SetPearlescentFxEnabled(int _object, bool _toggle)
		{
			Function.Call((Hash)0x72E30372E7CC4415, _object, _toggle);
		}
		/// <summary>
		/// Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
		/// </summary>
		public static void RemoveDecalsInRange(float _x, float _y, float _z, float _range)
		{
			Function.Call((Hash)0x86DE59FA02902B40, _x, _y, _z, _range);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveDecalsFromObject(int _obj)
		{
			Function.Call((Hash)0xFB8972BAE0013140, _obj);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddDecal(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14, int _p15, int _p16, int _p17, int _p18, int _p19, int _p20, int _p21)
		{
			return Function.Call<int>((Hash)0x57CB267624EF85C0, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15, _p16, _p17, _p18, _p19, _p20, _p21);
		}
		/// <summary>
		/// https://i.imgur.com/ULQU9US.jpg
		/// More rounded and small puddle
		/// </summary>
		public static void AddBloodPool(float _x, float _y, float _z, bool _unused)
		{
			Function.Call((Hash)0xFA2ECC78A6014D4F, _x, _y, _z, _unused);
		}
		/// <summary>
		/// https://i.imgur.com/rPITUCV.jpg
		/// More customizable and more like quadrants
		/// </summary>
		public static void AddBloodPool2(float _x, float _y, float _z, float _p3, float _size, float _p5, bool _permanent, float _p7, bool _p8)
		{
			Function.Call((Hash)0xF708298675ABDC6A, _x, _y, _z, _p3, _size, _p5, _permanent, _p7, _p8);
		}
		/// <summary>
		/// Creates blood pools for the given ped in some interval for a few seconds.
		/// </summary>
		public static void AddBloodPoolsForPed(int _ped)
		{
			Function.Call((Hash)0xDFCE8CE9F3EBE93F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddBloodPoolsForPedWithParams(int _ped, float _p1, float _size, float _p3)
		{
			Function.Call((Hash)0xC349EE1E6EFA494B, _ped, _p1, _size, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartPetrolTrailDecals(int _p0, int _p1)
		{
			Function.Call((Hash)0x46F246D6504F0031, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddPetrolTrailDecalInfo(float _x, float _y, float _z, float _p3)
		{
			Function.Call((Hash)0x73354FB6D03D2E8A, _x, _y, _z, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndPetrolTrailDecals()
		{
			Function.Call((Hash)0x0E126AAE933F3B56);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe63d68f455ca0b47(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0xE63D68F455CA0B47, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveDecal(int _decal)
		{
			Function.Call((Hash)0x49A720552EB0BB88, _decal);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDecalAlive(int _decal)
		{
			return Function.Call<bool>((Hash)0x3E4B4E5CF5D3EEB5, _decal);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisablePetrolDecalsIgnitingThisFrame()
		{
			Function.Call((Hash)0x53ED07BF368EDA59);
		}
		/// <summary>
		/// _SET_D* or _SET_E*
		/// </summary>
		public static void Hash_0xb032c085d9a03907()
		{
			Function.Call((Hash)0xB032C085D9A03907);
		}
		/// <summary>
		/// _DISABLE_*
		/// </summary>
		public static void Hash_0xfb680a9b33d0edbe(bool _p0)
		{
			Function.Call((Hash)0xFB680A9B33D0EDBE, _p0);
		}
		/// <summary>
		/// Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
		/// </summary>
		public static void Hash_0x41f88a85a579a61d(float _p0)
		{
			Function.Call((Hash)0x41F88A85A579A61D, _p0);
		}
		/// <summary>
		/// p1: 0.3f in R* Scripts
		/// </summary>
		public static void BloodTrailForWaypoint(string _waypointRecording, float _p1)
		{
			Function.Call((Hash)0xB9C92616929CC25D, _waypointRecording, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddBloodTrailPoint(float _x, float _y, float _z)
		{
			Function.Call((Hash)0xDD9DC1AB63D513CE, _x, _y, _z);
		}
		/// <summary>
		/// Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
		/// _ENABLE_*
		/// </summary>
		public static void Hash_0x812c1563185c6fb2()
		{
			Function.Call((Hash)0x812C1563185C6FB2);
		}
		/// <summary>
		/// Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
		/// </summary>
		public static void Hash_0x4bd66b4e3427689b(string _p0)
		{
			Function.Call((Hash)0x4BD66B4E3427689B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddBloodTrailSplat(float _x, float _y, float _z)
		{
			Function.Call((Hash)0xF5E45CB1CF965D2D, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf2f543d48f319a3a()
		{
			Function.Call((Hash)0xF2F543D48F319A3A);
		}
		/// <summary>
		/// _RESET_*
		/// </summary>
		public static void Hash_0x1460b644397453eb()
		{
			Function.Call((Hash)0x1460B644397453EB);
		}
		/// <summary>
		/// Only used in guama1 R* Script
		/// Disables lod/distant lights when BOOL is set to true
		/// </summary>
		public static void DisableFarArtificialLights(bool _disable)
		{
			Function.Call((Hash)0xCD284E2F6AC27EE9, _disable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x453d16d41fc51d3e(bool _p0)
		{
			Function.Call((Hash)0x453D16D41FC51D3E, _p0);
		}
		/// <summary>
		/// Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
		/// </summary>
		public static void Hash_0xc06f2f45a73eabcd(int _entity)
		{
			Function.Call((Hash)0xC06F2F45A73EABCD, _entity);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
		/// </summary>
		public static void SetTimecycleModifier(string _modifierName)
		{
			Function.Call((Hash)0xFA08722A5EA82DA7, _modifierName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTimecycleModifierStrength(float _strength)
		{
			Function.Call((Hash)0xFDB74C9CC54C3F37, _strength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTransitionTimecycleModifier(string _modifierName, float _transitionBlend)
		{
			Function.Call((Hash)0xFF927A09F481D80C, _modifierName, _transitionBlend);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTransitionOutOfTimecycleModifier(float _strength)
		{
			Function.Call((Hash)0xBB6C707F20D955D4, _strength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearTimecycleModifier()
		{
			Function.Call((Hash)0x0E3F4AF2D63491FB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTimecycleModifierIndex()
		{
			return Function.Call<int>((Hash)0xA705394293E2B3D3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTimecycleTransitionModifierIndex()
		{
			return Function.Call<int>((Hash)0x2DA67BA3C8A6755D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x67b0778c62e74423(int _p0)
		{
			Function.Call((Hash)0x67B0778C62E74423, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6c03118e9e5c1a14(int _p0)
		{
			Function.Call((Hash)0x6C03118E9E5C1A14, _p0);
		}
		/// <summary>
		/// _GET_C* - _GET_E*
		/// </summary>
		public static float GetModifiedVisibilityDistance()
		{
			return Function.Call<float>((Hash)0x25CA89B2A39DCC69);
		}
		/// <summary>
		/// Old name: _ENABLE_EXTRA_TIMECYCLE_MODIFIER_STRENGTH
		/// </summary>
		public static void EnableMoonCycleOverride(float _strength)
		{
			Function.Call((Hash)0x6FE93BCC7BF12B63, _strength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTvChannel(int _channel)
		{
			Function.Call((Hash)0x593FAF7FC9401A56, _channel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTvChannel()
		{
			return Function.Call<int>((Hash)0xF90FBFD68F3C59AE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTvVolume(float _volume)
		{
			Function.Call((Hash)0x73A97068787D7231, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DrawTvChannel(float _xPos, float _yPos, float _xScale, float _yScale, float _rotation, int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0xC0A145540254A840, _xPos, _yPos, _xScale, _yScale, _rotation, _red, _green, _blue, _alpha);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTvChannelPlaylist(int _tvChannel, string _playlistName, bool _restart)
		{
			Function.Call((Hash)0xDEC6B25F5DC8925B, _tvChannel, _playlistName, _restart);
		}
		/// <summary>
		/// Old name: _IS_TV_PLAYLIST_ITEM_PLAYING
		/// </summary>
		public static bool IsTvshowCurrentlyPlaying(uint _videoCliphash)
		{
			return Function.Call<bool>((Hash)0x4D562223E0EB65F3, _videoCliphash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5c674eb487891f6b()
		{
			return Function.Call<int>((Hash)0x5C674EB487891F6B);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void EnableMovieSubtitles(bool _toggle)
		{
			Function.Call((Hash)0x6FC9B065229C0787, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x32de2bffda43e62a()
		{
			Function.Call((Hash)0x32DE2BFFDA43E62A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd543487a1f12828f(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xD543487A1F12828F, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd9bc98b55bcfaa9b(int _p0)
		{
			Function.Call((Hash)0xD9BC98B55BCFAA9B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x48fe0db54045b975(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x48FE0DB54045B975, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x735762e8d7573e42(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x735762E8D7573E42, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x981c7d863980fa51()
		{
			Function.Call((Hash)0x981C7D863980FA51);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxPreloadPostfx(string _effectName)
		{
			Function.Call((Hash)0x5199405EABFBD7F0, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AnimpostfxHasLoaded(string _effectName)
		{
			return Function.Call<bool>((Hash)0xBF2DD155B2ADCD0A, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxSetToUnload(string _effectName)
		{
			Function.Call((Hash)0x37D7BDBA89F13959, _effectName);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
		/// </summary>
		public static void AnimpostfxPlay(string _effectName)
		{
			Function.Call((Hash)0x4102732DF6B4005F, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxPlayTimed(string _effectName, int _duration)
		{
			Function.Call((Hash)0x3A9A281FF71249E9, _effectName, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxStop(string _effectName)
		{
			Function.Call((Hash)0xB4FD7446BAB2F394, _effectName);
		}
		/// <summary>
		/// effectName2, p2 and p3 are unused
		/// 
		/// ANIMPOSTFX_*
		/// </summary>
		public static void Hash_0x26dd2fb0a88cc412(string _effectName, string _effectName2, int _p2, int _p3)
		{
			Function.Call((Hash)0x26DD2FB0A88CC412, _effectName, _effectName2, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxClearEffect(string _effectName)
		{
			Function.Call((Hash)0xC5CB91D65852ED7E, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AnimpostfxIsRunning(string _effectName)
		{
			return Function.Call<bool>((Hash)0x4A123E85D7C4CA0B, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AnimpostfxIsTagPlaying(string _effectName)
		{
			return Function.Call<bool>((Hash)0x2D4F9C852CE8A253, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxStopAll()
		{
			Function.Call((Hash)0x66560A0D4C64FD21);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxStopTag(string _effectName)
		{
			Function.Call((Hash)0xAD74C22A541AB987, _effectName);
		}
		/// <summary>
		/// must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
		/// </summary>
		public static void AnimpostfxSetStrength(string _effectName, float _strength)
		{
			Function.Call((Hash)0xCAB4DD2D5B2B7246, _effectName, _strength);
		}
		/// <summary>
		/// Health Core Effect Filter Potency: p1 = 1
		/// Stamina Core Effect Filter Potency: p1 = 2
		/// Multiple Core Effect Filter Potency: p1 = 3
		/// </summary>
		public static void AnimpostfxSetPotency(string _effectName, int _p1, float _potency)
		{
			Function.Call((Hash)0xF972F0AB16DC5260, _effectName, _p1, _potency);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxSetPostfxColor(string _effectName, int _p1, int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0x63011D0C7C6519E0, _effectName, _p1, _red, _green, _blue, _alpha);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static bool Hash_0xb958d97a0dfaa0c2(string _effectName)
		{
			return Function.Call<bool>((Hash)0xB958D97A0DFAA0C2, _effectName);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static void Hash_0xa201a3d0ac087c37(string _effectName)
		{
			Function.Call((Hash)0xA201A3D0AC087C37, _effectName);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static bool Hash_0xfbf161fcfec8589e(string _effectName, int _p1, bool _p2, bool _p3)
		{
			return Function.Call<bool>((Hash)0xFBF161FCFEC8589E, _effectName, _p1, _p2, _p3);
		}
		/// <summary>
		/// Known effects: MP_Trans_SceneToPhoto
		/// MP_Trans_WinLose
		/// SpectateFilter
		/// MP_CharacterCreatorPhoto
		/// MP_Trans_PhotoToScene
		/// InterrogationHit
		/// </summary>
		public static uint AnimpostfxGetStackhash(string _effectName)
		{
			return Function.Call<uint>((Hash)0x842CCC9491FFCD9B, _effectName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxPreloadPostfxByStackhash(uint _effectNameHash)
		{
			Function.Call((Hash)0xF3E039322BFBD4D8, _effectNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AnimpostfxIsPreloadingByStackhash(uint _effectNameHash)
		{
			return Function.Call<bool>((Hash)0x59EA80079B86D8C7, _effectNameHash);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static void Hash_0x38d9d50f2085e9b3(uint _effectNameHash)
		{
			Function.Call((Hash)0x38D9D50F2085E9B3, _effectNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxPlayTag(uint _effectNameHash)
		{
			Function.Call((Hash)0x9B8D5D4CB8AF58B3, _effectNameHash);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static void Hash_0xc76fc4c2fc5f4405(uint _effectNameHash)
		{
			Function.Call((Hash)0xC76FC4C2FC5F4405, _effectNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnimpostfxStopStackhashPostfx(uint _effectNameHash)
		{
			Function.Call((Hash)0xEDA5CBECF56E1386, _effectNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AnimpostfxIsStackhashPlaying(uint _effectNameHash)
		{
			return Function.Call<bool>((Hash)0xEEF83A759AE06A27, _effectNameHash);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static bool Hash_0xe75cddebf618c8ff(uint _effectNameHash)
		{
			return Function.Call<bool>((Hash)0xE75CDDEBF618C8FF, _effectNameHash);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static void Hash_0x71845905bccde781(uint _effectNameHash)
		{
			Function.Call((Hash)0x71845905BCCDE781, _effectNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AnimpostfxHasEventTriggeredByStackhash(uint _effectNameHash, int _p1, bool _p2, bool _p3)
		{
			return Function.Call<bool>((Hash)0x9AB192A9EF980EED, _effectNameHash, _p1, _p2, _p3);
		}
		/// <summary>
		/// Returns whether the 'killFX' setting is enabled.
		/// 
		/// ANIMPOSTFX_*
		/// </summary>
		public static bool Hash_0xff584f097c17fa8f()
		{
			return Function.Call<bool>((Hash)0xFF584F097C17FA8F);
		}
		/// <summary>
		/// ANIMPOSTFX_*
		/// </summary>
		public static bool Hash_0x3da7a10583a4bec0()
		{
			return Function.Call<bool>((Hash)0x3DA7A10583A4BEC0);
		}
		/// <summary>
		/// Doesn't actually return anything.
		/// 
		/// ANIMPOSTFX_*
		/// </summary>
		public static int Hash_0xc37792a3f9c90771()
		{
			return Function.Call<int>((Hash)0xC37792A3F9C90771);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa0f4d12d6042f6d5(int _p0, int _p1)
		{
			Function.Call((Hash)0xA0F4D12D6042F6D5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8996fa6ad9fe4e90(int _p0)
		{
			Function.Call((Hash)0x8996FA6AD9FE4E90, _p0);
		}
		/// <summary>
		/// Only used in guama1 R* SP Script while spawning the ship
		/// </summary>
		public static void Hash_0xc38b4952b728397a(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xC38B4952B728397A, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PedshotIsAvailable()
		{
			return Function.Call<bool>((Hash)0xAF6E67D073D2DCE2);
		}
		/// <summary>
		/// R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
		/// </summary>
		public static bool Hash_0xfd05b1dde83749fa(string _p0)
		{
			return Function.Call<bool>((Hash)0xFD05B1DDE83749FA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc2b8164c3be871a4()
		{
			Function.Call((Hash)0xC2B8164C3BE871A4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3e2fddbe435a8787()
		{
			Function.Call((Hash)0x3E2FDDBE435A8787);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x55285f885f662169()
		{
			Function.Call((Hash)0x55285F885F662169);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd9c24f53631f2372(string _texture, int _ped, int _playerSlot)
		{
			return Function.Call<bool>((Hash)0xD9C24F53631F2372, _texture, _ped, _playerSlot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x196d3acbeba4a44b(int _personaPhotoLocalCacheType)
		{
			Function.Call((Hash)0x196D3ACBEBA4A44B, _personaPhotoLocalCacheType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa1a86055792fb249(int _personaPhotoLocalCacheType)
		{
			Function.Call((Hash)0xA1A86055792FB249, _personaPhotoLocalCacheType);
		}
		/// <summary>
		/// Only used in R* SP Script spd_agnesdown1
		/// </summary>
		public static bool Hash_0x402e1a61d2587fcd(int _p0, float _x, float _y, float _z, float _p4, float _p5, float _heading)
		{
			return Function.Call<bool>((Hash)0x402E1A61D2587FCD, _p0, _x, _y, _z, _p4, _p5, _heading);
		}
		/// <summary>
		/// Only used in R* SP Script spd_agnesdown1
		/// </summary>
		public static int Hash_0x5c9c3a466b3296a8(int _p0)
		{
			return Function.Call<int>((Hash)0x5C9C3A466B3296A8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa15ccab8ad038291(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xA15CCAB8AD038291, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x285438c26c732f9d()
		{
			return Function.Call<int>((Hash)0x285438C26C732F9D);
		}
		/// <summary>
		/// state: false disables artificial interior light sources for specific proxyInteriorIndex
		/// </summary>
		public static void SetProxyInteriorIndexArtificialLightsState(int _proxyInteriorIndex, bool _state)
		{
			Function.Call((Hash)0xBFCB17895BB99E4E, _proxyInteriorIndex, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsProxyInteriorIndexArtificialLightsEnabled(int _proxyInteriorIndex)
		{
			return Function.Call<bool>((Hash)0x113857D66A9CABE6, _proxyInteriorIndex);
		}
		/// <summary>
		/// Returns proxyInteriorIndex
		/// </summary>
		public static int GetProxyInteriorIndex(int _interiorId)
		{
			return Function.Call<int>((Hash)0x5D1C5D8E62E8EE1C, _interiorId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9d1b0b5066205692()
		{
			Function.Call((Hash)0x9D1B0B5066205692);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc489fe31ac726512(int _p0, int _p1)
		{
			Function.Call((Hash)0xC489FE31AC726512, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCloudLayer(float _x, float _y, int _p2)
		{
			Function.Call((Hash)0xB8C984C0D47F4F07, _x, _y, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCloudNoise(float _x, float _y, float _z)
		{
			Function.Call((Hash)0xFE7966DF01452F32, _x, _y, _z);
		}
		/// <summary>
		/// Only used in finale2, smuggler2, winter4
		/// _SET_CLOUD_A* - _SET_CLOUD_H*
		/// </summary>
		public static void SetCloudPosition(float _x, float _y, float _z)
		{
			Function.Call((Hash)0x10C1767B93257480, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCloudHeight(float _height)
		{
			Function.Call((Hash)0xC332C91388F5580B, _height);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x085c5b61a0114f32(int _p0, int _p1)
		{
			Function.Call((Hash)0x085C5B61A0114F32, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1ff8731be1dfc0c0(int _p0, int _p1)
		{
			Function.Call((Hash)0x1FF8731BE1DFC0C0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfc9b53c072f418e0()
		{
			return Function.Call<int>((Hash)0xFC9B53C072F418E0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x94b261f1f35293e1(int _p0)
		{
			Function.Call((Hash)0x94B261F1F35293E1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableEntitymask()
		{
			Function.Call((Hash)0xFAAD23DE7A54FC14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableEntitymask()
		{
			Function.Call((Hash)0x5C9978A2A3DC3D0D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddEntityToEntityMask(int _entity, int _mask)
		{
			Function.Call((Hash)0xC6F81FCD15350323, _entity, _mask);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddEntityToEntityMaskWithIntensity(int _entity, int _mask, float _intensity)
		{
			Function.Call((Hash)0x958DEBD9353C0935, _entity, _mask, _intensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveEntityFromEntityMask(int _entity)
		{
			Function.Call((Hash)0x56A786E87FF53478, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe8a8378bf651079c(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0xE8A8378BF651079C, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe92012611461a42a(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xE92012611461A42A, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x249cd6b7285536f2(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x249CD6B7285536F2, _p0, _p1, _p2);
		}
		/// <summary>
		/// Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
		/// </summary>
		public static void Hash_0xaf4d239b8903fcbe()
		{
			Function.Call((Hash)0xAF4D239B8903FCBE);
		}
		/// <summary>
		/// enum class eSnowCoverageType
		/// {
		/// 	Primary,
		/// 	Secondary,
		/// 	Xmas,
		/// 	XmasSecondary // since b1232
		/// };
		/// </summary>
		public static void SetSnowCoverageType(int _type)
		{
			Function.Call((Hash)0xF02A9C330BBFC5C7, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x519928df02eb5101(int _p0)
		{
			Function.Call((Hash)0x519928DF02EB5101, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1c6306e5bc25c29c()
		{
			Function.Call((Hash)0x1C6306E5BC25C29C);
		}
		// :#################: //
		// : namespace: GANG : //
		// :#################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGangIdValid(int _gangId)
		{
			return Function.Call<bool>((Hash)0xD6F6ACF4392187FB, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGangInSession(int _gangId)
		{
			return Function.Call<bool>((Hash)0x93A91A351A07360E, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGangActive(int _gangId)
		{
			return Function.Call<bool>((Hash)0x0F99F6436528A089, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGangOpen(int _gangId)
		{
			return Function.Call<bool>((Hash)0xFCF96CCBD81B24C8, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9970ae8c3d706139()
		{
			return Function.Call<int>((Hash)0x9970AE8C3D706139);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd1a226f2e05e58fc(int _p0, int _p1)
		{
			Function.Call((Hash)0xD1A226F2E05E58FC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc5bf29f4035277c2(int _p0)
		{
			return Function.Call<int>((Hash)0xC5BF29F4035277C2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkLeaveGang(bool _disband)
		{
			Function.Call((Hash)0x0A04A07BC3074EDB, _disband);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkKickGangMember(int _player, int _banTimeSeconds)
		{
			Function.Call((Hash)0xCD9E2D9BC52FD80F, _player, _banTimeSeconds);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc0474c8bcf6787ad(int _p0)
		{
			return Function.Call<int>((Hash)0xC0474C8BCF6787AD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGangLeader(int _player)
		{
			return Function.Call<bool>((Hash)0x424B17A7DC5C90BC, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGangMember(int _gangId, int _player)
		{
			return Function.Call<bool>((Hash)0x9BE7DCB22D32CCBE, _gangId, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsInSameGang(int _player1, int _player2)
		{
			return Function.Call<bool>((Hash)0x3F59FE6F37869576, _player1, _player2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsInMyGang(int _player)
		{
			return Function.Call<bool>((Hash)0x81FB74C83C2ED69F, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNumGangMembers(int _gangId)
		{
			return Function.Call<int>((Hash)0x149A2751AB66AC02, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGangSize(int _gangId)
		{
			return Function.Call<int>((Hash)0x853B0FA4D8732C57, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x833d8268d51b4522(int _p0)
		{
			return Function.Call<int>((Hash)0x833D8268D51B4522, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGangId(int _player)
		{
			return Function.Call<int>((Hash)0x901E0DC25080C8B9, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGangMembers(int _gangId, int _memberHandles)
		{
			return Function.Call<int>((Hash)0xD1BF325C8252A982, _gangId, _memberHandles);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xda801f7f6a5278d3(int _p0)
		{
			return Function.Call<int>((Hash)0xDA801F7F6A5278D3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2f7eb8b6f6afe79c(int _p0)
		{
			return Function.Call<int>((Hash)0x2F7EB8B6F6AFE79C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x53a94294fddcf98c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x53A94294FDDCF98C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGangLeader(int _gangId)
		{
			return Function.Call<int>((Hash)0x4BE6C13A45CCA8EC, _gangId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetGangLeaderHandle(int _gangId, int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0xCE88A261DCBBA0D9, _gangId, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x6102830f764b3de1(int _player)
		{
			return Function.Call<bool>((Hash)0x6102830F764B3DE1, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb38c256498748413()
		{
			Function.Call((Hash)0xB38C256498748413);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe4c64cd37cb176aa(int _p0)
		{
			return Function.Call<int>((Hash)0xE4C64CD37CB176AA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7baa30c9bbe8aee7(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x7BAA30C9BBE8AEE7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0e5c9fb9ed5dff1c(int _p0)
		{
			return Function.Call<int>((Hash)0x0E5C9FB9ED5DFF1C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb22b1d9f74095382(int _p0)
		{
			Function.Call((Hash)0xB22B1D9F74095382, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xee4f20004d0288b7()
		{
			Function.Call((Hash)0xEE4F20004D0288B7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xad22ab64fa428df3(int _p0)
		{
			Function.Call((Hash)0xAD22AB64FA428DF3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x48d82c83987e18e4(int _p0)
		{
			return Function.Call<int>((Hash)0x48D82C83987E18E4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa9ceae8d6637fbad(int _p0)
		{
			Function.Call((Hash)0xA9CEAE8D6637FBAD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x51c5ef47086aa0d7()
		{
			return Function.Call<int>((Hash)0x51C5EF47086AA0D7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x644e02f24f9d4e98(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x644E02F24F9D4E98, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3adc71a66356d706()
		{
			return Function.Call<int>((Hash)0x3ADC71A66356D706);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfa7c5b7e087a4ceb()
		{
			return Function.Call<int>((Hash)0xFA7C5B7E087A4CEB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1f11702ddbd915c6(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x1F11702DDBD915C6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7933754f260b428a(int _player)
		{
			return Function.Call<int>((Hash)0x7933754F260B428A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xafd3599a3cc5637d()
		{
			return Function.Call<int>((Hash)0xAFD3599A3CC5637D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc81a9e2c8efd28d5(int _p0)
		{
			Function.Call((Hash)0xC81A9E2C8EFD28D5, _p0);
		}
		// :#############################: //
		// : namespace: GOOGLE_ANALYTICS : //
		// :#############################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void GoogleAnalyticsPushPage(string _pageName)
		{
			Function.Call((Hash)0xD43A616AE3AC4EF6, _pageName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GoogleAnalyticsPopPage(string _pageName)
		{
			Function.Call((Hash)0xC6DE040378364798, _pageName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GoogleAnalyticsStartEvent(string _eventCategory, string _eventAction, string _eventLabel, int _eventValue)
		{
			return Function.Call<bool>((Hash)0x1C54F031D7C0F7AC, _eventCategory, _eventAction, _eventLabel, _eventValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GoogleAnalyticsEndEvent()
		{
			return Function.Call<bool>((Hash)0x87BBCC4360A9BDE3);
		}
		// :################: //
		// : namespace: HUD : //
		// :################: //
		/// <summary>
		/// Enables reduced time scale while menus such as weapon wheel and satchel are open.
		/// </summary>
		public static void EnableReducedMenuTimeScale()
		{
			Function.Call((Hash)0x26F6BBEA2CE3E3DC);
		}
		/// <summary>
		/// Disables reduced time scale while menus such as weapon wheel and satchel are open.
		/// </summary>
		public static void DisableReducedMenuTimeScale()
		{
			Function.Call((Hash)0xC5C7A2F6567FCCBC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableHudContextThisFrame(uint _component)
		{
			Function.Call((Hash)0xC9CAEAEEC1256E54, _component);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
		/// Old name: _HIDE_HUD_COMPONENT
		/// </summary>
		public static void EnableHudContext(uint _component)
		{
			Function.Call((Hash)0x4CC5F2FC1332577F, _component);
		}
		/// <summary>
		/// Old name: _DISPLAY_HUD_COMPONENT
		/// </summary>
		public static void DisableHudContext(uint _component)
		{
			Function.Call((Hash)0x8BC7C1F929D07BF3, _component);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7ec0d68233e391ac(int _p0)
		{
			return Function.Call<int>((Hash)0x7EC0D68233E391AC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BusyspinnerSetText(string _text)
		{
			Function.Call((Hash)0x7F78CD75CC4539E4, _text);
		}
		/// <summary>
		/// Removes the loading prompt at the bottom right of the screen.
		/// </summary>
		public static void BusyspinnerOff()
		{
			Function.Call((Hash)0x58F441B90EA84D06);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BusyspinnerIsOn()
		{
			return Function.Call<bool>((Hash)0x823BF7B1DF613A21);
		}
		/// <summary>
		/// Old name: _GET_TEXT_SUBSTRING
		/// </summary>
		public static string GetCharacterFromAudioConversationFilename(string _text, int _position, int _length)
		{
			return Function.Call<string>((Hash)0x9D7E12EC6A1EE4E5, _text, _position, _length);
		}
		/// <summary>
		/// Gets a string literal from a label name.
		/// 
		/// Old name: _GET_LABEL_TEXT
		/// </summary>
		public static string GetFilenameForAudioConversation(string _labelName)
		{
			return Function.Call<string>((Hash)0xCFEDCCAD3C5BA90D, _labelName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAllHelpMessages()
		{
			Function.Call((Hash)0x916ED8321F087059);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TextBlockIsLoaded(string _textBlock)
		{
			return Function.Call<bool>((Hash)0xD0976CC34002DB57, _textBlock);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TextBlockIsStreamed(string _textBlock)
		{
			return Function.Call<bool>((Hash)0x3CF96E16265B7DC8, _textBlock);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TextBlockRequest(string _textBlock)
		{
			Function.Call((Hash)0xF66090013DE648D5, _textBlock);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TextBlockDelete(string _textBlock)
		{
			Function.Call((Hash)0xAA03F130A637D923, _textBlock);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesTextBlockExist(string _textDatabase)
		{
			return Function.Call<bool>((Hash)0x2C729F2B94CEA911, _textDatabase);
		}
		/// <summary>
		/// Checks if the passed gxt name exists in the game files.
		/// </summary>
		public static bool DoesTextLabelExist(string _label)
		{
			return Function.Call<bool>((Hash)0x73C258C68D6F55B6, _label);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetLabelText2(string _label)
		{
			return Function.Call<string>((Hash)0x3429670F9B9EF2D3, _label);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetTextSubstring2(string _text, int _length)
		{
			return Function.Call<string>((Hash)0xD8402B858F4DDD88, _text, _length);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x806862e5d266cf38(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x806862E5D266CF38, _p0, _p1, _p2);
		}
		/// <summary>
		/// Returns the length of the string passed (much like strlen).
		/// </summary>
		public static int GetLengthOfLiteralString(string _string)
		{
			return Function.Call<int>((Hash)0x481FBF588B0B76DB, _string);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLengthOfLiteralStringInBytes(string _string)
		{
			return Function.Call<int>((Hash)0xDC5AD6B7AB8184F5, _string);
		}
		/// <summary>
		/// Returns the label text given the hash.
		/// 
		/// Old name: _GET_LABEL_TEXT_BY_HASH
		/// </summary>
		public static string GetStringFromHashKey(uint _labelHash)
		{
			return Function.Call<string>((Hash)0xBD5DD5EAE2B6CE14, _labelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsRadarPreferenceSwitchedOn()
		{
			return Function.Call<bool>((Hash)0x81E47F0EE1F2B21E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSubtitlePreferenceSwitchedOn()
		{
			return Function.Call<bool>((Hash)0x7C4AC9573587F2DF);
		}
		/// <summary>
		/// If Hud should be displayed
		/// </summary>
		public static void DisplayHud(bool _toggle)
		{
			Function.Call((Hash)0xD63FE3AF9FB3D53F, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsHudHidden()
		{
			return Function.Call<bool>((Hash)0x71B72B478F8189DC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsRadarHidden()
		{
			return Function.Call<bool>((Hash)0x1B82FD5FFA4D666E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsRadarHiddenByScript()
		{
			return Function.Call<bool>((Hash)0x66F35DD9D2B58579);
		}
		/// <summary>
		/// colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
		/// </summary>
		public static void GetColorFromName(uint _colorNameHash, int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0xB981DD2DFAF9B1C9, _colorNameHash, _red, _green, _blue, _alpha);
		}
		/// <summary>
		/// nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
		/// </summary>
		public static void DisplayText(string _text, float _xPos, float _yPos)
		{
			Function.Call((Hash)0xD79334A4BB99BAD1, _text, _xPos, _yPos);
		}
		/// <summary>
		/// This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
		/// </summary>
		public static void SetTextColor(int _r, int _g, int _b, int _a)
		{
			Function.Call((Hash)0x50A41AD966910F03, _r, _g, _b, _a);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTextRenderId(int _renderId)
		{
			Function.Call((Hash)0xE550CDE128D56757, _renderId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RegisterNamedRendertarget(string _name, bool _p1)
		{
			return Function.Call<bool>((Hash)0x98AF2BB6F62BD588, _name, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsNamedRendertargetRegistered(string _name)
		{
			return Function.Call<bool>((Hash)0x3EE32F7964C40FE6, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ReleaseNamedRendertarget(string _name)
		{
			return Function.Call<bool>((Hash)0x0E692EE61761361F, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void LinkNamedRendertarget(uint _modelHash)
		{
			Function.Call((Hash)0x2F506B8556242DDB, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNamedRendertargetRenderId(string _name)
		{
			return Function.Call<int>((Hash)0xB6762A85EE29AA60, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsNamedRendertargetLinked(uint _modelHash)
		{
			return Function.Call<bool>((Hash)0x707032835FF09AE7, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9d37eb5003e0f2cf(int _p0, int _p1)
		{
			Function.Call((Hash)0x9D37EB5003E0F2CF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HideLoadingOnFadeThisFrame()
		{
			Function.Call((Hash)0xEA600AABAF4B9084);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x052d4ac0922af91a(int _p0, int _p1)
		{
			Function.Call((Hash)0x052D4AC0922AF91A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HideHudAndRadarThisFrame()
		{
			Function.Call((Hash)0x36CDD81627A6FCD2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8a59d44189af2bc5(int _p0, int _p1)
		{
			Function.Call((Hash)0x8A59D44189AF2BC5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x160825dadf1b04b3()
		{
			Function.Call((Hash)0x160825DADF1B04B3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9c409bbc492cb5b1()
		{
			return Function.Call<int>((Hash)0x9C409BBC492CB5B1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0501d52d24ea8934(int _p0)
		{
			return Function.Call<int>((Hash)0x0501D52D24EA8934, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x100157d6d7fe32ca(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x100157D6D7FE32CA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x28ae29d909c8fdce(int _p0)
		{
			return Function.Call<int>((Hash)0x28AE29D909C8FDCE, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x2f7bb105144acf30()
		{
			Function.Call((Hash)0x2F7BB105144ACF30);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xbfff81e12a745a5f()
		{
			Function.Call((Hash)0xBFFF81E12A745A5F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMissionName(bool _p0, string _name)
		{
			Function.Call((Hash)0x402669A4BDAA72DA, _p0, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMissionNameForUgcMission(bool _p0, string _name)
		{
			Function.Call((Hash)0xD98630CE73C61E98, _p0, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xce0d2f5586627cce(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xCE0D2F5586627CCE, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetHudScreenPositionFromWorldPosition(float _worldX, float _worldY, float _worldZ, float _screenX, float _screenY)
		{
			return Function.Call<bool>((Hash)0xB39C81628EF10B42, _worldX, _worldY, _worldZ, _screenX, _screenY);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HideHudThisFrame()
		{
			Function.Call((Hash)0xBF4F34A85CA2970D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableFrontendThisFrame()
		{
			Function.Call((Hash)0x56CE42A528156A67);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5651516d947abc53()
		{
			Function.Call((Hash)0x5651516D947ABC53);
		}
		/// <summary>
		/// Old name: _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
		/// </summary>
		public static void AllowPauseWhenNotInStateOfPlayThisFrame()
		{
			Function.Call((Hash)0x30996422DF1EE561);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFrontendActive(bool _active)
		{
			Function.Call((Hash)0xCE47C21C0687EBC2, _active);
		}
		/// <summary>
		/// Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
		/// </summary>
		public static bool IsPauseMenuActive()
		{
			return Function.Call<bool>((Hash)0x535384D6067BA42E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShowPlayerCores(bool _state)
		{
			Function.Call((Hash)0x50C803A4CD5932C5, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShowHorseCores(bool _state)
		{
			Function.Call((Hash)0xD4EE21B7CC7FD350, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3fe4fb41ef7d2196(int _p0)
		{
			Function.Call((Hash)0x3FE4FB41EF7D2196, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void JournalWriteEntry(int _p0)
		{
			Function.Call((Hash)0x6DFDD665E416B093, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int JournalCanWriteEntry(int _p0)
		{
			return Function.Call<int>((Hash)0xCF782691D91F270E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int JournalGetEntryCount()
		{
			return Function.Call<int>((Hash)0xE65B5DE53351BE22);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int JournalGetEntryAtIndex(int _p0)
		{
			return Function.Call<int>((Hash)0x3D16ABD7A1FD8C96, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int JournalGetGrimeAtIndex(int _p0)
		{
			return Function.Call<int>((Hash)0xCB5945E1B855852F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int JournalGetEntryInfo(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x5514C3E60673530F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int JournalGetTextureWithLayout(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x62CC549B3B8EA2AA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void JournalMarkRead(int _p0)
		{
			Function.Call((Hash)0xE4509BABE59BD24E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void JournalClearAllProgress()
		{
			Function.Call((Hash)0xF402978DE6F88D6E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiRequestScene(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xB6857100F8FD433C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf1e6979c0b779985(int _uiscene)
		{
			Function.Call((Hash)0xF1E6979C0B779985, _uiscene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiGetSceneUiobject(int _p0)
		{
			return Function.Call<int>((Hash)0xBE1067CD1C9570F6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiMovieviewSetRenderTarget(int _p0, int _p1)
		{
			Function.Call((Hash)0x51DE09A2196BD951, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptCreate(uint _inputHash, string _labelName, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0x29FA7910726C3889, _inputHash, _labelName, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptRegisterBegin()
		{
			return Function.Call<int>((Hash)0x04F97DE45A519419);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptRegisterEnd(int _prompt)
		{
			Function.Call((Hash)0xF7AA2696A22AD8B9, _prompt);
		}
		/// <summary>
		/// PP_Low = 0,
		/// PP_Normal = 1,
		/// PP_High = 2,
		/// PP_MissionCritical = 3
		/// </summary>
		public static void UiPromptSetPriority(int _prompt, int _priority)
		{
			Function.Call((Hash)0xCA24F528D0D16289, _prompt, _priority);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptSetControlAction(int _prompt, uint _action)
		{
			return Function.Call<int>((Hash)0xB5352B7494A08258, _prompt, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetAllowedAction(int _prompt, uint _action)
		{
			Function.Call((Hash)0x565C1CE183CB0EAF, _prompt, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetStandardMode(int _prompt, bool _releaseMode)
		{
			Function.Call((Hash)0xCC6656799977741B, _prompt, _releaseMode);
		}
		/// <summary>
		/// Params: p1 is 0
		/// </summary>
		public static bool UiPromptHasStandardModeCompleted(int _prompt, int _p1)
		{
			return Function.Call<bool>((Hash)0xC92AC953F0A982AE, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetPressedTimedMode(int _prompt, int _depletionTimeMs)
		{
			Function.Call((Hash)0x1473D3AF51D54276, _prompt, _depletionTimeMs);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasPressedTimedModeCompleted(int _prompt)
		{
			return Function.Call<bool>((Hash)0x3CE854D250A88DAF, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasPressedTimedModeFailed(int _prompt)
		{
			return Function.Call<bool>((Hash)0x1A17B9ECFF617562, _prompt);
		}
		/// <summary>
		/// Params: p2 is 304000 in R* SP Script coachrobberies
		/// </summary>
		public static void UiPromptSetHoldMode(int _prompt, int _holdTimeMs)
		{
			Function.Call((Hash)0x94073D5CA3F16B7B, _prompt, _holdTimeMs);
		}
		/// <summary>
		/// Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
		/// </summary>
		public static void UiPromptSetStandardizedHoldMode(int _prompt, uint _timedEventHash)
		{
			Function.Call((Hash)0x74C7D7B72ED0D3CF, _prompt, _timedEventHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetHoldIndefinitelyMode(int _prompt)
		{
			Function.Call((Hash)0xEA5CCF4EEB2F82D1, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetHoldAutoFillMode(int _prompt, int _autoFillTimeMs, int _holdTimeMs)
		{
			Function.Call((Hash)0x3CE932E737C145D6, _prompt, _autoFillTimeMs, _holdTimeMs);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetHoldAutoFillWithDecayMode(int _prompt, int _autoFillTimeMs, int _holdTimeMs)
		{
			Function.Call((Hash)0xA3F2149AA24F3D8E, _prompt, _autoFillTimeMs, _holdTimeMs);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasHoldAutoFillMode(int _prompt)
		{
			return Function.Call<bool>((Hash)0x8010BEBD0D5ED5BC, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasHoldMode(int _prompt)
		{
			return Function.Call<bool>((Hash)0xB60C9F9ED47ABB76, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsHoldModeRunning(int _prompt)
		{
			return Function.Call<bool>((Hash)0xC7D70EAEF92EFF48, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasHoldModeCompleted(int _prompt)
		{
			return Function.Call<bool>((Hash)0xE0F65F0640EF0617, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x81801291806dbc50(int _p0)
		{
			return Function.Call<int>((Hash)0x81801291806DBC50, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashMode(int _prompt, int _mashes)
		{
			Function.Call((Hash)0xDF6423BF071C7F71, _prompt, _mashes);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashIndefinitelyMode(int _prompt)
		{
			Function.Call((Hash)0x7B66E89312727274, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashWithResistanceMode(int _prompt, int _mashes, float _p2, float _p3)
		{
			Function.Call((Hash)0xCD1BDFF15EFA79F5, _prompt, _mashes, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashWithResistanceCanFailMode(int _prompt, int _mashes, float _p2, float _p3)
		{
			Function.Call((Hash)0xDC0CB602DEADBA53, _prompt, _mashes, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashAutoFillMode(int _prompt, int _autoFillTimeMs, int _mashes)
		{
			Function.Call((Hash)0x6C39587D7CC66801, _prompt, _autoFillTimeMs, _mashes);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashManualMode(int _prompt, float _p1, float _p2, float _p3, int _p4)
		{
			Function.Call((Hash)0x32DF729D8BD3C1C6, _prompt, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashManualCanFailMode(int _prompt, float _p1, float _p2, float _p3, int _p4)
		{
			Function.Call((Hash)0x179DCF71F705DA20, _prompt, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasManualMashMode(int _prompt)
		{
			return Function.Call<bool>((Hash)0xA6C6A4ADB3BAC409, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasMashMode(int _prompt)
		{
			return Function.Call<bool>((Hash)0xCD072523791DDC1B, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb0e8599243b3f568(int _p0)
		{
			return Function.Call<int>((Hash)0xB0E8599243B3F568, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasMashModeCompleted(int _prompt)
		{
			return Function.Call<bool>((Hash)0x845CE958416DC473, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptHasMashModeFailed(int _prompt)
		{
			return Function.Call<bool>((Hash)0x25B18E530CF39D6F, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float UiPromptGetMashModeProgress(int _prompt)
		{
			return Function.Call<float>((Hash)0x8A9585293863B8A5, _prompt);
		}
		/// <summary>
		/// standard (prompt not held) rate: (1f / 128f)
		/// fast (prompt held) rate: (1f / 64f)
		/// punitive (been hit) rate: (1f / 128f)
		/// </summary>
		public static void UiPromptSetMashManualModeIncreasePerPress(int _prompt, float _rate)
		{
			Function.Call((Hash)0xA0D1D79C6036A855, _prompt, _rate);
		}
		/// <summary>
		/// standard (prompt not held) rate: 0.035f
		/// fast (prompt held) rate: 0.015f
		/// punitive (been hit) rate: 0.14f
		/// </summary>
		public static void UiPromptSetMashManualModeDecaySpeed(int _prompt, float _speed)
		{
			Function.Call((Hash)0x7D393C247FB9B431, _prompt, _speed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetMashManualModePressedGrowthSpeed(int _prompt, float _speed)
		{
			Function.Call((Hash)0x56DBB26F98582C29, _prompt, _speed);
		}
		/// <summary>
		/// Used for controllers
		/// </summary>
		public static void UiPromptSetRotateMode(int _prompt, float _p1, bool _counterclockwise)
		{
			Function.Call((Hash)0x7ABE7095FB3D2581, _prompt, _p1, _counterclockwise);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetTargetMode(int _prompt, float _p1, float _p2, int _p3)
		{
			Function.Call((Hash)0x5F6503D9CD2754EB, _prompt, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetTargetModeTarget(int _prompt, float _p1, float _p2)
		{
			Function.Call((Hash)0x5E019C45DD3B6A14, _prompt, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetTargetModeProgress(int _prompt, float _progress)
		{
			Function.Call((Hash)0x00123054BEC8A30F, _prompt, _progress);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetBeatMode(int _prompt, bool _toggle)
		{
			Function.Call((Hash)0xF957A1654C6322FE, _prompt, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptWasBeatModePressedInTimeWindow(int _prompt)
		{
			return Function.Call<bool>((Hash)0x1FE4788AB1430C55, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetBeatModeGrayedOut(int _prompt, int _p1)
		{
			Function.Call((Hash)0xB487A4936FBF40AC, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptRestartModes(int _prompt)
		{
			Function.Call((Hash)0xDC6C55DFA2C24EE5, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetSpinnerSpeed(int _prompt, int _p1)
		{
			Function.Call((Hash)0xAC6586A7FDCD4B68, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetSpinnerPosition(int _prompt, int _p1)
		{
			Function.Call((Hash)0x832CB510DE546282, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetUrgentPulsingEnabled(int _prompt, bool _toggle)
		{
			Function.Call((Hash)0xC5F428EE08FA7F2C, _prompt, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptGetUrgentPulsingEnabled(int _prompt)
		{
			return Function.Call<bool>((Hash)0x1FBA0DABECDDB52B, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetTag(int _prompt, int _p1)
		{
			Function.Call((Hash)0xDEC85C174751292B, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptGetGroupIdForTargetEntity(int _entity)
		{
			return Function.Call<int>((Hash)0xB796970BD125FCE8, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptGetGroupIdForScenarioPoint(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xCB73D7521E7103F0, _p0, _p1);
		}
		/// <summary>
		/// tabIndex: specifies tab of prompt
		/// </summary>
		public static void UiPromptSetGroup(int _prompt, int _groupId, int _tabIndex)
		{
			Function.Call((Hash)0x2F11D3A254169EA4, _prompt, _groupId, _tabIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptRemoveGroup(int _prompt, int _p1)
		{
			Function.Call((Hash)0x4E52C800A28F7BE8, _prompt, _p1);
		}
		/// <summary>
		/// Note: you must use VAR_STRING for p1 if string is not part of text database
		/// tabAmount: specifies number of tabs in prompt group
		/// tabDefaultIndex: specifies starting index
		/// p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
		/// </summary>
		public static int UiPromptSetActiveGroupThisFrame(uint _hash, string _name, int _tabAmount, int _tabDefaultIndex, int _p4, int _prompt)
		{
			return Function.Call<int>((Hash)0xC65A45D4453C2627, _hash, _name, _tabAmount, _tabDefaultIndex, _p4, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptGetGroupActivePage(uint _hash)
		{
			return Function.Call<int>((Hash)0xC1FCC36C3F7286C8, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiPromptSetAmbientGroupThisFrame(int _entity, float _p1, int _p2, int _p3, uint _p4, string _name, int _p6)
		{
			return Function.Call<int>((Hash)0x315C81D760609108, _entity, _p1, _p2, _p3, _p4, _name, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8b55b324a9123f6b(int _groupId, int _volume, string _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0x8B55B324A9123F6B, _groupId, _volume, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptDoesAmbientGroupExist(uint _hash)
		{
			return Function.Call<bool>((Hash)0xEB550B927B34A1BB, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptAddGroupLink(int _p0, int _prompt, int _p2)
		{
			Function.Call((Hash)0x684C96CC7C66E8EF, _p0, _prompt, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptAddGroupReturnLink(int _p0, int _prompt)
		{
			Function.Call((Hash)0x837972ED28159536, _p0, _prompt);
		}
		/// <summary>
		/// TM_ANY = 0,
		/// TM_ON_FOOT,
		/// TM_IN_VEHICLE
		/// </summary>
		public static void UiPromptSetTransportMode(int _prompt, int _mode)
		{
			Function.Call((Hash)0x876E4A35C73A6655, _prompt, _mode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptDisablePromptsThisFrame()
		{
			Function.Call((Hash)0xF1622CE88A1946FB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptDelete(int _prompt)
		{
			Function.Call((Hash)0x00EDE88D4D13CF59, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsValid(int _prompt)
		{
			return Function.Call<bool>((Hash)0x347469FBDD1589A9, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsActive(int _prompt)
		{
			return Function.Call<bool>((Hash)0x546E342E01DE71CF, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetVisible(int _prompt, bool _toggle)
		{
			Function.Call((Hash)0x71215ACCFDE075EE, _prompt, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetEnabled(int _prompt, bool _toggle)
		{
			Function.Call((Hash)0x8A0FB4D03A630D21, _prompt, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetText(int _prompt, string _text)
		{
			Function.Call((Hash)0x5DD02A8318420DD7, _prompt, _text);
		}
		/// <summary>
		/// attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/_UI_PROMPT_SET_ATTRIBUTE/README.md
		/// </summary>
		public static void UiPromptSetAttribute(int _prompt, int _attribute, bool _enabled)
		{
			Function.Call((Hash)0x560E76D5E2E1803F, _prompt, _attribute, _enabled);
		}
		/// <summary>
		/// Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
		/// </summary>
		public static void UiPromptSetType(int _prompt, int _type)
		{
			Function.Call((Hash)0xF4A5C4509BF923B1, _prompt, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x53ce46c01a089da1(int _prompt, int _p1)
		{
			Function.Call((Hash)0x53CE46C01A089DA1, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetManualResolved(int _prompt, int _p1)
		{
			Function.Call((Hash)0xA520C7B05FA4EB2A, _prompt, _p1);
		}
		/// <summary>
		/// Attaches a Volume
		/// </summary>
		public static void UiPromptContextSetVolume(int _prompt, int _volume)
		{
			Function.Call((Hash)0x4D107406667423BE, _prompt, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptContextSetPoint(int _prompt, float _x, float _y, float _z)
		{
			Function.Call((Hash)0xAE84C5EE2C384FB3, _prompt, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptContextSetRadius(int _prompt, float _radius)
		{
			Function.Call((Hash)0x0C718001B77CA468, _prompt, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsPressed(int _prompt)
		{
			return Function.Call<bool>((Hash)0x21E60E230086697F, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsJustPressed(int _prompt)
		{
			return Function.Call<bool>((Hash)0x2787CC611D3FACC5, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsJustReleased(int _prompt)
		{
			return Function.Call<bool>((Hash)0x635CC82FA297A827, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsReleased(int _prompt)
		{
			return Function.Call<bool>((Hash)0xAFC887BA7A7756D6, _prompt);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
		/// </summary>
		public static void UiPromptEnablePromptTypeThisFrame(int _p0)
		{
			Function.Call((Hash)0x06565032897BA861, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptDisablePromptTypeThisFrame(int _p0)
		{
			Function.Call((Hash)0xFC094EF26DD153FA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptFilterClear()
		{
			Function.Call((Hash)0x6A2F820452017EA2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetPromptPriorityPreference(int _ped)
		{
			Function.Call((Hash)0x530A428705BE5DEF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptClearPromptPriorityPreference()
		{
			Function.Call((Hash)0x51259AE5C72D4A1B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsEnabled(int _prompt)
		{
			return Function.Call<bool>((Hash)0x0D00EDDFB58B7F28, _prompt);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiPromptIsControlActionActive(uint _controlAction)
		{
			return Function.Call<bool>((Hash)0x1BE19185B8AFE299, _controlAction);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd6bd313cfa41e57a(int _p0)
		{
			return Function.Call<int>((Hash)0xD6BD313CFA41E57A, _p0);
		}
		/// <summary>
		/// This returns an id that can be used with 0x6095358C4142932A.
		/// </summary>
		public static int UiPromptSetRegisterHorizontalOrientation()
		{
			return Function.Call<int>((Hash)0xD9459157EB22C895);
		}
		/// <summary>
		/// id is the return value from 0xD9459157EB22C895.
		/// </summary>
		public static void UiPromptClearHorizontalOrientation(int _id)
		{
			Function.Call((Hash)0x6095358C4142932A, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiPromptSetOrderingAsInputType(int _prompt, int _p1)
		{
			Function.Call((Hash)0x2F385ECC5200938D, _prompt, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x066725a9d52b3641()
		{
			return Function.Call<int>((Hash)0x066725A9D52B3641);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x958278b97c4affd8(int _p0, int _p1)
		{
			Function.Call((Hash)0x958278B97C4AFFD8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateMpGamerTag(int _player, string _username, bool _pointedClanTag, bool _isRockstarClan, string _clanTag, int _clanFlag)
		{
			return Function.Call<int>((Hash)0xD877AF112AD2B41B, _player, _username, _pointedClanTag, _isRockstarClan, _clanTag, _clanFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateFakeMpGamerTag(int _ped, string _username, bool _pointedClanTag, bool _isRockstarClan, string _clanTag, int _clanFlag)
		{
			return Function.Call<int>((Hash)0x53CB4B502E1C57EA, _ped, _username, _pointedClanTag, _isRockstarClan, _clanTag, _clanFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateMpGamerTagOnEntity(int _entity, string _text)
		{
			return Function.Call<int>((Hash)0xE961BF23EAB76B12, _entity, _text);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveMpGamerTag(int _gamerTagId)
		{
			Function.Call((Hash)0x839BFD7D7E49FE09, _gamerTagId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMpGamerTagActive(int _gamerTagId)
		{
			return Function.Call<bool>((Hash)0x6E1C31E14C7A5F97, _gamerTagId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMpGamerTagActiveOnEntity(int _gamerTagId, int _entity)
		{
			return Function.Call<bool>((Hash)0x502E1591A504F843, _gamerTagId, _entity);
		}
		/// <summary>
		/// visibility:
		/// enum eUIGamertagVisibility
		/// {
		/// 	UIGAMERTAGVISIBILITY_NONE,
		/// 	UIGAMERTAGVISIBILITY_ICON,
		/// 	UIGAMERTAGVISIBILITY_SIMPLE,
		/// 	UIGAMERTAGVISIBILITY_COMPLEX
		/// };
		/// </summary>
		public static void SetMpGamerTagVisibility(int _gamerTagId, int _visibility)
		{
			Function.Call((Hash)0x93171DDDAB274EB8, _gamerTagId, _visibility);
		}
		/// <summary>
		/// Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
		/// </summary>
		public static void SetMpGamerTagType(int _gamerTagId, uint _type)
		{
			Function.Call((Hash)0x25B9C78A25105C35, _gamerTagId, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMpGamerTagColour(int _gamerTagId, uint _colour)
		{
			Function.Call((Hash)0x84BD27DDF9575816, _gamerTagId, _colour);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xef7ab1a0e8c86170(int _gamerTagId, bool _allow)
		{
			Function.Call((Hash)0xEF7AB1A0E8C86170, _gamerTagId, _allow);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMpGamerTagName(int _gamerTagId, string _string)
		{
			Function.Call((Hash)0xEA6F4B8D4B4B5B3E, _gamerTagId, _string);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMpGamerTagNamePosse(int _gamerTagId, string _text)
		{
			Function.Call((Hash)0x1EA716E0628A6F44, _gamerTagId, _text);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMpGamerTagBigText(int _gamerTagId, string _string)
		{
			Function.Call((Hash)0xA0D7CE5F83259663, _gamerTagId, _string);
		}
		/// <summary>
		/// Found icons: https://pastebin.com/xx6rEgiG
		/// </summary>
		public static void SetMpGamerTagTopIcon(int _gamerTagId, uint _icon)
		{
			Function.Call((Hash)0x5F57522BC1EB9D9D, _gamerTagId, _icon);
		}
		/// <summary>
		/// Found icons: SPEAKER, THROPY
		/// </summary>
		public static void SetMpGamerTagSecondaryIcon(int _gamerTagId, uint _icon)
		{
			Function.Call((Hash)0x95384C6CE1526EFF, _gamerTagId, _icon);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MpGamerTagEnableReviveTopIcon(int _gamerTagId)
		{
			Function.Call((Hash)0xFFF6579CF0139FCE, _gamerTagId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MpGamerTagDisableReviveTopIcon(int _gamerTagId)
		{
			Function.Call((Hash)0x1F9A64C2804B3471, _gamerTagId);
		}
		// :###############: //
		// : namespace: IK : //
		// :###############: //
		/// <summary>
		/// ...
		/// </summary>
		public static void InverseKinematicsRequestLookAt(int _ped, int _args)
		{
			Function.Call((Hash)0x66F9EB44342BB4C5, _ped, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0b9f7a01ec50448d(int _ped, int _args)
		{
			Function.Call((Hash)0x0B9F7A01EC50448D, _ped, _args);
		}
		/// <summary>
		/// Seems to disable IK on ped
		/// </summary>
		public static void InverseKinematicsSetDisabledForPed(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0x0EABF182FBB63D72, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x6098139150dcc745(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0x6098139150DCC745, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x873c792e07a32c8b(int _ped1, int _ped2)
		{
			Function.Call((Hash)0x873C792E07A32C8B, _ped1, _ped2);
		}
		// :#########################: //
		// : namespace: _NAMESPACE30 : //
		// :#########################: //
		/// <summary>
		/// Shows the cursor on screen for one frame.
		/// 
		/// Old name: _SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
		/// </summary>
		public static void SetMouseCursorThisFrame()
		{
			Function.Call((Hash)0xF12E4CCAF249DC10);
		}
		/// <summary>
		/// Changes the mouse cursor's sprite.
		/// 
		/// spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
		/// 
		/// Old name: _SET_MOUSE_CURSOR_SPRITE
		/// </summary>
		public static void SetMouseCursorStyle(int _spriteId)
		{
			Function.Call((Hash)0x7F5858AAB5A58CCE, _spriteId);
		}
		/// <summary>
		/// Allows camera to be moved if middle mouse button is held while in first person
		/// Must be called every frame
		/// _SET*
		/// </summary>
		public static void Hash_0x0546b117bb17548b()
		{
			Function.Call((Hash)0x0546B117BB17548B);
		}
		/// <summary>
		/// Returns true if player is moving mouse while cursor is active
		/// _PI* - _PO*
		/// </summary>
		public static bool Hash_0x2b8b605f2a9e64bf()
		{
			return Function.Call<bool>((Hash)0x2B8B605F2A9E64BF);
		}
		/// <summary>
		/// Returns true if player is holding LMB while cursor is active
		/// _PI* - _PO*
		/// </summary>
		public static bool Hash_0x61cae9d1fd055e44()
		{
			return Function.Call<bool>((Hash)0x61CAE9D1FD055E44);
		}
		/// <summary>
		/// Returns true if player releases LMB if cursor is active
		/// _PI* - _PO*
		/// </summary>
		public static bool Hash_0xf7f51a57349739f2()
		{
			return Function.Call<bool>((Hash)0xF7F51A57349739F2);
		}
		// :#####################: //
		// : namespace: INTERIOR : //
		// :#####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsValidInterior(int _interior)
		{
			return Function.Call<bool>((Hash)0x017C1B3159F79F6C, _interior);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorLocationAndNamehash(int _interior, Vector3 _position, uint _nameHash)
		{
			Function.Call((Hash)0x8451E87D3C2B0286, _interior, _position, _nameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetInteriorMinimapHash(int _interior)
		{
			return Function.Call<uint>((Hash)0x3039BE60B3749716, _interior);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetInteriorPosition(int _interior)
		{
			return Function.Call<Vector3>((Hash)0x2C9746D0CA15BE1C, _interior);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInteriorScene()
		{
			return Function.Call<bool>((Hash)0x4200F14D6F840A9A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearRoomForEntity(int _entity)
		{
			Function.Call((Hash)0xA1762D5BBFCA13A8, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceRoomForEntity(int _entity, int _interior, uint _roomHashKey)
		{
			Function.Call((Hash)0xBC29A9894C976945, _entity, _interior, _roomHashKey);
		}
		/// <summary>
		/// Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
		/// </summary>
		public static uint GetRoomKeyFromEntity(int _entity)
		{
			return Function.Call<uint>((Hash)0x076E46E0EB52AFC6, _entity);
		}
		/// <summary>
		/// Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
		/// </summary>
		public static uint GetKeyForEntityInRoom(int _entity)
		{
			return Function.Call<uint>((Hash)0x27D7B6F79E1F4603, _entity);
		}
		/// <summary>
		/// Returns the handle of the interior that the entity is in. Returns 0 if outside.
		/// </summary>
		public static int GetInteriorFromEntity(int _entity)
		{
			return Function.Call<int>((Hash)0xB417689857646F61, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RetainEntityInInterior(int _entity, int _interior)
		{
			Function.Call((Hash)0x5BD616735F16BF5C, _entity, _interior);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceRoomForGameViewport(int _interiorID, uint _roomHashKey)
		{
			Function.Call((Hash)0x115B4AA8FB28AB43, _interiorID, _roomHashKey);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearRoomForGameViewport()
		{
			Function.Call((Hash)0x951A049765E0D450);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorFromPrimaryView()
		{
			return Function.Call<int>((Hash)0xBC8A281FF125C655);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorAtCoords(float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0xCDD36C9E5C469070, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PinInteriorInMemory(int _interior)
		{
			Function.Call((Hash)0xBD3D33EABF680168, _interior);
		}
		/// <summary>
		/// Does something similar to INTERIOR::DISABLE_INTERIOR.
		/// 
		/// You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside. 
		/// </summary>
		public static void UnpinInterior(int _interior)
		{
			Function.Call((Hash)0x07FD1A0B814F6055, _interior);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInteriorReady(int _interior)
		{
			return Function.Call<bool>((Hash)0x941560D2D45DBFC8, _interior);
		}
		/// <summary>
		/// Actually returns void in IDA but the script header defines a BOOL return type
		/// </summary>
		public static bool SetInteriorInUse(int _interior)
		{
			return Function.Call<bool>((Hash)0xB5EF6FEF2DC9EBED, _interior);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorAtCoordsWithType(float _x, float _y, float _z, string _interiorType)
		{
			return Function.Call<int>((Hash)0xAAD6170AA33B13C0, _x, _y, _z, _interiorType);
		}
		/// <summary>
		/// Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
		/// </summary>
		public static int GetInteriorAtCoordsWithTypehash(float _x, float _y, float _z, uint _typeHash)
		{
			return Function.Call<int>((Hash)0x3543AEA1816D1D2B, _x, _y, _z, _typeHash);
		}
		/// <summary>
		/// Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
		/// </summary>
		public static bool IsCollisionMarkedOutside(float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xF291396B517E25B2, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorFromCollision(float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0x5054D1A5218FA696, _x, _y, _z);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
		/// </summary>
		public static void ActivateInteriorEntitySet(int _interior, string _entitySetName, int _p2)
		{
			Function.Call((Hash)0x174D0AAB11CED739, _interior, _entitySetName, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeactivateInteriorEntitySet(int _interior, string _entitySetName, bool _p2)
		{
			Function.Call((Hash)0x33B81A2C07A51FFF, _interior, _entitySetName, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInteriorEntitySetActive(int _interior, string _entitySetName)
		{
			return Function.Call<bool>((Hash)0x32810CA2125F5842, _interior, _entitySetName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInteriorEntitySetValid(int _interior, string _entitySetName)
		{
			return Function.Call<bool>((Hash)0xD56FF170710FC826, _interior, _entitySetName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableInterior(int _interior, bool _toggle)
		{
			Function.Call((Hash)0x3C2B92A1A07D4FCE, _interior, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2533f2ab0eb9c6f9(int _p0, int _p1)
		{
			Function.Call((Hash)0x2533F2AB0EB9C6F9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfe2b3d5500b1b2e4(int _p0, int _p1)
		{
			Function.Call((Hash)0xFE2B3D5500B1B2E4, _p0, _p1);
		}
		// :######################: //
		// : namespace: INVENTORY : //
		// :######################: //
		/// <summary>
		/// Returns a unique inventory ID for this ped.
		/// For the local player ped, it is an eInventories value.
		/// For other peds, it is the inventory address casted to unsigned int.
		/// 
		/// enum eInventories
		/// {
		/// 	INVENTORY_INVALID,
		/// 	INVENTORY_SP_PLAYER,
		/// 	INVENTORY_MP_PLAYER,
		/// 	INVENTORY_MP_MISSION,
		/// 	INVENTORY_SECOND_SCREEN,
		/// 	INVENTORY_SP_BACKUP,
		/// 	INVENTORY_SP_SNAPSHOT,
		/// 	INVENTORY_0xDE2AE452,
		/// 	INVENTORY_0x399D9B3A,
		/// 	INVENTORY_0x4BD43FA7,
		/// 	INVENTORY_0x9529D251,
		/// 	INVENTORY_0xA75776AC,
		/// 	INVENTORY_MAX_ID = 11,
		/// 	INVENTORY_IDS_COUNT
		/// };
		/// </summary>
		public static int InventoryGetInventoryIdFromPed(int _ped)
		{
			return Function.Call<int>((Hash)0x13D234A2A3F66E63, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetItemRoleMaxLevelCount(int _inventoryId, uint _eRoleMaxLevel)
		{
			return Function.Call<int>((Hash)0xADDD1E7C0ECF7D95, _inventoryId, _eRoleMaxLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetItemSlotMaxCount(uint _provision, uint _slotId)
		{
			return Function.Call<int>((Hash)0xE80E50BEE276A54A, _provision, _slotId);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static bool Hash_0x112bca290d2eb53c(int _inventoryId, uint _p1, int _year, int _month, int _day, int _hour, int _minute, int _second)
		{
			return Function.Call<bool>((Hash)0x112BCA290D2EB53C, _inventoryId, _p1, _year, _month, _day, _hour, _minute, _second);
		}
		/// <summary>
		/// eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0x46743bbfedbc859e(int _inventoryId, uint _eInventoryItem, bool _p2)
		{
			Function.Call((Hash)0x46743BBFEDBC859E, _inventoryId, _eInventoryItem, _p2);
		}
		/// <summary>
		/// Only works on CClothingItem
		/// </summary>
		public static void InventorySetInventoryItemInUse(int _inventoryId, int _guid, bool _inUse)
		{
			Function.Call((Hash)0x65A5F70F4A292EBE, _inventoryId, _guid, _inUse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemInUse(int _inventoryId, int _guid)
		{
			return Function.Call<bool>((Hash)0x70E3A884ED000A01, _inventoryId, _guid);
		}
		/// <summary>
		/// Used with CClothingItem
		/// </summary>
		public static void InventorySetInventoryItemHidden(int _inventoryId, int _guid, bool _hidden)
		{
			Function.Call((Hash)0x9A113C660AEA3832, _inventoryId, _guid, _hidden);
		}
		/// <summary>
		/// Used with CSatchelItem, R* Script usage: fisihing_core
		/// </summary>
		public static void InventorySetInventoryItemHidden2(int _inventoryId, int _guid, bool _hidden)
		{
			Function.Call((Hash)0xD740F11FBC8AEF43, _inventoryId, _guid, _hidden);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemHidden(int _inventoryId, int _guid)
		{
			return Function.Call<bool>((Hash)0xF9933164965533B7, _inventoryId, _guid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemIsAnimalPelt(uint _item)
		{
			return Function.Call<bool>((Hash)0x4AEF1FB5B9011D75, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint InventoryGetInventoryItemDescriptionHash(uint _item)
		{
			return Function.Call<uint>((Hash)0xA4550FE9C512E3DD, _item);
		}
		/// <summary>
		/// 2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
		/// </summary>
		public static bool InventoryIsInventoryItemFlagEnabled(uint _item, int _flag)
		{
			return Function.Call<bool>((Hash)0x245D07651B1D183B, _item, _flag);
		}
		/// <summary>
		/// eSoundType:
		/// SI_SFX_INVALID = -1,
		/// SI_SFX_PURCHASE,
		/// SI_SFX_SELL,
		/// SI_SFX_USE
		/// </summary>
		public static bool InventoryGetIsInventoryItemSoundValid(uint _item, int _soundType)
		{
			return Function.Call<bool>((Hash)0x2BAE4880DCDD560B, _item, _soundType);
		}
		/// <summary>
		/// eSoundType
		/// Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
		/// </summary>
		public static uint InventoryGetInventoryItemSound(uint _item, int _soundType)
		{
			return Function.Call<uint>((Hash)0x2E1CDC1FF3B8473E, _item, _soundType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemInspectionInfo(uint _item, int _info)
		{
			return Function.Call<bool>((Hash)0x0C093C1787F18519, _item, _info);
		}
		/// <summary>
		/// Returns CopyID
		/// </summary>
		public static int InventoryGetInventoryItemWeaponCopyId(int _inventoryId, int _guid)
		{
			return Function.Call<int>((Hash)0xAB5F12746A099A0E, _inventoryId, _guid);
		}
		/// <summary>
		/// inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
		/// </summary>
		public static bool InventoryAreLocalChangesAllowed(int _inventoryId)
		{
			return Function.Call<bool>((Hash)0x0FBBFFC891A97C81, _inventoryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryIsGuidValid(int _guid)
		{
			return Function.Call<bool>((Hash)0xB881CA836CC4B6D4, _guid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryCompareGuids(int _guid1, int _guid2)
		{
			return Function.Call<bool>((Hash)0x4C543D5DFCD2DAFD, _guid1, _guid2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetGuidFromItemid(int _inventoryId, int _guid, uint _p2, uint _slotId, int _outGuid)
		{
			return Function.Call<bool>((Hash)0x886DFD3E185C8A89, _inventoryId, _guid, _p2, _slotId, _outGuid);
		}
		/// <summary>
		/// removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
		/// Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel
		/// Only used in R* SP Scripts
		/// </summary>
		public static bool Hash_0x5d6182f3bce1333b(int _inventoryId, uint _removeReason)
		{
			return Function.Call<bool>((Hash)0x5D6182F3BCE1333B, _inventoryId, _removeReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItem(int _inventoryId, int _inData, int _outData, bool _p3)
		{
			return Function.Call<bool>((Hash)0x9700E8EFC4AB9089, _inventoryId, _inData, _outData, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetFullInventoryItemData(int _inventoryId, int _guid, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0x025A1B1FB03FBF61, _inventoryId, _guid, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemChild(int _inventoryId, int _parentGuid, int _childIndex, int _outInventoryItem)
		{
			return Function.Call<bool>((Hash)0xCD9A485F2B383B44, _inventoryId, _parentGuid, _childIndex, _outInventoryItem);
		}
		/// <summary>
		/// inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
		/// </summary>
		public static bool InventoryAddItemWithGuid(int _inventoryId, int _guid1, int _guid2, uint _item, uint _inventoryItemSlot, int _p5, uint _addReason)
		{
			return Function.Call<bool>((Hash)0xCB5D11F9508A928D, _inventoryId, _guid1, _guid2, _item, _inventoryItemSlot, _p5, _addReason);
		}
		/// <summary>
		/// Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
		/// </summary>
		public static bool InventoryUpdateInventoryItem(int _inventoryId, int _guid1, int _guid2, int _p3)
		{
			return Function.Call<bool>((Hash)0xD80A8854DB5CFBA5, _inventoryId, _guid1, _guid2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryRemoveInventoryItemWithGuid(int _inventoryId, int _guid, int _quantity, uint _removeReason)
		{
			return Function.Call<bool>((Hash)0x3E4E811480B3AE79, _inventoryId, _guid, _quantity, _removeReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryRemoveInventoryItemWithItemid(int _inventoryId, uint _item, int _quantity, uint _removeReason)
		{
			return Function.Call<bool>((Hash)0xB4158C8C9A3B5DCE, _inventoryId, _item, _quantity, _removeReason);
		}
		/// <summary>
		/// guid1: old parent GUID
		/// guid2: new parent GUID
		/// guid3: new item GUID (out param)
		/// </summary>
		public static bool InventoryMoveInventoryItem(int _inventoryId, int _guid1, int _guid2, uint _slotId, int _quantity, int _outGuid)
		{
			return Function.Call<bool>((Hash)0xDCCAA7C3BFD88862, _inventoryId, _guid1, _guid2, _slotId, _quantity, _outGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventorySwapInventoryItem(int _inventoryId, int _guid1, int _guid2)
		{
			return Function.Call<bool>((Hash)0xF2753D691BCDA314, _inventoryId, _guid1, _guid2);
		}
		/// <summary>
		/// filterName (collections): "ALL", "ALL WEAPONS", "ALL HORSES", "ALL COACHES"
		/// slotId: -1591664384
		/// p3: outCollectionSize (?)
		/// Returns collectionId
		/// </summary>
		public static int InventoryCreateItemCollection(int _inventoryId, string _filterName, uint _slotId, int _size)
		{
			return Function.Call<int>((Hash)0x80D78BDC9D88EF07, _inventoryId, _filterName, _slotId, _size);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryCreateItemCollectionWithFilter(int _inventoryId, int _filter, int _numInCollection)
		{
			return Function.Call<int>((Hash)0x640F890C3E5A3FFD, _inventoryId, _filter, _numInCollection);
		}
		/// <summary>
		/// collectionId is < outCollectionSize
		/// </summary>
		public static bool InventoryGetItemFromCollectionIndex(int _collectionId, int _itemIndex, int _itemData)
		{
			return Function.Call<bool>((Hash)0x82FA24C3D3FCD9B7, _collectionId, _itemIndex, _itemData);
		}
		/// <summary>
		/// Max num of collections is 5, so release your unused ones.
		/// </summary>
		public static bool InventoryReleaseItemCollection(int _collectionId)
		{
			return Function.Call<bool>((Hash)0x42A2F33A1942E865, _collectionId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryEquipItemWithGuid(int _inventoryId, int _guid, bool _bEquipped)
		{
			return Function.Call<bool>((Hash)0x734311E2852760D0, _inventoryId, _guid, _bEquipped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemEquippedInSlotByRef(int _inventoryId, int _guid, uint _slotId, int _outGuid)
		{
			return Function.Call<bool>((Hash)0x22E590F108289A9D, _inventoryId, _guid, _slotId, _outGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryDoesItemOwnEquipment(int _inventoryId, int _guid, uint _item)
		{
			return Function.Call<bool>((Hash)0x88B58B83A43A8CAB, _inventoryId, _guid, _item);
		}
		/// <summary>
		/// Params: p3 returns an int between 0 and 20 (?)
		/// Only used in R* SP Scripts
		/// </summary>
		public static bool Hash_0xd08685ba892dbfab(int _inventoryId, int _guid, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xD08685BA892DBFAB, _inventoryId, _guid, _p2, _p3);
		}
		/// <summary>
		/// Params: p0 is only 0 or 1
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0x0349404a22736740(bool _p0, int _inventoryId, int _guid)
		{
			Function.Call((Hash)0x0349404A22736740, _p0, _inventoryId, _guid);
		}
		/// <summary>
		/// OWE_INVALID = -1,
		/// OWE_GOOD_IN_HOT
		/// OWE_GOOD_IN_NONE
		/// OWE_GOOD_IN_COLD
		/// OWE_GOOD_IN_ALL
		/// </summary>
		public static void InventorySetInventoryItemWeatherEffectiveness(int _inventoryId, int _guid, int _weatherEffectiveness)
		{
			Function.Call((Hash)0x6D2F987736A42D4C, _inventoryId, _guid, _weatherEffectiveness);
		}
		/// <summary>
		/// Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
		/// </summary>
		public static void InventoryDisableItem(int _inventoryId, uint _item, uint _gtxReason)
		{
			Function.Call((Hash)0x766315A564594401, _inventoryId, _item, _gtxReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryEnableItem(int _inventoryId, uint _item)
		{
			Function.Call((Hash)0x6A564540FAC12211, _inventoryId, _item);
		}
		/// <summary>
		/// Alternative Name: _INVENTORY_IS_ITEM_DISABLED
		/// </summary>
		public static bool InventoryIsInventoryItemEquipped(int _inventoryId, uint _item, bool _p2)
		{
			return Function.Call<bool>((Hash)0x3D10D7179D7034AF, _inventoryId, _item, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventorySetInventoryItemInspectionEnabled(int _inventoryId, int _p1, bool _enabled)
		{
			return Function.Call<bool>((Hash)0x227522FD59DDB7E8, _inventoryId, _p1, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryIsItemExpired(int _itemGUID)
		{
			return Function.Call<bool>((Hash)0x0137C77A2EC64536, _itemGUID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryGetItemExpiryTime(int _itemGUID)
		{
			return Function.Call<int>((Hash)0x4A606C17276E1BCC, _itemGUID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryGetInventoryItemCountWithGuid(int _inventoryId, int _guid, bool _p2)
		{
			return Function.Call<int>((Hash)0xC97E0D2302382211, _inventoryId, _guid, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryGetInventoryItemCountWithItemid(int _inventoryId, uint _eInventoryItem, bool _p2)
		{
			return Function.Call<int>((Hash)0xE787F05DFC977BDE, _inventoryId, _eInventoryItem, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb1dd74a1f5536622(int _inventoryId, int _itemGUID)
		{
			return Function.Call<bool>((Hash)0xB1DD74A1F5536622, _inventoryId, _itemGUID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryGetChildrenCount(int _inventoryId, int _parentGuid)
		{
			return Function.Call<int>((Hash)0xE843D21A8E2498AA, _inventoryId, _parentGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryGetChildrenInSlotCount(int _inventoryId, int _guid, uint _slotId)
		{
			return Function.Call<int>((Hash)0x033EE4B89F3AC545, _inventoryId, _guid, _slotId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int InventoryGetInventoryItemEquippedInSlot(int _inventoryId, int _guid, uint _slotId, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0xBE012571B25F5ACA, _inventoryId, _guid, _slotId, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryFitsSlotId(uint _item, uint _slotId)
		{
			return Function.Call<bool>((Hash)0x780C5B9AE2819807, _item, _slotId);
		}
		/// <summary>
		/// p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
		/// Returns slot hash
		/// </summary>
		public static uint GetDefaultItemSlotInfo(uint _item, uint _p1)
		{
			return Function.Call<uint>((Hash)0x6452B1D357D81742, _item, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryGetInventoryItemFitSlot(uint _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xB991FE166FAF84FD, _p0, _p1, _p2);
		}
		/// <summary>
		/// p1 (out) and p2 (in) are both script arrays?
		/// item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
		/// </summary>
		public static bool Hash_0x9ac53cb6907b4428(uint _item, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x9AC53CB6907B4428, _item, _p1, _p2);
		}
		/// <summary>
		/// p0 is the return value of DATABINDING::_DATABINDING_ADD_DATA_CONTAINER_FROM_PATH
		/// p2, p3: 0
		/// Returns databindingEntryId
		/// </summary>
		public static uint Hash_0x9d21b185abc2dbc4(int _data, string _effects, bool _p2, bool _p3)
		{
			return Function.Call<uint>((Hash)0x9D21B185ABC2DBC4, _data, _effects, _p2, _p3);
		}
		/// <summary>
		/// p1, p2: 0
		/// </summary>
		public static void Hash_0x75cfac49301e134f(uint _databindingEntryId, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x75CFAC49301E134F, _databindingEntryId, _p1, _p2);
		}
		/// <summary>
		/// p2: 0
		/// p3: -1
		/// Returns databindingEntryId to be used with 0x75CFAC49301E134E (p0)
		/// </summary>
		public static uint Hash_0x9d21b185abc2dbc5(int _data, string _stats, int _p2, int _p3)
		{
			return Function.Call<uint>((Hash)0x9D21B185ABC2DBC5, _data, _stats, _p2, _p3);
		}
		/// <summary>
		/// p0: value returned by 0x9D21B185ABC2DBC5
		/// </summary>
		public static void Hash_0x75cfac49301e134e(int _data, bool _p1, int _ped)
		{
			Function.Call((Hash)0x75CFAC49301E134E, _data, _p1, _ped);
		}
		/// <summary>
		/// Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
		/// </summary>
		public static uint Hash_0x46db71883ee9d5af(int _data, string _stats, int _guid, int _ped)
		{
			return Function.Call<uint>((Hash)0x46DB71883EE9D5AF, _data, _stats, _guid, _ped);
		}
		/// <summary>
		/// p0: value returned by 0x46DB71883EE9D5AF
		/// </summary>
		public static void Hash_0x951847cef3d829ff(int _p0, int _outGuid, int _ped)
		{
			Function.Call((Hash)0x951847CEF3D829FF, _p0, _outGuid, _ped);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static bool Hash_0x6862e4d93f64cf01(int _inventoryId, int _guid, uint _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x6862E4D93F64CF01, _inventoryId, _guid, _p2, _p3);
		}
		/// <summary>
		/// This native has no functionality.
		/// </summary>
		public static void InventoryEnableMissionInventory(bool _toggle)
		{
			Function.Call((Hash)0x597F571DDEE3FFAC, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryDisableMissionInventoryPickups()
		{
			Function.Call((Hash)0xE1F389F03DC83673);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryUseMissionInventory(bool _enable, bool _mirrorTransactions)
		{
			Function.Call((Hash)0xA6AA9F56BC6CFF58, _enable, _mirrorTransactions);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryCopyMpInventoryToMissionInventory(bool _p0, bool _p1, bool _bCopySatchelItems, bool _bCopyEmotes, bool _bCopyHorse, bool _p5)
		{
			Function.Call((Hash)0x644CCB76A76CFBD6, _p0, _p1, _bCopySatchelItems, _bCopyEmotes, _bCopyHorse, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryCopyItemToMissionInventory(int _guid, bool _p1)
		{
			Function.Call((Hash)0x3112ADB9D5F3426B, _guid, _p1);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0xe36d4a38d28d9cfb(bool _p0)
		{
			Function.Call((Hash)0xE36D4A38D28D9CFB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryUseSpBackup()
		{
			return Function.Call<bool>((Hash)0x7C7E4AB748EA3B07);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool InventoryIsPlayerInventoryMirroringTransactions()
		{
			return Function.Call<bool>((Hash)0xFC7563F482781A3D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryCopyItemToInventory(int _inventoryId, int _inventoryIdCloned, int _p2, int _p3)
		{
			Function.Call((Hash)0xC04F47D488EF9EBA, _inventoryId, _inventoryIdCloned, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9e58207b194488ac(int _ped, int _p1)
		{
			Function.Call((Hash)0x9E58207B194488AC, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryHandleItemPromptInfoRequest(int _p0)
		{
			Function.Call((Hash)0xFD41D1D4350F6413, _p0);
		}
		/// <summary>
		/// Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
		/// INVENTORY_A*
		/// </summary>
		public static void Hash_0x9b4e793b1cb6550a()
		{
			Function.Call((Hash)0x9B4E793B1CB6550A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventorySetCarriableCarryActionPromptOverride(int _data)
		{
			Function.Call((Hash)0xF666EF30F4F0AC4E, _data);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InventoryEnableWeapons(int _inventoryId)
		{
			Function.Call((Hash)0xD5D72F1624F3BA7C, _inventoryId);
		}
		/// <summary>
		/// Params: p1 = 0
		/// </summary>
		public static void InventoryDisableWeapons(int _inventoryId, int _p1)
		{
			Function.Call((Hash)0xE3A46370F70F3607, _inventoryId, _p1);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0xe1f45a67a9f0dcbc(int _inventoryId)
		{
			Function.Call((Hash)0xE1F45A67A9F0DCBC, _inventoryId);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0x6968ce7ac32f6788(int _inventoryId)
		{
			Function.Call((Hash)0x6968CE7AC32F6788, _inventoryId);
		}
		/// <summary>
		/// Returns collectionId
		/// </summary>
		public static int InventoryCreateItemCollection2(int _collectionSize)
		{
			return Function.Call<int>((Hash)0x97A3646645727F42, _collectionSize);
		}
		/// <summary>
		/// p1: 32
		/// Returns collectionId
		/// </summary>
		public static int InventoryCreateSortedCollection(int _inventoryId, int _p1, int _size)
		{
			return Function.Call<int>((Hash)0xBB7F968675B34B0C, _inventoryId, _p1, _size);
		}
		// :#########################: //
		// : namespace: ITEMDATABASE : //
		// :#########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseCanEquipItemOnCategory(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x856FF92C57742AE5, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetFitsSlotCount(int _p0)
		{
			return Function.Call<int>((Hash)0x2970D1D6BFCF9B46, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetFitsSlotInfo(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x77210C146CED5261, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetHasSlotCount(int _p0)
		{
			return Function.Call<int>((Hash)0x44915068579D7710, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetHasSlotInfo(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x8A9BD0DB7E8376CF, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutItemByName(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x2A610BEE7D341CC4, _p0, _p1);
		}
		/// <summary>
		/// p0 can be a weapon hash, component item
		/// p1 is a struct containing WEAPON_MOD and WEAPON_DECORATION
		/// </summary>
		public static bool ItemdatabaseFilloutItemInfo(uint _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xFE90ABBCBFDC13B2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutAcquireCost(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x74F7928816E4E181, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutSellPrice(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x7A62A2EEDE1C3766, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutSatchelData(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x4776EFD78F75C23F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutUiData(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xB86F7CC2DC67AC60, _p0, _p1);
		}
		/// <summary>
		/// _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
		/// </summary>
		public static bool Hash_0x74c3b1093728d263(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x74C3B1093728D263, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutItemEffectIds(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x9379BE60DC55BBE6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutItemEffectIdInfo(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xCF2D360D27FD1ABF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutTagData(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x5A11D6EEA17165B0, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetAcquireCostsCount(int _p0)
		{
			return Function.Call<int>((Hash)0x01FDDAD392D04144, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetAcquireCost(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x6772A83C67A25775, _p0, _p1, _p2);
		}
		/// <summary>
		/// Returns fillOutIndex (?)
		/// _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
		/// </summary>
		public static int Hash_0xdee7b3c76ed664be(uint _p0, uint _costShop)
		{
			return Function.Call<int>((Hash)0xDEE7B3C76ED664BE, _p0, _costShop);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutItem(uint _p0, uint _costShop, int _fillOutIndex, int _p3)
		{
			return Function.Call<bool>((Hash)0xAD73B614DF26CF8A, _p0, _costShop, _fillOutIndex, _p3);
		}
		/// <summary>
		/// _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
		/// </summary>
		public static int Hash_0x12df9c58201dd19a(int _p0)
		{
			return Function.Call<int>((Hash)0x12DF9C58201DD19A, _p0);
		}
		/// <summary>
		/// _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
		/// </summary>
		public static bool Hash_0x1fc25aeb5f76b38d(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x1FC25AEB5F76B38D, _p0, _p1, _p2);
		}
		/// <summary>
		/// Returns itemCount (?)
		/// _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
		/// </summary>
		public static int Hash_0xf540239f9937033b(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xF540239F9937033B, _p0, _p1);
		}
		/// <summary>
		/// _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
		/// </summary>
		public static bool Hash_0xf27f01bbf5acd3f3(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xF27F01BBF5ACD3F3, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
		/// </summary>
		public static int ItemdatabaseCreateItemCollection(int _p0, int _size, int _comparisonType)
		{
			return Function.Call<int>((Hash)0x71EFA7999AE79408, _p0, _size, _comparisonType);
		}
		/// <summary>
		/// Returns (collection?) size/index (?)
		/// _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
		/// </summary>
		public static int Hash_0xd389a2549c4efb30(int _collectionId)
		{
			return Function.Call<int>((Hash)0xD389A2549C4EFB30, _collectionId);
		}
		/// <summary>
		/// Params: p2 can be a component item hash
		/// </summary>
		public static bool ItemdatabaseGetComponentItem(int _collectionId, int _index, uint _p2)
		{
			return Function.Call<bool>((Hash)0x8750F69A720C2E41, _collectionId, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseReleaseItemCollection(int _collectionId)
		{
			return Function.Call<bool>((Hash)0xCBB7B6EDFA933ADE, _collectionId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsIntrinsicItem(int _p0)
		{
			return Function.Call<bool>((Hash)0x337F88E3A063995E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsOverpoweredItem(int _p0)
		{
			return Function.Call<bool>((Hash)0x337F88E3A063995F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsKeyValid(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x6D5D51B188333FD1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x537a0555f62ca01a(uint _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x537A0555F62CA01A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetBundleId(int _p0)
		{
			return Function.Call<int>((Hash)0x891A45960B6B768A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetBundleItemCount(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x3332695B01015DF9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetBundleItemInfo(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x5D48A77E4B668B57, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsBundleValid(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x4308812A6E9CA62E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x799fcd53358ed5fa(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x799FCD53358ED5FA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xc4146375d8a0b374(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xC4146375D8A0B374, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa97ee5e4589fcf5a(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xA97EE5E4589FCF5A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7a35a72a692be9db(int _p0)
		{
			return Function.Call<int>((Hash)0x7A35A72A692BE9DB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3a0b667abff87f6e(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x3A0B667ABFF87F6E, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x388088bff3681189(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x388088BFF3681189, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutBundle(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xB542632693D53408, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsShopKeyValid(int _p0)
		{
			return Function.Call<bool>((Hash)0x00B9507D8E1D8716, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetShopInventoriesItemsCount(int _p0)
		{
			return Function.Call<int>((Hash)0xC568B1A0F17C7025, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopInventoriesItemInfo(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x4A79B41B4EB91F4E, _p0, _p1, _p2);
		}
		/// <summary>
		/// Same Native Function as 0x17721003A66C72BF
		/// </summary>
		public static bool ItemdatabaseGetShopInventoriesItemInfoByKey(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xCFB06801F5099B25, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopInventoriesRequirementGroupInfo(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x76C752D788A76813, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopInventoriesRequirementInfo(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0xE0EA5C031AE5539F, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x17721003a66c72bf(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x17721003A66C72BF, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsShopLayoutKeyValid(int _p0)
		{
			return Function.Call<bool>((Hash)0x3AFE5182C45A84F6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutInfo(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x66A6D76B6BB999B4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutRootMenuInfo(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x86FCB565CCA0CFA7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutMenuInfoById(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xD66114469978B55B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutMenuInfoByIndex(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xF04247092F193B75, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutMenuPageKey(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x9A60570657A7B635, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xdbeada0df5f9ab9f(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xDBEADA0DF5F9AB9F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutPageInfoByKey(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xB347C100DF0C9B7F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetShopLayoutPageItemKey(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<bool>((Hash)0xF32BEF578B3DBAE8, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseIsBuyableAwardValid(int _p0)
		{
			return Function.Call<bool>((Hash)0x4CE753203FA42214, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutBuyAwardAcquireCosts(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xB52E20F6767A09A2, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// _ITEMDATABASE_FILLOUT_(B)* - ITEMDATABASE_FILLOUT_ITEM*
		/// </summary>
		public static bool Hash_0xf8d09ef8ce61d7bf(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xF8D09EF8CE61D7BF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseGetItemPriceModifiers(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x4EB37AAB79AB0C48, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutPriceModifierByKey(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x40C5D95818823C94, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetNumberOfModifiedPrices(int _p0)
		{
			return Function.Call<int>((Hash)0x5AAAF40E9B224F5E, _p0);
		}
		/// <summary>
		/// Returns an alternative cost hash to COST_SHOP_DEFAULT
		/// </summary>
		public static uint ItemdatabaseGetModifiedPrice(int _p0, int _p1)
		{
			return Function.Call<uint>((Hash)0xCB92EC9C004732B4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetNumberOfModifiers(int _p0)
		{
			return Function.Call<int>((Hash)0x1289D8315235856D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseFilloutModifier(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x60614A0AB580A2B5, _p0, _p1, _p2);
		}
		/// <summary>
		/// _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
		/// </summary>
		public static bool Hash_0xef254f1a4c08b7e6(uint _p0)
		{
			return Function.Call<bool>((Hash)0xEF254F1A4C08B7E6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3faa928a79591761(uint _p0)
		{
			return Function.Call<int>((Hash)0x3FAA928A79591761, _p0);
		}
		/// <summary>
		/// _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
		/// </summary>
		public static int Hash_0x48229ce0c7938237(uint _p0)
		{
			return Function.Call<int>((Hash)0x48229CE0C7938237, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x121d2005dd64496b(uint _p0, int _index, int _p2)
		{
			return Function.Call<bool>((Hash)0x121D2005DD64496B, _p0, _index, _p2);
		}
		/// <summary>
		/// _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
		/// </summary>
		public static bool Hash_0x8d029948ca29409b(uint _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x8D029948CA29409B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xe81d0378a384e755(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xE81D0378A384E755, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd076db9b96faadf1(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xD076DB9B96FAADF1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseDoesItemHaveTag(uint _item, uint _tag, uint _tagType)
		{
			return Function.Call<bool>((Hash)0xFF5FB5605AD56856, _item, _tag, _tagType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ItemdatabaseDoesBundleHaveTag(uint _bundle, uint _tag, uint _tagType)
		{
			return Function.Call<bool>((Hash)0x99C6EA66DFE73757, _bundle, _tag, _tagType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint ItemdatabaseGetItemTagType(uint _item, uint _tag)
		{
			return Function.Call<uint>((Hash)0x6111B8F9413F413A, _item, _tag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8870895ba5ed9385(int _p0, uint _tagType, int _p2)
		{
			return Function.Call<int>((Hash)0x8870895BA5ED9385, _p0, _tagType, _p2);
		}
		/// <summary>
		/// Returns docData.iNumTotalLabelTypes
		/// </summary>
		public static int ItemdatabaseLocalizationGetNumLabelTypes(int _p0)
		{
			return Function.Call<int>((Hash)0xCEC6A41E8910486A, _p0);
		}
		/// <summary>
		/// Returns iNumValuesForType
		/// </summary>
		public static int ItemdatabaseLocalizationGetNumValues(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x49885D82A13EEAEA, _p0, _p1);
		}
		/// <summary>
		/// Returns LabelType
		/// </summary>
		public static int ItemdatabaseLocalizationGetType(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xCABF5D41D0073D4A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseLocalizationGetValue(int _p0, uint _label, int _p2)
		{
			return Function.Call<int>((Hash)0x9AE5610FDCED6EA7, _p0, _label, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ItemdatabaseGetItemPathset(int _item, int _p1)
		{
			return Function.Call<int>((Hash)0xF4452CE83118C738, _item, _p1);
		}
		/// <summary>
		/// Returns Pathset Hash
		/// </summary>
		public static uint Hash_0xaa29a5f13b2c20b2(int _p0, uint _p1)
		{
			return Function.Call<uint>((Hash)0xAA29A5F13B2C20B2, _p0, _p1);
		}
		// :####################: //
		// : namespace: ITEMSET : //
		// :####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateItemset(bool _p0)
		{
			return Function.Call<int>((Hash)0xA1AF16083320065A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DestroyItemset(int _itemset)
		{
			Function.Call((Hash)0x712BC69F10549B92, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsItemsetValid(int _itemset)
		{
			return Function.Call<bool>((Hash)0xD30765D153EF5C76, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AddToItemset(int _entity, int _itemset)
		{
			return Function.Call<bool>((Hash)0xABE74510883C7950, _entity, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveFromItemset(int _entity, int _itemset)
		{
			Function.Call((Hash)0xC5BAA432B429DC24, _entity, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetItemsetSize(int _itemset)
		{
			return Function.Call<int>((Hash)0x55F2E375AC6018A9, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetIndexedItemInItemset(int _index, int _itemset)
		{
			return Function.Call<int>((Hash)0x275A2E2C0FAB7612, _index, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetIndexedScenarioPointIndexInItemset(int _index, int _itemset)
		{
			return Function.Call<int>((Hash)0x9FC3CDB5CE815901, _index, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInItemset(int _entity, int _itemset)
		{
			return Function.Call<bool>((Hash)0xD1503C2EE2FE688C, _entity, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CleanItemset(int _itemset)
		{
			Function.Call((Hash)0x85F3A86CA9021FB0, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearItemset(int _itemset)
		{
			Function.Call((Hash)0x20A4BF0E09BEE146, _itemset);
		}
		// :################: //
		// : namespace: LAW : //
		// :################: //
		/// <summary>
		/// crimeType:
		/// enum eCrimeType : Hash
		/// {
		/// 	CRIME_ACCOMPLICE = 0xAF074F6D,
		/// 	CRIME_ARSON = 0x68134DC7,
		/// 	CRIME_ASSAULT = 0x0BADC882,
		/// 	CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
		/// 	CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
		/// 	CRIME_ASSAULT_HORSE = 0xC4736181,
		/// 	CRIME_ASSAULT_LAW = 0xD7466D7C,
		/// 	CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
		/// 	CRIME_BANK_ROBBERY = 0x6A1ADE3D,
		/// 	CRIME_BURGLARY = 0xA54C77E0,
		/// 	CRIME_CHEATING = 0xA2FF1145,
		/// 	CRIME_DISTURBANCE = 0x5011F613,
		/// 	CRIME_EXPLOSION = 0x3EBA7A37,
		/// 	CRIME_EXPLOSION_POISON = 0x91D0A0E1,
		/// 	CRIME_GRAVE_ROBBERY = 0x971EA5AF,
		/// 	CRIME_HASSLE = 0x58488776,
		/// 	CRIME_HIT_AND_RUN = 0xFF0A3CC4,
		/// 	CRIME_HIT_AND_RUN_LAW = 0x064814AF,
		/// 	CRIME_INTIMIDATION = 0x8319FBAB,
		/// 	CRIME_JACK_HORSE = 0x82F7E4A2,
		/// 	CRIME_JACK_VEHICLE = 0x6B981F4C,
		/// 	CRIME_JAIL_BREAK = 0x12C1D589,
		/// 	CRIME_KIDNAPPING = 0x98F908DB,
		/// 	CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
		/// 	CRIME_LASSO_ASSAULT = 0x56EE5D5A,
		/// 	CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
		/// 	CRIME_LOITERING = 0x6629D2F4,
		/// 	CRIME_LOOTING = 0x55AD2BEB,
		/// 	CRIME_MURDER = 0xE28ECE7E,
		/// 	CRIME_MURDER_ANIMAL = 0x48F59A66,
		/// 	CRIME_MURDER_HORSE = 0xC7261D79,
		/// 	CRIME_MURDER_LAW = 0x7797FCE7,
		/// 	CRIME_MURDER_LIVESTOCK = 0x9569C546,
		/// 	CRIME_MURDER_PLAYER = 0xF5ABD6C9,
		/// 	CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
		/// 	CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
		/// 	CRIME_RESIST_ARREST = 0xDF577BA5,
		/// 	CRIME_ROBBERY = 0xA3BEDE4C,
		/// 	CRIME_SELF_DEFENCE = 0xBD6A0AA3,
		/// 	CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
		/// 	CRIME_STOLEN_GOODS = 0x9A949C79,
		/// 	CRIME_THEFT = 0x72ADE410,
		/// 	CRIME_THEFT_HORSE = 0xBE3A5838,
		/// 	CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
		/// 	CRIME_THEFT_VEHICLE = 0x43A9ECA1,
		/// 	CRIME_THREATEN = 0x941C985A,
		/// 	CRIME_THREATEN_LAW = 0x7F908566,
		/// 	CRIME_TRAIN_ROBBERY = 0x647D2A5A,
		/// 	CRIME_TRAMPLE = 0x45DB39D8,
		/// 	CRIME_TRAMPLE_LAW = 0xF00F266B,
		/// 	CRIME_TRAMPLE_PLAYER = 0x75970C15,
		/// 	CRIME_TRESPASSING = 0xAEDE8E35,
		/// 	CRIME_UNARMED_ASSAULT = 0x5098CC5A,
		/// 	CRIME_VANDALISM = 0x80FDC759,
		/// 	CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
		/// 	CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
		/// 	CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
		/// 	CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
		/// };
		/// </summary>
		public static void ReportCrime(int _player, uint _crimeType, int _bounty, int _entity, bool _isKnownSuspect)
		{
			Function.Call((Hash)0xF60386770878A98F, _player, _crimeType, _bounty, _entity, _isKnownSuspect);
		}
		/// <summary>
		/// crimeType: see _REPORT_CRIME
		/// </summary>
		public static void SuppressCrimeThisFrame(int _player, uint _crimeType, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x785177E4D57D7389, _player, _crimeType, _p2, _p3, _p4);
		}
		/// <summary>
		/// Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
		/// </summary>
		public static int NumCrimesSuppressed(int _player, uint _crimeType)
		{
			return Function.Call<int>((Hash)0xC08E804C91F47C80, _player, _crimeType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xffebe5aa96bc2e4e(int _ped, uint _crimeType, bool _p2)
		{
			return Function.Call<int>((Hash)0xFFEBE5AA96BC2E4E, _ped, _crimeType, _p2);
		}
		/// <summary>
		/// Params: p0 either 0, 1 or -1 in R* Scripts
		/// Set to 0 called together with _SUPPRESS_CRIME
		/// </summary>
		public static void Hash_0x15abd5004cad2d99(int _p0)
		{
			Function.Call((Hash)0x15ABD5004CAD2D99, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf611de44aeb36a1d(uint _crimeType, bool _p1)
		{
			Function.Call((Hash)0xF611DE44AEB36A1D, _crimeType, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3d2674828a4e6b3c()
		{
			return Function.Call<bool>((Hash)0x3D2674828A4E6B3C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc5eb2755fa25f1e9(bool _p0)
		{
			Function.Call((Hash)0xC5EB2755FA25F1E9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetBounty(int _player)
		{
			return Function.Call<int>((Hash)0x54310AAB97B92816, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddBounty(int _player, int _itemValueAmount)
		{
			Function.Call((Hash)0x0E3BDEED21BEB945, _player, _itemValueAmount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBounty(int _player, int _amount)
		{
			Function.Call((Hash)0x093A9D1F72DF0D19, _player, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearBounty(int _player)
		{
			Function.Call((Hash)0xC76F252371150D9A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetWantedScore(int _player)
		{
			return Function.Call<int>((Hash)0xDD5FD601481F648B, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWantedScore(int _player, int _intensity)
		{
			Function.Call((Hash)0xA80FF73F772ACF6A, _player, _intensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearWantedScore(int _player)
		{
			Function.Call((Hash)0x062B4A4A3396351D, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x331d349e0380b097(int _p0)
		{
			Function.Call((Hash)0x331D349E0380B097, _p0);
		}
		/// <summary>
		/// Only used in R* Script fm_mission_controller
		/// _CLEAR_WANTED_*
		/// </summary>
		public static void Hash_0x292ad61a33a7a485()
		{
			Function.Call((Hash)0x292AD61A33A7A485);
		}
		/// <summary>
		/// Used in SP only, called together with 0x55F37F5F3F2475E1 & CLEAR_WANTED_SCORE
		/// _REPORT_*
		/// </summary>
		public static void Hash_0x07e8b8b20570271c(int _player)
		{
			Function.Call((Hash)0x07E8B8B20570271C, _player);
		}
		/// <summary>
		/// Used in SP only
		/// _REPORT_*
		/// </summary>
		public static void Hash_0x22741652985c84d0(int _player, uint _lawRegionHash)
		{
			Function.Call((Hash)0x22741652985C84D0, _player, _lawRegionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReportPlayerLawDispatchResponseOverride(int _player, uint _dispatchResponseHash)
		{
			Function.Call((Hash)0x9C4352134B2835FB, _player, _dispatchResponseHash);
		}
		/// <summary>
		/// Only used in shoprobberies R* Scripts
		/// </summary>
		public static bool Hash_0x9ef07cfbb19a9733()
		{
			return Function.Call<bool>((Hash)0x9EF07CFBB19A9733);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLawDisabled(bool _toggle)
		{
			Function.Call((Hash)0x8DE82BC774F3B862, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceLawOnLocalPlayerImmediately()
		{
			Function.Call((Hash)0x956510F8C36B5C64);
		}
		/// <summary>
		/// enum eLawRegion : Hash
		/// {
		/// 	LAW_DISPATCH_REGION_NONE = 0,
		/// 	LAW_REGION_AGUASDULCES = 0x2F573EBE,
		/// 	LAW_REGION_ANNESBURG = 0x68CAFD50,
		/// 	LAW_REGION_ARMADILLO = 0xF0B90756,
		/// 	LAW_REGION_BAYOU_NWA = 0x80966B1C,
		/// 	LAW_REGION_BEECHERS_HOPE = 0xE2544977,
		/// 	LAW_REGION_BIG_VALLEY = 0x3DF1559A,
		/// 	LAW_REGION_BLACKWATER = 0x60D4886D,
		/// 	LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
		/// 	LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
		/// 	LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
		/// 	LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
		/// 	LAW_REGION_CALIGA_HALL = 0xF3FE5080,
		/// 	LAW_REGION_CORNWALL = 0xCC4672FA,
		/// 	LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
		/// 	LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
		/// 	LAW_REGION_FORT_WALLACE = 0x0AF25192,
		/// 	LAW_REGION_GREAT_PLAINS = 0xB20573FA,
		/// 	LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
		/// 	LAW_REGION_GRIZZLIES = 0xBB936031,
		/// 	LAW_REGION_GUAMA = 0x200DFF42,
		/// 	LAW_REGION_HEARTLANDS = 0xAD14DA65,
		/// 	LAW_REGION_LAGRAS = 0xC64808D3,
		/// 	LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
		/// 	LAW_REGION_MANICATO = 0x039DB6BF,
		/// 	LAW_REGION_MANZANITA_POST = 0x895E580E,
		/// 	LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
		/// 	LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
		/// 	LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
		/// 	LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
		/// 	LAW_REGION_OUTLAW3 = 0x97A02FC1,
		/// 	LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
		/// 	LAW_REGION_RHODES = 0x89222928,
		/// 	LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
		/// 	LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
		/// 	LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
		/// 	LAW_REGION_SAINT_DENIS = 0x5CF7C268,
		/// 	LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
		/// 	LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
		/// 	LAW_REGION_SISIKA = 0x2B6BBA52,
		/// 	LAW_REGION_STRAWBERRY = 0xDD932620,
		/// 	LAW_REGION_TALL_TREES = 0xD939B758,
		/// 	LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
		/// 	LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
		/// 	LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
		/// 	LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
		/// 	LAW_REGION_VALENTINE = 0xA7A3F0C3,
		/// 	LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
		/// 	LAW_REGION_VAN_HORN = 0x619B528E,
		/// 	LAW_REGION_WAPITI = 0x7A976E02
		/// };
		/// </summary>
		public static void SetLawRegion(int _player, uint _lawRegionHash, uint _stateHash)
		{
			Function.Call((Hash)0x4752F68EB7F2D280, _player, _lawRegionHash, _stateHash);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0x5e6f375ca101c108(int _player, bool _p1)
		{
			Function.Call((Hash)0x5E6F375CA101C108, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLawRbsVolume(int _player, uint _p1)
		{
			Function.Call((Hash)0x9BBDCB8DF789EBC1, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsLawIncidentActive(int _player)
		{
			return Function.Call<bool>((Hash)0xAD401C63158ACBAA, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint Hash_0x148e7ac8141c9e64(int _player)
		{
			return Function.Call<uint>((Hash)0x148E7AC8141C9E64, _player);
		}
		/// <summary>
		/// _SET_C* - _SET_D*
		/// </summary>
		public static void Hash_0xedfc6c1fd1c964f5(int _player, uint _crimeType, int _bounty, float _p3, float _p4, bool _p5, float _p6, float _p7, int _p8)
		{
			Function.Call((Hash)0xEDFC6C1FD1C964F5, _player, _crimeType, _bounty, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LawWitnessResponseTask(int _pedGroup1, int _ped, int _pedGroup2, float _x, float _y, float _z, uint _crimeType)
		{
			return Function.Call<bool>((Hash)0xF0B67BAD53C35BD9, _pedGroup1, _ped, _pedGroup2, _x, _y, _z, _crimeType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x018f30d762e62df8(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0x018F30D762E62DF8, _ped, _p1);
		}
		/// <summary>
		/// Only used in R* SP Script av_amb_camp_robbery
		/// </summary>
		public static int Hash_0x318f0f9a4426cfa2(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0x318F0F9A4426CFA2, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x95878b13e272ef1f(int _entity, int _ped, bool _p2, float _x, float _y, float _z, uint _crimeType)
		{
			return Function.Call<int>((Hash)0x95878B13E272EF1F, _entity, _ped, _p2, _x, _y, _z, _crimeType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddWitnessResponse(int _player, uint _crimeType, int _pedGroup)
		{
			Function.Call((Hash)0x10827B5A0AAC56A7, _player, _crimeType, _pedGroup);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// Params: p2 either 1 or 2
		/// </summary>
		public static void Hash_0xd7494ded50c6ef52(int _player, uint _crimeType, int _p2)
		{
			Function.Call((Hash)0xD7494DED50C6EF52, _player, _crimeType, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreWitnessesActive(int _player)
		{
			return Function.Call<bool>((Hash)0x69E181772886F48B, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreWitnessesPending(int _player)
		{
			return Function.Call<bool>((Hash)0x0BB6DE7D23C60626, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreInvestigatorsActive(int _player, bool _areInvestigatorsActive, int _p2)
		{
			return Function.Call<bool>((Hash)0xF0FBFB9AB15F7734, _player, _areInvestigatorsActive, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x522f74636df10201(int _player, int _itemSet)
		{
			Function.Call((Hash)0x522F74636DF10201, _player, _itemSet);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// Params: p1 = true, p2 = false
		/// </summary>
		public static void Hash_0xda1a9adc4e3d4b16(int _itemSet, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xDA1A9ADC4E3D4B16, _itemSet, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableDispatchLaw(bool _toggle)
		{
			Function.Call((Hash)0xC805EB785824F712, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableDispatchLaw2(bool _toggle)
		{
			Function.Call((Hash)0x710448D44A64C213, _toggle);
		}
		/// <summary>
		/// Only used in rcm_homerob00 R* Script
		/// </summary>
		public static bool Hash_0xece3c34b270428d5()
		{
			return Function.Call<bool>((Hash)0xECE3C34B270428D5);
		}
		/// <summary>
		/// Only used in trainrobbery_ambient R* Script
		/// </summary>
		public static bool AreLawPedsEnabledForTrain()
		{
			return Function.Call<bool>((Hash)0xA22C46F16359471C);
		}
		/// <summary>
		/// Only used in rcm_gunslinger1_1 R* Script: p0 = 0
		/// </summary>
		public static void Hash_0x82f11e1296996574(int _p0)
		{
			Function.Call((Hash)0x82F11E1296996574, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3852237a3d9df145(int _p0)
		{
			Function.Call((Hash)0x3852237A3D9DF145, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0eaf918f751f27ba(int _ped)
		{
			return Function.Call<bool>((Hash)0x0EAF918F751F27BA, _ped);
		}
		/// <summary>
		/// Only used in rcm_serial_killer1 R* Script
		/// </summary>
		public static bool Hash_0xc0df161950fb101e(int _ped)
		{
			return Function.Call<bool>((Hash)0xC0DF161950FB101E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe4d6e45f491a66cb(int _player, int _p1)
		{
			return Function.Call<int>((Hash)0xE4D6E45F491A66CB, _player, _p1);
		}
		/// <summary>
		/// Returns p1 value for 0xE4D6E45F491A66CB
		/// </summary>
		public static int Hash_0xe9eb79cbf9c0f58a(int _player)
		{
			return Function.Call<int>((Hash)0xE9EB79CBF9C0F58A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x21213b833ef4dae7(int _player, int _ped, Vector3 _outCoords)
		{
			Function.Call((Hash)0x21213B833EF4DAE7, _player, _ped, _outCoords);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x61b98367d93f012f(int _player)
		{
			Function.Call((Hash)0x61B98367D93F012F, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6abc50979655bee7(int _player, uint _crimeType, int _p2)
		{
			Function.Call((Hash)0x6ABC50979655BEE7, _player, _crimeType, _p2);
		}
		/// <summary>
		/// _CLEAR*
		/// </summary>
		public static void Hash_0x390710d2dafa6bff(int _player, bool _p1)
		{
			Function.Call((Hash)0x390710D2DAFA6BFF, _player, _p1);
		}
		/// <summary>
		/// Returns bounty (increment) value
		/// </summary>
		public static int GetCrimeBountyAmountByType(uint _crimeType)
		{
			return Function.Call<int>((Hash)0x35E5E21F9159849C, _crimeType);
		}
		/// <summary>
		/// crimeType: see _REPORT_CRIME
		/// </summary>
		public static int Hash_0xdaefdfdb2aeece37(uint _crimeType, int _p1)
		{
			return Function.Call<int>((Hash)0xDAEFDFDB2AEECE37, _crimeType, _p1);
		}
		/// <summary>
		/// See _REPORT_CRIME
		/// </summary>
		public static uint GetHudPlayerCrimeType(int _player)
		{
			return Function.Call<uint>((Hash)0x259CE340A8738814, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe083beda81709891(int _player)
		{
			return Function.Call<int>((Hash)0xE083BEDA81709891, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x89e005b1662f6e48(int _player, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x89E005B1662F6E48, _player, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3738b784ddd35cc6(int _player, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x3738B784DDD35CC6, _player, _p1, _p2);
		}
		/// <summary>
		/// Only used in net_fetch R* Script
		/// </summary>
		public static int Hash_0x0bdfebcf40a5f7e3(uint _crimeType)
		{
			return Function.Call<int>((Hash)0x0BDFEBCF40A5F7E3, _crimeType);
		}
		/// <summary>
		/// Note: This native is only used in multiplayer scripts
		/// dispatchResponseHash: see update1/common/data/dispatchresponses/..
		/// </summary>
		public static void SetCustomLawDispatchResponse(uint _dispatchResponseHash)
		{
			Function.Call((Hash)0x009CF9A29972C298, _dispatchResponseHash);
		}
		/// <summary>
		/// dispatchResponseHash: see common/data/dispatchresponses/..
		/// </summary>
		public static int CreateLawDispatchResponseForCoords(float _x, float _y, float _z, uint _dispatchResponseHash)
		{
			return Function.Call<int>((Hash)0x75CBF20BA47E4F89, _x, _y, _z, _dispatchResponseHash);
		}
		/// <summary>
		/// Force clears local player's wanted level
		/// </summary>
		public static void SetBountyHunterPursuitCleared()
		{
			Function.Call((Hash)0x55F37F5F3F2475E1);
		}
		/// <summary>
		/// Called together with REPORT_POLICE_SPOTTED_PLAYER
		/// </summary>
		public static void Hash_0xbd944a3d36e992de()
		{
			Function.Call((Hash)0xBD944A3D36E992DE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x987be590fb9d41e5(bool _p0)
		{
			Function.Call((Hash)0x987BE590FB9D41E5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdcf12b89624aac96(bool _p0)
		{
			Function.Call((Hash)0xDCF12B89624AAC96, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xddce8e960d1de240(bool _p0)
		{
			Function.Call((Hash)0xDDCE8E960D1DE240, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdea083c16bb91345()
		{
			Function.Call((Hash)0xDEA083C16BB91345);
		}
		/// <summary>
		/// Only used in act_bankrobbery01 R* Script
		/// </summary>
		public static void Hash_0x9c8a2bf37e966464(int _player, int _itemSet)
		{
			Function.Call((Hash)0x9C8A2BF37E966464, _player, _itemSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x9d5c9a5a3321b128(int _player)
		{
			return Function.Call<bool>((Hash)0x9D5C9A5A3321B128, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0f230de0ddbe3649(int _player)
		{
			return Function.Call<bool>((Hash)0x0F230DE0DDBE3649, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x9945a3e2528a02e8(int _player)
		{
			return Function.Call<bool>((Hash)0x9945A3E2528A02E8, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0x717da2281df90855(int _player)
		{
			return Function.Call<float>((Hash)0x717DA2281DF90855, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9b4c564bfa7cff37(float _p0)
		{
			Function.Call((Hash)0x9B4C564BFA7CFF37, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllowDisabledLawResponses(bool _toggle)
		{
			Function.Call((Hash)0x4B52BF96E225D230, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetWantedForNewIncident(int _player)
		{
			Function.Call((Hash)0x2728C77FBC4B9796, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x856ce8fde2416602(int _ped)
		{
			return Function.Call<bool>((Hash)0x856CE8FDE2416602, _ped);
		}
		/// <summary>
		/// Only used in shoprobberies
		/// </summary>
		public static bool Hash_0x7351da734f989f4e(int _entity)
		{
			return Function.Call<bool>((Hash)0x7351DA734F989F4E, _entity);
		}
		/// <summary>
		/// p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
		/// </summary>
		public static int GetBountyHunterGlobalCooldown(uint _p0)
		{
			return Function.Call<int>((Hash)0x76CF93D4B416B288, _p0);
		}
		/// <summary>
		/// p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
		/// </summary>
		public static void SetBountyHunterGlobalCooldown(uint _p0, int _p1)
		{
			Function.Call((Hash)0xF19706B1F8FFA88F, _p0, _p1);
		}
		/// <summary>
		/// Only used in resapwn_dump_body R* Script
		/// </summary>
		public static void Hash_0x2001687f9562fd9d(int _p0)
		{
			Function.Call((Hash)0x2001687F9562FD9D, _p0);
		}
		/// <summary>
		/// p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
		/// </summary>
		public static void PauseBountyHunterCooldown(uint _p0, bool _p1, int _p2)
		{
			Function.Call((Hash)0xC61EDEBF16CD9668, _p0, _p1, _p2);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// Params: p1 = 0
		/// </summary>
		public static void Hash_0xe9ac8466abe484bb(bool _p0, int _p1)
		{
			Function.Call((Hash)0xE9AC8466ABE484BB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x40851bcc33acd9ab(int _ped)
		{
			return Function.Call<bool>((Hash)0x40851BCC33ACD9AB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xf46108c50a22b029()
		{
			return Function.Call<bool>((Hash)0xF46108C50A22B029);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7803436e68c32b26()
		{
			Function.Call((Hash)0x7803436E68C32B26);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc310239acccf5579()
		{
			Function.Call((Hash)0xC310239ACCCF5579);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x29cd4896ecb66c12()
		{
			Function.Call((Hash)0x29CD4896ECB66C12);
		}
		/// <summary>
		/// Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
		/// Only used in R* SP Scripts, mostly used in train_fast_travel_core
		/// </summary>
		public static void Hash_0xe94b5e938619712e()
		{
			Function.Call((Hash)0xE94B5E938619712E);
		}
		/// <summary>
		/// Only used in R* Script long_update
		/// Returns a value thats being subtracted from GET_GAME_TIMER
		/// </summary>
		public static int Hash_0x7fc667f6ddfbcdcc(int _player)
		{
			return Function.Call<int>((Hash)0x7FC667F6DDFBCDCC, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9c5bd8c562565ce6(uint _crimeType)
		{
			Function.Call((Hash)0x9C5BD8C562565CE6, _crimeType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcbfb4951f2e3934c(int _player, int _p1)
		{
			Function.Call((Hash)0xCBFB4951F2E3934C, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedLawBehaviour(int _ped, int _behaviour)
		{
			Function.Call((Hash)0x819ADD5EF1742F47, _ped, _behaviour);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x00db0bc05e3faa4e(int _ped, int _bitset)
		{
			Function.Call((Hash)0x00DB0BC05E3FAA4E, _ped, _bitset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0c392db374655176(float _x, float _y, float _z, float _p3, int _itemSet)
		{
			Function.Call((Hash)0x0C392DB374655176, _x, _y, _z, _p3, _itemSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc687a23e166dcf68(int _p0)
		{
			return Function.Call<int>((Hash)0xC687A23E166DCF68, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDispatchMultiplierOverride(float _multiplier)
		{
			Function.Call((Hash)0x002BABE0B7D53136, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x26934083d3f2579c(int _player)
		{
			return Function.Call<bool>((Hash)0x26934083D3F2579C, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPlayerRegisteredCrime(int _player, int _p1, uint _crimeType)
		{
			return Function.Call<bool>((Hash)0x532C5FDDB986EE5C, _player, _p1, _crimeType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb527099d1e1eed49(int _player, int _p1, uint _crimeType)
		{
			return Function.Call<bool>((Hash)0xB527099D1E1EED49, _player, _p1, _crimeType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPlayerPastCrimes(int _player)
		{
			Function.Call((Hash)0xBCC6DC59E32A2BDC, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerArrestedInRegion(int _player, uint _lawRegionHash)
		{
			Function.Call((Hash)0xE0FA74AA3CCE650B, _player, _lawRegionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerTurnedInBountyInRegion(int _player, uint _lawRegionHash)
		{
			Function.Call((Hash)0x73BAD7B2F2DB50DE, _player, _lawRegionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd6c0a8c7c0b2f82c(int _player, bool _p1)
		{
			Function.Call((Hash)0xD6C0A8C7C0B2F82C, _player, _p1);
		}
		/// <summary>
		/// Default range is 1.0f
		/// </summary>
		public static void SetLawSenseRangeModifier(int _player, float _range)
		{
			Function.Call((Hash)0xFEC85339AACA2A35, _player, _range);
		}
		/// <summary>
		/// _SET_DISPATCH_*
		/// </summary>
		public static void Hash_0x7ef2a2fe38d74456(int _flag, bool _p1)
		{
			Function.Call((Hash)0x7EF2A2FE38D74456, _flag, _p1);
		}
		/// <summary>
		/// _GET_DISPATCH_*
		/// </summary>
		public static bool Hash_0xc7dc5a0a7df608cb(int _flag)
		{
			return Function.Call<bool>((Hash)0xC7DC5A0A7DF608CB, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisableDisturbanceCrimes(int _player, bool _p1)
		{
			Function.Call((Hash)0xDE5FAA741A781F73, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPostponeDisturbanceCrimesDuringCombat(int _player, bool _p1)
		{
			Function.Call((Hash)0x362086B911657B1A, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CreateGuardZone(string _name)
		{
			Function.Call((Hash)0x8F9DE75680275C9F, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveGuardZone(string _name)
		{
			Function.Call((Hash)0x67EBDD958835956C, _name);
		}
		/// <summary>
		/// Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
		/// </summary>
		public static void Hash_0x9772395cc73e8d1f(int _ped, string _name)
		{
			Function.Call((Hash)0x9772395CC73E8D1F, _ped, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableGuardZone(string _name)
		{
			Function.Call((Hash)0x26D558692B25DD95, _name);
		}
		/// <summary>
		/// Only used in sisikapenitentiary R* Script: name = SISIKA
		/// _IS_G* or _IS_H*
		/// </summary>
		public static bool Hash_0x0dbaca9c38c9a686(string _name)
		{
			return Function.Call<bool>((Hash)0x0DBACA9C38C9A686, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGuardPedInvestigating(int _ped)
		{
			return Function.Call<bool>((Hash)0xD743C4293F47AFAD, _ped);
		}
		/// <summary>
		/// Returns true when investigation creation was successful
		/// </summary>
		public static bool CreateGuardZoneForEntity(string _guardZoneName, int _entity, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0x0D4B77E862475ED3, _guardZoneName, _entity, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZoneVolumeRegistrationStart(string _name, int _volume)
		{
			Function.Call((Hash)0x8C598A930F471938, _name, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZoneVolumeRestricted(string _name, int _volume)
		{
			Function.Call((Hash)0x35815F372D43E1E5, _name, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZoneVolumeThreat(string _name, int _volume)
		{
			Function.Call((Hash)0xA1B0E6301E2E02A6, _name, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZoneVolumeWarning(string _name, int _volume)
		{
			Function.Call((Hash)0xAD3E07C37A7C1ADC, _name, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZoneVolumeRegistrationEnd(string _name, int _volume)
		{
			Function.Call((Hash)0xA8A74AA79FB67159, _name, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZonePosition(string _name, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x7E7BF59F89FC6C6D, _name, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuardZonePosition2(string _name, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x2F9005E2EA4E5EE4, _name, _x, _y, _z);
		}
		// :#########################: //
		// : namespace: LOCALIZATION : //
		// :#########################: //
		/// <summary>
		/// Same return values as GET_CURRENT_LANGUAGE
		/// </summary>
		public static int LocalizationGetSystemLanguage()
		{
			return Function.Call<int>((Hash)0x3C1A05F86AE6ACB5);
		}
		/// <summary>
		/// 0 = american (en-US)
		/// 1 = french (fr-FR)
		/// 2 = german (de-DE)
		/// 3 = italian (it-IT)
		/// 4 = spanish (es-ES)
		/// 5 = brazilian (pt-BR)
		/// 6 = polish (pl-PL)
		/// 7 = russian (ru-RU)
		/// 8 = korean (ko-KR)
		/// 9 = chinesetrad (zh-TW)
		/// 10 = japanese (ja-JP)
		/// 11 = mexican (es-MX)
		/// 12 = chinesesimp (zh-CN)
		/// </summary>
		public static int GetCurrentLanguage()
		{
			return Function.Call<int>((Hash)0xDB917DA5C6835FCC);
		}
		/// <summary>
		/// Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
		/// </summary>
		public static bool Hash_0x45d50415e4d885ff()
		{
			return Function.Call<bool>((Hash)0x45D50415E4D885FF);
		}
		/// <summary>
		/// 0 = DATE_FORMAT_DMY
		/// 1 = DATE_FORMAT_MDY
		/// 2 = DATE_FORMAT_YMD
		/// 
		/// Old name: _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
		/// </summary>
		public static int LocalizationGetSystemDateType()
		{
			return Function.Call<int>((Hash)0x76E30B799EBEEA0F);
		}
		// :################: //
		// : namespace: MAP : //
		// :################: //
		/// <summary>
		/// Returns the Blip handle of given Entity.
		/// </summary>
		public static int GetBlipFromEntity(int _entity)
		{
			return Function.Call<int>((Hash)0x6D2C41A8BD6D6FD0, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMainPlayerBlipId()
		{
			return Function.Call<int>((Hash)0x5CD2889B2B381D45);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BlipAddForStyle(uint _styleHash)
		{
			return Function.Call<int>((Hash)0x3E593DF9C2962EC6, _styleHash);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
		/// https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
		/// </summary>
		public static int BlipAddForCoords(uint _blipHash, float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0x554D9D53F696D002, _blipHash, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BlipAddForEntity(uint _blipHash, int _entity)
		{
			return Function.Call<int>((Hash)0x23F74C2FDA6E7C61, _blipHash, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BlipAddForPickupPlacement(uint _blipHash, int _pickup)
		{
			return Function.Call<int>((Hash)0xA486008892065FB9, _blipHash, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BlipAddForRadius(uint _blipHash, float _x, float _y, float _z, float _radius)
		{
			return Function.Call<int>((Hash)0x45F13B7E0A15C880, _blipHash, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BlipAddForArea(uint _blipHash, float _x, float _y, float _z, float _scaleX, float _scaleY, float _scaleZ, int _p7)
		{
			return Function.Call<int>((Hash)0xEC174ADBCB611ECC, _blipHash, _x, _y, _z, _scaleX, _scaleY, _scaleZ, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BlipAddForVolume(uint _blipHash, int _volume)
		{
			return Function.Call<int>((Hash)0xA6EF0C54A3443E70, _blipHash, _volume);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
		/// Removes any existing modifiers and sets the style.
		/// </summary>
		public static bool BlipSetStyle(int _blip, uint _styleHash)
		{
			return Function.Call<bool>((Hash)0xEDD964B7984AC291, _blip, _styleHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BlipAddStyle(int _blip, uint _styleHash)
		{
			return Function.Call<bool>((Hash)0xBD62D98799A3DAF0, _blip, _styleHash);
		}
		/// <summary>
		/// https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
		/// https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
		/// 
		/// Old name: _BLIP_SET_MODIFIER
		/// </summary>
		public static bool BlipAddModifier(int _blip, uint _modifierHash)
		{
			return Function.Call<bool>((Hash)0x662D364ABF16DE2F, _blip, _modifierHash);
		}
		/// <summary>
		/// If modifierHash is 0, ALL modifiers will be removed.
		/// </summary>
		public static bool BlipRemoveModifier(int _blip, uint _modifierHash)
		{
			return Function.Call<bool>((Hash)0xB059D7BD3D78C16F, _blip, _modifierHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x250c75eb1728cc0d(int _blip)
		{
			Function.Call((Hash)0x250C75EB1728CC0D, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipFlashTimer(int _blip, int _blipType, uint _blipHash)
		{
			Function.Call((Hash)0x02FF4CF43B7209D1, _blip, _blipType, _blipHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetBlipFlashes(int _blip, int _p1, uint _p2)
		{
			return Function.Call<bool>((Hash)0x0DF2B55F717DDB10, _blip, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TriggerSonarBlip(uint _typeHash, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x72DD432F3CDFC0EE, _typeHash, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TriggerSonarBlipOnEntity(uint _typeHash, int _entity)
		{
			Function.Call((Hash)0x0C7A2289A5C4D7C9, _typeHash, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AllowSonarBlips(bool _toggle)
		{
			Function.Call((Hash)0x6E6E64788C07D2E0, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipCoords(int _blip, float _posX, float _posY, float _posZ)
		{
			Function.Call((Hash)0x4FF674F5E23D49CE, _blip, _posX, _posY, _posZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetBlipCoords(int _blip)
		{
			return Function.Call<Vector3>((Hash)0x201C319797BDA603, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipSprite(int _blip, uint _hash, bool _p2)
		{
			Function.Call((Hash)0x74F74D3207ED525C, _blip, _hash, _p2);
		}
		/// <summary>
		/// _CLEAR*
		/// </summary>
		public static int Hash_0x01b928ca2e198b01(int _p0)
		{
			return Function.Call<int>((Hash)0x01B928CA2E198B01, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipNameFromTextFile(int _blip, string _textLabel)
		{
			Function.Call((Hash)0x0A062D6D7C0B2C2C, _blip, _textLabel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipName(int _blip, string _name)
		{
			Function.Call((Hash)0x9CB1A1623062F402, _blip, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipNameToPlayerName(int _blip, int _player)
		{
			Function.Call((Hash)0x093DD5A31BC2B459, _blip, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipRotation(int _blip, int _rotation)
		{
			Function.Call((Hash)0x6049966A94FBE706, _blip, _rotation);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlipScale(int _blip, float _scale)
		{
			Function.Call((Hash)0xD38744167B2FA257, _blip, _scale);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveBlip(int _blip)
		{
			Function.Call((Hash)0xF2C3C9DA47AAA54A, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesBlipExist(int _blip)
		{
			return Function.Call<bool>((Hash)0xCD82FA174080B3B1, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesEntityHaveBlip(int _entity)
		{
			return Function.Call<bool>((Hash)0x9FA00E2FC134A9D0, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRadarZoom(int _zoomLevel)
		{
			Function.Call((Hash)0xCAF6489DA2C8DD9E, _zoomLevel);
		}
		/// <summary>
		/// It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
		/// </summary>
		public static void AbandonBlip(int _blip)
		{
			Function.Call((Hash)0xDEEDE7C41742E011, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBlipAttachedToAnyEntity(int _blip)
		{
			return Function.Call<bool>((Hash)0xE9F676788F8D5E1E, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBlipOnMinimap(int _blip)
		{
			return Function.Call<bool>((Hash)0x46534526B9CD2D17, _blip);
		}
		/// <summary>
		/// Doesn't actually return anything.
		/// </summary>
		public static int ForceSonarBlipsThisFrame()
		{
			return Function.Call<int>((Hash)0xEE1C7BA69BB74B08);
		}
		/// <summary>
		/// https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
		/// </summary>
		public static void SetGpsFlags(int _p0, float _p1)
		{
			Function.Call((Hash)0x5DE61C90DDECFA2D, _p0, _p1);
		}
		/// <summary>
		/// Clears the GPS flags.
		/// </summary>
		public static void ClearGpsFlags()
		{
			Function.Call((Hash)0x4D3771237C79FF41);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGpsCustomRouteRender(bool _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xF6CEF599FC470B33, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearGpsCustomRoute()
		{
			Function.Call((Hash)0x1EAA5674B4D181C5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartGpsMultiRoute(uint _colorNameHash, bool _onFoot, bool _inVehicle)
		{
			Function.Call((Hash)0x3D3D15AF7BCAAF83, _colorNameHash, _onFoot, _inVehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddPointToGpsMultiRoute(float _x, float _y, float _z, bool _p3)
		{
			Function.Call((Hash)0x64C59DD6834FA942, _x, _y, _z, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGpsMultiRouteRender(bool _toggle)
		{
			Function.Call((Hash)0x4426D65E029A4DC0, _toggle);
		}
		/// <summary>
		/// Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
		/// </summary>
		public static void ClearGpsMultiRoute()
		{
			Function.Call((Hash)0x9E0AB9AAEE87CE28);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartGpsCustomRouteFromWaypointRecordingRoute(string _waypointRecording, int _point, int _numPoints, uint _colorNameHash, bool _p4, bool _p5)
		{
			Function.Call((Hash)0x6B44F13D888F770D, _waypointRecording, _point, _numPoints, _colorNameHash, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearGpsPlayerWaypoint()
		{
			Function.Call((Hash)0x08FDC6F796E350D1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd3f58e9316b7fc2a(int _p0)
		{
			Function.Call((Hash)0xD3F58E9316B7FC2A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWaypointOff()
		{
			Function.Call((Hash)0xFA8C41E8020D3439);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWaypointActive()
		{
			return Function.Call<bool>((Hash)0x202B1BBFC6AB5EE4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetWaypointCoords()
		{
			return Function.Call<Vector3>((Hash)0x29B30D07C3F7873B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf08e42bfa46bdff8(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xF08E42BFA46BDFF8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HideActivePointsOfInterest()
		{
			Function.Call((Hash)0xA1B4052C2A3DCC1E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShowActivePointsOfInterest()
		{
			Function.Call((Hash)0x3FBB838AEA30C1D8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf47a1eb2a538a3a3()
		{
			return Function.Call<int>((Hash)0xF47A1EB2A538A3A3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool FindClosestGpsPosition(float _x, float _y, float _z, Vector3 _outPosition)
		{
			return Function.Call<bool>((Hash)0x3FDA2B79AEEE351C, _x, _y, _z, _outPosition);
		}
		/// <summary>
		/// If Minimap / Radar should be displayed.
		/// </summary>
		public static void DisplayRadar(bool _toggle)
		{
			Function.Call((Hash)0x1B3DA717B9AFF828, _toggle);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
		/// configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
		/// p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
		/// </summary>
		public static void SetRadarConfigType(uint _configHash, uint _p1)
		{
			Function.Call((Hash)0x9C113883487FD53C, _configHash, _p1);
		}
		/// <summary>
		/// list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
		/// </summary>
		public static void AddPropToMinimap(uint _minimapProp, float _x, float _y, float _rotation, int _p4)
		{
			Function.Call((Hash)0x1392105DA88BBFFB, _minimapProp, _x, _y, _rotation, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePropFromMinimap(uint _minimapProp)
		{
			Function.Call((Hash)0xE057FEA9A22EB3EE, _minimapProp);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRadarAsExteriorThisFrame()
		{
			Function.Call((Hash)0xA8EBBAE986FB5457);
		}
		/// <summary>
		/// Reveals the entire minimap (FOW = Fog of War)
		/// </summary>
		public static void SetMinimapHideFow(bool _toggle)
		{
			Function.Call((Hash)0x4B8F743A4A6D2FF8, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFowUpdatePlayerOverride(bool _toggle, uint _p1)
		{
			Function.Call((Hash)0x63E7279D04160477, _toggle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMinimapFowOverrideRevealScale(float _scale, uint _p1)
		{
			Function.Call((Hash)0xE5A7F70B7C0F3271, _scale, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMinimapFowShouldUpdate(bool _toggle, uint _p1)
		{
			Function.Call((Hash)0x632AA10BF7EA53D3, _toggle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMinimapFowRevealCoordinate(float _x, float _y, float _z, uint _p3)
		{
			Function.Call((Hash)0x73348402566ECB6E, _x, _y, _z, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMinimapFowRevealVolume(int _volume, uint _p1)
		{
			Function.Call((Hash)0x63CBBD6CA6F321F9, _volume, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetMinimapFow(uint _hash)
		{
			Function.Call((Hash)0xEB3CB3386C775D72, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RevealMinimapFow(uint _hash)
		{
			Function.Call((Hash)0xF8096DF9B87246E3, _hash);
		}
		/// <summary>
		/// hash can be the hash of "guarma" or "world".
		/// </summary>
		public static void SetMinimapZone(uint _zone)
		{
			Function.Call((Hash)0xA657EC9DBC6CC900, _zone);
		}
		/// <summary>
		/// Locks the minimap to the specified angle in integer degrees.
		/// 
		/// angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
		/// </summary>
		public static void LockMinimapAngle(int _angle)
		{
			Function.Call((Hash)0x0BFD145EF819FB3A, _angle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnlockMinimapAngle()
		{
			Function.Call((Hash)0x5373DE8E179BC2A0);
		}
		/// <summary>
		/// regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
		/// </summary>
		public static void MapEnableRegionBlip(uint _regionHash, uint _styleHash)
		{
			Function.Call((Hash)0x563FCB6620523917, _regionHash, _styleHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MapDisableRegionBlip(uint _regionHash)
		{
			Function.Call((Hash)0x6786D7AFAC3162B3, _regionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MapIsRegionHighlightedWithStyle(uint _regionHash, uint _styleHash)
		{
			return Function.Call<bool>((Hash)0xE38450DBCBC70E3D, _regionHash, _styleHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MapDiscoverRegion(uint _discoveryHash)
		{
			Function.Call((Hash)0xD8C7162AB2E2AF45, _discoveryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MapDiscoverySetEnabled(uint _discoveryHash)
		{
			Function.Call((Hash)0xDA98246C7A3C2189, _discoveryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MapIsDiscoveryActive(uint _discoveryHash)
		{
			return Function.Call<bool>((Hash)0x3F81EA4275D39D6F, _discoveryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPausemapCoordsWithRadius(float _x, float _y, float _z, float _radius)
		{
			Function.Call((Hash)0xE0884C184728C75B, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7c9f4cdf402ca82a()
		{
			Function.Call((Hash)0x7C9F4CDF402CA82A);
		}
		/// <summary>
		/// _CLEAR*
		/// </summary>
		public static void Hash_0x44813684f72b563c(int _entity, int _p1)
		{
			Function.Call((Hash)0x44813684F72B563C, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x97f6f158cc5b5ca2(int _entity, int _p1)
		{
			Function.Call((Hash)0x97F6F158CC5B5CA2, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbb68d4d3ca3de402(int _p0, int _p1)
		{
			Function.Call((Hash)0xBB68D4D3CA3DE402, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3cb8859f04763c78(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x3CB8859F04763C78, _p0, _p1);
		}
		/// <summary>
		/// FM_CLIENT_SETUP_EAGLE_EYE - setting up eagle eye for entity
		/// </summary>
		public static void Hash_0x7563cbca99253d1a(int _entity, uint _blip)
		{
			Function.Call((Hash)0x7563CBCA99253D1A, _entity, _blip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1726963e6049db53(int _p0)
		{
			Function.Call((Hash)0x1726963E6049DB53, _p0);
		}
		// :#####################: //
		// : namespace: MINIGAME : //
		// :#####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6480723d3be535b6(int _p0)
		{
			Function.Call((Hash)0x6480723D3BE535B6, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3df7ee3a76185108()
		{
			Function.Call((Hash)0x3DF7EE3A76185108);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe1f365c4c8f259d8(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xE1F365C4C8F259D8, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe53a308ac35877a8()
		{
			return Function.Call<int>((Hash)0xE53A308AC35877A8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x580f34c726387226(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x580F34C726387226, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0876326238914a3f()
		{
			Function.Call((Hash)0x0876326238914A3F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3ffe60dd8a936551(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x3FFE60DD8A936551, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x18a0d48df9211c07()
		{
			Function.Call((Hash)0x18A0D48DF9211C07);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MinigameIsConnectedToServer(int _p0)
		{
			return Function.Call<int>((Hash)0x2A0C4736AC5AF0CE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x39654e1f68b78287()
		{
			return Function.Call<int>((Hash)0x39654E1F68B78287);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3eecaadab0d9fe29()
		{
			return Function.Call<int>((Hash)0x3EECAADAB0D9FE29);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd39d32eb3b52dd83(int _p0)
		{
			return Function.Call<int>((Hash)0xD39D32EB3B52DD83, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MinigameIsSeatOccupied(int _p0)
		{
			return Function.Call<bool>((Hash)0x8593A8CB0ED2C3B4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MinigameRequestSeatAtTable(int _data)
		{
			return Function.Call<bool>((Hash)0xF6AC6085D8D6C004, _data);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MinigameLeaveTable(int _p0)
		{
			return Function.Call<int>((Hash)0xF5446E47941E654C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MinigameGetNextEventType()
		{
			return Function.Call<int>((Hash)0x578907F59BA01B6C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MinigameGetNextEvent(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xDF728C5AE137FC13, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MinigamePopNextEvent()
		{
			Function.Call((Hash)0x833E03BAEBADC4B0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3b31732fade5baf3()
		{
			return Function.Call<int>((Hash)0x3B31732FADE5BAF3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x578907f59ba01b6d(int _p0)
		{
			return Function.Call<int>((Hash)0x578907F59BA01B6D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdf728c5ae137fc14(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xDF728C5AE137FC14, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MinigameIsRequestPending(int _p0)
		{
			return Function.Call<int>((Hash)0x9105A4A2556FA937, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x644439b5387ee57e(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x644439B5387EE57E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x15e90b6a993017aa()
		{
			return Function.Call<int>((Hash)0x15E90B6A993017AA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x10342cc82e8356e9(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x10342CC82E8356E9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x32a7c216344d623b(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x32A7C216344D623B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xec819d612038ef4b(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			return Function.Call<int>((Hash)0xEC819D612038EF4B, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerGetGameSettingsForId(int _p0)
		{
			return Function.Call<int>((Hash)0x2D20E12E1990D584, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerBuyIn(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xB4D610EA5A1FDE74, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerCall(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x8DED681B161EBD78, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerCheck(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x49A045628D9B1B86, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerFold(int _p0)
		{
			return Function.Call<int>((Hash)0x3DFAB7D9BB45B5BE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerRaise(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xECCF45A79A17BB96, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PokerReveal(int _p0)
		{
			return Function.Call<int>((Hash)0x2F2131DB0A8B02DC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x58521e6dcde97d74(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x58521E6DCDE97D74, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf6de98516fd3ac9b()
		{
			Function.Call((Hash)0xF6DE98516FD3AC9B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3f4fd4bed07ab8c4(int _p0)
		{
			return Function.Call<int>((Hash)0x3F4FD4BED07AB8C4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3ae451860f03ca8a(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x3AE451860F03CA8A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x012027c28f421f46(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x012027C28F421F46, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x455ecca0715c507f()
		{
			Function.Call((Hash)0x455ECCA0715C507F);
		}
		/// <summary>
		/// Hardcoded to return zero/false.
		/// </summary>
		public static int DominoesBuyIn(int _p0)
		{
			return Function.Call<int>((Hash)0x399E6CD12FC8CA89, _p0);
		}
		/// <summary>
		/// Hardcoded to return zero/false.
		/// </summary>
		public static int DominoesPlaceDomino(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xB79A29B33BF29BA5, _p0, _p1);
		}
		/// <summary>
		/// Hardcoded to return zero/false.
		/// </summary>
		public static int DominoesRequestValidPlacements(int _p0)
		{
			return Function.Call<int>((Hash)0xE26AEE7E67D9E21D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa2db3c6270c122e3(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xA2DB3C6270C122E3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x398066f893149856(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x398066F893149856, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbea7d3cb47e1479c()
		{
			return Function.Call<int>((Hash)0xBEA7D3CB47E1479C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x910b088e51a511ac()
		{
			return Function.Call<int>((Hash)0x910B088E51A511AC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9dd95b405ab4983e(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x9DD95B405AB4983E, _p0, _p1);
		}
		// :#################: //
		// : namespace: MISC : //
		// :#################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumberOfFreeStacksOfThisSize(int _stackSize)
		{
			return Function.Call<int>((Hash)0x40DC2907A9697EF7, _stackSize);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumberOfInstructions()
		{
			return Function.Call<int>((Hash)0x72904D3D62AF5839);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMaxNumInstructions()
		{
			return Function.Call<int>((Hash)0xC43CD2668B204419);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool IsMagDemo1Active()
		{
			return Function.Call<bool>((Hash)0x5FC9357C26DAEFCE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRandomSeed(int _seed)
		{
			Function.Call((Hash)0x5CD7A49104AFCB6B, _seed);
		}
		/// <summary>
		/// Maximum value is 1.0f
		/// At a value of 0.0f the game will still run at a minimum time scale.
		/// </summary>
		public static void SetTimeScale(float _timeScale)
		{
			Function.Call((Hash)0x9682AF6050854856, _timeScale);
		}
		/// <summary>
		/// If true, the player can't save the game.
		/// </summary>
		public static void SetMissionFlag(bool _toggle)
		{
			Function.Call((Hash)0x36694B456BE80D0A, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetMissionFlag()
		{
			return Function.Call<bool>((Hash)0xB15CD1CF58771DE1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5801be2df2af07ec(int _p0)
		{
			Function.Call((Hash)0x5801BE2DF2AF07EC, _p0);
		}
		/// <summary>
		/// If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
		/// Does nothing if the mission flag is set.
		/// </summary>
		public static void SetRandomEventFlag(bool _toggle)
		{
			Function.Call((Hash)0xB1ADCCC4150C6473, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetRandomEventFlag()
		{
			return Function.Call<bool>((Hash)0x924D54E5698AE3E0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9bf2c0c568c61641(int _p0)
		{
			Function.Call((Hash)0x9BF2C0C568C61641, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ActivityFeedCreate(string _p0, string _p1)
		{
			Function.Call((Hash)0xCC7FC854B956A128, _p0, _p1);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ActivityFeedAddSubstringToCaption(string _p0)
		{
			Function.Call((Hash)0x9935F76407C32539, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xff252e2bafb7330f(int _p0)
		{
			Function.Call((Hash)0xFF252E2BAFB7330F, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ActivityFeedActionStartWithCommandLine(string _p0, string _p1)
		{
			Function.Call((Hash)0x91D657230BC208D2, _p0, _p1);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ActivityFeedActionStartWithCommandLineAdd(string _p0)
		{
			Function.Call((Hash)0x1694A053DFB61A34, _p0);
		}
		/// <summary>
		/// Hardcoded to return one/true.
		/// </summary>
		public static int Hash_0xaf530e56505d1bd6(int _p0)
		{
			return Function.Call<int>((Hash)0xAF530E56505D1BD6, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ActivityFeedPost()
		{
			Function.Call((Hash)0xB16FC7B364D86585);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string Hash_0xf81c53561d15f330()
		{
			return Function.Call<string>((Hash)0xF81C53561D15F330);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1096603b519c905f(string _name)
		{
			Function.Call((Hash)0x1096603B519C905F, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcc3edc5614b03f61(int _p0)
		{
			Function.Call((Hash)0xCC3EDC5614B03F61, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InformCodeOfContentIdOfCurrentUgcMission(string _p0)
		{
			Function.Call((Hash)0x708DF841B8F27AA2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xda4d8eb04e8e2928(int _p0)
		{
			Function.Call((Hash)0xDA4D8EB04E8E2928, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb08c4fa25bc29db9(int _p0)
		{
			Function.Call((Hash)0xB08C4FA25BC29DB9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPrevWeatherTypeHashName()
		{
			return Function.Call<uint>((Hash)0x4BEB42AEBCA732E9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetNextWeatherTypeHashName()
		{
			return Function.Call<uint>((Hash)0x51021D36F62AAA83);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0730e518486deec3(int _p0)
		{
			Function.Call((Hash)0x0730E518486DEEC3, _p0);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
		/// </summary>
		public static void SetWeatherType(uint _weatherType, bool _p1, bool _p2, bool _transition, float _transitionTime, bool _p5)
		{
			Function.Call((Hash)0x59174F1AFE095B5A, _weatherType, _p1, _p2, _transition, _transitionTime, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeatherType2(uint _weatherType, int _p1, int _p2, int _p3, bool _p4)
		{
			Function.Call((Hash)0x2C6A07AF9AEDABD8, _weatherType, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRandomWeatherTypeIndex()
		{
			return Function.Call<int>((Hash)0x7F4CE164D9A11DFE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetRandomWeatherType()
		{
			return Function.Call<uint>((Hash)0x1359C181BC625503);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRandomWeatherType(bool _p0, bool _p1)
		{
			Function.Call((Hash)0x6E5A7FBEECAB3C72, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearWeatherTypePersist()
		{
			Function.Call((Hash)0xD85DFE5C131E4AE9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearWeatherTypePersistOvertime(int _milliseconds)
		{
			Function.Call((Hash)0xCE7690C0A0D1C36D, _milliseconds);
		}
		/// <summary>
		/// Params: percentWeather2: 0f - 0.75f in R* Scripts
		/// 
		/// Old name: _GET_WEATHER_TYPE_TRANSITION
		/// </summary>
		public static void GetCurrWeatherState(uint _weatherType1, uint _weatherType2, float _percentWeather2)
		{
			Function.Call((Hash)0x0AC679B2342F14F2, _weatherType1, _weatherType2, _percentWeather2);
		}
		/// <summary>
		/// Params: BOOL p3 is always true
		/// 
		/// Old name: _SET_WEATHER_TYPE_TRANSITION
		/// </summary>
		public static void SetCurrWeatherState(uint _weatherType1, uint _weatherType2, float _percentWeather2, bool _enabled)
		{
			Function.Call((Hash)0xFA3E3CA8A1DE6D5D, _weatherType1, _weatherType2, _percentWeather2, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeatherTypeFrozen(bool _toggle)
		{
			Function.Call((Hash)0xD74ACDF7DB8114AF, _toggle);
		}
		/// <summary>
		/// Returns the weather type that has been set by a script
		/// </summary>
		public static void GetForcedWeather(uint _weather, uint _p1)
		{
			Function.Call((Hash)0xDD560ABEF5D3784C, _weather, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2916b30dc6c41179(uint _weatherType)
		{
			Function.Call((Hash)0x2916B30DC6C41179, _weatherType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd3f943b88f55376a(uint _weatherType)
		{
			Function.Call((Hash)0xD3F943B88F55376A, _weatherType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x243cede8f916b994()
		{
			Function.Call((Hash)0x243CEDE8F916B994);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetOverrideWeather(uint _weatherType)
		{
			Function.Call((Hash)0xBE83CAE8ED77A94F, _weatherType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearOverrideWeather()
		{
			Function.Call((Hash)0x80A398F16FFE3CC3);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
		/// </summary>
		public static void SetWeatherVariation(string _weatherType, string _variation)
		{
			Function.Call((Hash)0x3373779BAF7CAF48, _weatherType, _variation);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearWeatherVariation(string _weatherType, bool _p1)
		{
			Function.Call((Hash)0x0E71C80FA4EC8147, _weatherType, _p1);
		}
		/// <summary>
		/// Only used in smuggler2 script
		/// </summary>
		public static void WaterOverrideSetShorewaveamplitude(float _amplitude)
		{
			Function.Call((Hash)0x55123D5A7D9D3C42, _amplitude);
		}
		/// <summary>
		/// Only used in smuggler2 script
		/// </summary>
		public static void WaterOverrideSetOceanwavemaxamplitude(float _maxAmplitude)
		{
			Function.Call((Hash)0xF06C5B66DE20B2B8, _maxAmplitude);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetTemperatureAtCoords(float _x, float _y, float _z)
		{
			return Function.Call<float>((Hash)0xB98B78C3768AF6E0, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWindSpeed(float _speed)
		{
			Function.Call((Hash)0xD00C2D82DC04A99F, _speed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetWindSpeed()
		{
			return Function.Call<float>((Hash)0xFFB7E74E041150A4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWindDirection(float _direction)
		{
			Function.Call((Hash)0xB56C4F5F57A45600, _direction);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetWindDirection()
		{
			return Function.Call<Vector3>((Hash)0xF703E82F3FE14A5F);
		}
		/// <summary>
		/// Old name: _SET_RAIN_LEVEL
		/// </summary>
		public static void SetRain(float _intensity)
		{
			Function.Call((Hash)0x193DFC0526830FD6, _intensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetRainLevel()
		{
			return Function.Call<float>((Hash)0x931B5F4CC130224B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x745808bb01cec6b9(float _p0)
		{
			Function.Call((Hash)0x745808BB01CEC6B9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSnowLevel(float _level)
		{
			Function.Call((Hash)0xF6BEE7E80EC5CA40, _level);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetSnowLevel()
		{
			return Function.Call<float>((Hash)0x1E5D727041BE1709);
		}
		/// <summary>
		/// creates single lightning+thunder at random position
		/// </summary>
		public static void ForceLightningFlash()
		{
			Function.Call((Hash)0x369DB5B2510FA080);
		}
		/// <summary>
		/// p3 is always -1.0f in the scripts
		/// </summary>
		public static void ForceLightningFlashAtCoords(float _x, float _y, float _z, float _p3)
		{
			Function.Call((Hash)0x67943537D179597C, _x, _y, _z, _p3);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xa9342743b634a462(int _p0)
		{
			Function.Call((Hash)0xA9342743B634A462, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetGameTimer()
		{
			return Function.Call<int>((Hash)0x4F67E8ECA7D3F667);
		}
		/// <summary>
		/// Returns rage::fwTimer::sm_nonScaledClippedTime
		/// </summary>
		public static int GetGameTimerNonScaledClipped()
		{
			return Function.Call<int>((Hash)0x483B8C542103AD72);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetSystemTime()
		{
			return Function.Call<int>((Hash)0xBE7F225417E35A7C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumberOfMicrosecondsSinceLastCall()
		{
			return Function.Call<int>((Hash)0xB0CE5E5ED8BB3581);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetScriptTimeWithinFrameInMicroseconds()
		{
			return Function.Call<int>((Hash)0x63219768C586667C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetScriptTimeWithinFrame()
		{
			Function.Call((Hash)0x1411A7CBC3A6EB7B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetFrameTime()
		{
			return Function.Call<float>((Hash)0x5E72022914CE3C38);
		}
		/// <summary>
		/// Old name: _GET_BENCHMARK_TIME
		/// </summary>
		public static float GetSystemTimeStep()
		{
			return Function.Call<float>((Hash)0x3F3172FEAE3AFE1C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetFrameCount()
		{
			return Function.Call<int>((Hash)0x77DFA958FCF100C1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6bed40493a1afdb8(int _p0, float _p1)
		{
			Function.Call((Hash)0x6BED40493A1AFDB8, _p0, _p1);
		}
		/// <summary>
		/// Reads the passed value as floating point value and returns it.
		/// Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
		/// </summary>
		public static float ReadIntAsFloat(int _value)
		{
			return Function.Call<float>((Hash)0xD2C9126410DFA1B2, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetRandomFloatInRange(float _startRange, float _endRange)
		{
			return Function.Call<float>((Hash)0xE29F927A961F8AAA, _startRange, _endRange);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRandomIntInRange(int _startRange, int _endRange)
		{
			return Function.Call<int>((Hash)0xD53343AA4FB7DD28, _startRange, _endRange);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetGroundZFor3dCoord(float _x, float _y, float _z, float _groundZ, bool _p4)
		{
			return Function.Call<bool>((Hash)0x24FA4267BB8D2431, _x, _y, _z, _groundZ, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetGroundZAndNormalFor3dCoord(float _x, float _y, float _z, float _groundZ, Vector3 _normal)
		{
			return Function.Call<bool>((Hash)0x2A29CA9A6319E6AB, _x, _y, _z, _groundZ, _normal);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbbe5b63effb08e68(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0xBBE5B63EFFB08E68, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Asin(float _p0)
		{
			return Function.Call<float>((Hash)0x6E3C15D296C15583, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Acos(float _p0)
		{
			return Function.Call<float>((Hash)0x586690F0176DC575, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Tan(float _p0)
		{
			return Function.Call<float>((Hash)0x8C13DB96497B7ABF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Atan(float _p0)
		{
			return Function.Call<float>((Hash)0x503054DED0B78027, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Atan2(float _p0, float _p1)
		{
			return Function.Call<float>((Hash)0x965B220A066E3F07, _p0, _p1);
		}
		/// <summary>
		/// If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
		/// 
		/// Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.
		/// </summary>
		public static float GetDistanceBetweenCoords(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _useZ)
		{
			return Function.Call<float>((Hash)0x0BE7F4E3CDBAFB28, _x1, _y1, _z1, _x2, _y2, _z2, _useZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAngleBetween2dVectors(float _x1, float _y1, float _x2, float _y2)
		{
			return Function.Call<float>((Hash)0xD0DFE1C486097BBB, _x1, _y1, _x2, _y2);
		}
		/// <summary>
		/// dx = x1 - x2
		/// dy = y1 - y2
		/// </summary>
		public static float GetHeadingFromVector2d(float _dx, float _dy)
		{
			return Function.Call<float>((Hash)0x38D5202FF9271C62, _dx, _dy);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetClosestPointOnLine(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, bool _p9)
		{
			return Function.Call<Vector3>((Hash)0x83ACC65D9ACEC5EF, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetLinePlaneIntersection(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9, float _p10, float _p11, float _p12)
		{
			return Function.Call<bool>((Hash)0xAB6A04CEC428258B, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBit(int _address, int _offset)
		{
			Function.Call((Hash)0xF73FBE4845C43B5B, _address, _offset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearBit(int _address, int _offset)
		{
			Function.Call((Hash)0x7D1D4A3602B6AD4E, _address, _offset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBitFlagSet(int _bitFlags, int _flag)
		{
			return Function.Call<bool>((Hash)0x8F4F050054005C27, _bitFlags, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyBitFlagSet(int _bitFlags)
		{
			return Function.Call<bool>((Hash)0x80E9C316EF84DD81, _bitFlags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CountBitFlags(int _bitFlags)
		{
			return Function.Call<int>((Hash)0xE704838F36F93B7B, _bitFlags);
		}
		/// <summary>
		/// Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
		/// The flags are stored in an int array where each int has the ability to hold 32 flags.
		/// Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
		/// </summary>
		public static void SetBitFlag(int _bitFlags, int _flag)
		{
			Function.Call((Hash)0xE84AAC1B22A73E99, _bitFlags, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearBitFlag(int _bitFlags, int _flag)
		{
			Function.Call((Hash)0xB909149F2BB5F6DA, _bitFlags, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAllBitFlags(int _bitFlags)
		{
			Function.Call((Hash)0xD2D74F89DF844A50, _bitFlags);
		}
		/// <summary>
		/// Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
		/// Note: this implementation is case-insensitive.
		/// </summary>
		public static uint GetHashKey(string _string)
		{
			return Function.Call<uint>((Hash)0xFD340785ADF8CFB7, _string);
		}
		/// <summary>
		/// https://easings.net/
		/// 
		/// enum class eEasingCurveType
		/// {
		/// 	TYPE_LINEAR,
		/// 	TYPE_QUADRATIC_IN,
		/// 	TYPE_QUADRATIC_OUT,
		/// 	TYPE_QUADRATIC_INOUT,
		/// 	TYPE_CUBIC_IN,
		/// 	TYPE_CUBIC_OUT,
		/// 	TYPE_CUBIC_INOUT,
		/// 	TYPE_QUARTIC_IN,
		/// 	TYPE_QUARTIC_OUT,
		/// 	TYPE_QUARTIC_INOUT,
		/// 	TYPE_QUINTIC_IN,
		/// 	TYPE_QUINTIC_OUT,
		/// 	TYPE_QUINTIC_INOUT,
		/// 	TYPE_EXPONENTIAL_IN,
		/// 	TYPE_EXPONENTIAL_OUT,
		/// 	TYPE_EXPONENTIAL_INOUT,
		/// 	TYPE_SINE_IN,
		/// 	TYPE_SINE_OUT,
		/// 	TYPE_SINE_INOUT,
		/// 	TYPE_CIRCULAR_IN,
		/// 	TYPE_CIRCULAR_OUT,
		/// 	TYPE_CIRCULAR_INOUT,
		/// 	TYPE_BOUNCE_IN,
		/// 	TYPE_BOUNCE_OUT,
		/// 	TYPE_BOUNCE_INOUT,
		/// 	TYPE_CUSTOM
		/// };
		/// </summary>
		public static float GetEasingCurveValue(float _t, float _b, float _d, int _easingCurveType)
		{
			return Function.Call<float>((Hash)0xEF50E344A8F93784, _t, _b, _d, _easingCurveType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPositionOccupied(float _x, float _y, float _z, float _range, bool _p4, bool _p5, bool _p6, bool _p7, bool _p8, int _p9, bool _p10)
		{
			return Function.Call<bool>((Hash)0x825CA3ED43831015, _x, _y, _z, _range, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// flag |= 1 | 1048576 | 524288
		/// ALL_BASE, PROJECTILES, AMBIENT_POPULATION, BROADCAST
		/// </summary>
		public static void ClearArea(float _x, float _y, float _z, float _radius, int _flag)
		{
			Function.Call((Hash)0x3B882A96EA77D5B1, _x, _y, _z, _radius, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearVolumeArea(int _volume, int _flag)
		{
			Function.Call((Hash)0x2FCD528A397E5C88, _volume, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAngledAreaOfVehicles(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xA4D83115C1E02F8A, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCreditsActive(bool _toggle)
		{
			Function.Call((Hash)0xD37BECF862DA726F, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetScriptIsSafeForNetworkGame()
		{
			Function.Call((Hash)0x3D0EAC6385DD6100);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PauseDeathArrestRestart(bool _toggle)
		{
			Function.Call((Hash)0x66AB6B6C7E72F393, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void IgnoreNextRestart(bool _toggle)
		{
			Function.Call((Hash)0x6C9FF40FF1B69F8F, _toggle);
		}
		/// <summary>
		/// Sets whether the game should fade in after the player dies or is arrested.
		/// </summary>
		public static void SetFadeInAfterDeathArrest(bool _toggle)
		{
			Function.Call((Hash)0xDF3B5846DE5904AF, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFadeInAfterLoad(bool _toggle)
		{
			Function.Call((Hash)0xAC806C4CAB973517, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool OverrideSaveHouse(bool _p0, float _p1, float _p2, float _p3, float _p4, bool _p5, float _p6, float _p7)
		{
			return Function.Call<bool>((Hash)0xB2C69E11A37B5AF0, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShootSingleBulletBetweenCoords(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _damage, bool _p7, uint _weaponHash, int _ownerPed, bool _isAudible, bool _isInvisible, float _speed, bool _p13)
		{
			Function.Call((Hash)0x867654CBC7606F2C, _x1, _y1, _z1, _x2, _y2, _z2, _damage, _p7, _weaponHash, _ownerPed, _isAudible, _isInvisible, _speed, _p13);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FireSingleBullet(int _args)
		{
			Function.Call((Hash)0xCBC9A21F6A2A679C, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetModelDimensions(uint _modelHash, Vector3 _minimum, Vector3 _maximum)
		{
			Function.Call((Hash)0xDCB8DDD5D054A7E7, _modelHash, _minimum, _maximum);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBitSet(int _address, int _offset)
		{
			return Function.Call<bool>((Hash)0x4ED6CFDFE8D4131A, _address, _offset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0a487cc74a517fb5(int _p0)
		{
			Function.Call((Hash)0x0A487CC74A517FB5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMinigameInProgress()
		{
			return Function.Call<bool>((Hash)0xF4D8BCD052E7EA1B);
		}
		/// <summary>
		/// Returns whether the game's measurement system is set to metric.
		/// </summary>
		public static bool ShouldUseMetricMeasurements()
		{
			return Function.Call<bool>((Hash)0x4FB556ACEFA93098);
		}
		/// <summary>
		/// Same as SHOULD_USE_METRIC_MEASUREMENTS
		/// </summary>
		public static bool ShouldUseMetricMeasurements2()
		{
			return Function.Call<bool>((Hash)0x58BCDC75BA52110A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ShouldUseMetricTemperature()
		{
			return Function.Call<bool>((Hash)0xFF4AAF3275BAAB4F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ShouldUseMetricWeight()
		{
			return Function.Call<bool>((Hash)0x8F24157FEDB85EA2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ShouldUse24HourClock()
		{
			return Function.Call<bool>((Hash)0x0177CF20345F44DD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CompareStrings(string _str1, string _str2, bool _matchCase, int _maxLength)
		{
			return Function.Call<int>((Hash)0xBFBB74A15EFC149B, _str1, _str2, _matchCase, _maxLength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Absi(int _value)
		{
			return Function.Call<int>((Hash)0x0C214D5B8A38C828, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Absf(float _value)
		{
			return Function.Call<float>((Hash)0x134549B388167CBF, _value);
		}
		/// <summary>
		/// Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
		/// 
		/// ownedByPlayer = only projectiles fired by the player will be detected.
		/// </summary>
		public static bool IsProjectileInArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _ownedByPlayer)
		{
			return Function.Call<bool>((Hash)0x05B0061EFDFC8941, _x1, _y1, _z1, _x2, _y2, _z2, _ownedByPlayer);
		}
		/// <summary>
		/// Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
		/// </summary>
		public static bool IsProjectileTypeInArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _type, bool _p7)
		{
			return Function.Call<bool>((Hash)0x04965FB9E14235C7, _x1, _y1, _z1, _x2, _y2, _z2, _type, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsProjectileTypeInAngledArea(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, int _p7, bool _p8)
		{
			return Function.Call<bool>((Hash)0x928431F4133CD3D4, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsProjectileTypeWithinDistance(float _p0, float _p1, float _p2, int _p3, float _p4, bool _p5)
		{
			return Function.Call<bool>((Hash)0xF51C9BAAD9ED64C4, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetCoordsOfProjectileTypeWithinDistance(int _ped, uint _weaponHash, float _distance, Vector3 _outCoords, bool _p4, bool _mustBeOwnedByThisPed)
		{
			return Function.Call<bool>((Hash)0xD73C960A681052DF, _ped, _weaponHash, _distance, _outCoords, _p4, _mustBeOwnedByThisPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetProjectileOfProjectileTypeWithinDistance(int _ped, uint _weaponHash, float _distance, Vector3 _outCoords, int _outProjectile, bool _p5, bool _mustBeOwnedByThisPed)
		{
			return Function.Call<bool>((Hash)0x9578986A6105A6AD, _ped, _weaponHash, _distance, _outCoords, _outProjectile, _p5, _mustBeOwnedByThisPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBulletInAngledArea(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, bool _p7)
		{
			return Function.Call<bool>((Hash)0x9D09D8493747CF02, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBulletInArea(float _p0, float _p1, float _p2, float _p3, bool _p4)
		{
			return Function.Call<bool>((Hash)0xC652FD308772D79E, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBulletInBox(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, bool _p6)
		{
			return Function.Call<bool>((Hash)0xC128137C52152741, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// p3 - possibly radius?
		/// </summary>
		public static bool HasBulletImpactedInArea(float _x, float _y, float _z, float _p3, bool _p4, bool _p5)
		{
			return Function.Call<bool>((Hash)0xC153E5BCCF411814, _x, _y, _z, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasBulletImpactedInBox(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, bool _p6, bool _p7)
		{
			return Function.Call<bool>((Hash)0x3B6A4C05FB2B33AC, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7a76104cc2cc69e8(int _entity, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x7A76104CC2CC69E8, _entity, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdc416ca762bc4f43(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xDC416CA762BC4F43, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x970339efa4fde518(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x970339EFA4FDE518, _p0, _p1, _p2);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool IsOrbisVersion()
		{
			return Function.Call<bool>((Hash)0x88CFAE250D3E0C71);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool IsDurangoVersion()
		{
			return Function.Call<bool>((Hash)0xD1CCC2A2639D325F);
		}
		/// <summary>
		/// Hardcoded to return true.
		/// </summary>
		public static bool IsPcVersion()
		{
			return Function.Call<bool>((Hash)0xB0FB6CFAA5A1C833);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool IsStadiaVersion()
		{
			return Function.Call<bool>((Hash)0x268AB8420A9E4ED7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsStringNull(string _string)
		{
			return Function.Call<bool>((Hash)0x602102324604D96B, _string);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsStringNullOrEmpty(string _string)
		{
			return Function.Call<bool>((Hash)0x2CF12F9ACF18F048, _string);
		}
		/// <summary>
		/// Returns true if the entire string consists only of space characters.
		/// </summary>
		public static bool IsStringNullOrEmptyOrSpaces(string _string)
		{
			return Function.Call<bool>((Hash)0x375F5870A7B8BEC1, _string);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreStringsEqual(string _string1, string _string2)
		{
			return Function.Call<bool>((Hash)0xD3852F22AB713A1F, _string1, _string2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesStringExistInString(string _string1, string _string2)
		{
			return Function.Call<bool>((Hash)0x9382D5D43D2AA6FF, _string1, _string2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3c3c7b1b5ec08764()
		{
			Function.Call((Hash)0x3C3C7B1B5EC08764);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x94e8ca3dee952789(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x94E8CA3DEE952789, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5b4a8121a47d844d(int _p0)
		{
			return Function.Call<int>((Hash)0x5B4A8121A47D844D, _p0);
		}
		/// <summary>
		/// Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
		/// </summary>
		public static bool StringToInt(string _string, int _outInteger)
		{
			return Function.Call<bool>((Hash)0xF2DD2298B3AF23E2, _string, _outInteger);
		}
		/// <summary>
		/// Note: the buffer should be exactly 32 bytes long
		/// </summary>
		public static void IntToString(int _value, string _format, string _buffer)
		{
			Function.Call((Hash)0xCF11C0CEB40C401B, _value, _format, _buffer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x74aca66484cebaf0(int _p0)
		{
			Function.Call((Hash)0x74ACA66484CEBAF0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x49c44fe78a135a1d(int _p0)
		{
			Function.Call((Hash)0x49C44FE78A135A1D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf650dcf5d6f312c1(int _p0)
		{
			Function.Call((Hash)0xF650DCF5D6F312C1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetStringFromFloat(float _value, int _digits)
		{
			return Function.Call<string>((Hash)0x2B6846401D68E563, _value, _digits);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetStringFromVector(float _x, float _y, float _z)
		{
			return Function.Call<string>((Hash)0x6C4DBF553885F9EB, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetStringFromBool(bool _value)
		{
			return Function.Call<string>((Hash)0xF216F74101968DB0, _value);
		}
		/// <summary>
		/// Note: The first bit in 'flags' must not be set.
		/// It is also required to pass at least one extra argument (this must be a text label string or hash).
		/// When passing a hash, flags should be 0.
		/// </summary>
		public static string VarString(int _flags)
		{
			return Function.Call<string>((Hash)0xFA925AC00EB830B9, _flags);
		}
		/// <summary>
		/// Returns a formatted string (0x%x)
		/// </summary>
		public static string CreateColorString(int _rgb)
		{
			return Function.Call<string>((Hash)0xBCC2CFADEA1AEA6C, _rgb);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBitsInRange(int _var, int _rangeStart, int _rangeEnd, int _p3)
		{
			Function.Call((Hash)0x324DC1CEF57F31E6, _var, _rangeStart, _rangeEnd, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetBitsInRange(int _var, int _rangeStart, int _rangeEnd)
		{
			return Function.Call<int>((Hash)0x68E1352AF48F905D, _var, _rangeStart, _rangeEnd);
		}
		/// <summary>
		/// Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
		/// </summary>
		public static void SetGamePaused(bool _toggle)
		{
			Function.Call((Hash)0xFAEC088D28B1DE4A, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetThisScriptCanBePaused(bool _toggle)
		{
			Function.Call((Hash)0x3215376E79F6EA18, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetThisScriptCanRemoveBlipsCreatedByAnyScript(bool _toggle)
		{
			Function.Call((Hash)0x8ABD939C2E5D00ED, _toggle);
		}
		/// <summary>
		/// Cheats are GTA IV cheats:
		/// 
		/// 0 = unknown
		/// 1 = unknown (same as 0)
		/// 2 = Max Health and Armor
		/// 3 = Raise Wanted Level
		/// 4 = Lower Wanted Level
		/// 5 = unknown (does nothing)
		/// 6 = Change Weather
		/// 7 = Spawn Annihilator
		/// 8 = Spawn NRG 900
		/// 9 = Spawn FBI
		/// 10 = Spawn Jetmax
		/// 11 = Spawn Comet
		/// 12 = Spawn Turismo
		/// 13 = Spawn Cognoscenti
		/// 14 = Spawn Super GT
		/// 15 = Spawn Sanchez
		/// 
		/// Initially used in Max Payne 3, that's why we know the name.
		/// </summary>
		public static void SetCheatActive(int _cheatId)
		{
			Function.Call((Hash)0xD4958E8CF0DE0DD0, _cheatId);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xb711eb4bc8d06013()
		{
			Function.Call((Hash)0xB711EB4BC8D06013);
		}
		/// <summary>
		/// spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
		/// </summary>
		public static void PopulateNow()
		{
			Function.Call((Hash)0xEA6DC3A8ADD2005F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGameSessionStateMachineIdle()
		{
			return Function.Call<bool>((Hash)0xF9E7DBB39080640B);
		}
		/// <summary>
		/// p0 must be < 2
		/// </summary>
		public static bool QueueSavegameOperation(int _p0)
		{
			return Function.Call<bool>((Hash)0x279B0696DA4657EB, _p0);
		}
		/// <summary>
		/// Only 0 and 1 are valid for p0, higher values causes the native to return 2.
		/// </summary>
		public static int GetStatusOfSavegameOperation(int _p0)
		{
			return Function.Call<int>((Hash)0x1B065A2BF7953815, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6c7b68d3ce60e8de(int _p0)
		{
			return Function.Call<int>((Hash)0x6C7B68D3CE60E8DE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x627b68d9ce6ee8de(int _p0)
		{
			return Function.Call<int>((Hash)0x627B68D9CE6EE8DE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7cf96f1250ef3221(int _p0)
		{
			return Function.Call<int>((Hash)0x7CF96F1250EF3221, _p0);
		}
		/// <summary>
		/// Old name: _COPY_MEMORY
		/// </summary>
		public static void CopyScriptStruct(int _dst, int _src, int _size)
		{
			Function.Call((Hash)0xF7AC7DC0DEE7C9BE, _dst, _src, _size);
		}
		/// <summary>
		/// enum DispatchType
		/// {
		/// 	DT_Invalid,
		/// 	DT_PoliceAutomobile,
		/// 	DT_PoliceHelicopter,
		/// 	DT_FireDepartment,
		/// 	DT_SwatAutomobile,
		/// 	DT_AmbulanceDepartment,
		/// 	DT_PoliceRiders,
		/// 	DT_PoliceVehicleRequest,
		/// 	DT_PoliceRoadBlock,
		/// 	DT_PoliceAutomobileWaitPulledOver,
		/// 	DT_PoliceAutomobileWaitCruising,
		/// 	DT_Gangs,
		/// 	DT_SwatHelicopter,
		/// 	DT_PoliceBoat,
		/// 	DT_ArmyVehicle,
		/// 	DT_OnFoot,
		/// 	DT_PoliceDogs
		/// };
		/// </summary>
		public static void EnableDispatchService(int _dispatchService, bool _toggle)
		{
			Function.Call((Hash)0x50E52637EF70EF77, _dispatchService, _toggle);
		}
		/// <summary>
		/// dispatchService: see ENABLE_DISPATCH_SERVICE
		/// </summary>
		public static void BlockDispatchServiceResourceCreation(int _dispatchService, bool _toggle)
		{
			Function.Call((Hash)0x66947E61A44DE2C6, _dispatchService, _toggle);
		}
		/// <summary>
		/// dispatchService: see ENABLE_DISPATCH_SERVICE
		/// </summary>
		public static bool CreateIncident(int _dispatchService, float _x, float _y, float _z, int _numUnits, float _radius, int _outIncidentID, int _p7, int _p8)
		{
			return Function.Call<bool>((Hash)0x3F892CAF67444AE7, _dispatchService, _x, _y, _z, _numUnits, _radius, _outIncidentID, _p7, _p8);
		}
		/// <summary>
		/// dispatchService: see ENABLE_DISPATCH_SERVICE
		/// 
		/// The entities must be added to itemSet.
		/// </summary>
		public static bool CreateIncidentWithEntities(int _dispatchService, float _x, float _y, float _z, int _itemSet, float _radius, int _outIncidentID)
		{
			return Function.Call<bool>((Hash)0xAB3D3F45436DB1D8, _dispatchService, _x, _y, _z, _itemSet, _radius, _outIncidentID);
		}
		/// <summary>
		/// Delete an incident with a given id.
		/// </summary>
		public static void DeleteIncident(int _incidentId)
		{
			Function.Call((Hash)0x5CFD0F0D6AAE0AEE, _incidentId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsIncidentValid(int _incidentId)
		{
			return Function.Call<bool>((Hash)0x39F2B1BAD412246A, _incidentId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetIncidentUnk(int _incidentId)
		{
			Function.Call((Hash)0x9617B6E5F6537B63, _incidentId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddPopMultiplierArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _pedDensity, float _trafficDensity, bool _p8, bool _p9)
		{
			return Function.Call<int>((Hash)0x5EBDA1A3B8CB5EF7, _x1, _y1, _z1, _x2, _y2, _z2, _pedDensity, _trafficDensity, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPopMultiplierAreaExist(int _id)
		{
			return Function.Call<bool>((Hash)0x03BA619C81A646B3, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePopMultiplierArea(int _id, bool _p1)
		{
			Function.Call((Hash)0x88CB484364EFB37A, _id, _p1);
		}
		/// <summary>
		/// Only used in script function PROCESS_ZONE_CREATION
		/// Returns Pop multiplier volume ID
		/// </summary>
		public static int AddPopMultiplierVolume(int _volume, float _pedDensity, float _vehicleDensity, bool _p3, bool _p4)
		{
			return Function.Call<int>((Hash)0x3233C4EC0514C7EC, _volume, _pedDensity, _vehicleDensity, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPopMultiplierAreaExistForVolume(int _volume)
		{
			return Function.Call<bool>((Hash)0x39D6DACE323A20B6, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePopMultiplierAreaForVolume(int _volume, int _p1)
		{
			Function.Call((Hash)0xBD090F5B1DB82189, _volume, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf569e33fb72ed28e()
		{
			Function.Call((Hash)0xF569E33FB72ED28E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetDispatchIdealSpawnDistance()
		{
			Function.Call((Hash)0xC7817264BC4B6377);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDispatchIdealSpawnDistance(float _fIdealSpawnDistance)
		{
			Function.Call((Hash)0xEAB6823B82FBD283, _fIdealSpawnDistance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetDispatchMinSpawnDistance()
		{
			Function.Call((Hash)0x96498D922D8D0D0A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDispatchMinSpawnDistance(float _minSpawnDistance)
		{
			Function.Call((Hash)0x27A1B170AA8AF84C, _minSpawnDistance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetDispatchMaxSpawnDistance()
		{
			Function.Call((Hash)0x54EC7B6BC72BAD69);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDispatchMaxSpawnDistance(float _maxSpawnDistance)
		{
			Function.Call((Hash)0x89314FB3463E28DE, _maxSpawnDistance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4b0501a468b749f8()
		{
			Function.Call((Hash)0x4B0501A468B749F8);
		}
		/// <summary>
		/// _SET_DISPATCH_*, unused
		/// </summary>
		public static void Hash_0x6bcf7b5cd338281a(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x6BCF7B5CD338281A, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddDispatchSpawnBlockingArea(int _volume)
		{
			return Function.Call<int>((Hash)0xA2D5A26208421426, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveDispatchSpawnBlockingArea(int _p0)
		{
			Function.Call((Hash)0x49F751F6868DDC5B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetWantedResponseNumPedsToSpawn()
		{
			Function.Call((Hash)0xEF42F56F69877125);
		}
		/// <summary>
		/// Params: p3 is 0 in R* Script utopia2
		/// </summary>
		public static void AddTacticalNavMeshPoint(float _x, float _y, float _z, int _p3)
		{
			Function.Call((Hash)0xE4EE55E63FA9AF45, _x, _y, _z, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearTacticalNavMeshPoints()
		{
			Function.Call((Hash)0xD93B6516C6878267);
		}
		/// <summary>
		/// enum eOnscreenKeyboardTextType
		/// {
		/// 	KTEXTTYPE_INVALID = -1,
		/// 	KTEXTTYPE_DEFAULT,
		/// 	KTEXTTYPE_EMAIL,
		/// 	KTEXTTYPE_PASSWORD,
		/// 	KTEXTTYPE_NUMERIC,
		/// 	KTEXTTYPE_ALPHABET,
		/// 	KTEXTTYPE_GAMERTAG,
		/// 	KTEXTTYPE_FILENAME,
		/// 	KTEXTTYPE_COUNT
		/// };
		/// </summary>
		public static void DisplayOnscreenKeyboard(int _textType, string _windowTitle, string _p2, string _defaultText, string _defaultConcat1, string _defaultConcat2, string _defaultConcat3, int _maxInputLength)
		{
			Function.Call((Hash)0x044131118D8DB3CD, _textType, _windowTitle, _p2, _defaultText, _defaultConcat1, _defaultConcat2, _defaultConcat3, _maxInputLength);
		}
		/// <summary>
		/// Returns the current status of the onscreen keyboard, and updates the output.
		/// 
		/// Status Codes:
		/// 
		/// 0 - User still editing
		/// 1 - User has finished editing
		/// 2 - User has canceled editing
		/// 3 - Keyboard isn't active
		/// </summary>
		public static int UpdateOnscreenKeyboard()
		{
			return Function.Call<int>((Hash)0x37DF360F235A3893);
		}
		/// <summary>
		/// Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
		/// </summary>
		public static string GetOnscreenKeyboardResult()
		{
			return Function.Call<string>((Hash)0xAFB4CF58A4A292B1);
		}
		/// <summary>
		/// Old name: _CANCEL_ONSCREEN_KEYBOARD
		/// </summary>
		public static void CancelOnscreenKeyboard()
		{
			Function.Call((Hash)0x58A39BE597CE99CD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(int _p0)
		{
			Function.Call((Hash)0x5CB71EAA1429A358, _p0);
		}
		/// <summary>
		/// Appears to remove stealth kill action from memory (?)
		/// </summary>
		public static void ActionManagerEnableAction(uint _hash, bool _enable)
		{
			Function.Call((Hash)0x7ACF124C12A2B045, _hash, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ActionManagerIsActionEnabled(uint _hash)
		{
			return Function.Call<bool>((Hash)0xFD0759658268FD8E, _hash);
		}
		/// <summary>
		/// Returns GET_GAME_TIMER() / 1000
		/// Only used in rcm_pearson1.ysc
		/// </summary>
		public static int GetRealWorldTime()
		{
			return Function.Call<int>((Hash)0x2E036F0480B8BF02);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSuperJumpThisFrame(int _player)
		{
			Function.Call((Hash)0xB3E9BE963F10C445, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ScriptRaceInit(int _numCheckpoints, int _numLaps, int _numPlayers, int _p3)
		{
			Function.Call((Hash)0x8AE059F47158417E, _numCheckpoints, _numLaps, _numPlayers, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ScriptRaceShutdown()
		{
			Function.Call((Hash)0x334CE0DA4FAF330C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ScriptRacePlayerHitCheckpoint(int _part, int _checkpoint, int _lap, int _time)
		{
			Function.Call((Hash)0xBA62B4D80FA66BD6, _part, _checkpoint, _lap, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScriptRaceGetPlayerSplitTime(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x769E848C66E3C2BB, _p0, _p1, _p2);
		}
		/// <summary>
		/// Begins with START_*. Next character in the name is either D or E.
		/// 
		/// Old name: _START_BENCHMARK_RECORDING
		/// </summary>
		public static void StartEndUserBenchmark()
		{
			Function.Call((Hash)0x29D1F6DF864A094E);
		}
		/// <summary>
		/// Begins with STOP_*. Next character in the name is either D or E.
		/// 
		/// Old name: _STOP_BENCHMARK_RECORDING
		/// </summary>
		public static void StopEndUserBenchmark()
		{
			Function.Call((Hash)0xB89AEC71AFF2B599);
		}
		/// <summary>
		/// Begins with RESET_*. Next character in the name is either D or E.
		/// 
		/// Old name: _RESET_BENCHMARK_RECORDING
		/// </summary>
		public static void ResetEndUserBenchmark()
		{
			Function.Call((Hash)0xECBABD0307FB216F);
		}
		/// <summary>
		/// Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
		/// 
		/// Old name: _SAVE_BENCHMARK_RECORDING
		/// </summary>
		public static void SaveEndUserBenchmark()
		{
			Function.Call((Hash)0xF4743E2ECC02B3DA);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// 
		/// Old name: _UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE
		/// </summary>
		public static bool UiStartedEndUserBenchmark()
		{
			return Function.Call<bool>((Hash)0x4FFA0386A6216113);
		}
		/// <summary>
		/// Returns value of the '-benchmarkIterations' command line option.
		/// 
		/// Old name: _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
		/// </summary>
		public static int GetBenchmarkIterations()
		{
			return Function.Call<int>((Hash)0x22FC52CF470CC98D);
		}
		/// <summary>
		/// Returns value of the '-benchmarkPass' command line option.
		/// 
		/// Old name: _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
		/// </summary>
		public static int GetBenchmarkPass()
		{
			return Function.Call<int>((Hash)0x9297DACF3A2CDFF7);
		}
		/// <summary>
		/// Hardcoded to return one/true.
		/// </summary>
		public static int Hash_0xdc057b86fc157031()
		{
			return Function.Call<int>((Hash)0xDC057B86FC157031);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9a252aa23d7098f2()
		{
			Function.Call((Hash)0x9A252AA23D7098F2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesItemHaveValidBase(int _item)
		{
			return Function.Call<bool>((Hash)0xBDC6E364C9C78178, _item);
		}
		/// <summary>
		/// 0 = invalid
		/// 1 = CEntity
		/// 2 = rage::volBase
		/// 3 = rage::volSphere
		/// 4 = rage::volBox
		/// 5 = rage::volAggregate
		/// 6 = rage::volCylinder
		/// 7 = CScriptedCoverPoint
		/// 8 = rage::ptfxScriptInfo
		/// 9 = CPed
		/// 10 = CVehicle
		/// 11 = CObject
		/// 12 = CItemSet
		/// 13 = CPersistentCharacter
		/// </summary>
		public static int GetItemType(int _handle)
		{
			return Function.Call<int>((Hash)0xDC8D2FF478DF9553, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBaseAPersistentCharacter(int _handle)
		{
			return Function.Call<bool>((Hash)0x716F17F8A0419F95, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBaseACoverPoint(int _handle)
		{
			return Function.Call<bool>((Hash)0xFEC1D4B5C82C176F, _handle);
		}
		/// <summary>
		/// _J*, _K*, _L*
		/// </summary>
		public static void Hash_0x553d67295ddd2309(int _entity)
		{
			Function.Call((Hash)0x553D67295DDD2309, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf18af483df70bbde(int _p0)
		{
			return Function.Call<int>((Hash)0xF18AF483DF70BBDE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntityFromItem(int _item)
		{
			return Function.Call<int>((Hash)0xEE04C0AFD4EFAF0E, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedFromIndexedItem(int _item)
		{
			return Function.Call<int>((Hash)0x3FFB15534067DCD4, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleFromIndexedItem(int _item)
		{
			return Function.Call<int>((Hash)0xE578C8AE173719B3, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetObjectFromIndexedItem(int _item)
		{
			return Function.Call<int>((Hash)0x18013392501CE5DC, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x33982467b1e349ef(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0x33982467B1E349EF, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8314fc2013ece2da(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x8314FC2013ECE2DA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4d5c9cc7e7e23e09()
		{
			Function.Call((Hash)0x4D5C9CC7E7E23E09);
		}
		/// <summary>
		/// p3 is usually the same value of radius
		/// p8 determines whether the ILO prompt is a lock on prompt with RMB
		/// </summary>
		public static bool RegisterInteractionLockonPrompt(int _entity, string _text, float _radius, float _p3, int _flag, float _p5, float _p6, int _prompt, bool _p8, int _p9)
		{
			return Function.Call<bool>((Hash)0x870708A6E147A9AD, _entity, _text, _radius, _p3, _flag, _p5, _p6, _prompt, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UnregisterInteractionLockonPrompt(int _entity)
		{
			return Function.Call<bool>((Hash)0xE98D55C5983F2509, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfc6ecb9170145ece()
		{
			Function.Call((Hash)0xFC6ECB9170145ECE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x35165c658077cd0b()
		{
			return Function.Call<int>((Hash)0x35165C658077CD0B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x4b101dbcc9482f2d(int _ped)
		{
			return Function.Call<bool>((Hash)0x4B101DBCC9482F2D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMissionCreatorActive()
		{
			return Function.Call<bool>((Hash)0xF236C84C6ADFCB2F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa3a8926951471c82()
		{
			Function.Call((Hash)0xA3A8926951471C82);
		}
		/// <summary>
		/// aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/_CREATE_AI_MEMORY/README.md
		/// </summary>
		public static void CreateAiMemory(int _args, int _aiMemoryType)
		{
			Function.Call((Hash)0x88BC5F4AEF77FC4E, _args, _aiMemoryType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetAiPedDoesHaveEventMemory(int _args, int _p1)
		{
			return Function.Call<bool>((Hash)0xFDF38E2B711BF78E, _args, _p1);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void Hash_0xeb946b9e579729ad(int _ped, int _p1)
		{
			Function.Call((Hash)0xEB946B9E579729AD, _ped, _p1);
		}
		/// <summary>
		/// Used in CAIConditionAmbientAIMemoryReactionsEnabled
		/// </summary>
		public static void SetAiMemoryReactionsEnabled(bool _enabled)
		{
			Function.Call((Hash)0x6AC4AF46A6B8DFB2, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8db104ccebcd58c5(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x8DB104CCEBCD58C5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x68319452c5064aba(int _p0, int _p1)
		{
			Function.Call((Hash)0x68319452C5064ABA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xde2c3b74d2b3705c(int _p0, int _p1)
		{
			Function.Call((Hash)0xDE2C3B74D2B3705C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x49f3241c28ebbfbc(int _p0)
		{
			Function.Call((Hash)0x49F3241C28EBBFBC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x183672fe838a661b(int _p0)
		{
			Function.Call((Hash)0x183672FE838A661B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x38c0c9cae1544500(int _p0)
		{
			Function.Call((Hash)0x38C0C9CAE1544500, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x154340e87d8cc178(int _p0)
		{
			Function.Call((Hash)0x154340E87D8CC178, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x94fcadcf9f0c368e(int _p0)
		{
			Function.Call((Hash)0x94FCADCF9F0C368E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0d0ae5081f88cfe1(int _p0)
		{
			return Function.Call<int>((Hash)0x0D0AE5081F88CFE1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaf3a84c7de6a1dc5(int _p0, int _p1)
		{
			Function.Call((Hash)0xAF3A84C7DE6A1DC5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x48e4d50f87a96aa5(int _ped, bool _p1, bool _p2, uint _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x48E4D50F87A96AA5, _ped, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb1f6665aa54dcd5c(int _p0)
		{
			return Function.Call<int>((Hash)0xB1F6665AA54DCD5C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8bb99b85444544d9(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x8BB99B85444544D9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6f02b5e50511721e(int _p0)
		{
			return Function.Call<int>((Hash)0x6F02B5E50511721E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xcc1baf72d571db8d(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xCC1BAF72D571DB8D, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDecomposed(int _ped)
		{
			return Function.Call<bool>((Hash)0x5170DDA6D63ACAAA, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDecomposed(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x674B90BE1115846D, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xab26deee120fd3fd(int _p0, int _p1)
		{
			Function.Call((Hash)0xAB26DEEE120FD3FD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x082c043c7afc3747(int _compositeId, bool _p1)
		{
			Function.Call((Hash)0x082C043C7AFC3747, _compositeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableLootingCompositeLootableThisFrame(int _compositeId, bool _p1)
		{
			Function.Call((Hash)0x40D72189F46D2E15, _compositeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbb282cf5d2333fb8(int _p0, int _p1)
		{
			Function.Call((Hash)0xBB282CF5D2333FB8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xad44856a1cd29635(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xAD44856A1CD29635, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x38c2bf94d15f464d(int _p0)
		{
			return Function.Call<int>((Hash)0x38C2BF94D15F464D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3a87fda8f1b6cdfb(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x3A87FDA8F1B6CDFB, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4647842fe8f31c1e(int _p0, int _p1)
		{
			Function.Call((Hash)0x4647842FE8F31C1E, _p0, _p1);
		}
		/// <summary>
		/// Event names in the scripts: MGBegin, MGEnd, ReadyForCut
		/// </summary>
		public static bool GetLootingEventHasFired(int _ped, string _eventName)
		{
			return Function.Call<bool>((Hash)0xF9B91C5129EABC08, _ped, _eventName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9b47971234169990(int _ped, int _item)
		{
			Function.Call((Hash)0x9B47971234169990, _ped, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x96282005c5c6801f(int _p0, int _p1)
		{
			Function.Call((Hash)0x96282005C5C6801F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf63fa29d4a9aca86(int _p0, int _p1)
		{
			Function.Call((Hash)0xF63FA29D4A9ACA86, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8c0f6a3d7236deeb(int _p0, int _p1)
		{
			Function.Call((Hash)0x8C0F6A3D7236DEEB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7fa58ced69405f9a(int _p0, int _p1)
		{
			Function.Call((Hash)0x7FA58CED69405F9A, _p0, _p1);
		}
		/// <summary>
		/// _CLEAR*
		/// </summary>
		public static void Hash_0xa08111b053d84b4d(int _p0)
		{
			Function.Call((Hash)0xA08111B053D84B4D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGlobalBlockValid(int _index)
		{
			return Function.Call<bool>((Hash)0xACB7E1418A8B6E32, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGlobalBlockIsLoaded(int _index, bool _toggle)
		{
			Function.Call((Hash)0xE97240065406CB80, _index, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GameFrameworkManagerInit(uint _transitionMode)
		{
			return Function.Call<bool>((Hash)0x4CABE596D632E4B0, _transitionMode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GameFrameworkManagerShutdown()
		{
			Function.Call((Hash)0xAFF2FD8ADD927585);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GameFrameworkManagerGetMode()
		{
			return Function.Call<uint>((Hash)0xFAED234C7F53ABEB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x36040772df5e59a0()
		{
			return Function.Call<bool>((Hash)0x36040772DF5E59A0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0358b8a41916c613(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x0358B8A41916C613, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Note: this native was added in build 1232.56
		/// </summary>
		public static void SetGameLogicPaused()
		{
			Function.Call((Hash)0x550F05CFFBD63C8C);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void StopCurrentLoadingProgressTimer()
		{
			Function.Call((Hash)0xA565FAC215CBC77D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdbda48ec456ed908()
		{
			Function.Call((Hash)0xDBDA48EC456ED908);
		}
		// :########################: //
		// : namespace: MISSIONDATA : //
		// :########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool MissiondataIsValid(int _p0)
		{
			return Function.Call<bool>((Hash)0xE54DC27571D5EDC5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint MissiondataGetCatagory(uint _missionId)
		{
			return Function.Call<uint>((Hash)0x57E798B65C45EE17, _missionId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint MissiondataGetTextureName(uint _missionId)
		{
			return Function.Call<uint>((Hash)0x57E798B56C45EE15, _missionId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint MissiondataGetTextureTxd(uint _missionId)
		{
			return Function.Call<uint>((Hash)0x57E798B57C45EE16, _missionId);
		}
		/// <summary>
		/// see: missions.meta
		/// </summary>
		public static bool MissiondataWasCompleted(uint _missionId)
		{
			return Function.Call<bool>((Hash)0xE54DC27571D5EDC4, _missionId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MissiondataGetRating(uint _missionId)
		{
			return Function.Call<int>((Hash)0x57E798B54C45EE1A, _missionId);
		}
		/// <summary>
		/// MISSION_RATING_INCOMPLETE = 0,
		/// MISSION_RATING_SKIPPED,
		/// MISSION_RATING_COMPLETE,
		/// MISSION_RATING_BRONZE,
		/// MISSION_RATING_SILVER,
		/// MISSION_RATING_GOLD,
		/// </summary>
		public static void MissiondataSetMissionRating(uint _missionId, int _rating)
		{
			Function.Call((Hash)0xE824CE7D13FCB300, _missionId, _rating);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MissiondataIsRequiredStoryMission(uint _missionId)
		{
			return Function.Call<bool>((Hash)0xE824CE7D13FCB35E, _missionId);
		}
		/// <summary>
		/// replayState: MISSIONDATA_GET_REPLAY_STATE
		/// </summary>
		public static void MissiondataSetReplayStateLocked(uint _missionId, int _replayState)
		{
			Function.Call((Hash)0xE4E2C581F127A11C, _missionId, _replayState);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MissiondataGetReplayState(int _p0)
		{
			return Function.Call<int>((Hash)0x8C32D86E9556ED86, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MissiondataSetRatingScores(uint _missionId, int _bronzeScore, int _silverScore, int _goldScore)
		{
			Function.Call((Hash)0x12F65317708749A5, _missionId, _bronzeScore, _silverScore, _goldScore);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MissiondataSetHighScore(uint _missionId, int _score)
		{
			Function.Call((Hash)0x3A04F0169DA87A9D, _missionId, _score);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MissiondataGetHighScore(uint _missionId)
		{
			return Function.Call<int>((Hash)0x9AABABF8313C3516, _missionId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MissiondataIsReplayCategoryLocked(uint _category)
		{
			return Function.Call<bool>((Hash)0xE145864DECC34219, _category);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MissiondataSetReplayLockedForCategory(uint _category, bool _locked)
		{
			Function.Call((Hash)0x957A830C9B4B99EA, _category, _locked);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MissiondataTimecycleBoxSetModifier(string _timecycleName)
		{
			Function.Call((Hash)0x25855B1574BF8CD5, _timecycleName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MissiondataTimecycleBoxDelete()
		{
			Function.Call((Hash)0x7F89E15A8FB8DE97);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MissiondataTimecycleBoxExists()
		{
			return Function.Call<bool>((Hash)0x7E8F86A4FA33033C);
		}
		// :##################: //
		// : namespace: MONEY : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int MoneyGetCashBalance()
		{
			return Function.Call<int>((Hash)0x0C02DABFA3B98176);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MoneyDecrementCashBalance(int _amount)
		{
			return Function.Call<bool>((Hash)0x466BC8769CF26A7A, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MoneyIncrementCashBalance(int _amount, uint _addReason)
		{
			return Function.Call<bool>((Hash)0xBC3422DC91667621, _amount, _addReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string NetworkGetStringCashBalance()
		{
			return Function.Call<string>((Hash)0x282D36FF103D78DF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsMoneyBalanceNotLessThan(int _cashBalance, int _goldBarBalance)
		{
			return Function.Call<bool>((Hash)0xAEC5F0119867E457, _cashBalance, _goldBarBalance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string Hash_0xa46fd001d1be896c()
		{
			return Function.Call<string>((Hash)0xA46FD001D1BE896C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x07ad9e43fd478527(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x07AD9E43FD478527, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetCashBalance()
		{
			return Function.Call<int>((Hash)0x8A67120DBC299525);
		}
		// :########################: //
		// : namespace: NETSHOPPING : //
		// :########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryInitSessionStatus(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xC019112F8995DC1C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryIsSessionReady()
		{
			return Function.Call<bool>((Hash)0xFCC24220FDDAC929);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryIsConnectionFaulted()
		{
			return Function.Call<bool>((Hash)0x6CE9FB6332B5E46E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryInitSessionIsFaulted()
		{
			return Function.Call<bool>((Hash)0xD1CE92D1D9BE170A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionFireAndForgetItem(uint _actionHash, int _id, int _item, int _p3)
		{
			return Function.Call<bool>((Hash)0xFFEA09CCEC4AF32F, _actionHash, _id, _item, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionStart(int _id, uint _type, uint _actionHash)
		{
			return Function.Call<bool>((Hash)0xF039EC27F4490E96, _id, _type, _actionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionGetBasketIsValid(int _id)
		{
			return Function.Call<bool>((Hash)0x52A226ADF4A270D2, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionDelete(int _id)
		{
			return Function.Call<bool>((Hash)0x59EF5D516E2D96B9, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CashinventoryTransactionValidateItem(uint _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x6C9F12700BCE69F4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x38640a8c2def011b(int _p0)
		{
			return Function.Call<int>((Hash)0x38640A8C2DEF011B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa3b8d31c13cb4239(int _p0, uint _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<bool>((Hash)0xA3B8D31C13CB4239, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionAddAward(int _id, uint _hash, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x52BDE32F21BA3B6D, _id, _hash, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionGetItemInfo(int _id, int _index, int _itemInfo)
		{
			return Function.Call<bool>((Hash)0x7616B5F0895C2D99, _id, _index, _itemInfo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CashinventoryTransactionGetNumOfItems(int _id)
		{
			return Function.Call<int>((Hash)0xCF2D04D076847478, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint CashinventoryTransactionGetAction(int _id)
		{
			return Function.Call<uint>((Hash)0xBD2D520C51CCFF52, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionCheckout(int _id)
		{
			return Function.Call<bool>((Hash)0x592BC00BF6629BE7, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionCheckoutStatus(int _id, int _status)
		{
			return Function.Call<bool>((Hash)0x26C008791D066F37, _id, _status);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb6f4557060ef0fb4(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xB6F4557060EF0FB4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CashinventoryTransactionResponseGetItemInfo(int _id, int _index, int _itemInfo)
		{
			return Function.Call<bool>((Hash)0x98412398BBE73F61, _id, _index, _itemInfo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xce54c9abe6fbc6db(uint _p0)
		{
			return Function.Call<bool>((Hash)0xCE54C9ABE6FBC6DB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa0b7094629724974(uint _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xA0B7094629724974, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x92a32ba29622763f(int _id, int _index, int _p2)
		{
			return Function.Call<bool>((Hash)0x92A32BA29622763F, _id, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3fa09dd57b93c0de(uint _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0x3FA09DD57B93C0DE, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd1555fbc96c88444(uint _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0xD1555FBC96C88444, _p0, _p1, _p2, _p3, _p4);
		}
		// :####################: //
		// : namespace: NETWORK : //
		// :####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsSignedOnline()
		{
			return Function.Call<bool>((Hash)0x1077788E268557C2);
		}
		/// <summary>
		/// Hardcoded to return zero.
		/// 
		/// ==== PS4 specific info ====
		/// 
		/// Returns some sort of unavailable reason:
		/// -1 = REASON_INVALID
		///  0 = REASON_OTHER
		///  1 = REASON_SYSTEM_UPDATE
		///  2 = REASON_GAME_UPDATE
		///  3 = REASON_SIGNED_OUT
		///  4 = REASON_AGE
		///  5 = REASON_CONNECTION
		/// 
		/// =================================
		/// </summary>
		public static int NetworkGetNpUnavailableReason()
		{
			return Function.Call<int>((Hash)0x74FB3E29E6D10FA9);
		}
		/// <summary>
		/// Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
		/// </summary>
		public static bool NetworkHasValidRosCredentials()
		{
			return Function.Call<bool>((Hash)0x85443FF4C328F53B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsCloudAvailable()
		{
			return Function.Call<bool>((Hash)0x9A4CF4F48AD77302);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasSocialClubAccount()
		{
			return Function.Call<bool>((Hash)0x67A5589628E0CFF6);
		}
		/// <summary>
		/// If you are host, returns true else returns false.
		/// </summary>
		public static bool NetworkIsHost()
		{
			return Function.Call<bool>((Hash)0x8DB296B814EDDA07);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHaveOnlinePrivileges()
		{
			return Function.Call<bool>((Hash)0x25CB5A9F37BFD063);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCheckUserContentPrivileges(int _p0)
		{
			return Function.Call<bool>((Hash)0x595F028698072DD9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCheckCommunicationPrivileges(int _p0)
		{
			return Function.Call<bool>((Hash)0x83F28CE49FBBFFBA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCanViewGamerUserContent(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x246545C37C27A717, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xf23a6d6c11d8ec15(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0xF23A6D6C11D8EC15, _gamerHandle);
		}
		/// <summary>
		/// Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
		/// </summary>
		public static int Hash_0x3e8cce6769db5f34(int _p0)
		{
			return Function.Call<int>((Hash)0x3E8CCE6769DB5F34, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkShowAccountUpgradeUi()
		{
			Function.Call((Hash)0x83FE8D7229593017);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkIsPromotionEnabled()
		{
			return Function.Call<bool>((Hash)0x8FF6059DA26E688A);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkIsCustomUpsellEnabled()
		{
			return Function.Call<bool>((Hash)0x78A9535AF83715C6);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkShouldShowPromotionDlg()
		{
			return Function.Call<bool>((Hash)0xDA4B1A479C414FB2);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xfc6fcf4c03f1bbf6()
		{
			Function.Call((Hash)0xFC6FCF4C03F1BBF6);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int Hash_0x160f0ce6d76a39c9()
		{
			return Function.Call<int>((Hash)0x160F0CE6D76A39C9);
		}
		/// <summary>
		/// Hardcoded to return zero.
		/// </summary>
		public static int NetworkGetPromotionDlgSeenCount()
		{
			return Function.Call<int>((Hash)0x2FB53C631A49BE92);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe5ff65cff5160752()
		{
			Function.Call((Hash)0xE5FF65CFF5160752);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCanAccessMultiplayer(int _loadingState)
		{
			return Function.Call<bool>((Hash)0xAF50DA1A3F8B1BA4, _loadingState);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCheckAccessAndAlertIfFail()
		{
			return Function.Call<bool>((Hash)0x2A8112A974DE1EF6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGlobalEntityFlags(int _entity)
		{
			return Function.Call<int>((Hash)0xDD7806FD0543BC3D, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa95470da137587f5(bool _p0)
		{
			Function.Call((Hash)0xA95470DA137587F5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbb697756309d77ee(bool _p0)
		{
			return Function.Call<int>((Hash)0xBB697756309D77EE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasCompletedMpIntroFlowOnCurrentSlot()
		{
			return Function.Call<bool>((Hash)0xDD73C9838CE7181D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSetCompletedMpIntroFlowOnCurrentSlot(bool _completed)
		{
			return Function.Call<bool>((Hash)0x2C5BD9A43987AA27, _completed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd7d0df27cb1765b5(int _p0)
		{
			return Function.Call<bool>((Hash)0xD7D0DF27CB1765B5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSetMpMissionFlagOnCurrentSlot(bool _enabled, int _flagIndex)
		{
			return Function.Call<bool>((Hash)0x86FD10251A7118A4, _enabled, _flagIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3e74a687a73979c6(bool _p0)
		{
			Function.Call((Hash)0x3E74A687A73979C6, _p0);
		}
		/// <summary>
		/// Checks for session flag 'SF_PRIVATE'
		/// </summary>
		public static bool NetworkSessionIsPrivate()
		{
			return Function.Call<bool>((Hash)0xCEF70AA5B3F89BA1);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void NetworkSessionGetSessionId(int _sessionId)
		{
			Function.Call((Hash)0xE9B356C330C0A806, _sessionId);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static bool NetworkSessionAreSessionIdsEqual(int _sessionId1, int _sessionId2)
		{
			return Function.Call<bool>((Hash)0x4DEC5000F7B508F0, _sessionId1, _sessionId2);
		}
		/// <summary>
		/// flags:
		/// enum eSessionRequestOptionFlags
		/// {
		/// 	SESSION_REQUEST_OPTION_FLAG_INCLUDE_GANG_MEMBERS = (1 << 1),
		/// 	SESSION_REQUEST_OPTION_FLAG_LEADER_KEEPS_GANG = (1 << 7),
		/// };
		/// 
		/// seamlessType:
		/// enum eSeamlessType
		/// {
		/// 	SEAMLESS_TYPE_NORMAL,
		/// 	SEAMLESS_TYPE_PVE,
		/// 	SEAMLESS_TYPE_DEV,
		/// 	SEAMLESS_TYPE_NO_SEAMLESS
		/// };
		/// </summary>
		public static bool NetworkRequestSessionSeamless(int _flags, int _seamlessType, int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x04019AE4956D4393, _flags, _seamlessType, _sessionRequestId);
		}
		/// <summary>
		/// Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
		/// Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
		/// 
		/// p1 is unused
		/// </summary>
		public static bool NetworkSessionRequestSessionSeamless(int _flags, int _seamlessType, int _userHash, int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x2989E131FDE37E97, _flags, _seamlessType, _userHash, _sessionRequestId);
		}
		/// <summary>
		/// matchType:
		/// enum eMatchType
		/// {
		/// 	MATCHTYPE_DEPRECATED,
		/// 	MATCHTYPE_UGCPLAYLIST,
		/// 	MATCHTYPE_UGCMISSION,
		/// 	MATCHTYPE_MINIGAME,
		/// 	MATCHTYPE_SEAMLESS,
		/// 	MATCHTYPE_PRIVATE_DO_NOT_USE
		/// };
		/// </summary>
		public static bool NetworkSessionRequestSessionCompetitive(int _flags, int _matchType, int _userHash, int _p3, int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x309BBEBEA8A3986C, _flags, _matchType, _userHash, _p3, _sessionRequestId);
		}
		/// <summary>
		/// Session flag 'SF_PRIVATE' is set internally
		/// p1 represents max amount of players in private session
		/// </summary>
		public static bool NetworkSessionRequestSessionPrivate(int _flags, int _numPlayers, int _userHash, int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x39A8EF7AF29A192C, _flags, _numPlayers, _userHash, _sessionRequestId);
		}
		/// <summary>
		/// category:
		/// enum eOnCallType
		/// {
		/// 	NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
		/// 	NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
		/// };
		/// </summary>
		public static bool NetworkSessionRequestSessionOnCall(int _flags, int _category, int _p2, int _userHash, int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x23D9C1F2E4098EDC, _flags, _category, _p2, _userHash, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionRequestSessionNominated(int _flags, int _userHash, int _p2, int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x4F4672457FF597D1, _flags, _userHash, _p2, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionIsSessionRequestIdValid(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x2F54B146D3EDCE4D, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkSessionGetSessionType()
		{
			return Function.Call<int>((Hash)0xF0C0C94B404206FA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1413b6bf27ab7a95()
		{
			return Function.Call<int>((Hash)0x1413B6BF27AB7A95);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionIsAnyRequestInProgress()
		{
			return Function.Call<bool>((Hash)0xBAFFDE5F953720D9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xafa14f98327791ce(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0xAFA14F98327791CE, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionIsRequestInProgress(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x8FB7C254CFCBF78E, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionIsRequestInProgressByQueueGroup(int _queueGroup)
		{
			return Function.Call<bool>((Hash)0x9E762A595CF88E4A, _queueGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionCancelRequest(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0xE72E5C1289BD1F40, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa6f1baabff6ad7b9(int _p0)
		{
			Function.Call((Hash)0xA6F1BAABFF6AD7B9, _p0);
		}
		/// <summary>
		/// Returns result of session request:
		/// 0 - NOT_FOUND
		/// 1 - IN_PROGRESS
		/// 2 - TIMEOUT
		/// 3 - PLAYER_OFFLINE
		/// 4 - GANG_MEMBERS_CHANGED
		/// 5 - PLAYER_CANCELLED
		/// 6 - PLAYER_SET_TOO_LARGE
		/// 7 - MATCH_ACCEPTED
		/// 8 - OTHER
		/// </summary>
		public static int NetworkSessionGetSessionRequestResult(int _sessionRequestId, int _p1)
		{
			return Function.Call<int>((Hash)0x0DD051B1BF4B8BD6, _sessionRequestId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionIsRequestPendingTransition(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0xCCF878D50F8AB10D, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionTransitionToSession(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0xF20B18A330E6DB5C, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0f44a5c78d114922(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0x0F44A5C78D114922, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionLeftQueueOrRequestedSession(int _sessionRequestId)
		{
			return Function.Call<bool>((Hash)0xECE6A0C1B59CD8BE, _sessionRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionLeaveSession()
		{
			return Function.Call<bool>((Hash)0x17C21B7319A05047);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionIsTransitioning()
		{
			return Function.Call<bool>((Hash)0xF2CBC969C4F090C7);
		}
		/// <summary>
		/// Only used in R* Script startup_clip
		/// </summary>
		public static void Hash_0xfd4272a137703449()
		{
			Function.Call((Hash)0xFD4272A137703449);
		}
		/// <summary>
		/// Only used in R* Script net_rolling_playlist
		/// </summary>
		public static void NetworkSessionPlaylistGoToNextContent()
		{
			Function.Call((Hash)0xBDE605F925B07127);
		}
		/// <summary>
		/// Only used in R* Script net_rolling_playlist
		/// </summary>
		public static void NetworkSessionPlaylistGetUpcomingContent()
		{
			Function.Call((Hash)0x8F9DB6CD03B42B58);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkDisableRealtimeMultiplayer()
		{
			Function.Call((Hash)0x236905C700FDB54D);
		}
		/// <summary>
		/// Only used in R* Script fm_race_controller
		/// </summary>
		public static void Hash_0x71fa2d1880c48032(bool _p0)
		{
			Function.Call((Hash)0x71FA2D1880C48032, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkGetGlobalMultiplayerClock(int _hours, int _minutes, int _seconds)
		{
			Function.Call((Hash)0x6D03BFBD643B2A02, _hours, _minutes, _seconds);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClearClockTimeOverride()
		{
			Function.Call((Hash)0xD972DF67326F966E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsClockTimeOverridden()
		{
			return Function.Call<bool>((Hash)0xD7C95D322FF57522);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetGlobalClock(int _hour, int _minute, int _second)
		{
			return Function.Call<bool>((Hash)0x11A7ADCD629E170F, _hour, _minute, _second);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClockTimeOverride(int _hour, int _minute, int _second, int _transitionTime, bool _pauseClock)
		{
			Function.Call((Hash)0x669E223E64B1903C, _hour, _minute, _second, _transitionTime, _pauseClock);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClockTimeOverride2(int _hour, int _minute, int _second, int _transitionTime, bool _pauseClock, bool _clockwise)
		{
			Function.Call((Hash)0xE28C13ECC36FF14E, _hour, _minute, _second, _transitionTime, _pauseClock, _clockwise);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClearClockOverrideOvertime(int _milliseconds)
		{
			Function.Call((Hash)0x65F040D91001ED4B, _milliseconds);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0e54d4da6018ff8e()
		{
			return Function.Call<bool>((Hash)0x0E54D4DA6018FF8E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsFindingGamers()
		{
			return Function.Call<bool>((Hash)0xDDDF64C91BFCF0AA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkDidFindGamersSucceed()
		{
			return Function.Call<bool>((Hash)0xF9B83B77929D8863);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7bca0a3972708436(int _outData, int _p1)
		{
			return Function.Call<int>((Hash)0x7BCA0A3972708436, _outData, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClearFoundGamers()
		{
			Function.Call((Hash)0x6D14CCEE1B40381A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetGamerSessionFromHandle(int _data, int _count)
		{
			return Function.Call<bool>((Hash)0xFBDFE1C1356E12E8, _data, _count);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasCurrentGetGamerStatusStarted()
		{
			return Function.Call<bool>((Hash)0x25189F9908E9CD65);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkDidGetGamerStatusSucceed()
		{
			return Function.Call<bool>((Hash)0x5AE17C6B0134B7F1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGamerStatus(int _gamerHandle, int _p1)
		{
			return Function.Call<int>((Hash)0xDDAEB478E58F8DEA, _gamerHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClearGetGamerStatus()
		{
			Function.Call((Hash)0x86E0660E4F5C956D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetScriptReadyForEvents(bool _toggle)
		{
			Function.Call((Hash)0x7AC752103856FB20, _toggle);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static bool Hash_0x316fd416c432c761()
		{
			return Function.Call<bool>((Hash)0x316FD416C432C761);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static bool Hash_0x062842d61d0d53fd()
		{
			return Function.Call<bool>((Hash)0x062842D61D0D53FD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGameInProgress()
		{
			return Function.Call<bool>((Hash)0x10FAB35428CCC9D7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsSessionActive()
		{
			return Function.Call<bool>((Hash)0xD83C2B94E7508980);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsInSession()
		{
			return Function.Call<bool>((Hash)0xCA97246103B63917);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkIsInSessionLobby()
		{
			return Function.Call<bool>((Hash)0xC5196C42DE19F646);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsSessionStarted()
		{
			return Function.Call<bool>((Hash)0x9DE624D2FC4B603F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCanSessionEnd()
		{
			return Function.Call<bool>((Hash)0x4EEBC3694E49C572);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetGameMode()
		{
			return Function.Call<int>((Hash)0x225640E09EFFDC3F);
		}
		/// <summary>
		/// enum eSessionFlags
		/// {
		/// 	SESSION_FLAG_NONE = 0,
		/// 	SF_INSTANCE = (1 << 0),
		/// 	SF_MATCH = (1 << 1),
		/// 	SF_PRIVATE = (1 << 2),
		/// 	SF_BLOCK_INVITES = (1 << 3),
		/// 	SF_BLOCK_JOIN_VIA_PRESENCE = (1 << 4),
		/// 	SF_BLOCK_NON_HOST_INVITES = (1 << 5),
		/// 	SF_BLOCK_IN_PROGRESS_MATCHMAKING_BACKFILL = (1 << 6),
		/// 	SF_BLOCK_IN_GAMEPLAY_MATCHMAKING_BACKFILL = (1 << 7),
		/// 	SF_BLOCK_INVITES_TEMPORARY = (1 << 8),
		/// 	SF_IN_GAMEPLAY = (1 << 9),
		/// 	SF_COMPETITIVE = (1 << 10),
		/// 	SF_MATCHMAKING_BACKFILL_IS_BLOCKED = (1 << 11)
		/// };
		/// </summary>
		public static bool NetworkSessionAddSessionFlags(int _flags)
		{
			return Function.Call<bool>((Hash)0xE546BDA1B3E288EE, _flags);
		}
		/// <summary>
		/// See _NETWORK_SESSION_ADD_SESSION_FLAGS
		/// </summary>
		public static bool NetworkSessionRemoveSessionFlags(int _flags)
		{
			return Function.Call<bool>((Hash)0x78335E12DB0BF961, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkSessionGetSessionFlags()
		{
			return Function.Call<int>((Hash)0x51F33DBC1A41CBFD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionSetPlayerFlags(int _flags)
		{
			return Function.Call<bool>((Hash)0x0AE241A4A9ADEEEC, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSessionRemovePlayerFlags(int _flags)
		{
			return Function.Call<bool>((Hash)0x3215BBE34D3418C5, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetSessionHost()
		{
			return Function.Call<int>((Hash)0x8DC9AA3B508B1A85);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd3a3c8b9f3bdef81()
		{
			return Function.Call<int>((Hash)0xD3A3C8B9F3BDEF81);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x18b94666cf610aeb()
		{
			return Function.Call<bool>((Hash)0x18B94666CF610AEB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x981146e5c9ce9250(int _inviteIndex)
		{
			return Function.Call<bool>((Hash)0x981146E5C9CE9250, _inviteIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbf8276e51761f9da()
		{
			return Function.Call<int>((Hash)0xBF8276E51761F9DA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xdca4a74135e1dea5(int _p0)
		{
			return Function.Call<bool>((Hash)0xDCA4A74135E1DEA5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasPendingInviteFailure()
		{
			return Function.Call<bool>((Hash)0xD0498AD30E16B6BD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCanReceiveInviteFromHandle(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0xF23D6475640D29EB, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x704f92b3af20d857(bool _setting)
		{
			Function.Call((Hash)0x704F92B3AF20D857, _setting);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf342f6bd0a8287d5(int _p0)
		{
			Function.Call((Hash)0xF342F6BD0A8287D5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd39a72ae5ebd57e5()
		{
			Function.Call((Hash)0xD39A72AE5EBD57E5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSendSessionInvite(int _gamerHandle, string _contentId, int _data, int _dataSize, int _p4, int _flags)
		{
			return Function.Call<bool>((Hash)0xE47001B7CB8B98AE, _gamerHandle, _contentId, _data, _dataSize, _p4, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd1ffb246f4e088ac(int _p0)
		{
			return Function.Call<bool>((Hash)0xD1FFB246F4E088AC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x27b1ae4d8c652f08(int _p0)
		{
			return Function.Call<int>((Hash)0x27B1AE4D8C652F08, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6c27442a225a241a(int _p0)
		{
			return Function.Call<int>((Hash)0x6C27442A225A241A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string Hash_0xe59f4924bd3a718d(int _p0)
		{
			return Function.Call<string>((Hash)0xE59F4924BD3A718D, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1436.31
		/// </summary>
		public static int Hash_0x78271bc02ae9af83(int _p0)
		{
			return Function.Call<int>((Hash)0x78271BC02AE9AF83, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x16efb123c4451032(int _p0, int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x16EFB123C4451032, _p0, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string Hash_0xe79ba3bc265895da(int _p0)
		{
			return Function.Call<string>((Hash)0xE79BA3BC265895DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc0cffda87c2c163d(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xC0CFFDA87C2C163D, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5ed39da62beb1330(int _p0)
		{
			return Function.Call<int>((Hash)0x5ED39DA62BEB1330, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAcceptRsInvite(int _p0)
		{
			return Function.Call<bool>((Hash)0xB2CEA5105AAC8DDE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3aa0cdc63696166d(int _p0)
		{
			return Function.Call<bool>((Hash)0x3AA0CDC63696166D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkRequestJoin(int _p0)
		{
			return Function.Call<int>((Hash)0xE483BB6BE686F632, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe8e633215471bb5d(int _p0)
		{
			return Function.Call<int>((Hash)0xE8E633215471BB5D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa2837a5e21fb5a58(int _p0)
		{
			return Function.Call<bool>((Hash)0xA2837A5E21FB5A58, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xe39600e50d608693(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xE39600E50D608693, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd7bad4062074b9c1(int _p0)
		{
			return Function.Call<bool>((Hash)0xD7BAD4062074B9C1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xca58d4fd20d70f24(int _p0)
		{
			return Function.Call<int>((Hash)0xCA58D4FD20D70F24, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xc028b3f52c707c49(int _p0)
		{
			return Function.Call<bool>((Hash)0xC028B3F52C707C49, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlatformInvitePending()
		{
			return Function.Call<bool>((Hash)0xFC4165C9165C166F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5b9c6ac118fd4774()
		{
			Function.Call((Hash)0x5B9C6AC118FD4774);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPlatformInviteId()
		{
			return Function.Call<int>((Hash)0x9BCF28FB5D65A9BE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkActionPlatformInvite()
		{
			return Function.Call<bool>((Hash)0x3B82ACC3F4B6240C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkClearPlatformInvite()
		{
			Function.Call((Hash)0xA4484173759749B1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x603469298a4308af(bool _p0)
		{
			Function.Call((Hash)0x603469298A4308AF, _p0);
		}
		/// <summary>
		/// Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
		/// </summary>
		public static bool NetworkAreOnlineNotificationsShownInStoryMode()
		{
			return Function.Call<bool>((Hash)0xF5C5929E07512F80);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkIsInPlatformParty()
		{
			return Function.Call<bool>((Hash)0x2FC5650B0271CB57);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x11820d1ae80dea39(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x11820D1AE80DEA39, _p0, _p1);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkIsInPlatformPartyChat()
		{
			return Function.Call<bool>((Hash)0xFD8B834A8BA05048);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSeedRandomNumberGenerator(int _seed)
		{
			Function.Call((Hash)0xF1B84178F8674195, _seed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetRandomIntRanged(int _rangeStart, int _rangeEnd)
		{
			return Function.Call<int>((Hash)0xE30CF56F1EFA5F43, _rangeStart, _rangeEnd);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetThisScriptIsNetworkScript(int _maxNumMissionParticipants, bool _p1, int _instanceId)
		{
			Function.Call((Hash)0x1CA59E306ECB80A5, _maxNumMissionParticipants, _p1, _instanceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetThisScriptIsNetworkScript()
		{
			return Function.Call<bool>((Hash)0x2910669969E9535E);
		}
		/// <summary>
		/// Seems to always return 0, but it's used in quite a few loops.
		/// 
		/// for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
		///     {
		///         if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
		///         {
		///             var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
		/// </summary>
		public static int NetworkGetMaxNumParticipants()
		{
			return Function.Call<int>((Hash)0xA6C90FBC38E395EE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNumParticipants()
		{
			return Function.Call<int>((Hash)0x18D0456E86604654);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetScriptStatus()
		{
			return Function.Call<int>((Hash)0x57D158647A6BFABF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkRegisterHostBroadcastVariables(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x3E9B2F01C50DF595, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetSizeOfHostBroadcastDataStorage(int _p0)
		{
			return Function.Call<int>((Hash)0xBA24095EA96DFE17, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkRegisterPlayerBroadcastVariables(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x3364AA97340CA215, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetSizeOfPlayerBroadcastDataStorage(int _p0)
		{
			return Function.Call<int>((Hash)0x690806BC83BC8CA2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasReceivedHostBroadcastData()
		{
			return Function.Call<bool>((Hash)0x5D10B3795F3FC886);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPlayerIndex(int _player)
		{
			return Function.Call<int>((Hash)0x24FB80D107371267, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetParticipantIndex(int _index)
		{
			return Function.Call<int>((Hash)0x1B84DF6AF2A46938, _index);
		}
		/// <summary>
		/// Returns the Player associated to a given Ped when in an online session.
		/// </summary>
		public static int NetworkGetPlayerIndexFromPed(int _ped)
		{
			return Function.Call<int>((Hash)0x6C0E2E0125610278, _ped);
		}
		/// <summary>
		/// Returns the amount of players connected in the current session. Only works when connected to a session/server.
		/// </summary>
		public static int NetworkGetNumConnectedPlayers()
		{
			return Function.Call<int>((Hash)0xA4A79DD2D9600654);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlayerConnected(int _player)
		{
			return Function.Call<bool>((Hash)0x93DC1BE4E1ABE9D1, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetTotalNumPlayers()
		{
			return Function.Call<int>((Hash)0xCF61D4B4702EE9EB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsParticipantActive(int _p0)
		{
			return Function.Call<bool>((Hash)0x6FF8FF40B6357D45, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlayerActive(int _player)
		{
			return Function.Call<bool>((Hash)0xB8DFD30D6973E135, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlayerAParticipant(int _player)
		{
			return Function.Call<bool>((Hash)0x3CA58F6CB7CBD784, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsHostOfThisScript()
		{
			return Function.Call<bool>((Hash)0x83CD99A1E6061AB5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetHostOfThisScript()
		{
			return Function.Call<int>((Hash)0xC7B4D79B01FA7A5C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetHostOfScript(string _scriptName, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x1D6A14F1F9A736FC, _scriptName, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetHostOfThread(int _threadId)
		{
			return Function.Call<int>((Hash)0xB4A25351D79B444C, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetMissionFinished()
		{
			Function.Call((Hash)0x3B3D11CD9FFCDFC9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsScriptActive(string _scriptName, int _p1, bool _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x9D40DF90FAD26098, _scriptName, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsScriptActiveByHash(uint _scriptHash, int _p1, bool _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x1B89BC43B6E69107, _scriptHash, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsThreadActive(int _threadId)
		{
			return Function.Call<bool>((Hash)0x31DAD2CD6D49546E, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetInstanceIdOfThread(int _threadId)
		{
			return Function.Call<int>((Hash)0xFB9ECED5B68F3B78, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNumScriptParticipants(string _scriptName, int _instanceId, uint _position)
		{
			return Function.Call<int>((Hash)0x3658E8CD94FC121A, _scriptName, _instanceId, _position);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetInstanceIdOfThisScript()
		{
			return Function.Call<int>((Hash)0x638A3A81733086DB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlayerAParticipantOnScript(int _p0, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x1AD5B71586B94820, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkPreventScriptHostMigration()
		{
			Function.Call((Hash)0x2302C0264EA58D31);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsFeatureSupported(int _featureId)
		{
			return Function.Call<bool>((Hash)0x9C725D149622BFDE, _featureId);
		}
		/// <summary>
		/// Return the local Participant ID
		/// </summary>
		public static int ParticipantId()
		{
			return Function.Call<int>((Hash)0x90986E8876CE0A83);
		}
		/// <summary>
		/// Return the local Participant ID.
		/// 
		/// This native is exactly the same as 'PARTICIPANT_ID' native.
		/// </summary>
		public static int ParticipantIdToInt()
		{
			return Function.Call<int>((Hash)0x57A3BDDAD8E5AA0A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetDestroyerOfNetworkId(int _netId, uint _weaponHash)
		{
			return Function.Call<int>((Hash)0x7A1ADEEF01740A24, _netId, _weaponHash);
		}
		/// <summary>
		/// _NETWORK_GET_A* - _NETWORK_GET_D*
		/// </summary>
		public static int Hash_0x6cf82a7f65a5ad5f(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0x6CF82A7F65A5AD5F, _ped, _p1);
		}
		/// <summary>
		/// _NETWORK_GET_A* - _NETWORK_GET_D*
		/// </summary>
		public static bool Hash_0x236321f1178a5446(int _player, int _ped, int _p2)
		{
			return Function.Call<bool>((Hash)0x236321F1178A5446, _player, _ped, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetAssistedDamageOfEntity(int _player, int _entity, int _p2)
		{
			return Function.Call<bool>((Hash)0x4CACA84440FA26F6, _player, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetEntityKillerOfPlayer(int _player, uint _weaponHash)
		{
			return Function.Call<int>((Hash)0x42B2DAA6B596F5F8, _player, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkResurrectLocalPlayer(float _x, float _y, float _z, float _heading, int _p4, bool _p5, int _p6, bool _p7)
		{
			Function.Call((Hash)0xEA23C49EAA83ACFB, _x, _y, _z, _heading, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkResurrectLocalPlayer2(int _args)
		{
			Function.Call((Hash)0x4154B7D8C75E5DCF, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetLocalPlayerInvincibleTime(int _time)
		{
			Function.Call((Hash)0x2D95C7E2D7E07307, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetLocalPlayerSyncLookAt(bool _toggle)
		{
			Function.Call((Hash)0x524FF0AEFF9C3973, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasEntityBeenRegisteredWithThisThread(int _entity)
		{
			return Function.Call<bool>((Hash)0xB07D3185E11657A5, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNetworkIdFromEntity(int _entity)
		{
			return Function.Call<int>((Hash)0xA11700682F3AD45C, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetEntityFromNetworkId(int _netId)
		{
			return Function.Call<int>((Hash)0xCE4E5D9B0A4FF560, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetEntityIsNetworked(int _entity)
		{
			return Function.Call<bool>((Hash)0xC7827959479DCC78, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkRegisterEntityAsNetworked(int _entity)
		{
			Function.Call((Hash)0x06FAACD625D80CAA, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkDoesNetworkIdExist(int _netID)
		{
			return Function.Call<bool>((Hash)0x38CE16C96BD11344, _netID);
		}
		/// <summary>
		/// Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
		/// </summary>
		public static int Hash_0x950acd8f05b7b9df(int _p0)
		{
			return Function.Call<int>((Hash)0x950ACD8F05B7B9DF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRequestControlOfNetworkId(int _netId)
		{
			return Function.Call<bool>((Hash)0xA670B3662FAFFBD0, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasControlOfNetworkId(int _netId)
		{
			return Function.Call<bool>((Hash)0x4D36070FE0215186, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRequestControlOfEntity(int _entity)
		{
			return Function.Call<bool>((Hash)0xB69317BF5E782347, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRequestControlOfAnimScene(int _animScene)
		{
			return Function.Call<bool>((Hash)0xAAA92B631B13F614, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRequestControlOfPickupPlacement(int _p0)
		{
			return Function.Call<bool>((Hash)0x56ED2C48558DAB78, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasControlOfEntity(int _entity)
		{
			return Function.Call<bool>((Hash)0x01BF60A500E28887, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasControlOfPickup(int _pickup)
		{
			return Function.Call<bool>((Hash)0x5BC9495F0B3B6FA6, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasControlOfAnimScene(int _animScene)
		{
			return Function.Call<bool>((Hash)0x26A5C12FACFF8724, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasControlOfPickupPlacement(int _p0)
		{
			return Function.Call<bool>((Hash)0x51EABCF2786515AB, _p0);
		}
		/// <summary>
		/// Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
		/// </summary>
		public static int Hash_0xf260af6f43953316(int _handle)
		{
			return Function.Call<int>((Hash)0xF260AF6F43953316, _handle);
		}
		/// <summary>
		/// Returns the network ID of the given vehicle.
		/// </summary>
		public static int VehToNet(int _vehicle)
		{
			return Function.Call<int>((Hash)0xB4C94523F023419C, _vehicle);
		}
		/// <summary>
		/// Returns the network ID of the given ped.
		/// </summary>
		public static int PedToNet(int _ped)
		{
			return Function.Call<int>((Hash)0x0EDEC3C276198689, _ped);
		}
		/// <summary>
		/// Returns the network ID of the given object.
		/// </summary>
		public static int ObjToNet(int _object)
		{
			return Function.Call<int>((Hash)0x99BFDC94A603E541, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AnimSceneToNet(int _animScene)
		{
			return Function.Call<int>((Hash)0xE0D73CDDEA79DDCD, _animScene);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetToVeh(int _netHandle)
		{
			return Function.Call<int>((Hash)0x367B936610BA360C, _netHandle);
		}
		/// <summary>
		/// gets the ped id of a network id
		/// </summary>
		public static int NetToPed(int _netHandle)
		{
			return Function.Call<int>((Hash)0xBDCD95FC216A8B3E, _netHandle);
		}
		/// <summary>
		/// gets the object id of a network id
		/// </summary>
		public static int NetToObj(int _netHandle)
		{
			return Function.Call<int>((Hash)0xD8515F5FEA14CB3F, _netHandle);
		}
		/// <summary>
		/// gets the entity id of a network id
		/// </summary>
		public static int NetToEnt(int _netHandle)
		{
			return Function.Call<int>((Hash)0xBFFEAB45A9A9094A, _netHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetToAnimScene(int _netId)
		{
			return Function.Call<int>((Hash)0xD7F6781A0ABAF6FB, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PropsetToNet(int _propSet)
		{
			return Function.Call<int>((Hash)0x74F99EF7EF503398, _propSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetToPropset(int _netId)
		{
			return Function.Call<int>((Hash)0xD08066E00D26C448, _netId);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x0cc28c08613ba9e5(int _p0)
		{
			Function.Call((Hash)0x0CC28C08613BA9E5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkGetLocalHandle(int _gamerHandle)
		{
			Function.Call((Hash)0xE86051786B66CD8E, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkHandleFromPlayer(int _player, int _gamerHandle)
		{
			Function.Call((Hash)0x388EB2B86C73B6B3, _player, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint NetworkHashFromPlayerHandle(int _player)
		{
			return Function.Call<uint>((Hash)0xBC1D768F2F5D6C05, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkHandleFromFriend(int _friendIndex, int _gamerHandle)
		{
			Function.Call((Hash)0xD45CB817D7E177D2, _friendIndex, _gamerHandle);
		}
		/// <summary>
		/// Always returns a null string.
		/// </summary>
		public static string NetworkGetGamertagFromHandle(int _gamerHandle)
		{
			return Function.Call<string>((Hash)0x426141162EBE5CDB, _gamerHandle);
		}
		/// <summary>
		/// Hardcoded to return -1.
		/// </summary>
		public static int NetworkDisplaynamesFromHandlesStart(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xD66C9E72B3CC4982, _p0, _p1);
		}
		/// <summary>
		/// Hardcoded to return zero.
		/// </summary>
		public static int NetworkGetDisplaynamesFromHandles(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x58CC181719256197, _p0, _p1, _p2);
		}
		/// <summary>
		/// Example:
		/// 
		/// char displayName[64];
		/// if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
		/// {
		/// 	// use displayName
		/// }
		/// </summary>
		public static bool NetworkGetDisplayNameFromHandle(int _gamerHandle, string _displayName)
		{
			return Function.Call<bool>((Hash)0x7FEE4F07C54B6B3C, _gamerHandle, _displayName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAreHandlesTheSame(int _gamerHandle1, int _gamerHandle2)
		{
			return Function.Call<bool>((Hash)0x57DBA049E110F217, _gamerHandle1, _gamerHandle2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsHandleValid(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x6F79B93B0A8E4133, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPlayerFromGamerHandle(int _gamerHandle)
		{
			return Function.Call<int>((Hash)0xCE5F689CF5A0A49D, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsGamerInMySession(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x0F10B05DDF8D16E9, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkShowProfileUi(int _gamerHandle)
		{
			Function.Call((Hash)0x859ED1CEA343FCA8, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5759160ac17c13ce(int _gamerHandle, string _message)
		{
			Function.Call((Hash)0x5759160AC17C13CE, _gamerHandle, _message);
		}
		/// <summary>
		/// Returns the entity's network ID.
		/// </summary>
		public static int Hash_0xf302ab9d978352ee(int _entity)
		{
			return Function.Call<int>((Hash)0xF302AB9D978352EE, _entity);
		}
		/// <summary>
		/// Returns the entity associated with the given network ID.
		/// </summary>
		public static int Hash_0x4538ee7c321590bc(int _networkId)
		{
			return Function.Call<int>((Hash)0x4538EE7C321590BC, _networkId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa47d48d06aa5a188()
		{
			return Function.Call<bool>((Hash)0xA47D48D06AA5A188);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetTotalNumFriends()
		{
			return Function.Call<int>((Hash)0xDB7ABDD203FA3704);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa94ece191d90637a()
		{
			return Function.Call<int>((Hash)0xA94ECE191D90637A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5cb8b0c846d0f30b(int _p0)
		{
			Function.Call((Hash)0x5CB8B0C846D0F30B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff36f36b07e69059(int _p0)
		{
			Function.Call((Hash)0xFF36F36B07E69059, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetCurrentFriendPageData(int _p0)
		{
			return Function.Call<bool>((Hash)0xA3EEC0A5AFF3FC5B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb389289f031f059a()
		{
			return Function.Call<int>((Hash)0xB389289F031F059A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkCanRefreshFriendPage()
		{
			return Function.Call<bool>((Hash)0x1AF5E28E64A76A9F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRefreshCurrentFriendPage()
		{
			return Function.Call<bool>((Hash)0x1F51F367B710A832);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xda1bfed8582f61f0()
		{
			return Function.Call<bool>((Hash)0xDA1BFED8582F61F0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x232e1eb23cdb313c()
		{
			return Function.Call<bool>((Hash)0x232E1EB23CDB313C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3e4a16bc669e71b3()
		{
			return Function.Call<bool>((Hash)0x3E4A16BC669E71B3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xe348d1404bd80146(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0xE348D1404BD80146, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x665161d250850a9f(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x665161D250850A9F, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string NetworkGetGamertagFromFriend(int _gamerHandle)
		{
			return Function.Call<string>((Hash)0x5659D87BE674AB17, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsFriend(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x1A24A179F9B31654, _gamerHandle);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool NetworkIsPendingFriend(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x0BE73DA6984A6E33, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAddFriend(int _gamerHandle, string _message)
		{
			return Function.Call<bool>((Hash)0x8E02D73914064223, _gamerHandle, _message);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRemoveFriend(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x55F618F68AB854D3, _gamerHandle);
		}
		/// <summary>
		/// On PC this returns true if gamerHandle is a valid handle.
		/// </summary>
		public static bool NetworkCanAddFriend(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x99ABE9BF9DADA162, _gamerHandle);
		}
		/// <summary>
		/// Old name: _NETWORK_SET_PASSIVE_MODE_OPTION
		/// </summary>
		public static void NetworkSetPlayerIsPassive(bool _toggle)
		{
			Function.Call((Hash)0x9C25E8EC4C535FBD, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetFriendlyFireOption(bool _toggle)
		{
			Function.Call((Hash)0xF808475FA571D823, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetRichPresence(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x1DCCACDCFC569362, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetTimeoutTime()
		{
			return Function.Call<int>((Hash)0x5ED0356A0CE3A34F);
		}
		/// <summary>
		/// Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
		/// </summary>
		public static void Hash_0xbc7d36946d19e60e(bool _p0)
		{
			Function.Call((Hash)0xBC7D36946D19E60E, _p0);
		}
		/// <summary>
		/// Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
		/// </summary>
		public static bool Hash_0x880a7202301e282b(int _p0, int _p1, float _x, float _y, float _z, float _p5, int _p6)
		{
			return Function.Call<bool>((Hash)0x880A7202301E282B, _p0, _p1, _x, _y, _z, _p5, _p6);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int Hash_0xc964fcd3d1720697()
		{
			return Function.Call<int>((Hash)0xC964FCD3D1720697);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int Hash_0xec089f84a9c16c62()
		{
			return Function.Call<int>((Hash)0xEC089F84A9C16C62);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PreventNetworkIdMigration(int _netId)
		{
			Function.Call((Hash)0x7182EDDA1EE7DB5A, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void KeepNetworkIdInFastInstance(int _netId, bool _p1, int _p2)
		{
			Function.Call((Hash)0xE1BC73D6815BA361, _netId, _p1, _p2);
		}
		/// <summary>
		/// Only used in SP R* Script dominoes_sp: p1 = 0
		/// </summary>
		public static void Hash_0x02c4c6c2900d84df(int _player, int _p1)
		{
			Function.Call((Hash)0x02C4C6C2900D84DF, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd78a26024bb13e08(int _player)
		{
			Function.Call((Hash)0xD78A26024BB13E08, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNetworkIdExistsOnAllMachines(int _netId, bool _toggle)
		{
			Function.Call((Hash)0xE05E81A888FA63C8, _netId, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNetworkIdAlwaysExistsForPlayer(int _netId, int _player, bool _toggle)
		{
			Function.Call((Hash)0xA8A024587329F36A, _netId, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNetworkIdStopCloning(int _networkId, bool _bStopCloning)
		{
			Function.Call((Hash)0x9ED3108D6847760A, _networkId, _bStopCloning);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetEntityRemainsWhenUnnetworked(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xD785864798258032, _entity, _toggle);
		}
		/// <summary>
		/// if set to true other network players can't see it
		/// if set to false other network player can see it
		/// =========================================
		/// ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
		/// 
		/// pc or last gen?
		/// 
		/// ^^ last-gen
		/// 
		/// Old name: _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
		/// </summary>
		public static void NetworkSetEntityOnlyExistsForParticipants(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xF1CA12B18AEF5298, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe31a04513237dc89(int _entity)
		{
			Function.Call((Hash)0xE31A04513237DC89, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNetworkIdVisibleInCutscene(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xA6928482543022B4, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsNetworkIdOwnedByParticipant(int _netId)
		{
			return Function.Call<bool>((Hash)0xA1607996431332DF, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPlayerOwnerOfNetworkId(int _netId)
		{
			return Function.Call<int>((Hash)0xA6C0787443C9583E, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLocalPlayerVisibleInCutscene(bool _local, bool _remote, int _instanceId)
		{
			Function.Call((Hash)0xD1065D68947E7B6E, _local, _remote, _instanceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PreventMigrationOfEntitiesInFastInstanceForLocalPlayer(bool _toggle)
		{
			Function.Call((Hash)0x89D803CD48622150, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLocalPlayerInvisibleLocally(bool _p0)
		{
			Function.Call((Hash)0xE5F773C1A1D9D168, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerInvisibleLocally(int _player, bool _toggle)
		{
			Function.Call((Hash)0x12B37D54667DB0B8, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerVisibleLocally(int _player, bool _toggle)
		{
			Function.Call((Hash)0xFAA10F1FAFB11AF2, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityVisibleInCutscene(int _entity, bool _p1, bool _p2, int _p3)
		{
			Function.Call((Hash)0xE0031D3C8F36AB82, _entity, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDoorNetworked(uint _doorHash)
		{
			Function.Call((Hash)0x51D99497ABF3F451, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDoorUnnetworked(int _p0, bool _toggle)
		{
			Function.Call((Hash)0xC1E1A3D5ED7617B8, _p0, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDamageTrackerActiveOnNetworkId(int _netID)
		{
			return Function.Call<bool>((Hash)0x6E192E33AD436366, _netID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ActivateDamageTrackerOnNetworkId(int _netID, bool _toggle)
		{
			Function.Call((Hash)0xD45B1FFCCD52FF19, _netID, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSphereVisibleToAnotherMachine(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0xD82CF8E64C8729D8, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSphereVisibleToPlayer(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<bool>((Hash)0xDC3A310219E5DA62, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd42c543f73233041(bool _p0)
		{
			Function.Call((Hash)0xD42C543F73233041, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveNetworkMissionObjects(int _amount)
		{
			Function.Call((Hash)0x4E5C93BD0C32FBF8, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveNetworkClientMissionObjects(int _amount)
		{
			Function.Call((Hash)0xE7DDA8BD3BCF751C, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveNetworkMissionPeds(int _amount)
		{
			Function.Call((Hash)0xB60FEBA45333D36F, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveNetworkClientMissionPeds(int _amount)
		{
			Function.Call((Hash)0x807E119F80231732, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveNetworkMissionVehicles(int _amount)
		{
			Function.Call((Hash)0x76B02E21ED27A469, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveNetworkMissionPickups(int _amount)
		{
			Function.Call((Hash)0x4D40E7D749BC6E6D, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanRegisterMissionObjects(int _amount)
		{
			return Function.Call<bool>((Hash)0x800DD4721A8B008B, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanRegisterMissionPeds(int _amount)
		{
			return Function.Call<bool>((Hash)0xBCBF4FEF9FA5D781, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanRegisterMissionVehicles(int _amount)
		{
			return Function.Call<bool>((Hash)0x7277F1F2E085EE74, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanRegisterMissionPickups(int _amount)
		{
			return Function.Call<bool>((Hash)0xF0460C7BF80011EA, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanRegisterMissionEntities(int _ped_amt, int _vehicle_amt, int _object_amt, int _pickup_amt)
		{
			return Function.Call<bool>((Hash)0x69778E7564BADE6D, _ped_amt, _vehicle_amt, _object_amt, _pickup_amt);
		}
		/// <summary>
		/// p0 appears to be for MP
		/// </summary>
		public static int GetNumReservedMissionObjects(bool _p0)
		{
			return Function.Call<int>((Hash)0xAA81B5F10BC43AC2, _p0);
		}
		/// <summary>
		/// p0 appears to be for MP
		/// </summary>
		public static int GetNumReservedMissionPeds(bool _p0)
		{
			return Function.Call<int>((Hash)0x1F13D5AE5CB17E17, _p0);
		}
		/// <summary>
		/// p0 appears to be for MP
		/// </summary>
		public static int GetNumReservedMissionVehicles(bool _p0)
		{
			return Function.Call<int>((Hash)0xCF3A965906452031, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumReservedMissionPickups(bool _p0)
		{
			return Function.Call<int>((Hash)0x62BE3ECC79FBD004, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumCreatedMissionObjects(bool _p0)
		{
			return Function.Call<int>((Hash)0x12B6281B6C6706C0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumCreatedMissionPeds(bool _p0)
		{
			return Function.Call<int>((Hash)0xCB215C4B56A7FAE7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumCreatedMissionVehicles(bool _p0)
		{
			return Function.Call<int>((Hash)0x0CD9AB83489430EA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumCreatedMissionPickups(bool _p0)
		{
			return Function.Call<int>((Hash)0xD2BA051B94CA9BCC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x99aac89c510deb0d(int _threadId, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x99AAC89C510DEB0D, _threadId, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
		/// Coords: Slot world position
		/// 
		/// Old name: _GET_RESERVATIONS_FOR_SLOT_WORLD_POSITION
		/// </summary>
		public static void GetReservedMissionEntitiesInArea(float _x, float _y, float _z, bool _p3, int _peds, int _vehicles, int _objects, int _pickups)
		{
			Function.Call((Hash)0x5E71E72A94985214, _x, _y, _z, _p3, _peds, _vehicles, _objects, _pickups);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static bool Hash_0x5f328fc909f0e0ff(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0x5F328FC909F0E0FF, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Always returns 60
		/// </summary>
		public static int GetMaxNumNetworkObjects()
		{
			return Function.Call<int>((Hash)0xC7BE335216B5EC7C);
		}
		/// <summary>
		/// Always returns 110
		/// </summary>
		public static int GetMaxNumNetworkPeds()
		{
			return Function.Call<int>((Hash)0x0C1F7D49C39D2289);
		}
		/// <summary>
		/// Always returns 40
		/// </summary>
		public static int GetMaxNumNetworkVehicles()
		{
			return Function.Call<int>((Hash)0x0AFCE529F69B21FF);
		}
		/// <summary>
		/// Always returns 80
		/// </summary>
		public static int GetMaxNumNetworkPickups()
		{
			return Function.Call<int>((Hash)0xA72835064DD63E4C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x75fc34a2ba345bd1(int _entity, int _player, int _p2)
		{
			return Function.Call<bool>((Hash)0x75FC34A2BA345BD1, _entity, _player, _p2);
		}
		/// <summary>
		/// Must be called from a background script, otherwise it will do nothing.
		/// </summary>
		public static void Hash_0x979765465a6f25fc(int _entity, bool _p1)
		{
			Function.Call((Hash)0x979765465A6F25FC, _entity, _p1);
		}
		/// <summary>
		/// Hardcoded to return zero.
		/// </summary>
		public static int Hash_0x5133cf81924f1129()
		{
			return Function.Call<int>((Hash)0x5133CF81924F1129);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x1e4e097d71d449fb(bool _p0)
		{
			return Function.Call<int>((Hash)0x1E4E097D71D449FB, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x982d7ad755b8f62c(bool _p0)
		{
			return Function.Call<int>((Hash)0x982D7AD755B8F62C, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x917ad74bdcf8b6e9(bool _p0)
		{
			return Function.Call<int>((Hash)0x917AD74BDCF8B6E9, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0xf8dc69dc1ad19072(bool _p0)
		{
			return Function.Call<int>((Hash)0xF8DC69DC1AD19072, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x744bfbb0ca908161(bool _p0)
		{
			return Function.Call<int>((Hash)0x744BFBB0CA908161, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x106cbdd5077dede1(bool _p0)
		{
			return Function.Call<int>((Hash)0x106CBDD5077DEDE1, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0xbaf7e2979442b29f(bool _p0)
		{
			return Function.Call<int>((Hash)0xBAF7E2979442B29F, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x039b692b3318fab6(bool _p0)
		{
			return Function.Call<int>((Hash)0x039B692B3318FAB6, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x4835413ea6f9c9cd(bool _p0)
		{
			return Function.Call<int>((Hash)0x4835413EA6F9C9CD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNetworkTime()
		{
			return Function.Call<int>((Hash)0x7A5487FE9FAA6B48);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNetworkTimeAccurate()
		{
			return Function.Call<int>((Hash)0x89023FBBF9200E9F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasNetworkTimeStarted()
		{
			return Function.Call<bool>((Hash)0x46718ACEEDEAFC84);
		}
		/// <summary>
		/// Adds the first argument to the second.
		/// </summary>
		public static int GetTimeOffset(int _timeA, int _timeB)
		{
			return Function.Call<int>((Hash)0x017008CCDAD48503, _timeA, _timeB);
		}
		/// <summary>
		/// Subtracts the second argument from the first, then returns whether the result is negative.
		/// </summary>
		public static bool IsTimeLessThan(int _timeA, int _timeB)
		{
			return Function.Call<bool>((Hash)0xCB2CF5148012C8D0, _timeA, _timeB);
		}
		/// <summary>
		/// Subtracts the first argument from the second, then returns whether the result is negative.
		/// </summary>
		public static bool IsTimeMoreThan(int _timeA, int _timeB)
		{
			return Function.Call<bool>((Hash)0xDE350F8651E4346C, _timeA, _timeB);
		}
		/// <summary>
		/// Subtracts the second argument from the first.
		/// </summary>
		public static int GetTimeDifference(int _timeA, int _timeB)
		{
			return Function.Call<int>((Hash)0xA2C6FC031D46FFF0, _timeA, _timeB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCloudTimeAsInt()
		{
			return Function.Call<int>((Hash)0x9A73240B49945C76);
		}
		/// <summary>
		/// Takes the specified time and writes it to the structure specified in the second argument.
		/// 
		/// struct date_time
		/// {
		///     int year;
		///     int PADDING1;
		///     int month;
		///     int PADDING2;
		///     int day;
		///     int PADDING3;
		///     int hour;
		///     int PADDING4;
		///     int minute;
		///     int PADDING5;
		///     int second;
		///     int PADDING6;
		/// };
		/// </summary>
		public static void ConvertPosixTime(int _posixTime, int _timeStructure)
		{
			Function.Call((Hash)0xAC97AF97FA68E5D5, _posixTime, _timeStructure);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetInSpectatorMode(bool _toggle, int _playerPed)
		{
			Function.Call((Hash)0x423DE3854BB50894, _toggle, _playerPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetInStaticSpectatorMode(bool _toggle, float _x, float _y, float _z)
		{
			Function.Call((Hash)0xFBF1ECFB39A77B5F, _toggle, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsInSpectatorMode()
		{
			return Function.Call<bool>((Hash)0x048746E388762E11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlayerInSpectatorMode(int _player)
		{
			return Function.Call<bool>((Hash)0x5B709519997ECF0F, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetInMpCutscene(bool _p0, bool _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0x9CA5DE655269FEC4, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsInMpCutscene()
		{
			return Function.Call<bool>((Hash)0x6CC27C9FA2040220);
		}
		/// <summary>
		/// Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
		/// </summary>
		public static bool NetworkIsPlayerInMpCutscene(int _player)
		{
			return Function.Call<bool>((Hash)0x63F9EE203C3619F2, _player);
		}
		/// <summary>
		/// _NETWORK_A* - _NETWORK_C*
		/// </summary>
		public static void Hash_0x34bc1e79546ba543(bool _p0)
		{
			Function.Call((Hash)0x34BC1E79546BA543, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNetworkRespotTimer(int _entity, int _timer, bool _p2)
		{
			Function.Call((Hash)0x442B4347B6EC36E8, _entity, _timer, _p2);
		}
		/// <summary>
		/// _GET_LAUNCH_PARAM_(RESPOT?)*
		/// Name is probably invalid since this native only reads data from parsed entity.
		/// </summary>
		public static bool Hash_0x26a867c0b7a456d1(int _entity)
		{
			return Function.Call<bool>((Hash)0x26A867C0B7A456D1, _entity);
		}
		/// <summary>
		/// Old name: _SET_LOCAL_PLAYER_AS_GHOST
		/// </summary>
		public static void SetLocalPlayerAsGhost(bool _toggle)
		{
			Function.Call((Hash)0x5FFE9B4144F9712F, _toggle);
		}
		/// <summary>
		/// Old name: _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
		/// </summary>
		public static bool IsEntityAGhost(int _entity)
		{
			return Function.Call<bool>((Hash)0x21D04D7BC538C146, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdca6abdb9288fbe4(int _player, bool _disabled)
		{
			Function.Call((Hash)0xDCA6ABDB9288FBE4, _player, _disabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEntityGhostedToLocalPlayer(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xEE5AE9956743BA20, _entity, _toggle);
		}
		/// <summary>
		/// Note: this native was added in build 1311.16
		/// </summary>
		public static bool IsObjectReassignmentInProgress()
		{
			return Function.Call<bool>((Hash)0x8FE9EB11EC9CC23A);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0x039ad6b57d5179ff()
		{
			return Function.Call<int>((Hash)0x039AD6B57D5179FF);
		}
		/// <summary>
		/// Note: this native was added in build 1311.16
		/// 
		/// GET_NUM_*
		/// </summary>
		public static int Hash_0x02b3cdd652b3cdd6()
		{
			return Function.Call<int>((Hash)0x02B3CDD652B3CDD6);
		}
		/// <summary>
		/// Note: this native was added in build 1311.16
		/// </summary>
		public static int GetNumPeerNegotiationResponses()
		{
			return Function.Call<int>((Hash)0x4FE932E84FE932E8);
		}
		/// <summary>
		/// Must be called from a background script, otherwise it will do nothing.
		/// </summary>
		public static void NetworkDebugRequestEntityPosition(int _p0)
		{
			Function.Call((Hash)0xFA38B52F91B59075, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNetworkIdFromRopeId(int _ropeId)
		{
			return Function.Call<int>((Hash)0x42871327315EDAE8, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetRopeIdFromNetworkId(int _netId)
		{
			return Function.Call<int>((Hash)0xEB1A4DD8352EC828, _netId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigAddSpawnPoint(float _x, float _y, float _z, float _heading)
		{
			Function.Call((Hash)0xFD1AC0B3858F224C, _x, _y, _z, _heading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa63e4f050f20021f()
		{
			Function.Call((Hash)0xA63E4F050F20021F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigAddExclusionVolume(int _volume)
		{
			Function.Call((Hash)0xEEB7818B1D307212, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigRemoveExclusionVolume(int _volume)
		{
			Function.Call((Hash)0xA35E7BF20FA269E0, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0bf90cbb6b72977b()
		{
			Function.Call((Hash)0x0BF90CBB6B72977B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7b3ff2d193628126(int _player)
		{
			Function.Call((Hash)0x7B3FF2D193628126, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x19b52c20b5c4757c()
		{
			Function.Call((Hash)0x19B52C20B5C4757C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigSetFlags(int _flags)
		{
			Function.Call((Hash)0xF94A0D5B254375DF, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6cee2e30021daec6()
		{
			Function.Call((Hash)0x6CEE2E30021DAEC6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigAddPropertyScripted(int _configProperty, bool _include)
		{
			Function.Call((Hash)0x44D59EC597BBF348, _configProperty, _include);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb131e686bd97b3f8()
		{
			Function.Call((Hash)0xB131E686BD97B3F8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigAddPropertyPreference(int _configProperty, bool _include, float _weight)
		{
			Function.Call((Hash)0xEB6027FD1B4600D5, _configProperty, _include, _weight);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x405ddefb1f531b18(int _volume, bool _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x405DDEFB1F531B18, _volume, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x43cf999205084b4b()
		{
			Function.Call((Hash)0x43CF999205084B4B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x13f592fc3bf0ea84(int _volume, bool _p1, float _originalWeight, int _p3, int _p4)
		{
			Function.Call((Hash)0x13F592FC3BF0EA84, _volume, _p1, _originalWeight, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcf23ab5bd47b384d(int _p0)
		{
			Function.Call((Hash)0xCF23AB5BD47B384D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe5634491a58c2703(float _p0)
		{
			Function.Call((Hash)0xE5634491A58C2703, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigSetGroundToRootOffset(float _offset)
		{
			Function.Call((Hash)0x59577799F6AE2F34, _offset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigSetLevelWaterDepth(int _waterDepthLevel)
		{
			Function.Call((Hash)0xBDCC671B911040F9, _waterDepthLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigSetTuningFloat(uint _p0, float _p1)
		{
			Function.Call((Hash)0x0608326F7B98C08D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5d3c528b7a7df836(uint _p0)
		{
			Function.Call((Hash)0x5D3C528B7A7DF836, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2686bd9566b65eda(float _x, float _y, float _z)
		{
			Function.Call((Hash)0x2686BD9566B65EDA, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbb1ec8c2eef33baa(int _entity)
		{
			Function.Call((Hash)0xBB1EC8C2EEF33BAA, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x67ccdf74c4df7169()
		{
			return Function.Call<bool>((Hash)0x67CCDF74C4DF7169);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc8b6d18e22484643()
		{
			Function.Call((Hash)0xC8B6D18E22484643);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x97bce4c4b3191228()
		{
			Function.Call((Hash)0x97BCE4C4B3191228);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x41452e8a3b9c0c4b()
		{
			return Function.Call<int>((Hash)0x41452E8A3B9C0C4B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkSpawnConfigSearchInProgress()
		{
			return Function.Call<bool>((Hash)0x89EC2FC89ECB1005);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x61bfbaa795e712ad()
		{
			Function.Call((Hash)0x61BFBAA795E712AD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSpawnConfigSetCancelSearch()
		{
			Function.Call((Hash)0x765E60A1DCB8B1CE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x691e4de5309eaefc(int _p0, int _p1)
		{
			Function.Call((Hash)0x691E4DE5309EAEFC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkStartSoloTutorialSession()
		{
			Function.Call((Hash)0x17E0198B3882C2CB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkEndTutorialSession()
		{
			Function.Call((Hash)0xD0AFAFF5A51D72F7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsInTutorialSession()
		{
			return Function.Call<bool>((Hash)0xADA24309FE08DACF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsTutorialSessionChangePending()
		{
			return Function.Call<bool>((Hash)0x35F0B98A8387274D);
		}
		/// <summary>
		/// Old name: _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
		/// </summary>
		public static bool NetworkArePlayersInSameTutorialSession(int _player, int _index)
		{
			return Function.Call<bool>((Hash)0x9DE986FC9A87C474, _player, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAllowAllEntityFadingForInstances(bool _toggle)
		{
			Function.Call((Hash)0x4B05B97BA46F419D, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAllowEntityFadingForInstances(int _entity, bool _toggle)
		{
			Function.Call((Hash)0xF3354D6CA46F419D, _entity, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc6ad5c046f33ab4(bool _p0, bool _p1)
		{
			Function.Call((Hash)0xDC6AD5C046F33AB4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6c7e04e9de451789()
		{
			Function.Call((Hash)0x6C7E04E9DE451789);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetLocalPlayerPendingFastInstanceId(int _instanceId)
		{
			Function.Call((Hash)0x007FF852DCF49DA4, _instanceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetPlayerFastInstanceId(int _player)
		{
			return Function.Call<int>((Hash)0xD9267375834C5EAB, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkConcealPlayer(int _player, bool _toggle)
		{
			Function.Call((Hash)0xBBDF066252829606, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsPlayerConcealed(int _player)
		{
			return Function.Call<bool>((Hash)0x919B3C98ED8292F9, _player);
		}
		/// <summary>
		/// Note: this native was added in build 1355.30
		/// </summary>
		public static void Hash_0x40fedb13870042f1()
		{
			Function.Call((Hash)0x40FEDB13870042F1);
		}
		/// <summary>
		/// Note: this native was added in build 1355.30
		/// </summary>
		public static void Hash_0x422f9d6d6c7bc290(int _p0)
		{
			Function.Call((Hash)0x422F9D6D6C7BC290, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23, but was only used after build 1436.25
		/// </summary>
		public static void NetworkRequestCloudTunables()
		{
			Function.Call((Hash)0x42FB3B532D526E6C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsTunableCloudRequestPending()
		{
			return Function.Call<bool>((Hash)0x0467C11ED88B7D28);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetTunableCloudCrc()
		{
			return Function.Call<int>((Hash)0x10BD227A753B0D84);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkDoesTunableExist(uint _tunableContext, uint _tunableName)
		{
			return Function.Call<bool>((Hash)0x85E5F8B9B898B20A, _tunableContext, _tunableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAccessTunableInt(uint _tunableContext, uint _tunableName, int _value)
		{
			return Function.Call<bool>((Hash)0x8BE1146DFD5D4468, _tunableContext, _tunableName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAccessTunableBool(uint _tunableContext, uint _tunableName)
		{
			return Function.Call<bool>((Hash)0xAA6A47A573ABB75A, _tunableContext, _tunableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkTryAccessTunableIntHash(uint _tunableContext, uint _tunableName, int _defaultValue)
		{
			return Function.Call<int>((Hash)0xA25E006B36719774, _tunableContext, _tunableName, _defaultValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float NetworkTryAccessTunableFloatHash(uint _tunableContext, uint _tunableName, float _defaultValue)
		{
			return Function.Call<float>((Hash)0xA18393089C05E49C, _tunableContext, _tunableName, _defaultValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkTryAccessTunableBoolHash(uint _tunableContext, uint _tunableName, bool _defaultValue)
		{
			return Function.Call<bool>((Hash)0xB2AD5D29A99D4B26, _tunableContext, _tunableName, _defaultValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x894b5ecab45d2342(int _netHandle, int _p1)
		{
			Function.Call((Hash)0x894B5ECAB45D2342, _netHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkDisableProximityMigration(int _netID)
		{
			Function.Call((Hash)0x407091CF6037118E, _netID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xce5e79d9e303628e()
		{
			return Function.Call<int>((Hash)0xCE5E79D9E303628E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xdbc754cb6ccb9378()
		{
			return Function.Call<bool>((Hash)0xDBC754CB6CCB9378);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CloudHasRequestCompleted(int _id)
		{
			return Function.Call<bool>((Hash)0x4C61B39930D045DA, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CloudDidRequestSucceed(int _id)
		{
			return Function.Call<bool>((Hash)0x3A3D5568AF297CD5, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetLaunchParamExists(string _paramName)
		{
			return Function.Call<bool>((Hash)0x02E97CE283648CD9, _paramName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetLaunchParamValue(string _paramName)
		{
			return Function.Call<string>((Hash)0x65E65CA6A0FE59D4, _paramName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLaunchParamValue(string _paramName, string _value)
		{
			Function.Call((Hash)0x668AF6E4933AC13F, _paramName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearLaunchParam(string _paramName)
		{
			Function.Call((Hash)0x782C94DB6469634D, _paramName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetLaunchParamString()
		{
			return Function.Call<string>((Hash)0xC59AB6A04333C502);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLaunchParamString(string _params)
		{
			Function.Call((Hash)0xDFFC15AA63D04AAB, _params);
		}
		/// <summary>
		/// Old name: _CLEAR_LAUNCH_PARAMS
		/// </summary>
		public static void ClearServiceEventArguments()
		{
			Function.Call((Hash)0x966DD84FB6A46017);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcIsRequestPending(int _ugcRequestId)
		{
			return Function.Call<bool>((Hash)0xF4AC4FA844FD559A, _ugcRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcHasRequestFinished(int _ugcRequestId)
		{
			return Function.Call<bool>((Hash)0xA9EB4D606076615D, _ugcRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcDidRequestSucceed(int _ugcRequestId)
		{
			return Function.Call<bool>((Hash)0x0B6009A90B8495F1, _ugcRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xcd53e6cbf609c012(int _ugcRequestId)
		{
			return Function.Call<bool>((Hash)0xCD53E6CBF609C012, _ugcRequestId);
		}
		/// <summary>
		/// Returns ugcRequestId
		/// </summary>
		public static int UgcQueryByContentType(int _p0, int _maxGet, string _contentTypeName, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xF40EF49B3099E98E, _p0, _maxGet, _contentTypeName, _p3, _p4, _p5);
		}
		/// <summary>
		/// Returns ugcRequestId
		/// </summary>
		public static int UgcQueryByCategory(int _categoryType, int _p1, int _maxGet, string _contentTypeName, int _p4, bool _p5)
		{
			return Function.Call<int>((Hash)0x8C109958C9BB559D, _categoryType, _p1, _maxGet, _contentTypeName, _p4, _p5);
		}
		/// <summary>
		/// Returns ugcRequestId
		/// </summary>
		public static int UgcQueryByContentId(string _contentId, bool _latestVersion, string _contentTypeName)
		{
			return Function.Call<int>((Hash)0x69D22E183580113F, _contentId, _latestVersion, _contentTypeName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcIsBookMarked(string _contentId)
		{
			return Function.Call<bool>((Hash)0xE42D1042F09865FE, _contentId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UgcClearQueryResults(int _ugcRequestId)
		{
			Function.Call((Hash)0xE931354FEA710038, _ugcRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcQueryWasForceCancelled(int _ugcRequestId)
		{
			return Function.Call<bool>((Hash)0xF8F0705E77A0E705, _ugcRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetContentNum(int _ugcRequestId)
		{
			return Function.Call<int>((Hash)0x76160E0396142765, _ugcRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetCreatorHandle(int _p0, int _index, int _gamerHandle)
		{
			return Function.Call<int>((Hash)0xADB56322EEDFBDC9, _p0, _index, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string UgcQueryGetOwnerId(int _p0, int _index)
		{
			return Function.Call<string>((Hash)0xF9F0B3028431967B, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string UgcQueryGetName(int _p0, int _index)
		{
			return Function.Call<string>((Hash)0x2D053EA815702DD1, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string UgcQueryGetRootContentId(int _p0, int _index)
		{
			return Function.Call<string>((Hash)0x566CEB0542EF5ECF, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string UgcQueryGetPlaylistName(int _p0, int _index)
		{
			return Function.Call<string>((Hash)0xCAF50048C8D0FBA0, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint UgcQueryGetMissionDescHash(int _p0, int _index)
		{
			return Function.Call<uint>((Hash)0xA6BF569956C60A60, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetCreatorPhoto(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x409FE0CA6A4D1D49, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UgcQueryGetDate(int _p0, int _index, int _p2)
		{
			Function.Call((Hash)0xE0CB4AB15CB32710, _p0, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetPosixUpdatedDate(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x21A99A72B00D8002, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetPosixPublishedDate(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x104080CA9E519B00, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetVersion(int _p0, int _index, int _p2)
		{
			return Function.Call<int>((Hash)0x63E9DCBC8B0931ED, _p0, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcQueryGetLanguage(int _p0, int _index)
		{
			return Function.Call<int>((Hash)0x97764E8AC6487A9A, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcQueryGetPublished(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x9993F1E11944A3DD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float UgcQueryGetRating(int _p0, int _index, int _p2)
		{
			return Function.Call<float>((Hash)0x24CD8FAEA1368379, _p0, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5f0e99071582deca(int _p0, int _index, int _p2)
		{
			return Function.Call<int>((Hash)0x5F0E99071582DECA, _p0, _index, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcQueryGetContentHasPlayerRecord(int _p0, int _index)
		{
			return Function.Call<bool>((Hash)0xF794765390A6DCA5, _p0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcQueryGetBookMarked(int _p0, int _index)
		{
			return Function.Call<bool>((Hash)0x98539FC453AEA639, _p0, _index);
		}
		/// <summary>
		/// Checks if the user has ROS privilege 14.
		/// </summary>
		public static bool UgcHasPrivilege()
		{
			return Function.Call<bool>((Hash)0x6506BFA755FB209C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcRequestContentDataFromParams(string _contentTypeName, string _contentId, int _fileId, int _fileVersion, int _languageId)
		{
			return Function.Call<int>((Hash)0x7FD2990AF016795E, _contentTypeName, _contentId, _fileId, _fileVersion, _languageId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcRequestCachedDescription(uint _description)
		{
			return Function.Call<int>((Hash)0x5E0165278F6339EE, _description);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcIsDescriptionRequestInProgress(uint _description)
		{
			return Function.Call<bool>((Hash)0x2D5DC831176D0114, _description);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcHasDescriptionRequestFinished(uint _description)
		{
			return Function.Call<bool>((Hash)0xEBFA8D50ADDC54C4, _description);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcDidDescriptionRequestSucceed(uint _description)
		{
			return Function.Call<bool>((Hash)0x162C23CA83ED0A62, _description);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string UgcGetCachedDescription(uint _description, int _length)
		{
			return Function.Call<string>((Hash)0x40F7E66472DF3E5C, _description, _length);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcReleaseCachedDescription(uint _description)
		{
			return Function.Call<bool>((Hash)0x5A34CD9C3C5BEC44, _description);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UgcReleaseAllCachedDescriptions()
		{
			Function.Call((Hash)0x68103E2247887242);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UgcSetQueryDataFromOffline(bool _p0)
		{
			Function.Call((Hash)0xF98DDE0A8ED09323, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UgcIsLanguageSupported(int _languageId)
		{
			return Function.Call<bool>((Hash)0xF53E48461B71EECB, _languageId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd4022c7286b0dfa2(string _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xD4022C7286B0DFA2, _p0, _p1, _p2);
		}
		/// <summary>
		/// Returns false if pedshot push failed
		/// </summary>
		public static bool NetworkPersonaPhotoWriteScProfile(string _texture, int _personaPhotoType, int _formatIndex)
		{
			return Function.Call<bool>((Hash)0xB72999D3120599DF, _texture, _personaPhotoType, _formatIndex);
		}
		/// <summary>
		/// Returns false if pedshot push failed
		/// </summary>
		public static bool NetworkPersonaPhotoWriteLocal(string _texture, int _playerSlot, int _p2, int _personaPhotoLocalCacheType)
		{
			return Function.Call<bool>((Hash)0x2A48D9567940598F, _texture, _playerSlot, _p2, _personaPhotoLocalCacheType);
		}
		/// <summary>
		/// _NETWORK_IS_T* - _NETWORK_RE*
		/// </summary>
		public static bool NetworkIsPreviousUploadPending()
		{
			return Function.Call<bool>((Hash)0xA21E3BAD0A42D199);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xcc4e72c339461ed1()
		{
			return Function.Call<int>((Hash)0xCC4E72C339461ED1);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static string Hash_0x356f9fb0698c1feb(int _player, int _personaPhotoLocalCacheType)
		{
			return Function.Call<string>((Hash)0x356F9FB0698C1FEB, _player, _personaPhotoLocalCacheType);
		}
		/// <summary>
		/// Only used in R* SP Script map_app_event_handler
		/// </summary>
		public static string Hash_0xcaf4ca2f87779f8f(int _gamerHandle, int _p1)
		{
			return Function.Call<string>((Hash)0xCAF4CA2F87779F8F, _gamerHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string RequestPedshotTextureDownload(int _gamerHandle, int _p1)
		{
			return Function.Call<string>((Hash)0xB5C4B18B12A2AF23, _gamerHandle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TextureDownloadTextureNameIsValid(string _name)
		{
			return Function.Call<bool>((Hash)0xE2C3CEC3C0903A00, _name);
		}
		/// <summary>
		/// Returns textureDownloadId
		/// </summary>
		public static int TextureDownloadRequest(int _gamerHandle, string _filePath, string _name, bool _p3)
		{
			return Function.Call<int>((Hash)0x16160DA74A8E74A2, _gamerHandle, _filePath, _name, _p3);
		}
		/// <summary>
		/// Returns textureDownloadId
		/// </summary>
		public static int MugshotTextureDownloadRequest(int _gamerHandle, int _p1, string _name, bool _p3)
		{
			return Function.Call<int>((Hash)0x9B5DB6CEAFAA10BB, _gamerHandle, _p1, _name, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UgcTextureDownloadRequest(int _p0, int _p1, int _p2, int _p3, int _p4, bool _p5)
		{
			return Function.Call<int>((Hash)0x308F96458B7087CC, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int LocalPlayerPedshotTextureDownloadRequest(int _playerSlot, int _personaPhotoLocalCacheType)
		{
			return Function.Call<int>((Hash)0x6E2FD8CF7EB10E53, _playerSlot, _personaPhotoLocalCacheType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TextureDownloadRelease(int _textureDownloadId)
		{
			Function.Call((Hash)0x487EB90B98E9FB19, _textureDownloadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TextureDownloadReleaseByName(string _name)
		{
			Function.Call((Hash)0x7A17B7981560FFA5, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string TextureDownloadGetName(int _textureDownloadId)
		{
			return Function.Call<string>((Hash)0x3448505B6E35262D, _textureDownloadId);
		}
		/// <summary>
		/// 0 = succeeded
		/// 1 = pending
		/// 2 = failed
		/// </summary>
		public static int GetStatusOfTextureDownload(int _textureDownloadId)
		{
			return Function.Call<int>((Hash)0x8BD6C6DEA20E82C6, _textureDownloadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PedmugshotGetStatus()
		{
			return Function.Call<int>((Hash)0xCBAC13F065C47596);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PedmugshotTake()
		{
			return Function.Call<bool>((Hash)0xCD954F330693F5F2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PedmugshotRequestSend()
		{
			return Function.Call<int>((Hash)0xFBC30B70B3CDB87E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x814729078aed6d30()
		{
			Function.Call((Hash)0x814729078AED6D30);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHaveRosBannedPriv()
		{
			return Function.Call<bool>((Hash)0x8020A73847E0CA7D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkHasRosPrivilege(int _index)
		{
			return Function.Call<bool>((Hash)0xA699957E60D80214, _index);
		}
		/// <summary>
		/// Always returns -1. Seems to be XB1 specific.
		/// </summary>
		public static int NetworkStartUserContentPermissionsCheck(int _gamerHandle)
		{
			return Function.Call<int>((Hash)0xDEB2B99A1AF1A2A6, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAutoSessionSetAllowedToSplit(bool _toggle)
		{
			Function.Call((Hash)0x0A428058079EE65C, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionIsAllowedToMerge()
		{
			return Function.Call<bool>((Hash)0xAADED99A6B268A27);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAutoSessionSetAllowedToMerge(bool _toggle, int _p1, int _p2)
		{
			Function.Call((Hash)0x63246A24F5747510, _toggle, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionIsAutoWarpDisabled()
		{
			return Function.Call<bool>((Hash)0xE258570E0C116A66);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAutoSessionSetAutoWarpEnabled(bool _toggle)
		{
			Function.Call((Hash)0x4440FEE3EFE78F54, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionCanSplitSession(int _p0)
		{
			return Function.Call<bool>((Hash)0xE404BFF0ABA23CDC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionSplitSession(int _playersToTake, int _maxInstancePlayers, int _sessionFlags, int _bucketId)
		{
			return Function.Call<bool>((Hash)0xC223D299C670413D, _playersToTake, _maxInstancePlayers, _sessionFlags, _bucketId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionIsProcessingSessionSplit()
		{
			return Function.Call<bool>((Hash)0xA021095C983F20D8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionSplitSessionSuccessful()
		{
			return Function.Call<bool>((Hash)0x6D87BA8EF15226CD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionIsInstancedSession()
		{
			return Function.Call<bool>((Hash)0x277865A734918AE6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAutoSessionFinishInstance()
		{
			Function.Call((Hash)0xBB51299166B844F3);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0xfd8112109a96877c()
		{
			Function.Call((Hash)0xFD8112109A96877C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5a91bcef74944e93(int _player, float _p1)
		{
			Function.Call((Hash)0x5A91BCEF74944E93, _player, _p1);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static int Hash_0xfb3205788f8afa3f()
		{
			return Function.Call<int>((Hash)0xFB3205788F8AFA3F);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0x335af56613ca0f49(int _p0)
		{
			Function.Call((Hash)0x335AF56613CA0F49, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static bool Hash_0x9e5a47744c0f0376(int _p0)
		{
			return Function.Call<bool>((Hash)0x9E5A47744C0F0376, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0xd3b6ebc6c3d77d44(int _p0)
		{
			Function.Call((Hash)0xD3B6EBC6C3D77D44, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0xa7670f7991099680(int _p0)
		{
			Function.Call((Hash)0xA7670F7991099680, _p0);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0x7673c0d2c5cdac55()
		{
			Function.Call((Hash)0x7673C0D2C5CDAC55);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0x3cbd6565d9c3b133(int _p0, int _p1, float _p2)
		{
			Function.Call((Hash)0x3CBD6565D9C3B133, _p0, _p1, _p2);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0x0d183d8490ee4366(int _p0, int _p1)
		{
			Function.Call((Hash)0x0D183D8490EE4366, _p0, _p1);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0xc1968045eeb563b7(int _p0)
		{
			Function.Call((Hash)0xC1968045EEB563B7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAutoSessionIsObjectCreationPaused()
		{
			return Function.Call<bool>((Hash)0x0E2C3AEE6CE603B7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0b6b4507ac5ea8b8()
		{
			return Function.Call<bool>((Hash)0x0B6B4507AC5EA8B8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsResettingPopulation()
		{
			return Function.Call<bool>((Hash)0x1BB50CD340A996E6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkResetPopulation(bool _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x101F538C25ABB39A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkDisableLeaveRemotePedBehind(bool _toggle)
		{
			Function.Call((Hash)0xC505036A35AFD01B, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3034c77c79a58880(bool _p0)
		{
			Function.Call((Hash)0x3034C77C79A58880, _p0);
		}
		/// <summary>
		/// Old name: _NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT
		/// </summary>
		public static void NetworkAllowRemoteAttachmentModification(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x267C78C60E806B9A, _entity, _toggle);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void NetworkShowChatRestrictionMsc(int _player)
		{
			Function.Call((Hash)0x6BFF5F84102DF80A, _player);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void NetworkShowPsnUgcRestriction()
		{
			Function.Call((Hash)0x5C497525F803486B);
		}
		/// <summary>
		/// Old name: _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
		/// </summary>
		public static bool NetworkIsConnectedViaRelay(int _player)
		{
			return Function.Call<bool>((Hash)0x16D3D49902F697BB, _player);
		}
		/// <summary>
		/// Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
		/// </summary>
		public static float NetworkGetAverageLatency(int _player)
		{
			return Function.Call<float>((Hash)0xD414BE129BB81B32, _player);
		}
		/// <summary>
		/// Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
		/// 
		/// Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
		/// </summary>
		public static float NetworkGetAveragePing(int _player)
		{
			return Function.Call<float>((Hash)0x0E3A041ED6AC2B45, _player);
		}
		/// <summary>
		/// Old name: _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
		/// </summary>
		public static float NetworkGetAveragePacketLoss(int _player)
		{
			return Function.Call<float>((Hash)0x350C23949E43686C, _player);
		}
		/// <summary>
		/// Old name: _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
		/// </summary>
		public static int NetworkGetNumUnackedReliables(int _player)
		{
			return Function.Call<int>((Hash)0xFF8FCF9FFC458A1C, _player);
		}
		/// <summary>
		/// Old name: _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
		/// </summary>
		public static int NetworkGetUnreliableResendCount(int _player)
		{
			return Function.Call<int>((Hash)0x3765C3A3E8192E10, _player);
		}
		/// <summary>
		/// Old name: _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
		/// </summary>
		public static int NetworkGetHighestReliableResendCount(int _player)
		{
			return Function.Call<int>((Hash)0x52C1EADAF7B10302, _player);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int NetworkDumpNetIfConfig()
		{
			return Function.Call<int>((Hash)0xAEDF1BC1C133D6E3);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static int NetworkGetNetStatisticsInfo()
		{
			return Function.Call<int>((Hash)0x6FD992C4A1C1B986);
		}
		/// <summary>
		/// Returns true if the passed value is less than 32.
		/// </summary>
		public static bool NetworkIsPlayerIndexValid(int _player)
		{
			return Function.Call<bool>((Hash)0x255A5EF65EDA9167, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPlayerWaypointIsActive(int _player)
		{
			return Function.Call<bool>((Hash)0xDCC4B7F7112E8AB7, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x455156f47dc6b78c(bool _p0)
		{
			Function.Call((Hash)0x455156F47DC6B78C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLocalPlayerDamageMultiplierForPlayer(int _player, float _damageMultiplier)
		{
			Function.Call((Hash)0xD041A32992A55F84, _player, _damageMultiplier);
		}
		/// <summary>
		/// Old name: _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
		/// </summary>
		public static void NetworkTriggerDamageEventForZeroDamage(int _entity, bool _p1)
		{
			Function.Call((Hash)0x0C8BC052AE87D744, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5cd3aad8ff9ed121(int _p0)
		{
			Function.Call((Hash)0x5CD3AAD8FF9ED121, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x51951de06c0d1c40(int _player, int _type)
		{
			Function.Call((Hash)0x51951DE06C0D1C40, _player, _type);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe3ab5eefcb6671a2(int _setting)
		{
			Function.Call((Hash)0xE3AB5EEFCB6671A2, _setting);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9b39b0555cc692b5()
		{
			Function.Call((Hash)0x9B39B0555CC692B5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfe53b1f8d43f19bf(int _player1, int _player2)
		{
			return Function.Call<int>((Hash)0xFE53B1F8D43F19BF, _player1, _player2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x862c5040f4888741(int _player1, int _player2)
		{
			return Function.Call<bool>((Hash)0x862C5040F4888741, _player1, _player2);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x2cd41ac000e6f611()
		{
			Function.Call((Hash)0x2CD41AC000E6F611);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xacc44768af229042()
		{
			Function.Call((Hash)0xACC44768AF229042);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7e300b5b86ab1d1a(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14)
		{
			Function.Call((Hash)0x7E300B5B86AB1D1A, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetUniqueIntForPlayer(int _player)
		{
			return Function.Call<int>((Hash)0x07F723401B9D921C, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x780a13f780a13f1b(bool _toggle)
		{
			Function.Call((Hash)0x780A13F780A13F1B, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsTrackedPlayerVisible(int _player, int _trackedPlayer)
		{
			return Function.Call<bool>((Hash)0xE525878A35B9EEBD, _player, _trackedPlayer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsAimCamActive(int _player)
		{
			return Function.Call<bool>((Hash)0x8E7CE19219669AEB, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAlert(uint _ctx, uint _lh, int _ec, int _h)
		{
			Function.Call((Hash)0x1BAA028F52EED310, _ctx, _lh, _ec, _h);
		}
		/// <summary>
		/// Note: this native was added in build 1311.23
		/// </summary>
		public static void Hash_0x19447fcae97704dc(uint _ctx, int _ec, bool _ex, bool _ro)
		{
			Function.Call((Hash)0x19447FCAE97704DC, _ctx, _ec, _ex, _ro);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x2c4e98dda475364f(string _p0)
		{
			Function.Call((Hash)0x2C4E98DDA475364F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3f0abae38a0515ad(int _p0, int _p1)
		{
			Function.Call((Hash)0x3F0ABAE38A0515AD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3f2ee18a3e294801(int _p0)
		{
			return Function.Call<int>((Hash)0x3F2EE18A3E294801, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSocialMatchmakingAllowed(bool _toggle)
		{
			Function.Call((Hash)0x777D0571A466B520, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetSocialMatchmakingAllowed()
		{
			return Function.Call<bool>((Hash)0xD0541EF28E9C4783);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkAwardHasReachedMaxclaim(int _p0)
		{
			return Function.Call<bool>((Hash)0xFBE782B3165AC8EC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x271f95e55c663b8b(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x271F95E55C663B8B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x64a36ba85ce01a81(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x64A36BA85CE01A81, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe10f2d7715ababec(int _p0)
		{
			return Function.Call<int>((Hash)0xE10F2D7715ABABEC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7a8e8df782b47eb0(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x7A8E8DF782B47EB0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x77b299e8799b1332(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x77B299E8799B1332, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x923346025512dfb7(int _p0)
		{
			return Function.Call<int>((Hash)0x923346025512DFB7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetXp()
		{
			return Function.Call<int>((Hash)0xDB438CC9BC6F4022);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetRank()
		{
			return Function.Call<int>((Hash)0x32C90CDFAF40514C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkSetRecentGamersEnabled(bool _toggle)
		{
			Function.Call((Hash)0x29FE035D35B8589C, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x273e04a3a7ad1f2d()
		{
			return Function.Call<bool>((Hash)0x273E04A3A7AD1F2D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkAddPlayerToRecentGamersList(int _player, int _p1)
		{
			Function.Call((Hash)0x157D8F3DE12B307F, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkRequestRecentGamerNames(int _p0, int _playerCount)
		{
			return Function.Call<bool>((Hash)0x6D206D383BB5F6B1, _p0, _playerCount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkIsRecentGamerNamesRequestInProgress()
		{
			return Function.Call<bool>((Hash)0x4664D213A0CCAF40);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkDidRecentGamerNamesRequestSucceed()
		{
			return Function.Call<bool>((Hash)0x12AEB56B489415C5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNumRecentGamers()
		{
			return Function.Call<int>((Hash)0x37A834AEC6A4F74A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NetworkGetRecentGamerNames(int _p0, int _p1, int _outData, int _dataSize)
		{
			return Function.Call<bool>((Hash)0xFEFCC345CE357453, _p0, _p1, _outData, _dataSize);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x49cf17a564918e8d()
		{
			Function.Call((Hash)0x49CF17A564918E8D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd637d327080cd86e(int _p0)
		{
			Function.Call((Hash)0xD637D327080CD86E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x564552c6af1eeab1()
		{
			Function.Call((Hash)0x564552C6AF1EEAB1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkActivityResetToIdle()
		{
			Function.Call((Hash)0x3FE141FDB990E3D1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void NetworkActivitySetCurrent(int _p0)
		{
			Function.Call((Hash)0x9ADAC065D9F6706F, _p0);
		}
		/// <summary>
		/// Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
		/// </summary>
		public static string NetworkGetRosTitleName()
		{
			return Function.Call<string>((Hash)0xAC6153A0722F524C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReportPlayer(int _player, int _reportType, string _description, string _horseName)
		{
			Function.Call((Hash)0xA197C35F73AC0F12, _player, _reportType, _description, _horseName);
		}
		// :###################: //
		// : namespace: OBJECT : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateObject(uint _modelHash, float _x, float _y, float _z, bool _isNetwork, bool _bScriptHostObj, bool _dynamic, bool _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0x509D5878EB39E842, _modelHash, _x, _y, _z, _isNetwork, _bScriptHostObj, _dynamic, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateObjectNoOffset(uint _modelHash, float _x, float _y, float _z, bool _isNetwork, bool _bScriptHostObj, bool _dynamic, bool _p7)
		{
			return Function.Call<int>((Hash)0x9A294B2138ABB884, _modelHash, _x, _y, _z, _isNetwork, _bScriptHostObj, _dynamic, _p7);
		}
		/// <summary>
		/// Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
		/// </summary>
		public static void DeleteObject(int _object)
		{
			Function.Call((Hash)0x931914268722C263, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PlaceObjectOnGroundProperly(int _object, bool _p1)
		{
			return Function.Call<bool>((Hash)0x58A850EAEE20FAA3, _object, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SlideObject(int _object, float _toX, float _toY, float _toZ, float _speedX, float _speedY, float _speedZ, bool _collision)
		{
			return Function.Call<bool>((Hash)0x2FDFF4107B8C1147, _object, _toX, _toY, _toZ, _speedX, _speedY, _speedZ, _collision);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectTargettable(int _object, bool _targettable)
		{
			Function.Call((Hash)0x8A7391690F5AFD81, _object, _targettable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectTargettable2(int _object, bool _targettable)
		{
			Function.Call((Hash)0x581EDBE56E8D62C9, _object, _targettable);
		}
		/// <summary>
		/// When p1 and p2 are true you can focus on the object (similar to when you focus a ped)
		/// </summary>
		public static void SetObjectTargettableFocus(int _object, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xA22712E8471AA08E, _object, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf6e88489b4e6ebe5(int _p0, int _p1)
		{
			Function.Call((Hash)0xF6E88489B4E6EBE5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe157a8a336c7f04a(int _p0, int _p1)
		{
			Function.Call((Hash)0xE157A8A336C7F04A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x46cbcf0e98a4e156(int _p0, int _p1)
		{
			Function.Call((Hash)0x46CBCF0E98A4E156, _p0, _p1);
		}
		/// <summary>
		/// isMission - if true doesn't return mission objects
		/// </summary>
		public static int GetClosestObjectOfType(float _x, float _y, float _z, float _radius, uint _modelHash, bool _isMission, bool _p6, bool _p7)
		{
			return Function.Call<int>((Hash)0xE143FA2249364369, _x, _y, _z, _radius, _modelHash, _isMission, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasObjectBeenBroken(int _p0)
		{
			return Function.Call<bool>((Hash)0x8ABFB70C49CC43E2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasClosestObjectOfTypeBeenBroken(float _p0, float _p1, float _p2, float _p3, uint _modelHash, int _p5)
		{
			return Function.Call<bool>((Hash)0x761B0E69AC4D007E, _p0, _p1, _p2, _p3, _modelHash, _p5);
		}
		/// <summary>
		/// Old name: _GET_OBJECT_OFFSET_FROM_COORDS
		/// </summary>
		public static Vector3 GetOffsetFromCoordAndHeadingInWorldCoords(float _xPos, float _yPos, float _zPos, float _heading, float _xOffset, float _yOffset, float _zOffset)
		{
			return Function.Call<Vector3>((Hash)0x163E252DE035A133, _xPos, _yPos, _zPos, _heading, _xOffset, _yOffset, _zOffset);
		}
		/// <summary>
		/// Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
		/// </summary>
		public static void AddDoorToSystemNew(uint _doorHash, bool _p1, bool _p2, bool _p3, int _threadId, int _p5, bool _p6)
		{
			Function.Call((Hash)0xD99229FE93B46286, _doorHash, _p1, _p2, _p3, _threadId, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDoorRegisteredWithNetwork(uint _doorHash)
		{
			return Function.Call<bool>((Hash)0xB5DED7B65C604FDF, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveDoorFromSystem(uint _doorHash)
		{
			Function.Call((Hash)0x464D8E1427156FE4, _doorHash);
		}
		/// <summary>
		/// Door lock states:
		/// enum eDoorState
		/// {
		/// 	DOORSTATE_INVALID = -1,
		/// 	DOORSTATE_UNLOCKED,
		/// 	DOORSTATE_LOCKED_UNBREAKABLE,
		/// 	DOORSTATE_LOCKED_BREAKABLE,
		/// 	DOORSTATE_HOLD_OPEN_POSITIVE,
		/// 	DOORSTATE_HOLD_OPEN_NEGATIVE
		/// };
		/// </summary>
		public static void DoorSystemSetDoorState(uint _doorHash, int _state)
		{
			Function.Call((Hash)0x6BAB9442830C7F53, _doorHash, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DoorSystemGetDoorState(uint _doorHash)
		{
			return Function.Call<int>((Hash)0x160AA1B32F6139B8, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DoorSystemSetAutomaticRate(uint _doorHash, float _rate)
		{
			Function.Call((Hash)0x03C27E13B42A0E82, _doorHash, _rate);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DoorSystemSetAutomaticDistance(uint _doorHash, float _distance)
		{
			Function.Call((Hash)0x9BA001CB45CBF627, _doorHash, _distance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb3b1546d23df8de1(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xB3B1546D23DF8DE1, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// Sets the ajar angle of a door.
		/// Ranges from -1.0 to 1.0, and 0.0 is closed / default.
		/// </summary>
		public static void DoorSystemSetOpenRatio(uint _doorHash, float _ajar, bool _forceUpdate)
		{
			Function.Call((Hash)0xB6E6FBA95C7324AC, _doorHash, _ajar, _forceUpdate);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3a77dae8b4fd7586(int _p0, int _p1)
		{
			Function.Call((Hash)0x3A77DAE8B4FD7586, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DoorSystemSetAbleToChangeOpenRatioWhileLocked(uint _doorHash, bool _p1)
		{
			Function.Call((Hash)0x1F1FABFE9B2A1254, _doorHash, _p1);
		}
		/// <summary>
		/// Returns true if door is alredy registered with owner
		/// </summary>
		public static bool IsDoorRegisteredWithOwner(uint _doorHash)
		{
			return Function.Call<bool>((Hash)0x4F89DAD4156BA145, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DoorSystemChangeScriptOwner(uint _doorHash)
		{
			Function.Call((Hash)0x985767F5FA45BC44, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float DoorSystemGetAutomaticRate(uint _doorHash)
		{
			return Function.Call<float>((Hash)0x8433E1954BE323FC, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6e2aa80bb0c03728(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x6E2AA80BB0C03728, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1bc47a9dedc8df5d(int _p0, int _p1)
		{
			Function.Call((Hash)0x1BC47A9DEDC8DF5D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float DoorSystemGetOpenRatio(uint _doorHash)
		{
			return Function.Call<float>((Hash)0x65499865FCA6E5EC, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7f458b543006c8fe(int _p0, int _p1)
		{
			Function.Call((Hash)0x7F458B543006C8FE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xacd4f9831dfad7f5(int _p0)
		{
			return Function.Call<int>((Hash)0xACD4F9831DFAD7F5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0c0a373d181bf900(int _p0)
		{
			Function.Call((Hash)0x0C0A373D181BF900, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa93f925f1942e434(int _p0, int _p1)
		{
			Function.Call((Hash)0xA93F925F1942E434, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4d8611dfe1126478(int _p0)
		{
			return Function.Call<int>((Hash)0x4D8611DFE1126478, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x57c242543b7b8fb9(int _p0, int _p1)
		{
			Function.Call((Hash)0x57C242543B7B8FB9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4ae07eba3462c5d5(int _p0, int _p1)
		{
			Function.Call((Hash)0x4AE07EBA3462C5D5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x22031584496cfb70(int _p0, int _p1)
		{
			Function.Call((Hash)0x22031584496CFB70, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc07b91b996c1de89(int _p0, int _p1)
		{
			Function.Call((Hash)0xC07B91B996C1DE89, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDoorRegisteredWithSystem(uint _doorHash)
		{
			return Function.Call<bool>((Hash)0xC153C43EA202C8C1, _doorHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDoorClosed(uint _doorHash)
		{
			return Function.Call<bool>((Hash)0xC531EE8A1145A149, _doorHash);
		}
		/// <summary>
		/// Params: p1 = 23 in R* Scripts
		/// </summary>
		public static int Hash_0x0943113e02322164(int _object, int _p1)
		{
			return Function.Call<int>((Hash)0x0943113E02322164, _object, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x614d0b4533f842d3(int _p0)
		{
			return Function.Call<int>((Hash)0x614D0B4533F842D3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DoorSystemForceShut(uint _doorHash, bool _p1)
		{
			Function.Call((Hash)0x276AAF0F1C7F2494, _doorHash, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xeba314768fb35d58(int _p0)
		{
			return Function.Call<int>((Hash)0xEBA314768FB35D58, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5230bf34eb0ec645(int _p0)
		{
			Function.Call((Hash)0x5230BF34EB0EC645, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesObjectOfTypeExistAtCoords(float _x, float _y, float _z, float _radius, uint _hash, bool _p5)
		{
			return Function.Call<bool>((Hash)0xBFA48E2FF417213F, _x, _y, _z, _radius, _hash, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPointInAngledArea(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9, bool _p10, bool _p11)
		{
			return Function.Call<bool>((Hash)0x2A70BAE8883E4C81, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectAllowLowLodBuoyancy(int _object, bool _toggle)
		{
			Function.Call((Hash)0x4D89D607CB3DD1D2, _object, _toggle);
		}
		/// <summary>
		/// Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
		/// 
		/// Other parameters seem to be unknown.
		/// 
		/// p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
		/// p3: seems similar to p2
		/// p4: makes obj fall slower the higher the value
		/// p5: similar to p4
		/// </summary>
		public static void SetObjectPhysicsParams(int _object, float _weight, float _p2, float _p3, float _p4, float _p5, float _gravity, float _p7, float _p8, float _p9, float _p10, float _buoyancy)
		{
			Function.Call((Hash)0xF6DF6E90DE7DF90F, _object, _weight, _p2, _p3, _p4, _p5, _gravity, _p7, _p8, _p9, _p10, _buoyancy);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetObjectFragmentDamageHealth(int _p0, bool _p1)
		{
			return Function.Call<float>((Hash)0xB6FBFD079B8D0596, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x235c863da77bd88d(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x235C863DA77BD88D, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(int _object, bool _toggle)
		{
			Function.Call((Hash)0x406137F8EF90EAF5, _object, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BreakObjectFragmentChild(int _object, int _p1, bool _p2)
		{
			Function.Call((Hash)0xE7E4C198B0185900, _object, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BreakAllObjectFragmentBones(int _object)
		{
			Function.Call((Hash)0x8462BE2341A55B6F, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaaacf33cbf9b990a(int _p0, int _p1)
		{
			Function.Call((Hash)0xAAACF33CBF9B990A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DamageBoneOnProp(int _object, int _bone)
		{
			Function.Call((Hash)0xE4EFB315BCD2A838, _object, _bone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FixObjectFragment(int _object)
		{
			Function.Call((Hash)0xF9C1681347C8BD15, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x58de624fa7fb0e7f(int _p0)
		{
			return Function.Call<int>((Hash)0x58DE624FA7FB0E7F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x491439aef410a2fc(int _p0)
		{
			Function.Call((Hash)0x491439AEF410A2FC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectBreakScale(int _object, float _scale)
		{
			Function.Call((Hash)0xFFB99FFD17F65889, _object, _scale);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xceab54f4632c6ef6(int _p0, int _p1)
		{
			Function.Call((Hash)0xCEAB54F4632C6EF6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TrackObjectVisibility(int _object)
		{
			Function.Call((Hash)0xB252BC036B525623, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsObjectVisible(int _object)
		{
			return Function.Call<bool>((Hash)0x8B32ACE6326A7546, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectTakesDamageFromCollidingWithBuildings(int _object, bool _enabled)
		{
			Function.Call((Hash)0xEB6F1A9B5510A5D2, _object, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AllowDamageEventsForNonNetworkedObjects(bool _enabled)
		{
			Function.Call((Hash)0xE2B3B852B537C398, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6579860a5558524a(int _p0, int _p1)
		{
			Function.Call((Hash)0x6579860A5558524A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdfa1237f5228263f(int _p0, int _p1)
		{
			Function.Call((Hash)0xDFA1237F5228263F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetLightIntensityFromObject(int _object)
		{
			return Function.Call<float>((Hash)0xFA3B61EC249B4674, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLightIntensityForObject(int _object, float _lightIntensity)
		{
			Function.Call((Hash)0xF49574E2332A8F06, _object, _lightIntensity);
		}
		/// <summary>
		/// Params: value = 0.0 - 586.67 (?)
		/// </summary>
		public static void SetLightTranslucencyForObject(int _object, float _value)
		{
			Function.Call((Hash)0x63E39F09310F481F, _object, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLightScatteringDisabledForObject(int _object, bool _disable)
		{
			Function.Call((Hash)0x04D1D4E411CE52D0, _object, _disable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7fcd49388bc9b775(int _p0, int _p1)
		{
			Function.Call((Hash)0x7FCD49388BC9B775, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfa99e8e575f2fef8(int _p0)
		{
			return Function.Call<int>((Hash)0xFA99E8E575F2FEF8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRayfireMapObject(float _x, float _y, float _z, float _radius, string _name)
		{
			return Function.Call<int>((Hash)0xB48FCED898292E52, _x, _y, _z, _radius, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStateOfRayfireMapObject(int _object, int _state)
		{
			Function.Call((Hash)0x5C29F698D404C5E1, _object, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetStateOfRayfireMapObject(int _object)
		{
			return Function.Call<int>((Hash)0x899BA936634A322E, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesRayfireMapObjectExist(int _object)
		{
			return Function.Call<bool>((Hash)0x52AF537A0C5B8AAD, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetRayfireMapObjectAnimPhase(int _object)
		{
			return Function.Call<float>((Hash)0x260EE4FDBDF4DB01, _object);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
		/// </summary>
		public static int CreatePickup(uint _pickupHash, float _x, float _y, float _z, int _flags, int _p5, bool _p6, uint _modelHash, int _p8, float _p9, int _p10)
		{
			return Function.Call<int>((Hash)0xFBA08C503DD5FA58, _pickupHash, _x, _y, _z, _flags, _p5, _p6, _modelHash, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePickupRotate(uint _pickupHash, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, int _flags, int _p8, int _p9, bool _p10, uint _modelHash, int _p12, float _p13, int _p14)
		{
			return Function.Call<int>((Hash)0x891804727E0A98B7, _pickupHash, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _flags, _p8, _p9, _p10, _modelHash, _p12, _p13, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateAmbientPickup(uint _pickupHash, float _x, float _y, float _z, int _flags, int _value, uint _modelHash, bool _p7, bool _p8, int _p9, float _p10)
		{
			return Function.Call<int>((Hash)0x673966A0C0FD7171, _pickupHash, _x, _y, _z, _flags, _value, _modelHash, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePortablePickup(uint _pickupHash, float _x, float _y, float _z, bool _placeOnGround, uint _modelHash)
		{
			return Function.Call<int>((Hash)0x2EAF1FDB2FB55698, _pickupHash, _x, _y, _z, _placeOnGround, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachPortablePickupToPed(int _pickupObject, int _ped)
		{
			Function.Call((Hash)0x8DC39368BDD57755, _pickupObject, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachPortablePickupFromPed(int _pickupObject)
		{
			Function.Call((Hash)0xCF463D1E9A0AECB1, _pickupObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HidePickupObject(int _pickupObject, bool _toggle)
		{
			Function.Call((Hash)0x2777150CC7D9365E, _pickupObject, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMaxNumPortablePickupsCarriedByPlayer(uint _modelHash, int _p1)
		{
			Function.Call((Hash)0x0BF3B3BD47D79C08, _modelHash, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3e2616e7ea539480(int _p0)
		{
			return Function.Call<int>((Hash)0x3E2616E7EA539480, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLocalPlayerCanCollectPortablePickups(bool _toggle)
		{
			Function.Call((Hash)0x78857FC65CADB909, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetSafePickupCoords(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<Vector3>((Hash)0x6E16BC2503FF1FF0, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetPickupCoords(int _pickup)
		{
			return Function.Call<Vector3>((Hash)0x225B8B35C88029B3, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAllPickupsOfType(uint _pickupHash)
		{
			Function.Call((Hash)0x27F9D613092159CF, _pickupHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPickupBeenCollected(int _pickup)
		{
			return Function.Call<bool>((Hash)0x80EC48E6679313F9, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePickup(int _pickup)
		{
			Function.Call((Hash)0x3288D8ACAECD2AB2, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupDoNotAutoPlaceOnGround(int _pickupObject)
		{
			Function.Call((Hash)0x634C19521485AB25, _pickupObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPickupExist(int _pickup)
		{
			return Function.Call<bool>((Hash)0xAFC1CA75AD4074D1, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPickupObjectExist(int _pickupObject)
		{
			return Function.Call<bool>((Hash)0xD9EFB6DBF7DAAEA3, _pickupObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPickupObject(int _pickup)
		{
			return Function.Call<int>((Hash)0x5099BC55630B25AE, _pickup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsObjectAPortablePickup(int _object)
		{
			return Function.Call<bool>((Hash)0x0378C08504160D0D, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPickupTypeValid(uint _pickupHash)
		{
			return Function.Call<bool>((Hash)0x007BD043587F7C82, _pickupHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPickupOfTypeExistInArea(uint _pickupHash, float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0xF9C36251F6E48E33, _pickupHash, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupRegenerationTime(int _pickup, int _duration)
		{
			Function.Call((Hash)0x78015C9B4B3ECC9D, _pickup, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForcePickupRegenerate(int _p0)
		{
			Function.Call((Hash)0x758A5C1B3B1E1990, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x94f3d956bfaeae18(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x94F3D956BFAEAE18, _p0, _p1, _p2);
		}
		/// <summary>
		/// Maximum amount of pickup models that can be disallowed is 10.
		/// 
		/// Old name: _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
		/// </summary>
		public static void SetLocalPlayerPermittedToCollectPickupsWithModel(uint _modelHash, bool _toggle)
		{
			Function.Call((Hash)0x88EAEC617CD26926, _modelHash, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BlockPickupFromPlayerCollection(int _p0, int _p1)
		{
			Function.Call((Hash)0xB8F5062070BB6DBD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupNotLootable(int _p0, int _p1)
		{
			Function.Call((Hash)0x92E87F60F21A0C3A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1f5e07e14a86fafc(int _p0)
		{
			Function.Call((Hash)0x1F5E07E14A86FAFC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTeamPickupObject(int _object, int _p1, bool _p2)
		{
			Function.Call((Hash)0x53E0DF1A2A3CF0CA, _object, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9f52ad67d1a91bad(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x9F52AD67D1A91BAD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PreventCollectionOfPortablePickup(int _object, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x92AEFB5F6E294023, _object, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupGenerationRangeMultiplier(float _multiplier)
		{
			Function.Call((Hash)0x318516E02DE3ECE2, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupUncollectable(int _p0, int _p1)
		{
			Function.Call((Hash)0x4A8CB328CD6F1C9B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupHiddenWhenUncollectable(int _p0, int _p1)
		{
			Function.Call((Hash)0x81218CE01B672219, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientPickupLifetime(int _lifetime)
		{
			Function.Call((Hash)0xAC9AE68F0A463752, _lifetime);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupParticleFxSpawn(int _p0, int _p1)
		{
			Function.Call((Hash)0xEB9740A38FD6D634, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupParticleFxHighlight(int _p0, int _p1)
		{
			Function.Call((Hash)0x1607C7D9B3021DF5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SuppressPickupRewardType(int _rewardType, bool _suppress)
		{
			Function.Call((Hash)0xF92099527DB8E2A7, _rewardType, _suppress);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x20135af9c10d2a3d(int _p0)
		{
			return Function.Call<int>((Hash)0x20135AF9C10D2A3D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPickupCollectableOnMount(int _object)
		{
			Function.Call((Hash)0x00EE08603EADEE92, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xde116ecffdd4b997(int _p0, int _p1)
		{
			Function.Call((Hash)0xDE116ECFFDD4B997, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetWeaponTypeFromPickupType(uint _pickupHash)
		{
			return Function.Call<uint>((Hash)0x08F96CA6C551AD51, _pickupHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetAmmoTypeFromPickupType(uint _pickupHash)
		{
			return Function.Call<uint>((Hash)0x44B09A23D728045A, _pickupHash);
		}
		/// <summary>
		/// Alt name: _SET_OBJECT_TINT
		/// 
		/// Old name: _SET_OBJECT_TEXTURE_VARIATION
		/// </summary>
		public static void SetObjectTintIndex(int _object, int _textureVariation)
		{
			Function.Call((Hash)0x971DA0055324D033, _object, _textureVariation);
		}
		/// <summary>
		/// Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
		/// </summary>
		public static float GetObjectLightIntensity(int _object)
		{
			return Function.Call<float>((Hash)0x3397CD4E0353DFBA, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectBurnOpacity(int _object, float _opacity)
		{
			Function.Call((Hash)0x7D7285EFEAB5AF15, _object, _opacity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectBurnIntensity(int _object, float _intensity)
		{
			Function.Call((Hash)0xC8E21C1677DC5E6F, _object, _intensity);
		}
		/// <summary>
		/// Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
		/// </summary>
		public static void SetObjectBurnLevel(int _object, float _burnLevel, bool _affectAsh)
		{
			Function.Call((Hash)0x2797C633DCDBBAC5, _object, _burnLevel, _affectAsh);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9a74a9cadfa8a598(int _p0)
		{
			Function.Call((Hash)0x9A74A9CADFA8A598, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetObjectVelocity(int _object)
		{
			Function.Call((Hash)0xF40AB58D83C35027, _object);
		}
		/// <summary>
		/// p2 is usually the same as speed parameter
		/// </summary>
		public static void SetObjectBurnSpeed(int _object, float _speed, float _p2)
		{
			Function.Call((Hash)0x646564A3B7DF68F8, _object, _speed, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcbfbd38f2e0a263b(int _p0, int _p1)
		{
			Function.Call((Hash)0xCBFBD38F2E0A263B, _p0, _p1);
		}
		/// <summary>
		/// Old name: _GET_PICKUP_HASH
		/// </summary>
		public static uint ConvertOldPickupTypeToNew(uint _pickupHash)
		{
			return Function.Call<uint>((Hash)0x5EAAD83F8CFB4575, _pickupHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetForceObjectThisFrame(float _x, float _y, float _z, float _p3)
		{
			Function.Call((Hash)0xF538081986E49E9D, _x, _y, _z, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd91e55b6c005eb09(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xD91E55B6C005EB09, _p0, _p1);
		}
		/// <summary>
		/// Old name: _MARK_OBJECT_FOR_DELETION
		/// </summary>
		public static void OnlyCleanUpObjectWhenOutOfRange(int _object)
		{
			Function.Call((Hash)0xADBE4809F19F927A, _object);
		}
		/// <summary>
		/// _SET_OBJECT_*
		/// </summary>
		public static void Hash_0xcaaf2bccfef37f77(int _object, int _p1)
		{
			Function.Call((Hash)0xCAAF2BCCFEF37F77, _object, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x08c5825a2932ea7b(int _p0)
		{
			return Function.Call<int>((Hash)0x08C5825A2932EA7B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7d4411d6736cd295(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x7D4411D6736CD295, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x250ebb11e81a10be(int _p0)
		{
			return Function.Call<int>((Hash)0x250EBB11E81A10BE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2bf1953c0c21ac88(int _p0)
		{
			return Function.Call<int>((Hash)0x2BF1953C0C21AC88, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CreateObjectSkeleton(int _object)
		{
			return Function.Call<bool>((Hash)0xB6CBD40F8EA69E8A, _object);
		}
		/// <summary>
		/// _PRE* or _Q* or _RE*
		/// </summary>
		public static void MakeItemCarriable(int _object)
		{
			Function.Call((Hash)0x1461DF6DB886BE3F, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf65ede5d02a7a760(int _p0, int _p1)
		{
			Function.Call((Hash)0xF65EDE5D02A7A760, _p0, _p1);
		}
		/// <summary>
		/// Sets object as auto-jumpable by horse.
		/// </summary>
		public static void SetAutoJumpableByHorse(int _object, bool _p1)
		{
			Function.Call((Hash)0x98D2D9C053A1F449, _object, _p1);
		}
		/// <summary>
		/// Sets object as not jumpable by horse.
		/// </summary>
		public static void SetNotJumpableByHorse(int _object, bool _p1)
		{
			Function.Call((Hash)0xE1C708BA4885796B, _object, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetObjectKickable(int _object, bool _kickable)
		{
			Function.Call((Hash)0xB7017DA4D498269F, _object, _kickable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCustomTexturesOnObject(int _object, uint _txdHash, int _p2, int _p3)
		{
			Function.Call((Hash)0xE124889AE0521FCF, _object, _txdHash, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd503d6f0986d58bc(int _p0, int _p1)
		{
			Function.Call((Hash)0xD503D6F0986D58BC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaee6c800e124cfe1(int _p0, int _p1)
		{
			Function.Call((Hash)0xAEE6C800E124CFE1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3df1a0a58498e209(int _object, int _p1)
		{
			Function.Call((Hash)0x3DF1A0A58498E209, _object, _p1);
		}
		// :################: //
		// : namespace: PAD : //
		// :################: //
		/// <summary>
		/// Sets the current control context. Must be called every frame.
		/// 
		/// context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
		/// For more information, see common:/data/control/settings.meta
		/// https://github.com/femga/rdr3_discoveries/tree/master/Controls
		/// </summary>
		public static void SetControlContext(int _p0, uint _context)
		{
			Function.Call((Hash)0x2804658EB7D8A50B, _p0, _context);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xddceb0f26c89c00f(int _p0)
		{
			return Function.Call<int>((Hash)0xDDCEB0F26C89C00F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsControlActionValid(uint _action, int _control)
		{
			return Function.Call<bool>((Hash)0xBC0884BC590951C7, _action, _control);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsControlEnabled(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0x1CEA6BFDF248E5D9, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsControlPressed(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0xF3A21BCD95725A4A, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsControlReleased(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0x648EE3E7F38877DD, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsControlJustPressed(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0x580417101DDB492F, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsControlJustReleased(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0x50F940259D3841E6, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetControlValue(int _control, uint _action)
		{
			return Function.Call<int>((Hash)0xD95E79E8686D2C27, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetControlNormal(int _control, uint _action)
		{
			return Function.Call<float>((Hash)0xEC3C9B8D5327B563, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetControlUnboundNormal(int _control, uint _action)
		{
			return Function.Call<float>((Hash)0x5B84D09CEC5209C5, _control, _action);
		}
		/// <summary>
		/// This is for simulating player input.
		/// value is a float value from 0 - 1
		/// 
		/// control: see IS_CONTROL_ENABLED
		/// 
		/// Old name: _SET_CONTROL_NORMAL
		/// </summary>
		public static bool SetControlValueNextFrame(int _control, uint _action, float _value)
		{
			return Function.Call<bool>((Hash)0xE8A25867FBA3B05E, _control, _action, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDisabledControlPressed(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0xE2587F8CBBD87B1D, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDisabledControlJustPressed(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0x91AEF906BCA88877, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDisabledControlJustReleased(int _control, uint _action)
		{
			return Function.Call<bool>((Hash)0x305C8DCD79DA8B0F, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetDisabledControlNormal(int _control, uint _action)
		{
			return Function.Call<float>((Hash)0x11E65974A982637C, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetDisabledControlUnboundNormal(int _control, uint _action)
		{
			return Function.Call<float>((Hash)0x4F8A26A890FD62FB, _control, _action);
		}
		/// <summary>
		/// Returns time in ms since last input.
		/// </summary>
		public static int GetControlHowLongAgo(int _control)
		{
			return Function.Call<int>((Hash)0xD7D22F5592AED8BA, _control);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetDisabledControlHowLongAgo(int _control)
		{
			return Function.Call<int>((Hash)0x771DFCB24D19C2F6, _control);
		}
		/// <summary>
		/// padIndex is not used
		/// 
		/// Old name: _IS_USING_KEYBOARD
		/// </summary>
		public static bool IsUsingKeyboardAndMouse(int _control)
		{
			return Function.Call<bool>((Hash)0xA571D46727E2B718, _control);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x43f35ddb2905d945(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x43F35DDB2905D945, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbd629c1c4f501c80(int _p0)
		{
			return Function.Call<int>((Hash)0xBD629C1C4F501C80, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HaveControlsChanged(int _control)
		{
			return Function.Call<bool>((Hash)0x6CD79468A1E595C6, _control);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// 
		/// Old name: _SET_CONTROL_GROUP_COLOR
		/// </summary>
		public static void SetControlLightEffectColor(int _control, int _red, int _green, int _blue)
		{
			Function.Call((Hash)0x8290252FFF36ACB5, _control, _red, _green, _blue);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ClearControlLightEffect(int _control)
		{
			Function.Call((Hash)0xCB0360EFEFB2580D, _control);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetControlLightEffectFlashingColor(int _control, int _red, int _green, int _blue)
		{
			Function.Call((Hash)0xA45884DB10EC7EE3, _control, _red, _green, _blue);
		}
		/// <summary>
		/// Old name: SET_PAD_SHAKE
		/// </summary>
		public static void SetControlShake(int _control, int _duration, int _frequency)
		{
			Function.Call((Hash)0x48B3886C1358D0D5, _control, _duration, _frequency);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetControlTriggerShake(int _control, int _leftDuration, int _leftFrequency, int _rightDuration, int _rightFrequency)
		{
			Function.Call((Hash)0x14D29BB12D47F68C, _control, _leftDuration, _leftFrequency, _rightDuration, _rightFrequency);
		}
		/// <summary>
		/// Old name: STOP_PAD_SHAKE
		/// </summary>
		public static void StopControlShake(int _control)
		{
			Function.Call((Hash)0x38C16A305E8CDC8D, _control);
		}
		/// <summary>
		/// Old name: SET_PAD_SHAKE_SUPPRESSED_ID
		/// </summary>
		public static void SetControlShakeSuppressedId(int _control, int _uniqueId)
		{
			Function.Call((Hash)0xF239400E16C23E08, _control, _uniqueId);
		}
		/// <summary>
		/// Old name: _CLEAR_SUPPRESSED_PAD_RUMBLE
		/// </summary>
		public static void ClearControlShakeSuppressedId(int _control)
		{
			Function.Call((Hash)0xA0CEFCEA390AAB9B, _control);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsLookInverted()
		{
			return Function.Call<bool>((Hash)0x77B612531280010D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInputExclusive(int _control, uint _action)
		{
			Function.Call((Hash)0xEDE476E5EE29EDB1, _control, _action);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableControlAction(int _control, uint _action, bool _disableRelatedActions)
		{
			Function.Call((Hash)0xFE99B66D079CF6BC, _control, _action, _disableRelatedActions);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableControlAction(int _control, uint _action, bool _enableRelatedActions)
		{
			Function.Call((Hash)0x351220255D64C155, _control, _action, _enableRelatedActions);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableAllControlActions(int _control)
		{
			Function.Call((Hash)0x5F4B6931816E599B, _control);
		}
		/// <summary>
		/// rumbleCurve: common_0/data/rumblecurves.meta
		/// </summary>
		public static void Hash_0x5f217bc1190503d8(string _rumbleCurve, float _p1)
		{
			Function.Call((Hash)0x5F217BC1190503D8, _rumbleCurve, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x709ba8c08c5c008d()
		{
			Function.Call((Hash)0x709BA8C08C5C008D);
		}
		/// <summary>
		/// _IS_R* - _IS_S*
		/// </summary>
		public static bool Hash_0x1252c029fc8ebb4d()
		{
			return Function.Call<bool>((Hash)0x1252C029FC8EBB4D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x52c68e92d6e23add(int _p0)
		{
			Function.Call((Hash)0x52C68E92D6E23ADD, _p0);
		}
		// :#####################: //
		// : namespace: PATHFIND : //
		// :#####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRoadsInArea(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xBF1A602B5BA52FEE, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRoadsInAngledArea(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0x1A5AA1208AF5DB59, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRoadsInVolume(int _volume, bool _p1, bool _p2, bool _p3)
		{
			Function.Call((Hash)0xC1799FAFD2FDF52B, _volume, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetRoadsInVolume(int _volume, bool _p1)
		{
			Function.Call((Hash)0xD17672447692478E, _volume, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRoadsBackToOriginal(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x1EE7063B80FFC77C, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRoadsBackToOriginalInAngledArea(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0x0027501B9F3B407E, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xafe2ae66f6251c66(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xAFE2AE66F6251C66, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4358bcf14c91761c(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x4358BCF14C91761C, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb03944057fd735ba(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xB03944057FD735BA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6c3f12eceb6d2e2a(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x6C3F12ECEB6D2E2A, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5a4e1a41e3a02ad0(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x5A4E1A41E3A02AD0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetClosestVehicleNode(float _x, float _y, float _z, Vector3 _outPosition, int _nodeType, float _p5, float _p6)
		{
			return Function.Call<bool>((Hash)0x240A18690AE96513, _x, _y, _z, _outPosition, _nodeType, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xca27a86caa4e98ed(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0xCA27A86CAA4E98ED, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetClosestVehicleNodeWithHeading(float _x, float _y, float _z, Vector3 _outPosition, float _outHeading, int _nodeType, float _p6, int _p7)
		{
			return Function.Call<bool>((Hash)0x23CFFD4CCB243354, _x, _y, _z, _outPosition, _outHeading, _nodeType, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetNthClosestVehicleNode(float _x, float _y, float _z, int _nthClosest, Vector3 _outPosition, int _unknown1, float _unknown2, int _unknown3)
		{
			return Function.Call<bool>((Hash)0x5A6D8DF6FBC5D0C4, _x, _y, _z, _nthClosest, _outPosition, _unknown1, _unknown2, _unknown3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNthClosestVehicleNodeId(float _x, float _y, float _z, int _nth, int _nodetype, float _p5, float _p6)
		{
			return Function.Call<int>((Hash)0x116443008E5CEFC3, _x, _y, _z, _nth, _nodetype, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetNthClosestVehicleNodeWithHeading(float _x, float _y, float _z, int _nthClosest, Vector3 _outPosition, float _heading, int _unknown1, int _unknown2, float _unknown3, float _unknown4)
		{
			return Function.Call<bool>((Hash)0x591B40D4390DB54A, _x, _y, _z, _nthClosest, _outPosition, _heading, _unknown1, _unknown2, _unknown3, _unknown4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetNthClosestVehicleNodeIdWithHeading(float _x, float _y, float _z, int _nthClosest, Vector3 _outPosition, float _outHeading, int _p6, float _p7, float _p8)
		{
			return Function.Call<bool>((Hash)0x4114EAA8A7F7766D, _x, _y, _z, _nthClosest, _outPosition, _outHeading, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetNthClosestVehicleNodeFavourDirection(float _x, float _y, float _z, float _desiredX, float _desiredY, float _desiredZ, int _nthClosest, Vector3 _outPosition, float _outHeading, int _nodetype, int _p10, int _p11)
		{
			return Function.Call<bool>((Hash)0x2FAC235A6062F14A, _x, _y, _z, _desiredX, _desiredY, _desiredZ, _nthClosest, _outPosition, _outHeading, _nodetype, _p10, _p11);
		}
		/// <summary>
		/// Returns true if the id is non zero.
		/// </summary>
		public static bool IsVehicleNodeIdValid(int _vehicleNodeId)
		{
			return Function.Call<bool>((Hash)0x5829A02AF4F0B3CB, _vehicleNodeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleNodePosition(int _nodeId, Vector3 _outPosition)
		{
			Function.Call((Hash)0x8E8D72FF24DEE1FB, _nodeId, _outPosition);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleNodeIsSwitchedOff(int _nodeID)
		{
			return Function.Call<bool>((Hash)0x28533DBDDF7C2C97, _nodeID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetClosestRoad(float _x, float _y, float _z, float _p3, int _p4, Vector3 _p5, Vector3 _p6, int _p7, int _p8, float _p9, bool _p10)
		{
			return Function.Call<int>((Hash)0x132F52BBA570FE92, _x, _y, _z, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreNodesLoadedForArea(float _x1, float _y1, float _x2, float _y2)
		{
			return Function.Call<bool>((Hash)0xF7B79A50B905A30D, _x1, _y1, _x2, _y2);
		}
		/// <summary>
		/// Old name: REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
		/// </summary>
		public static bool RequestPathNodesInAreaThisFrame(float _x1, float _y1, float _x2, float _y2)
		{
			return Function.Call<bool>((Hash)0x07FB139B592FA687, _x1, _y1, _x2, _y2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetRandomVehicleNode(float _x, float _y, float _z, float _radius, bool _p4, bool _p5, bool _p6, Vector3 _outPosition, int _nodeId)
		{
			return Function.Call<bool>((Hash)0x93E0DB8440B73A7D, _x, _y, _z, _radius, _p4, _p5, _p6, _outPosition, _nodeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetSpawnDataForRoadNode(int _nodeId, float _x, float _y, float _z, Vector3 _outCoords, float _heading)
		{
			Function.Call((Hash)0xA3791B915B8B84C6, _nodeId, _x, _y, _z, _outCoords, _heading);
		}
		/// <summary>
		/// Gets a value indicating whether the specified position is on a road.
		/// </summary>
		public static bool IsPointOnRoad(float _x, float _y, float _z, int _vehicle)
		{
			return Function.Call<bool>((Hash)0x125BF4ABFC536B09, _x, _y, _z, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathsInArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _unknown, int _p7)
		{
			Function.Call((Hash)0x34F060F4BF92E018, _x1, _y1, _z1, _x2, _y2, _z2, _unknown, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe5ef9de716ff737e(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xE5EF9DE716FF737E, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetSafeCoordForPed(float _x, float _y, float _z, bool _onGround, Vector3 _outPosition, int _flags)
		{
			return Function.Call<bool>((Hash)0xB61C8E878A4199CA, _x, _y, _z, _onGround, _outPosition, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathsBackToOriginal(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xE04B48F2CC926253, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcf213a5fc3abfc08(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xCF213A5FC3ABFC08, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddNavmeshRequiredRegion(float _x, float _y, float _radius)
		{
			Function.Call((Hash)0x387EAD7EE42F6685, _x, _y, _radius);
		}
		/// <summary>
		/// Returns whether navmesh for the region is loaded.
		/// </summary>
		public static bool IsNavmeshLoadedInArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			return Function.Call<bool>((Hash)0xF813C7E63F9062A5, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumNavmeshesExistingInArea(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5)
		{
			return Function.Call<int>((Hash)0x01708E8DD3FF8C65, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NavmeshActivateSwap(string _name)
		{
			return Function.Call<bool>((Hash)0x7C334FF4D9215912, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NavmeshDeactivateSwap(string _name)
		{
			return Function.Call<bool>((Hash)0x527B97C203BB8606, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NavmeshIsSwapActive(string _name)
		{
			return Function.Call<bool>((Hash)0x5AC0944C156E5F44, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NavmeshDoesSwapExist(string _name)
		{
			return Function.Call<bool>((Hash)0x495CFAB2924237C7, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5a3b54addf5472a3(string _p0)
		{
			return Function.Call<int>((Hash)0x5A3B54ADDF5472A3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa33914b00ca55756(string _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xA33914B00CA55756, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool NavmeshAssignNavmeshToVehicle(int _vehicle, string _navMeshName)
		{
			return Function.Call<bool>((Hash)0x44026E3DB3CED602, _vehicle, _navMeshName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddNavmeshBlockingObject(float _p0, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, bool _p7, int _p8)
		{
			return Function.Call<int>((Hash)0xFCD5C8E06E502F5A, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveNavmeshBlockingObject(int _p0)
		{
			Function.Call((Hash)0x46399A7895957C0E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesNavmeshBlockingObjectExist(int _p0)
		{
			return Function.Call<bool>((Hash)0x0EAEB0DB4B132399, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AddNavmeshBlockingVolume(int _volume, int _flags)
		{
			return Function.Call<bool>((Hash)0x19C7567D2F2287D6, _volume, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveNavmeshBlockingVolume(int _volume)
		{
			Function.Call((Hash)0x2C87C3E1C7B96EE2, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesNavmeshBlockingVolumeExist(int _volume)
		{
			return Function.Call<bool>((Hash)0xDE0EA444735C1368, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6dad6630ae4a74cb(int _p0, int _p1)
		{
			Function.Call((Hash)0x6DAD6630AE4A74CB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NavmeshRequestPath(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			return Function.Call<int>((Hash)0x348F211CA2404039, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x661bb1e1ff77742d(int _p0)
		{
			return Function.Call<int>((Hash)0x661BB1E1FF77742D, _p0);
		}
		/// <summary>
		/// Returns eNavMeshQueryStatus
		/// enum eNavMeshQueryStatus
		/// {
		/// 	QS_NOT_FOUND,
		/// 	QS_COMPLETE,
		/// 	QS_PENDING
		/// };
		/// </summary>
		public static int NavmeshQueryStatus(int _p0)
		{
			return Function.Call<int>((Hash)0x3A0F82F6EE2291C8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8800776e410eb669(int _p0)
		{
			return Function.Call<int>((Hash)0x8800776E410EB669, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf61cfedeab627bfa(int _p0)
		{
			return Function.Call<int>((Hash)0xF61CFEDEAB627BFA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd470725e0703d22f(int _p0)
		{
			return Function.Call<int>((Hash)0xD470725E0703D22F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x430f8319ae56c8a9(int _p0, int _p1)
		{
			return Function.Call<Vector3>((Hash)0x430F8319AE56C8A9, _p0, _p1);
		}
		/// <summary>
		/// Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
		/// </summary>
		public static float GetApproxFloorForPoint(float _x, float _y)
		{
			return Function.Call<float>((Hash)0x336511A34F2E5185, _x, _y);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientPedRangeMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0x0B919E1FB47CC4E0, _multiplier);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetIgnoreNoGpsFlag(bool _toggle)
		{
			Function.Call((Hash)0x72751156E7678833, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetGpsBlipRouteLength()
		{
			return Function.Call<int>((Hash)0xBBB45C3CF5C8AA85);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xefc535c9faf563b3(int _p0)
		{
			return Function.Call<int>((Hash)0xEFC535C9FAF563B3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x665b21666351cb37(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x665B21666351CB37, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetGpsBlipRouteFound()
		{
			return Function.Call<bool>((Hash)0x869DAACBBE9FA006);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x54f4d7b6670fbb5a(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x54F4D7B6670FBB5A, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x34c9af25649172d0(int _p0)
		{
			Function.Call((Hash)0x34C9AF25649172D0, _p0);
		}
		/// <summary>
		/// GPS disabled zone: p1 = 0
		/// Clearing GPS disabled zone: p1 = 1
		/// </summary>
		public static void Hash_0xf2a2177ac848b3a8(int _volume, int _p1, int _p2)
		{
			Function.Call((Hash)0xF2A2177AC848B3A8, _volume, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4bdebea5702b97a9(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x4BDEBEA5702B97A9, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x264e9a5cd78c338f(int _p0)
		{
			Function.Call((Hash)0x264E9A5CD78C338F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x869a7015bd4606e9(int _p0)
		{
			Function.Call((Hash)0x869A7015BD4606E9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SimulatedRouteCreate(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _p6)
		{
			return Function.Call<int>((Hash)0xFD5BB35AAB83FD48, _x1, _y1, _z1, _x2, _y2, _z2, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SimulatedRouteDelete(int _p0)
		{
			Function.Call((Hash)0x4907D0E4FB26EE65, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SimulatedRouteExists(int _p0)
		{
			return Function.Call<bool>((Hash)0x65A8196B8D7F5E0B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SimulatedRouteIsLoaded(int _p0)
		{
			return Function.Call<bool>((Hash)0x240915043CB799D7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SimulatedRouteTravelToPoint(int _p0, float _p1, float _p2)
		{
			Function.Call((Hash)0xA1A3DE1C215C7394, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float SimulatedRouteGetEta(int _p0)
		{
			return Function.Call<float>((Hash)0x2DD5F78D73B24172, _p0);
		}
		// :################: //
		// : namespace: PED : //
		// :################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePed(uint _modelHash, float _x, float _y, float _z, float _heading, bool _isNetwork, bool _bScriptHostPed, bool _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0xD49F9B0955C367DE, _modelHash, _x, _y, _z, _heading, _isNetwork, _bScriptHostPed, _p7, _p8);
		}
		/// <summary>
		/// Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
		/// </summary>
		public static void DeletePed(int _ped)
		{
			Function.Call((Hash)0xCC0EF140F99365C5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRemovePedNetworked(int _ped, int _p1)
		{
			Function.Call((Hash)0x39A2FC5AF55A52B1, _ped, _p1);
		}
		/// <summary>
		/// Only used in SP
		/// _SET_REMOVE_PED*
		/// </summary>
		public static void Hash_0x7c08e7cb8d951b70(int _ped, float _p1)
		{
			Function.Call((Hash)0x7C08E7CB8D951B70, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedToBeRemoved(int _ped, float _p1, float _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x36E4B61DC56DE77C, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ClonePed(int _ped, bool _isNetwork, bool _bScriptHostPed, bool _copyHeadBlendFlag)
		{
			return Function.Call<int>((Hash)0xEF29A16337FACADB, _ped, _isNetwork, _bScriptHostPed, _copyHeadBlendFlag);
		}
		/// <summary>
		/// Copies ped's components and props to targetPed.
		/// Can be used to clear anything from a ped by cloning it, including bullet holes.
		/// </summary>
		public static void ClonePedToTarget(int _ped, int _targetPed)
		{
			Function.Call((Hash)0xE952D6431689AD9A, _ped, _targetPed);
		}
		/// <summary>
		/// Gets a value indicating whether the specified ped is in the specified vehicle.
		/// </summary>
		public static bool IsPedInVehicle(int _ped, int _vehicle, bool _atGetIn)
		{
			return Function.Call<bool>((Hash)0xA3EE4A07279BB9DB, _ped, _vehicle, _atGetIn);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInModel(int _ped, uint _modelHash)
		{
			return Function.Call<bool>((Hash)0x796D90EFB19AA332, _ped, _modelHash);
		}
		/// <summary>
		/// Gets a value indicating whether the specified ped is in any vehicle.
		/// </summary>
		public static bool IsPedInAnyVehicle(int _ped, bool _atGetIn)
		{
			return Function.Call<bool>((Hash)0x997ABD671D25CA0B, _ped, _atGetIn);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9851de7aec10b4e1(float _x, float _y, float _z, float _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x9851DE7AEC10B4E1, _x, _y, _z, _p3, _p4, _p5);
		}
		/// <summary>
		/// Gets a value indicating whether this ped's health is below its injured threshold.
		/// 
		/// The default threshold is 100.
		/// </summary>
		public static bool IsPedInjured(int _ped)
		{
			return Function.Call<bool>((Hash)0x84A2DD9AC37C35C1, _ped);
		}
		/// <summary>
		/// Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
		/// If the handle is invalid, the function returns true.
		/// </summary>
		public static bool IsPedFatallyInjured(int _ped)
		{
			return Function.Call<bool>((Hash)0xD839450756ED5A80, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDeadOrDying(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x3317DEDB88C95038, _ped, _p1);
		}
		/// <summary>
		/// Bleedout profiles:
		/// Animal_FastBleedout
		/// Animal_Generic
		/// Human_FastBleedout
		/// Human_Generic
		/// Human_Mission
		/// 
		/// For more information, see common/data/ai/peddamageinfo.meta
		/// </summary>
		public static void SetPedBleedoutProfile(int _ped, uint _bleedoutProfile)
		{
			Function.Call((Hash)0x66C047719B0E80E1, _ped, _bleedoutProfile);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedAimingFromCover(int _ped)
		{
			return Function.Call<bool>((Hash)0x3998B1276A3300E5, _ped);
		}
		/// <summary>
		/// Returns whether the specified ped is reloading.
		/// </summary>
		public static bool IsPedReloading(int _ped)
		{
			return Function.Call<bool>((Hash)0x24B100C68C645951, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedAPlayer(int _ped)
		{
			return Function.Call<bool>((Hash)0x12534C348C6CB68B, _ped);
		}
		/// <summary>
		/// Returns true only if it's a player ped and an animal as well.
		/// _IS_ANY_* - _IS_CONTROL_*
		/// </summary>
		public static bool IsAnimalControlledByAPlayer(int _ped)
		{
			return Function.Call<bool>((Hash)0x0E2F43516F998269, _ped);
		}
		/// <summary>
		/// seatIndex:
		/// enum eVehicleSeat
		/// {
		/// 	VS_ANY_PASSENGER = -2,
		/// 	VS_DRIVER,
		/// 	VS_FRONT_RIGHT,
		/// 	VS_BACK_LEFT,
		/// 	VS_BACK_RIGHT,
		/// 	VS_EXTRA_LEFT_1,
		/// 	VS_EXTRA_RIGHT_1,
		/// 	VS_EXTRA_LEFT_2,
		/// 	VS_EXTRA_RIGHT_2,
		/// 	VS_EXTRA_LEFT_3,
		/// 	VS_EXTRA_RIGHT_3,
		/// 	VS_NUM_SEATS
		/// };
		/// </summary>
		public static int CreatePedInsideVehicle(int _vehicle, uint _modelHash, int _seatIndex, bool _p3, bool _p4, bool _p5)
		{
			return Function.Call<int>((Hash)0x7DD959874C1FD534, _vehicle, _modelHash, _seatIndex, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDesiredHeading(int _ped, float _heading)
		{
			Function.Call((Hash)0xAA5A7ECE2AA8FE70, _ped, _heading);
		}
		/// <summary>
		/// Old name: _FREEZE_PED_CAMERA_ROTATION
		/// </summary>
		public static void ForceAllHeadingValuesToAlign(int _ped)
		{
			Function.Call((Hash)0xFF287323B0E2C69A, _ped);
		}
		/// <summary>
		/// angle is ped's view cone
		/// </summary>
		public static bool IsPedFacingPed(int _ped, int _otherPed, float _angle)
		{
			return Function.Call<bool>((Hash)0xD71649DB0A545AA3, _ped, _otherPed, _angle);
		}
		/// <summary>
		/// Notes: The function only returns true while the ped is: 
		/// A.) Swinging a random melee attack (including pistol-whipping)
		/// 
		/// B.) Reacting to being hit by a melee attack (including pistol-whipping)
		/// 
		/// C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter). 
		/// 
		/// You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
		/// </summary>
		public static bool IsPedInMeleeCombat(int _ped)
		{
			return Function.Call<bool>((Hash)0x4E209B2C1EAD5159, _ped);
		}
		/// <summary>
		/// Only used in R* SP Script winter1: p1 = 5000
		/// _SET_PED_M*
		/// </summary>
		public static int Hash_0x6db875afc584fa32(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0x6DB875AFC584FA32, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedStopped(int _ped)
		{
			return Function.Call<bool>((Hash)0x530944F6F4B8A214, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedSitting(int _ped)
		{
			return Function.Call<bool>((Hash)0x84D0BF2B21862059, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x09d7afd3716da8e1(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0x09D7AFD3716DA8E1, _ped, _p1);
		}
		/// <summary>
		/// If returned true: CHECK_SHOT_NEAR: Succeeded shot near
		/// If returned false: CHECK_SHOT_NEAR: Failed shot near
		/// </summary>
		public static bool Hash_0x9c81338b2e62ce0a(int _player, int _ped, int _shotNearRecentlyTime)
		{
			return Function.Call<bool>((Hash)0x9C81338B2E62CE0A, _player, _ped, _shotNearRecentlyTime);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb7dbb2986b87e230(int _ped, float _p1)
		{
			return Function.Call<bool>((Hash)0xB7DBB2986B87E230, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd355e2f1bb41087e(int _ped, float _p1)
		{
			return Function.Call<bool>((Hash)0xD355E2F1BB41087E, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyPedShootingInArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _p6, bool _p7)
		{
			return Function.Call<bool>((Hash)0xA0D3D71EA1086C55, _x1, _y1, _z1, _x2, _y2, _z2, _p6, _p7);
		}
		/// <summary>
		/// Returns whether the specified ped is shooting.
		/// </summary>
		public static bool IsPedShooting(int _ped)
		{
			return Function.Call<bool>((Hash)0x34616828CD07F1A1, _ped);
		}
		/// <summary>
		/// Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
		/// </summary>
		public static float TimeSincePedLastShot(int _ped)
		{
			return Function.Call<float>((Hash)0x285D36C5C72B0569, _ped);
		}
		/// <summary>
		/// accuracy = 0-100, 100 being perfectly accurate
		/// </summary>
		public static void SetPedAccuracy(int _ped, int _accuracy)
		{
			Function.Call((Hash)0x7AEFB85C1D49DEB6, _ped, _accuracy);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedAccuracy(int _ped)
		{
			return Function.Call<int>((Hash)0x37F4AD56ECBC0CD6, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedModel(int _ped, uint _modelHash)
		{
			return Function.Call<bool>((Hash)0xC9D55B1A358A5BF7, _ped, _modelHash);
		}
		/// <summary>
		/// Forces the ped to fall back and kills it.
		/// 
		/// It doesn't really explode the ped's head but it kills the ped
		/// </summary>
		public static void ExplodePedHead(int _ped, uint _weaponHash)
		{
			Function.Call((Hash)0x2D05CED3A38D0F3A, _ped, _weaponHash);
		}
		/// <summary>
		/// Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
		/// </summary>
		public static void AddArmourToPed(int _ped, int _amount)
		{
			Function.Call((Hash)0x5BA652A0CD14DF2F, _ped, _amount);
		}
		/// <summary>
		/// Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_FLOW & PROCESS_GENERIC_PLAYER_INITIALIZATION
		/// </summary>
		public static void Hash_0x5ca20fbe49891bbd(int _ped, int _p1)
		{
			Function.Call((Hash)0x5CA20FBE49891BBD, _ped, _p1);
		}
		/// <summary>
		/// Ped: The ped to warp.
		/// vehicle: The vehicle to warp the ped into.
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static void SetPedIntoVehicle(int _ped, int _vehicle, int _seatIndex)
		{
			Function.Call((Hash)0xF75B0D629E1C063D, _ped, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedMoveAnimsBlendOut(int _ped)
		{
			Function.Call((Hash)0x9E8C908F41584ECD, _ped);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void Hash_0x606d529dada3c940(int _ped, int _p1)
		{
			Function.Call((Hash)0x606D529DADA3C940, _ped, _p1);
		}
		/// <summary>
		/// Returns true/false if the ped is/isn't male.
		/// </summary>
		public static bool IsPedMale(int _ped)
		{
			return Function.Call<bool>((Hash)0x6D9F5FAA7488BA46, _ped);
		}
		/// <summary>
		/// Returns true/false if the ped is/isn't humanoid.
		/// </summary>
		public static bool IsPedHuman(int _ped)
		{
			return Function.Call<bool>((Hash)0xB980061DA992779D, _ped);
		}
		/// <summary>
		/// Gets the vehicle the specified Ped is in.
		/// 
		/// If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
		/// </summary>
		public static int GetVehiclePedIsIn(int _ped, bool _lastVehicle)
		{
			return Function.Call<int>((Hash)0x9A9112A0FE9A4713, _ped, _lastVehicle);
		}
		/// <summary>
		/// Resets the value for the last vehicle driven by the Ped.
		/// </summary>
		public static void ResetPedLastVehicle(int _ped)
		{
			Function.Call((Hash)0xBB8DE8CF6A8DD8BB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc6136b40fffb778b(bool _p0)
		{
			Function.Call((Hash)0xC6136B40FFFB778B, _p0);
		}
		/// <summary>
		/// Only used in SP R* Script train_robbery3: p1 = CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC & CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC_JOHN
		/// </summary>
		public static void Hash_0x6e8b87139854022d(int _ped, string _clipset)
		{
			Function.Call((Hash)0x6E8B87139854022D, _ped, _clipset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumFreeSlotsInPedPool()
		{
			return Function.Call<int>((Hash)0x313778EDCA9158E2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveAmbientPeds(int _numPeds)
		{
			Function.Call((Hash)0xED9582B3DA8F02B4, _numPeds);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReserveAmbientPedsTotal(int _numPeds)
		{
			Function.Call((Hash)0xF008E0BA1FE1D644, _numPeds);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnreserveAmbientPeds(int _numPeds)
		{
			Function.Call((Hash)0x7D4E70A67A651C71, _numPeds);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumReservedAmbientPedsDesired()
		{
			return Function.Call<int>((Hash)0x62DE46F061CAA468);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumReservedAmbientPedsReady()
		{
			return Function.Call<int>((Hash)0x5C16855277819BBF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AreAllAmbientPedReservationsReady()
		{
			return Function.Call<bool>((Hash)0x5E420FF293EE5472);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioPedRangeMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0xA77FA7BE9312F8C0, _multiplier);
		}
		/// <summary>
		/// Only used in SP R* Script loanshark_hunter
		/// </summary>
		public static void Hash_0x9e3842e5dad69f80(int _volume)
		{
			Function.Call((Hash)0x9E3842E5DAD69F80, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientPedDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0xAB0D553FE20A6E25, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioPedDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0x7A556143A1C03898, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientAnimalDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0xC0258742B034DFAF, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmbientHumanDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0xBA0980B5C0A11924, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioAnimalDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0xDB48E99F8E064E56, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioHumanDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0x28CB6391ACEDD9DB, _multiplier);
		}
		/// <summary>
		/// Sets the scenario ped density to the given config.
		/// 
		/// Valid configs:
		/// - BLACKWATER
		/// - DEFAULT
		/// - NEWBORDEAUX
		/// - RHODES
		/// - STRAWBERRY
		/// - TUMBLEWEED
		/// - VALENTINE
		/// - VANHORN
		/// 
		/// See common/data/ai/densityscoringconfigs.meta for more information.
		/// </summary>
		public static void SetScenarioPedDensityThisFrame(uint _configHash)
		{
			Function.Call((Hash)0x95423627A9CA598E, _configHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InstantlyFillPedPopulation()
		{
			Function.Call((Hash)0x4759CC730F947C81);
		}
		/// <summary>
		/// Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
		/// </summary>
		public static void Hash_0xbfa6b7731c3baf02()
		{
			Function.Call((Hash)0xBFA6B7731C3BAF02);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsInstantlyFillPedPopulationFinished()
		{
			return Function.Call<bool>((Hash)0x0EE3F0D7FECCC54F);
		}
		/// <summary>
		/// The distance between these points, is the diagonal of a box (remember it's 3D).
		/// </summary>
		public static void SetPedNonCreationArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			Function.Call((Hash)0xEE01041D559983EA, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedNonCreationArea()
		{
			Function.Call((Hash)0x2E05208086BA0651);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachVolumeToEntity(int _volume, int _entity, float _offsetX, float _offsetY, float _offsetZ, float _rotX, float _rotY, float _rotZ, int _p8, bool _p9)
		{
			Function.Call((Hash)0x7C00CFC48A782DC0, _volume, _entity, _offsetX, _offsetY, _offsetZ, _rotX, _rotY, _rotZ, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachVolumeFromEntity(int _volume, int _entity)
		{
			Function.Call((Hash)0x19C975B81BE53C28, _volume, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedOntoMount(int _ped, int _mount, int _seatIndex, bool _p3)
		{
			Function.Call((Hash)0x028F76B6E78246EB, _ped, _mount, _seatIndex, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedFromMount(int _ped, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x5337B721C51883A9, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePedOnMount(int _mount, uint _modelHash, int _index, bool _p3, bool _p4, bool _p5, bool _p6)
		{
			return Function.Call<int>((Hash)0xF89AA2BD01FC06B7, _mount, _modelHash, _index, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMountSeatFree(int _mount, int _seat)
		{
			return Function.Call<bool>((Hash)0xAAB0FE202E9FC9F0, _mount, _seat);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedOnMount(int _ped)
		{
			return Function.Call<bool>((Hash)0x460BC76A0E10655E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedFullyOnMount(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x95CBC65780DE7EB1, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMount(int _ped)
		{
			return Function.Call<int>((Hash)0xE7E11B8DCBED1058, _ped);
		}
		/// <summary>
		/// Returns last horse the ped was leading
		/// </summary>
		public static int GetLastLedMount(int _ped)
		{
			return Function.Call<int>((Hash)0x693126B5D0457D0D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLastMount(int _ped)
		{
			return Function.Call<int>((Hash)0x4C8B59171957BCF7, _ped);
		}
		/// <summary>
		/// Only used in R* Script nb_stalking_hunter
		/// </summary>
		public static void Hash_0xed1c764997a86d5a(int _ped1, int _ped2)
		{
			Function.Call((Hash)0xED1C764997A86D5A, _ped1, _ped2);
		}
		/// <summary>
		/// _SET_HO*
		/// </summary>
		public static void Hash_0xb8ab265426cfe6dd(int _ped, bool _p1)
		{
			Function.Call((Hash)0xB8AB265426CFE6DD, _ped, _p1);
		}
		/// <summary>
		/// Returns dismounted timestamp
		/// </summary>
		public static int Hash_0xe8d1ccb9375c101b(int _mount, int _player)
		{
			return Function.Call<int>((Hash)0xE8D1CCB9375C101B, _mount, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa691c10054275290(int _mount, int _player, int _dismountedTimestamp)
		{
			Function.Call((Hash)0xA691C10054275290, _mount, _player, _dismountedTimestamp);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6734f0a6a52c371c(int _player, int _horseSlot)
		{
			Function.Call((Hash)0x6734F0A6A52C371C, _player, _horseSlot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x024ec9b649111915(int _ped, bool _p1)
		{
			Function.Call((Hash)0x024EC9B649111915, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedOwnsAnimal(int _ped, int _animal, bool _p2)
		{
			Function.Call((Hash)0x931B241409216C1F, _ped, _animal, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetActiveAnimalOwner(int _animal)
		{
			return Function.Call<int>((Hash)0xF103823FFE72BB49, _animal);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbcc76708e5677e1d(int _ped, bool _p1)
		{
			Function.Call((Hash)0xBCC76708E5677E1D, _ped, _p1);
		}
		/// <summary>
		/// Returns an int based on enum eTamingState
		/// 
		/// enum eTamingState
		/// {
		/// 	ATS_INVALID = 0,
		/// 	ATS_INACTIVE,
		/// 	ATS_TARGET_DETECTED,
		/// 	ATS_CALLED_OUT,
		/// 	ATS_MOUNTABLE,
		/// 	ATS_BEING_PATTED,
		/// 	ATS_BREAKING_ACTIVE,
		/// 	ATS_SPOOKED,
		/// 	ATS_RETREATING,
		/// 	ATS_FLEEING
		/// };
		/// </summary>
		public static int GetHorseTamingState(int _horse)
		{
			return Function.Call<int>((Hash)0x454AD4DA6C41B5BD, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x54d3cd482742c482(int _animal, float _p2)
		{
			Function.Call((Hash)0x54D3CD482742C482, _animal, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5cb2ebb467be3ed6(int _animal, float _p2)
		{
			Function.Call((Hash)0x5CB2EBB467BE3ED6, _animal, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9f0f28b42c4ee80a(int _animal, float _p2)
		{
			Function.Call((Hash)0x9F0F28B42C4EE80A, _animal, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMountBondingLevel(int _ped, int _bondingLevel)
		{
			Function.Call((Hash)0xA69899995997A63B, _ped, _bondingLevel);
		}
		/// <summary>
		/// Note: this native was added in build 1232.40
		/// </summary>
		public static void SetMountSecurityEnabled(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x11E6B9629C46D6EC, _ped, _toggle);
		}
		/// <summary>
		/// Only used in SP R* Script winter1: p1 = Winter1Mount
		/// </summary>
		public static void Hash_0x9b65444c07b782bf(int _ped, string _p1)
		{
			Function.Call((Hash)0x9B65444C07B782BF, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimalInteractionPossible(int _ped, int _animal)
		{
			return Function.Call<bool>((Hash)0xD543D3A8FDE4F185, _ped, _animal);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnimalInteractionRunning(int _ped)
		{
			return Function.Call<bool>((Hash)0x7FC84E85D98F063D, _ped);
		}
		/// <summary>
		/// Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
		/// </summary>
		public static int Hash_0x8be24d74d74c6e9b(int _ped)
		{
			return Function.Call<int>((Hash)0x8BE24D74D74C6E9B, _ped);
		}
		/// <summary>
		/// _IS_I* - _IS_L*
		/// </summary>
		public static bool Hash_0x77243ed4f7caaa55(int _ped)
		{
			return Function.Call<bool>((Hash)0x77243ED4F7CAAA55, _ped);
		}
		/// <summary>
		/// Gets a value indicating whether the specified ped is on top of any vehicle.
		/// 
		/// Return 1 when ped is on vehicle.
		/// Return 0 when ped is not on a vehicle.
		/// </summary>
		public static bool IsPedOnVehicle(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x67722AEB798E5FAB, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedOnSpecificVehicle(int _ped, int _vehicle)
		{
			return Function.Call<bool>((Hash)0xEC5F66E459AF3BB2, _ped, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WarpPedOutOfVehicle(int _ped)
		{
			Function.Call((Hash)0xE0B61ED8BB37712F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedMoney(int _ped, int _amount)
		{
			Function.Call((Hash)0xA9C8960E8684C1B5, _ped, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedMoney(int _ped)
		{
			return Function.Call<int>((Hash)0x3F69145BBA87BAE7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlockingOfNonTemporaryEventsForAmbientPedsThisFrame(bool _p0)
		{
			Function.Call((Hash)0x9911F4A24485F653, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x34eddd59364ad74a(int _ped, int _p1)
		{
			Function.Call((Hash)0x34EDDD59364AD74A, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2d976dbdc731df80(int _ped)
		{
			Function.Call((Hash)0x2D976DBDC731DF80, _ped);
		}
		/// <summary>
		/// Detect if ped is sitting in the specified vehicle
		/// [True/False]
		/// </summary>
		public static bool IsPedSittingInVehicle(int _ped, int _vehicle)
		{
			return Function.Call<bool>((Hash)0xA808AA1D79230FC2, _ped, _vehicle);
		}
		/// <summary>
		/// Detect if ped is in any vehicle
		/// [True/False]
		/// </summary>
		public static bool IsPedSittingInAnyVehicle(int _ped)
		{
			return Function.Call<bool>((Hash)0x826AA586EDB9FEF8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedOnFoot(int _ped)
		{
			return Function.Call<bool>((Hash)0x01FEE67DB37F59B2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedPlantingBomb(int _ped)
		{
			return Function.Call<bool>((Hash)0xC70B5FAE151982D8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetDeadPedPickupCoords(int _ped, float _p1, float _p2)
		{
			return Function.Call<Vector3>((Hash)0xCD5003B097200F36, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInAnyBoat(int _ped)
		{
			return Function.Call<bool>((Hash)0x2E0E1C2B4F6CB339, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInAnyHeli(int _ped)
		{
			return Function.Call<bool>((Hash)0x298B91AE825E5705, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInAnyPlane(int _ped)
		{
			return Function.Call<bool>((Hash)0x5FFF4CFC74D8FB80, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInFlyingVehicle(int _ped)
		{
			return Function.Call<bool>((Hash)0x9134873537FA419C, _ped);
		}
		/// <summary>
		/// _IS_PED_FL* - _IS_PED_FU*
		/// </summary>
		public static bool Hash_0x256edd55c6be1482(int _ped)
		{
			return Function.Call<bool>((Hash)0x256EDD55C6BE1482, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedLastDamageBone(int _ped, int _outBone)
		{
			return Function.Call<bool>((Hash)0xD75960F6BD9EA49C, _ped, _outBone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedLastDamageBone(int _ped)
		{
			Function.Call((Hash)0x8EF6B7AC68E2F01B, _ped);
		}
		/// <summary>
		/// enum ePedDamageCleanliness
		/// {
		/// 	PED_DAMAGE_CLEANLINESS_POOR,
		/// 	PED_DAMAGE_CLEANLINESS_GOOD,
		/// 	PED_DAMAGE_CLEANLINESS_PERFECT
		/// };
		/// </summary>
		public static int GetPedDamageCleanliness(int _ped)
		{
			return Function.Call<int>((Hash)0x88EFFED5FE8B0B4A, _ped);
		}
		/// <summary>
		/// damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
		/// </summary>
		public static void SetPedDamageCleanliness(int _ped, int _damageCleanliness)
		{
			Function.Call((Hash)0x7528720101A807A5, _ped, _damageCleanliness);
		}
		/// <summary>
		/// Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
		/// </summary>
		public static bool GetPedDamaged(int _ped)
		{
			return Function.Call<bool>((Hash)0x6CFC373008A1EDAF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDamaged(int _ped, bool _damaged)
		{
			Function.Call((Hash)0xDACE03C65C6666DB, _ped, _damaged);
		}
		/// <summary>
		/// Animal Skin Quality Modifier
		/// Params: p2 = 2, p3 = 3 in R* Scripts
		/// </summary>
		public static int SetPlayerCurrentAnimalDamageModifier(int _player, float _modifier, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x9EFF3C91DF38304F, _player, _modifier, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UpdateAnimalDamageModifier(int _player)
		{
			Function.Call((Hash)0x0F9E754EBE8FDBFA, _player);
		}
		/// <summary>
		/// Returns animal skin quality modifier
		/// </summary>
		public static float GetPlayerCurrentAnimalDamageModifier(int _player)
		{
			return Function.Call<float>((Hash)0xEE2D5C819A65BF26, _player);
		}
		/// <summary>
		/// Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
		/// </summary>
		public static int Hash_0xb29c553ba582d09e(int _p0, uint _model, int _damageCleanliness, int _p3)
		{
			return Function.Call<int>((Hash)0xB29C553BA582D09E, _p0, _model, _damageCleanliness, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x101b45c5f56d970f(int _p0, int _ped, int _damageCleanliness, int _p3)
		{
			return Function.Call<bool>((Hash)0x101B45C5F56D970F, _p0, _ped, _damageCleanliness, _p3);
		}
		/// <summary>
		/// Related to dead animals items/loots
		/// Notice: skinningQuality is partially calculated using pedQuality
		/// </summary>
		public static int ComputeSatchelItemForPedCarcass(int _outInventoryItemArray, int _ped, int _damageCleanliness, int _skinningQuality)
		{
			return Function.Call<int>((Hash)0x6B89FAA36FC909A3, _outInventoryItemArray, _ped, _damageCleanliness, _skinningQuality);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ComputeSatchelItemForPedDamage(int _p0, int _pedAttached, int _damageCleanliness)
		{
			return Function.Call<bool>((Hash)0x9E7738B291706746, _p0, _pedAttached, _damageCleanliness);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAiWeaponDamageModifier(float _value)
		{
			Function.Call((Hash)0x1B1E2A40A65B8521, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetAiWeaponDamageModifier()
		{
			Function.Call((Hash)0xEA16670E7BA4743C);
		}
		/// <summary>
		/// _SET_W(EAPON?)*
		/// </summary>
		public static void SetTotalPedDamageFromAi(int _ped, float _totalDamage)
		{
			Function.Call((Hash)0x73B6F907B913C860, _ped, _totalDamage);
		}
		/// <summary>
		/// _DELETE_*
		/// </summary>
		public static void Hash_0xa6d6f03095c88f59(int _ped)
		{
			Function.Call((Hash)0xA6D6F03095C88F59, _ped);
		}
		/// <summary>
		/// _GET_WA*
		/// </summary>
		public static float GetTotalPedDamageFromAi(int _ped)
		{
			return Function.Call<float>((Hash)0x92C8EACA29F6BED6, _ped);
		}
		/// <summary>
		/// Old name: _SET_PED_DAMAGE_MODIFIER
		/// </summary>
		public static void SetPedToPlayerWeaponDamageModifier(int _ped, float _damageModifier)
		{
			Function.Call((Hash)0xD77AE48611B7B10A, _ped, _damageModifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedToPlayerWeaponDamageModifier(int _ped)
		{
			return Function.Call<float>((Hash)0x936E7CAD0AE2EE14, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCurrentDefenseAgainstPlayersModifier(int _horse, float _modifier)
		{
			Function.Call((Hash)0x069EDDF1FD4DEB0A, _horse, _modifier);
		}
		/// <summary>
		/// Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
		/// </summary>
		public static float Hash_0x763fa8a9d76ee3a7(int _ped)
		{
			return Function.Call<float>((Hash)0x763FA8A9D76EE3A7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAiMeleeWeaponDamageModifier(float _modifier)
		{
			Function.Call((Hash)0x66460DEDDD417254, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAccuracyAgainstLocalPlayerModifier(int _ped, float _modifier)
		{
			Function.Call((Hash)0xC2266AA617668AD3, _ped, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0xdc9273d95976ba22(int _ped)
		{
			return Function.Call<float>((Hash)0xDC9273D95976BA22, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedHeadshotDamageMultiplier(int _ped, float _multiplier)
		{
			Function.Call((Hash)0x2BA918C823B8BA56, _ped, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdee8d30aa5c2e28d(int _ped, uint _p1, bool _p2)
		{
			Function.Call((Hash)0xDEE8D30AA5C2E28D, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe1b3be07d3aadded(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0xE1B3BE07D3AADDED, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x32ceda9a0ab4cef7(int _ped, uint _p1, bool _p2)
		{
			Function.Call((Hash)0x32CEDA9A0AB4CEF7, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x52a24d8a1da89658(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0x52A24D8A1DA89658, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x34b5ceac180a5d6e(int _ped, uint _p1, bool _p2)
		{
			Function.Call((Hash)0x34B5CEAC180A5D6E, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4f27603e44a8e4c0(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0x4F27603E44A8E4C0, _ped, _p1, _p2);
		}
		/// <summary>
		/// Changes health bar around heart core icon
		/// INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
		/// INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
		/// _SET_D*
		/// </summary>
		public static void Hash_0x3fdcc1f8c17e303e(int _ped, int _p1, float _p2)
		{
			Function.Call((Hash)0x3FDCC1F8C17E303E, _ped, _p1, _p2);
		}
		/// <summary>
		/// _SET_D*
		/// </summary>
		public static void Hash_0xe50c9816b3f22d8b(int _ped, uint _p1, float _p2)
		{
			Function.Call((Hash)0xE50C9816B3F22D8B, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDefenseModifierForPed(int _ped, float _modifier)
		{
			Function.Call((Hash)0x9B6808EC46BE849B, _ped, _modifier);
		}
		/// <summary>
		/// _SET_M*
		/// </summary>
		public static void Hash_0x7883aa809df43d98(int _ped, float _healthLimit)
		{
			Function.Call((Hash)0x7883AA809DF43D98, _ped, _healthLimit);
		}
		/// <summary>
		/// _SET_H* - _SET_I*
		/// </summary>
		public static void Hash_0xc5b78e41dcf8227c(int _ped, bool _p1)
		{
			Function.Call((Hash)0xC5B78E41DCF8227C, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanBeTargetted(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x63F58F7C80513AAD, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanBeTargettedByTeam(int _ped, int _team, bool _toggle)
		{
			Function.Call((Hash)0xBF1CA77833E58F2C, _ped, _team, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanBeTargettedByPlayer(int _ped, int _player, bool _toggle)
		{
			Function.Call((Hash)0x66B57B72E0836A76, _ped, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteractionLockonFlag(int _ped, int _player, int _flag, bool _enable)
		{
			Function.Call((Hash)0xFECA2081F61ED2CD, _ped, _player, _flag, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedFalling(int _ped)
		{
			return Function.Call<bool>((Hash)0xFB92A102F1C4DFA3, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedSliding(int _ped)
		{
			return Function.Call<bool>((Hash)0xD6740E14E4CEFC0B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedJumping(int _ped)
		{
			return Function.Call<bool>((Hash)0xCEDABC5900A0BF97, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedClimbing(int _ped)
		{
			return Function.Call<bool>((Hash)0x53E8CB4F48BFE623, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedClimbingLadder(int _ped)
		{
			return Function.Call<bool>((Hash)0x59643424B68D52B5, _ped);
		}
		/// <summary>
		/// _IS_PED_C* - _IS_PED_D*
		/// </summary>
		public static bool Hash_0x577c60ba06d0ea64(int _ped)
		{
			return Function.Call<bool>((Hash)0x577C60BA06D0EA64, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedVaulting(int _ped)
		{
			return Function.Call<bool>((Hash)0x117C70D1F5730B5E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDiving(int _ped)
		{
			return Function.Call<bool>((Hash)0x5527B8246FEF9B11, _ped);
		}
		/// <summary>
		/// Returns true if the ped is currently opening a door (CTaskOpenDoor).
		/// 
		/// Old name: _IS_PED_OPENING_A_DOOR
		/// </summary>
		public static bool IsPedOpeningDoor(int _ped)
		{
			return Function.Call<bool>((Hash)0x26AF0E8E30BD2A2C, _ped);
		}
		/// <summary>
		/// _IS_PED_IN*
		/// </summary>
		public static bool Hash_0x5c6c7c70ca302801(int _ped)
		{
			return Function.Call<bool>((Hash)0x5C6C7C70CA302801, _ped);
		}
		/// <summary>
		/// _IS_PED_J* - _IS_PED_L*
		/// </summary>
		public static bool Hash_0xb91ab3be7f655d49(int _ped)
		{
			return Function.Call<bool>((Hash)0xB91AB3BE7F655D49, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInAnyTaxi(int _ped)
		{
			return Function.Call<bool>((Hash)0x6E575D6A898AB852, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedIdRange(int _ped, float _value)
		{
			Function.Call((Hash)0xF107E836A70DCE05, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedIdRange(int _ped)
		{
			return Function.Call<float>((Hash)0x31167ED4324B758D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedHighlyPerceptive(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x52D59AB61DDC05DD, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedInjuredOnGroundBehaviour(int _ped, float _unk)
		{
			Function.Call((Hash)0xEC4B4B3B9908052A, _ped, _unk);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisablePedInjuredOnGroundBehaviour(int _ped)
		{
			Function.Call((Hash)0x733C87D4CE22BEA2, _ped);
		}
		/// <summary>
		/// _SET_ST* - _SET_SW*
		/// </summary>
		public static void Hash_0x028e7b3bba0bd2fc(int _ped)
		{
			Function.Call((Hash)0x028E7B3BBA0BD2FC, _ped);
		}
		/// <summary>
		/// _HAS_PED_*
		/// </summary>
		public static bool Hash_0xfa8c10dce0706d43(int _ped)
		{
			return Function.Call<bool>((Hash)0xFA8C10DCE0706D43, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAnimalDetectionModifier(int _ped, float _modifier)
		{
			Function.Call((Hash)0x43CA928E892CFDB8, _ped, _modifier);
		}
		/// <summary>
		/// Used in Script Function CHECK_IS_PLAYER_SEEN
		/// _GET_PED_*
		/// </summary>
		public static float Hash_0x2ba9d7bf629f920c(int _ped)
		{
			return Function.Call<float>((Hash)0x2BA9D7BF629F920C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedSeeingRange(int _ped, float _value)
		{
			Function.Call((Hash)0xF29CF591C4BF6CEE, _ped, _value);
		}
		/// <summary>
		/// Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
		/// _GET_PED_*
		/// </summary>
		public static float Hash_0x900ca00ce703e1e2(int _ped)
		{
			return Function.Call<float>((Hash)0x900CA00CE703E1E2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedHearingRange(int _ped, float _value)
		{
			Function.Call((Hash)0x33A8F7F7D5F7F33C, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedVisualFieldMinAngle(int _ped, float _value)
		{
			Function.Call((Hash)0x2DB492222FB21E26, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedVisualFieldMaxAngle(int _ped, float _value)
		{
			Function.Call((Hash)0x70793BDCA1E854D4, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedVisualFieldPeripheralRange(int _ped, float _range)
		{
			Function.Call((Hash)0x9C74B0BC831B753A, _ped, _range);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedVisualFieldCenterAngle(int _ped, float _angle)
		{
			Function.Call((Hash)0x3B6405E8AB34A907, _ped, _angle);
		}
		/// <summary>
		/// _SET_PED_M*
		/// </summary>
		public static void Hash_0x9ab33cb5834885b3(int _ped, float _p1, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0x9AB33CB5834885B3, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// _SET_PED_O*
		/// </summary>
		public static void Hash_0x899dfa0009ac93de(int _ped, float _p1)
		{
			Function.Call((Hash)0x899DFA0009AC93DE, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_MO*
		/// </summary>
		public static void Hash_0x3a5697b80fed5ebe(int _ped, float _p1, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0x3A5697B80FED5EBE, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void SetPedStealthMovement(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x88CBB5CEB96B7BD2, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// Returns whether the entity is in stealth mode
		/// </summary>
		public static bool GetPedStealthMovement(int _ped)
		{
			return Function.Call<bool>((Hash)0x7C2AC9CA66575FBF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCrouchMovement(int _ped, bool _state, int _p2, bool _immediately)
		{
			Function.Call((Hash)0x7DE9692C6F64CFE8, _ped, _state, _p2, _immediately);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedCrouchMovement(int _ped)
		{
			return Function.Call<bool>((Hash)0xD5FE956C70FF370B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedIsDoingCombatRoll(int _ped)
		{
			return Function.Call<bool>((Hash)0xC48A9EB0D499B3E5, _ped);
		}
		/// <summary>
		/// Creates a new ped group.
		/// Groups can contain up to 8 peds.
		/// 
		/// The parameter is unused.
		/// 
		/// Returns a handle to the created group, or 0 if a group couldn't be created.
		/// </summary>
		public static int CreateGroup(int _taskAllocator)
		{
			return Function.Call<int>((Hash)0x90370EBE0FEE1A3D, _taskAllocator);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAsGroupLeader(int _ped, int _groupId, bool _p2)
		{
			Function.Call((Hash)0x2A7819605465FBCE, _ped, _groupId, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAsGroupMember(int _ped, int _groupId)
		{
			Function.Call((Hash)0x9F3480FE65DB31B5, _ped, _groupId);
		}
		/// <summary>
		/// This only will teleport the ped to the group leader if the group leader teleports (sets coords).
		/// 
		/// Only works in singleplayer
		/// </summary>
		public static void SetPedCanTeleportToGroupLeader(int _pedHandle, int _groupId, bool _toggle)
		{
			Function.Call((Hash)0x2E2F4240B3F24647, _pedHandle, _groupId, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveGroup(int _groupId)
		{
			Function.Call((Hash)0x8EB2F69076AF7053, _groupId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedFromGroup(int _ped)
		{
			Function.Call((Hash)0xED74007FFB146BC2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedGroupMember(int _ped, int _groupId, bool _p2)
		{
			return Function.Call<bool>((Hash)0x9BB01E3834671191, _ped, _groupId, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedGroupLeader(int _ped, int _groupId)
		{
			return Function.Call<bool>((Hash)0x878B68960C1C2A35, _ped, _groupId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedHangingOnToVehicle(int _ped)
		{
			return Function.Call<bool>((Hash)0x1C86D8AEF8254B78, _ped);
		}
		/// <summary>
		/// Sets the range at which members will automatically leave the group.
		/// </summary>
		public static void SetGroupSeparationRange(int _groupId, float _separationRange)
		{
			Function.Call((Hash)0x4102C7858CFEE4E4, _groupId, _separationRange);
		}
		/// <summary>
		/// _SET_C*
		/// </summary>
		public static void Hash_0x89e59dbd15e21177(int _groupId, int _p1)
		{
			Function.Call((Hash)0x89E59DBD15E21177, _groupId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedProne(int _ped)
		{
			return Function.Call<bool>((Hash)0xD6A86331A537A7B9, _ped);
		}
		/// <summary>
		/// _IS_PED_IN*
		/// </summary>
		public static bool Hash_0x7583a9d35248b83f(int _ped)
		{
			return Function.Call<bool>((Hash)0x7583A9D35248B83F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInCombat(int _ped, int _target)
		{
			return Function.Call<bool>((Hash)0x4859F1FC66A6278E, _ped, _target);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanPedInCombatSeeTarget(int _ped, int _target)
		{
			return Function.Call<bool>((Hash)0xEAD42DE3610D0721, _ped, _target);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedJacking(int _ped)
		{
			return Function.Call<bool>((Hash)0x4AE4FF911DFB61DA, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedBeingJacked(int _ped)
		{
			return Function.Call<bool>((Hash)0x9A497FE2DF198913, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedBeingStunned(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0x4FBACCE3B4138EE8, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedsJacker(int _ped)
		{
			return Function.Call<int>((Hash)0x9B128DC36C1E04CF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetJackTarget(int _ped)
		{
			return Function.Call<int>((Hash)0x5486A79D9FBD342D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedFleeing(int _ped)
		{
			return Function.Call<bool>((Hash)0xBBCCE00B381F8482, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInCover(int _ped, bool _p1, bool _p2)
		{
			return Function.Call<bool>((Hash)0x60DFD0691A170B88, _ped, _p1, _p2);
		}
		/// <summary>
		/// _IS_PED_M* - _IS_PED_O*
		/// </summary>
		public static bool Hash_0x2dd4e0e26dfad97d(int _ped1, int _ped2, float _p2)
		{
			return Function.Call<bool>((Hash)0x2DD4E0E26DFAD97D, _ped1, _ped2, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x06fa94c835787c64(int _ped)
		{
			return Function.Call<bool>((Hash)0x06FA94C835787C64, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PedDuelingDidPlayerHeadshotOpponent(int _ped)
		{
			return Function.Call<bool>((Hash)0xBD6B242B8BD5543A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInCoverFacingLeft(int _ped)
		{
			return Function.Call<bool>((Hash)0x845333B3150583AB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedGoingIntoCover(int _ped)
		{
			return Function.Call<bool>((Hash)0x9F65DBC537E59AD5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedRespondingToThreat(int _ped)
		{
			return Function.Call<bool>((Hash)0x77525BBF433F2CD6, _ped);
		}
		/// <summary>
		/// Returns kneeling, sitting, squating, and sleeping scenario hashes
		/// </summary>
		public static uint GetActiveDynamicScenario2(int _ped)
		{
			return Function.Call<uint>((Hash)0xC22AA08A8ADB87D4, _ped);
		}
		/// <summary>
		/// Returns kneeling, sitting, squating, and sleeping scenario hashes
		/// </summary>
		public static uint GetActiveDynamicScenario(int _ped)
		{
			return Function.Call<uint>((Hash)0x569F1E1237508DEB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GivePedScenarioProp(int _ped, int _object, string _conditionalAnim, string _p3, string _p4, bool _p5)
		{
			return Function.Call<bool>((Hash)0x3BBDD6143FF16F98, _ped, _object, _conditionalAnim, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GivePedHashScenarioProp(int _ped, int _object, string _conditionalAnim, uint _scenarioType, uint _p4, bool _p5)
		{
			return Function.Call<bool>((Hash)0x2B02DB082258625F, _ped, _object, _conditionalAnim, _scenarioType, _p4, _p5);
		}
		/// <summary>
		/// Only used in SP R* Script rcm_jack2
		/// </summary>
		public static bool GivePedScenarioPropDynamic(int _ped, int _object, string _p2, string _p3, bool _p4)
		{
			return Function.Call<bool>((Hash)0xA0774E388CE4A679, _ped, _object, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RequestPropScenarioPed(int _ped, int _object, string _p2, string _p3, string _p4, bool _p5)
		{
			return Function.Call<int>((Hash)0xBEC65C6049B3219D, _ped, _object, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RequestPedForScenarioType(int _ped, int _object, string _p2, uint _scenarioType, string _p4, bool _p5)
		{
			return Function.Call<int>((Hash)0xBDED916A9F9B0604, _ped, _object, _p2, _scenarioType, _p4, _p5);
		}
		/// <summary>
		/// Params: p1 = p_banjo01x_XH_R_HAND00, mp006_p_dblcello01x_XH_R_HAND00, p_fiddle01x_PH_L_HAND, p_guitar01x_XH_R_HAND00, mp006_p_mnshn_washboard01x_XH_R_HAND00, p_bottleBeer01x_PH_R_HAND
		/// </summary>
		public static int GetPedRegisterProp(int _ped, string _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x4D0D2E3D8BC000EB, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetSeatPedIsTryingToEnter(int _ped)
		{
			return Function.Call<int>((Hash)0x6F4C85ACD641BCD2, _ped);
		}
		/// <summary>
		/// Returns the entity that killed the ped
		/// 
		/// It is best to check if the Ped is dead before asking for its killer.
		/// </summary>
		public static int GetPedSourceOfDeath(int _ped)
		{
			return Function.Call<int>((Hash)0x93C8B64DEB84728C, _ped);
		}
		/// <summary>
		/// Returns the hash of the weapon/model/object that killed the ped.
		/// </summary>
		public static uint GetPedCauseOfDeath(int _ped)
		{
			return Function.Call<uint>((Hash)0x16FFE42AB2D2DC59, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedTimeOfDeath(int _ped)
		{
			return Function.Call<int>((Hash)0x1E98817B311AE98A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CountPedsInCombatWithTarget(int _ped, int _flag)
		{
			return Function.Call<int>((Hash)0x5407B7288D0478B7, _ped, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedsInCombatWithTarget(int _ped, int _itemset, int _flag)
		{
			return Function.Call<int>((Hash)0x7BE607DAFF382FD2, _ped, _itemset, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CountPedsInCombatWithTargetWithinRadius(int _ped, float _x, float _y, float _z, float _radius, int _flag)
		{
			return Function.Call<int>((Hash)0x336B3D200AB007CB, _ped, _x, _y, _z, _radius, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCurrentTargetForPed(int _ped)
		{
			return Function.Call<int>((Hash)0xCD66FEA29400A0B5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedRelationshipGroupDefaultHash(int _ped, uint _hash)
		{
			Function.Call((Hash)0xADB3F206518799E8, _ped, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetDefaultRelationshipGroupHash(uint _modelHash)
		{
			return Function.Call<uint>((Hash)0x3CC4A718C258BDD0, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedRelationshipGroupHash(int _ped, uint _relationshipGroup)
		{
			Function.Call((Hash)0xC80A74AC829DDD92, _ped, _relationshipGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRelationshipBetweenGroups(int _relationship, uint _group1, uint _group2)
		{
			Function.Call((Hash)0xBF25EB89375A37AD, _relationship, _group1, _group2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearRelationshipBetweenGroups(int _relationship, uint _group1, uint _group2)
		{
			Function.Call((Hash)0x5E29243FB56FC6D4, _relationship, _group1, _group2);
		}
		/// <summary>
		/// The hash of the created relationship group is output in the second parameter.
		/// </summary>
		public static bool AddRelationshipGroup(string _name, uint _groupHash)
		{
			return Function.Call<bool>((Hash)0xF372BC22FCB88606, _name, _groupHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveRelationshipGroup(uint _groupHash)
		{
			Function.Call((Hash)0xB6BA2444AB393DA2, _groupHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRelationshipBetweenPeds(int _ped1, int _ped2)
		{
			return Function.Call<int>((Hash)0xEBA5AD3A0EAF7121, _ped1, _ped2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedRelationshipGroupDefaultHash(int _ped)
		{
			return Function.Call<uint>((Hash)0x42FDD0F017B1E38E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedRelationshipGroupHash(int _ped)
		{
			return Function.Call<uint>((Hash)0x7DBDD04862D95F04, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRelationshipBetweenGroups(uint _group1, uint _group2)
		{
			return Function.Call<int>((Hash)0x9E6B70061662AE5C, _group1, _group2);
		}
		/// <summary>
		/// Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
		/// _SET_RELATIONSHIP_*
		/// </summary>
		public static void Hash_0xdc91f22f09bc6c2f(uint _group, bool _p1)
		{
			Function.Call((Hash)0xDC91F22F09BC6C2F, _group, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9629faf6460d35cb(uint _group, bool _p1)
		{
			Function.Call((Hash)0x9629FAF6460D35CB, _group, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4e68c7ef706df35d(int _ped, float _x, float _y, float _z, float _p4, uint _relationshipGroup)
		{
			Function.Call((Hash)0x4E68C7EF706DF35D, _ped, _x, _y, _z, _p4, _relationshipGroup);
		}
		/// <summary>
		/// Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
		/// Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
		/// Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
		/// _GET_NUM_M* - _GET_PEDS_J*
		/// </summary>
		public static int Hash_0x3acce14dfa6ba8c2(int _ped, int _p1, float _x, float _y, float _z, float _p5, int _itemset)
		{
			return Function.Call<int>((Hash)0x3ACCE14DFA6BA8C2, _ped, _p1, _x, _y, _z, _p5, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedToInformRespectedFriends(int _ped, float _radius, int _maxFriends)
		{
			Function.Call((Hash)0x112942C6E708F70B, _ped, _radius, _maxFriends);
		}
		/// <summary>
		/// _IS_PED_RE*
		/// </summary>
		public static bool Hash_0x40c9155af8bc13f3(int _ped)
		{
			return Function.Call<bool>((Hash)0x40C9155AF8BC13F3, _ped);
		}
		/// <summary>
		/// Only used in SP Scripts
		/// Returns count / index
		/// _C*
		/// </summary>
		public static int Hash_0xf4860514ad354226(int _shockingEvent, float _x, float _y, float _z, float _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xF4860514AD354226, _shockingEvent, _x, _y, _z, _p4, _p5);
		}
		/// <summary>
		/// eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// </summary>
		public static bool IsPedRespondingToEvent(int _ped, uint _eventType)
		{
			return Function.Call<bool>((Hash)0x625B774D75C87068, _ped, _eventType);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// _GET_PED_IN*
		/// </summary>
		public static int Hash_0x5e9faf6c513347b4(int _ped, uint _eventType)
		{
			return Function.Call<int>((Hash)0x5E9FAF6C513347B4, _ped, _eventType);
		}
		/// <summary>
		/// Only used in R* SP Script short_update
		/// _GET_TARGET_* - _GET_TRACKED*
		/// </summary>
		public static int Hash_0x326f7951ef0d7f75(int _ped, uint _eventType)
		{
			return Function.Call<int>((Hash)0x326F7951EF0D7F75, _ped, _eventType);
		}
		/// <summary>
		/// Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
		/// Params: p1 = 0
		/// _GET_PED_IN*
		/// </summary>
		public static int Hash_0xe76687023d8c8505(uint _perscharModel, int _p1)
		{
			return Function.Call<int>((Hash)0xE76687023D8C8505, _perscharModel, _p1);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// _GET_PLAYER_W* - _GET_RANDOM_*
		/// </summary>
		public static bool Hash_0xcb8f4c9343ebe240(int _ped, uint _eventType, Vector3 _coords)
		{
			return Function.Call<bool>((Hash)0xCB8F4C9343EBE240, _ped, _eventType, _coords);
		}
		/// <summary>
		/// Used in various R* MP & SP Scripts
		/// </summary>
		public static void SetPedFiringPattern(int _ped, uint _patternHash)
		{
			Function.Call((Hash)0x9AC577F5A12AD8A9, _ped, _patternHash);
		}
		/// <summary>
		/// Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
		/// </summary>
		public static void SetPedFiringPattern2(int _ped, uint _patternHash)
		{
			Function.Call((Hash)0x20E54854DEF6A54A, _ped, _patternHash);
		}
		/// <summary>
		/// Only used in R* MP Script fm_mission_controller
		/// </summary>
		public static void SetPedFiringPattern3(int _ped, uint _patternHash)
		{
			Function.Call((Hash)0x244E8C282188E40F, _ped, _patternHash);
		}
		/// <summary>
		/// Params: shootRate = 0 - 1000
		/// </summary>
		public static void SetPedShootRate(int _ped, int _shootRate)
		{
			Function.Call((Hash)0x614DA022990752DC, _ped, _shootRate);
		}
		/// <summary>
		/// _SET_PED_TA* - _SET_PED_TO_*
		/// </summary>
		public static void Hash_0x3c529a827998f9b3(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x3C529A827998F9B3, _ped, _p1, _p2);
		}
		/// <summary>
		/// Only used in SP R* Scripts
		/// Params: p2 = same as p2 of 0x3C529A827998F9B3
		/// _SET_PED_TA* - _SET_PED_TO_*
		/// </summary>
		public static void Hash_0x1f44b7e283c09ede(int _ped, float _p1, int _p2)
		{
			Function.Call((Hash)0x1F44B7E283C09EDE, _ped, _p1, _p2);
		}
		/// <summary>
		/// combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS
		/// </summary>
		public static void SetCombatFloat(int _ped, int _combatType, float _newValue)
		{
			Function.Call((Hash)0xFF41B4B141ED981C, _ped, _combatType, _newValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetCombatFloat(int _ped, int _combatType)
		{
			return Function.Call<float>((Hash)0x52DFF8A10508090A, _ped, _combatType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetGroupSize(int _groupId, bool _hasLeader, int _numberOfFollowers)
		{
			Function.Call((Hash)0x8DE69FE35CA09A45, _groupId, _hasLeader, _numberOfFollowers);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesGroupExist(int _groupId)
		{
			return Function.Call<bool>((Hash)0x7C6B0C22F9F40BBE, _groupId);
		}
		/// <summary>
		/// _DOES_GROUP_* - _DOES_N*
		/// </summary>
		public static bool Hash_0x0455546f23ff08e4(int _groupId)
		{
			return Function.Call<bool>((Hash)0x0455546F23FF08E4, _groupId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsGroupLocallyControlled(int _groupId)
		{
			return Function.Call<bool>((Hash)0x909AD9E9A92A10DF, _groupId);
		}
		/// <summary>
		/// Returns the groupId of which the specified ped is a member of.
		/// </summary>
		public static int GetPedGroupIndex(int _ped)
		{
			return Function.Call<int>((Hash)0xF162E133B4E7A675, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInGroup(int _ped)
		{
			return Function.Call<bool>((Hash)0x5891CAC5D4ACFF74, _ped);
		}
		/// <summary>
		/// _IS_PED_L* - _IS_PED_M*
		/// </summary>
		public static bool Hash_0x917760cfe7a0e0f1(int _ped)
		{
			return Function.Call<bool>((Hash)0x917760CFE7A0E0F1, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerPedIsFollowing(int _ped)
		{
			return Function.Call<int>((Hash)0x6A3975DEA89F9A17, _ped);
		}
		/// <summary>
		/// eFormationType
		/// 
		/// 0: Default
		/// 1: Circle Around Leader
		/// 2: Alternative Circle Around Leader
		/// 3: Line, with Leader at center
		/// </summary>
		public static void SetGroupFormation(int _groupId, int _formationType)
		{
			Function.Call((Hash)0xCE2F5FC3AF7E8C1E, _groupId, _formationType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetGroupFormation(int _groupId)
		{
			return Function.Call<int>((Hash)0x13A1B061007C906B, _groupId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGroupFormationSpacing(int _groupId, float _p1, float _p2, float _p3)
		{
			Function.Call((Hash)0x1D9D45004C28C916, _groupId, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetGroupFormationDefaultSpacing(int _groupId)
		{
			Function.Call((Hash)0x63DAB4CCB3273205, _groupId);
		}
		/// <summary>
		/// Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
		/// _SET_FORMATION_*
		/// </summary>
		public static bool Hash_0xb05cc690cde8a4a9(int _groupId, float _p1)
		{
			return Function.Call<bool>((Hash)0xB05CC690CDE8A4A9, _groupId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddCustomFormationLocation(int _groupId, float _x, float _y, float _z, int _position)
		{
			Function.Call((Hash)0x4E23CD07BD161E06, _groupId, _x, _y, _z, _position);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AddFormationLocation(int _groupId, float _p1, float _p2, float _p3)
		{
			return Function.Call<bool>((Hash)0xB05945C1E9E60D91, _groupId, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetFormationPositionsTargetRadius(int _groupId, float _radius)
		{
			return Function.Call<bool>((Hash)0x7CC7D3B7AF7FB71F, _groupId, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFormationAutoAssignPosition(int _groupId, bool _toggle)
		{
			Function.Call((Hash)0x478F6B9920446CE2, _groupId, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedFormationPosition(int _ped, int _position, bool _toggle)
		{
			Function.Call((Hash)0x0E9E95FDEDCC9D35, _ped, _position, _toggle);
		}
		/// <summary>
		/// Returns offset (0 < 32) to be used with MISC::SET_BIT
		/// _GET_PED_CR*
		/// </summary>
		public static int Hash_0x8af8e647d6b2a649(int _groupId, int _ped)
		{
			return Function.Call<int>((Hash)0x8AF8E647D6B2A649, _groupId, _ped);
		}
		/// <summary>
		/// _CLEAR_PED_E* - _CLEAR_PED_L*
		/// </summary>
		public static void Hash_0x87c2724a56f66020(int _ped)
		{
			Function.Call((Hash)0x87C2724A56F66020, _ped);
		}
		/// <summary>
		/// _SET_FORMATION_*
		/// </summary>
		public static void Hash_0xd5bd1b5318a81994(int _groupId, bool _p1)
		{
			Function.Call((Hash)0xD5BD1B5318A81994, _groupId, _p1);
		}
		/// <summary>
		/// _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
		/// </summary>
		public static void Hash_0x9bbeaf8b0c007f1e(int _ped, bool _p1)
		{
			Function.Call((Hash)0x9BBEAF8B0C007F1E, _ped, _p1);
		}
		/// <summary>
		/// _SET_PLAYER_N* - _SET_PLAYER_S*
		/// </summary>
		public static void Hash_0xc99f104bdf8c7f5a(int _ped, bool _p1)
		{
			Function.Call((Hash)0xC99F104BDF8C7F5A, _ped, _p1);
		}
		/// <summary>
		/// _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
		/// </summary>
		public static void Hash_0x02e741e19e39628c(int _ped, float _p1)
		{
			Function.Call((Hash)0x02E741E19E39628C, _ped, _p1);
		}
		/// <summary>
		/// _SET_SCENARIO_PED_* - _SET_SPAWNER_*
		/// </summary>
		public static void Hash_0x97c475212b327666(int _groupId, bool _p1)
		{
			Function.Call((Hash)0x97C475212B327666, _groupId, _p1);
		}
		/// <summary>
		/// _SET_SCENARIO_PED_* - _SET_SPAWNER_*
		/// </summary>
		public static void Hash_0x154b7e841ac7412f(int _groupId, bool _p1)
		{
			Function.Call((Hash)0x154B7E841AC7412F, _groupId, _p1);
		}
		/// <summary>
		/// _SET_FORMATION_*
		/// </summary>
		public static void Hash_0x8afccc0f18d70018(int _groupId, bool _p1)
		{
			Function.Call((Hash)0x8AFCCC0F18D70018, _groupId, _p1);
		}
		/// <summary>
		/// _SET_FORMATION_P*
		/// </summary>
		public static void Hash_0xe1103300f3456de7(int _groupId, float _p1, float _p2)
		{
			Function.Call((Hash)0xE1103300F3456DE7, _groupId, _p1, _p2);
		}
		/// <summary>
		/// _SET_ENABLE_B* - _SET_ENABLE_H*
		/// </summary>
		public static void Hash_0xa8a95cecb1906ea2(int _groupId, bool _p1)
		{
			Function.Call((Hash)0xA8A95CECB1906EA2, _groupId, _p1);
		}
		/// <summary>
		/// _SET_FORMATION_P*
		/// </summary>
		public static void Hash_0xddfad4deaa7fa362(int _groupId, float _p1, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0xDDFAD4DEAA7FA362, _groupId, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// _SET_FORMATION_P*
		/// </summary>
		public static void Hash_0x966de09688a1de39(int _groupId, float _p1, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0x966DE09688A1DE39, _groupId, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// _SET_FORMATION_P*
		/// </summary>
		public static void Hash_0x7e5185b979706210(int _groupId, int _p1)
		{
			Function.Call((Hash)0x7E5185B979706210, _groupId, _p1);
		}
		/// <summary>
		/// _SET_SCENARIO_PED_* - _SET_SPAWNER_*
		/// </summary>
		public static void Hash_0x40c3524d4ed83554(int _groupId, bool _p1)
		{
			Function.Call((Hash)0x40C3524D4ED83554, _groupId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x86fafc18e3d4380c(int _groupId, bool _p1)
		{
			Function.Call((Hash)0x86FAFC18E3D4380C, _groupId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x07ea5b053fa60ac7(int _groupId, bool _p1)
		{
			Function.Call((Hash)0x07EA5B053FA60AC7, _groupId, _p1);
		}
		/// <summary>
		/// Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
		/// </summary>
		public static void Hash_0xf9cbd46433e36713(int _ped, int _targetEntity, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, string _p9)
		{
			Function.Call((Hash)0xF9CBD46433E36713, _ped, _targetEntity, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehiclePedIsUsing(int _ped)
		{
			return Function.Call<int>((Hash)0x6094AD011A2EA87D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehiclePedIsEntering(int _ped)
		{
			return Function.Call<int>((Hash)0xF92691AED837A5FC, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleDraftHorseIsAttachedTo(int _horse)
		{
			return Function.Call<int>((Hash)0xE4770DA1B8FF4FD1, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLastVehicleDraftHorseWasAttachedTo(int _horse)
		{
			return Function.Call<int>((Hash)0x5064DB5083C29921, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetSeatPedIsUsing(int _ped)
		{
			return Function.Call<int>((Hash)0x4E76CB57222A00E5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTransportPedIsSeatedOn(int _ped)
		{
			return Function.Call<int>((Hash)0x849BD6C6314793D0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedEnteringAnyTransport(int _ped)
		{
			return Function.Call<bool>((Hash)0x1D46B417F926D34D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGravity(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x9FF447B6B6AD960A, _ped, _toggle);
		}
		/// <summary>
		/// Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
		/// _SET_PED_S* - _SET_PED_TARGET_*
		/// </summary>
		public static void Hash_0x96595b36d6a2279b(int _animal, bool _toggle)
		{
			Function.Call((Hash)0x96595B36D6A2279B, _animal, _toggle);
		}
		/// <summary>
		/// Only used in R* Script beat_sharp_shooter
		/// Blocks ped from swimming underwater
		/// </summary>
		public static void SetPedImmersionFlag(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x7FB0088E8769CDDB, _ped, _toggle);
		}
		/// <summary>
		/// Only used in R* Script mob4 and rcm_mason4
		/// _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
		/// </summary>
		public static void Hash_0xa90684ed185ccb4b(int _animal, bool _p1, float _p2, float _p3)
		{
			Function.Call((Hash)0xA90684ED185CCB4B, _animal, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FakeSetPedLocoInjured(int _ped, bool _enabled)
		{
			Function.Call((Hash)0x8B3CB08158E98481, _ped, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForcePedDeath(int _ped, int _pedKiller, uint _weapon)
		{
			Function.Call((Hash)0x1CE875505D45338A, _ped, _pedKiller, _weapon);
		}
		/// <summary>
		/// damages a ped with the given amount
		/// </summary>
		public static void ApplyDamageToPed(int _ped, int _damageAmount, int _p2, int _boneId, int _pedKiller)
		{
			Function.Call((Hash)0x697157CED63F18D4, _ped, _damageAmount, _p2, _boneId, _pedKiller);
		}
		/// <summary>
		/// _SET_PED_D*
		/// </summary>
		public static void Hash_0xbad2a311667a50d7(int _ped, bool _p1)
		{
			Function.Call((Hash)0xBAD2A311667A50D7, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedType(int _ped)
		{
			return Function.Call<int>((Hash)0xFF059E1E4C01E63C, _ped);
		}
		/// <summary>
		/// Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
		/// toggle = bSetRelGroup
		/// </summary>
		public static void SetPedAsCop(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xBB03C38DD3FB7FFD, _ped, _toggle);
		}
		/// <summary>
		/// _SET_PED_A*
		/// </summary>
		public static void Hash_0x405180b14da5a935(int _ped, bool _p1)
		{
			Function.Call((Hash)0x405180B14DA5A935, _ped, _p1);
		}
		/// <summary>
		/// personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
		/// personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
		/// </summary>
		public static void SetPedInteractionPersonality(int _ped, uint _personality)
		{
			Function.Call((Hash)0x24C82EF607105FAA, _ped, _personality);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedInteractionPersonality(int _ped)
		{
			return Function.Call<uint>((Hash)0xD7AD3C7EBAF88C92, _ped);
		}
		/// <summary>
		/// Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE
		/// _SET_PED_P* - _SET_PED_R*
		/// </summary>
		public static void Hash_0xb8b6430ead2d2437(int _ped, uint _p1)
		{
			Function.Call((Hash)0xB8B6430EAD2D2437, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_P* - _SET_PED_R*
		/// </summary>
		public static void Hash_0x329772c47dbb2fbc(int _ped)
		{
			Function.Call((Hash)0x329772C47DBB2FBC, _ped);
		}
		/// <summary>
		/// Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
		/// </summary>
		public static bool GetIsPedInDisputeWithPed(int _ped, int _pedInDisputeWith)
		{
			return Function.Call<bool>((Hash)0x331550B212014B92, _ped, _pedInDisputeWith);
		}
		/// <summary>
		/// _GET_IS_PED_*
		/// </summary>
		public static bool Hash_0x94132d7c8d3575c4(int _ped)
		{
			return Function.Call<bool>((Hash)0x94132D7C8D3575C4, _ped);
		}
		/// <summary>
		/// _SET_PED_IN*
		/// </summary>
		public static void Hash_0x8af46e5159a5b620(int _ped, uint _speechParams)
		{
			Function.Call((Hash)0x8AF46E5159A5B620, _ped, _speechParams);
		}
		/// <summary>
		/// _SET_PED_IN*
		/// </summary>
		public static void Hash_0x45fea6d5539bd474(int _ped, string _p1)
		{
			Function.Call((Hash)0x45FEA6D5539BD474, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_IN*
		/// </summary>
		public static void Hash_0x20c5459379d75c1c(int _ped, string _p1)
		{
			Function.Call((Hash)0x20C5459379D75C1C, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_IN*
		/// </summary>
		public static void Hash_0xe37acee15ac50c7e(int _ped, string _p1)
		{
			Function.Call((Hash)0xE37ACEE15AC50C7E, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_IN*
		/// </summary>
		public static void Hash_0xa3c53cde922bc78b(int _ped, string _p1)
		{
			Function.Call((Hash)0xA3C53CDE922BC78B, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_IN*
		/// </summary>
		public static void Hash_0x41c23a8e6b344867(int _ped, string _p1)
		{
			Function.Call((Hash)0x41C23A8E6B344867, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsPedRespondingToPositiveInteraction(int _ped, int _player)
		{
			return Function.Call<bool>((Hash)0x9337183FDA2E9035, _ped, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsPedRespondingToNegativeInteraction(int _ped, int _player)
		{
			return Function.Call<bool>((Hash)0xA454D234E45BB6E5, _ped, _player);
		}
		/// <summary>
		/// _CLEAR_PED_B* - _CLEAR_PED_C*
		/// </summary>
		public static void Hash_0xa7dc9266ed6a4e51(int _ped)
		{
			Function.Call((Hash)0xA7DC9266ED6A4E51, _ped);
		}
		/// <summary>
		/// _GET_PED_B* - _GET_PED_C*
		/// </summary>
		public static int Hash_0x89816b58c3466262(int _ped)
		{
			return Function.Call<int>((Hash)0x89816B58C3466262, _ped);
		}
		/// <summary>
		/// _CLEAR*
		/// </summary>
		public static void Hash_0x97b06669ac569003(int _ped1, int _ped2)
		{
			Function.Call((Hash)0x97B06669AC569003, _ped1, _ped2);
		}
		/// <summary>
		/// Used in Script Function SKCS_PLAYER_ROBBING
		/// _SET_PED_A*
		/// </summary>
		public static void Hash_0x85f500f4e24ca43e(int _ped, float _p1)
		{
			Function.Call((Hash)0x85F500F4E24CA43E, _ped, _p1);
		}
		/// <summary>
		/// Used in Script Function SKCS_PLAYER_ROBBING
		/// _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
		/// </summary>
		public static void Hash_0x9b9b9fa0ea283e3d(int _ped, float _p1)
		{
			Function.Call((Hash)0x9B9B9FA0EA283E3D, _ped, _p1);
		}
		/// <summary>
		/// _SET_C*
		/// </summary>
		public static void Hash_0xec60d1d225bc50aa(int _ped, float _p1)
		{
			Function.Call((Hash)0xEC60D1D225BC50AA, _ped, _p1);
		}
		/// <summary>
		/// _SET_A* - _SET_B*
		/// </summary>
		public static void Hash_0x12f2d161bf4031fc(int _ped, float _p1)
		{
			Function.Call((Hash)0x12F2D161BF4031FC, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0ada3ec589e1736e()
		{
			Function.Call((Hash)0x0ADA3EC589E1736E);
		}
		/// <summary>
		/// If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
		/// _GET_IS_PED_[M-R]*
		/// </summary>
		public static bool GetIsPedBeingRobbed(int _ped, int _player, bool _trueUntilPlayerPocketsItem)
		{
			return Function.Call<bool>((Hash)0xE33F98BD76490ABC, _ped, _player, _trueUntilPlayerPocketsItem);
		}
		/// <summary>
		/// Used in Script Function LA_CHECK_ALERTED
		/// _GET_IS_PED_*
		/// </summary>
		public static bool Hash_0xd55db4466d00a258(int _legendaryAnimal)
		{
			return Function.Call<bool>((Hash)0xD55DB4466D00A258, _legendaryAnimal);
		}
		/// <summary>
		/// Sets the maximum health of a ped.
		/// </summary>
		public static void SetPedMaxHealth(int _ped, int _value)
		{
			Function.Call((Hash)0xF5F6378C4F3419D3, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedMaxHealth(int _ped)
		{
			return Function.Call<int>((Hash)0x4700A416E8324EF3, _ped);
		}
		/// <summary>
		/// configHash: see pedhealth.meta
		/// </summary>
		public static void SetPedHealthConfig(int _ped, uint _configHash)
		{
			Function.Call((Hash)0xF6B82FCE03B43A37, _ped, _configHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InitPedDefaultHealth(int _ped)
		{
			Function.Call((Hash)0x7DD7FB3480D8083E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedMaxTimeInWater(int _ped, float _value)
		{
			Function.Call((Hash)0x43C851690662113D, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedMaxTimeUnderwater(int _ped, float _value)
		{
			Function.Call((Hash)0x6BA428C528D9E522, _ped, _value);
		}
		/// <summary>
		/// _CLEAR_PED_D*
		/// </summary>
		public static void Hash_0xaf041c10756c30fb(int _ped, bool _p1, bool _p2, bool _p3)
		{
			Function.Call((Hash)0xAF041C10756C30FB, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// _SET_C*
		/// </summary>
		public static void Hash_0x5af24ca9c974e51a(int _ped1, int _ped2)
		{
			Function.Call((Hash)0x5AF24CA9C974E51A, _ped1, _ped2);
		}
		/// <summary>
		/// state:
		/// enum eKnockOffVehicle
		/// {
		/// 	KNOCKOFFVEHICLE_DEFAULT,
		/// 	KNOCKOFFVEHICLE_NEVER,
		/// 	KNOCKOFFVEHICLE_EASY,
		/// 	KNOCKOFFVEHICLE_HARD
		/// };
		/// </summary>
		public static void SetPedCanBeKnockedOffVehicle(int _ped, int _state)
		{
			Function.Call((Hash)0x7A6535691B477C48, _ped, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanKnockPedOffVehicle(int _ped)
		{
			return Function.Call<bool>((Hash)0x51AC07A44D4F5B8A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void KnockPedOffVehicle(int _ped)
		{
			Function.Call((Hash)0x45BBCBA77C29A841, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedAsGroupMember(int _groupID, int _memberNumber)
		{
			return Function.Call<int>((Hash)0x51455483CF23ED97, _groupID, _memberNumber);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedAsGroupLeader(int _groupID)
		{
			return Function.Call<int>((Hash)0x5CCE68DBD5FE93EC, _groupID);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedKeepTask(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x971D38760FBC02EF, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedSwimming(int _ped)
		{
			return Function.Call<bool>((Hash)0x9DE327631295B4C2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedSwimmingUnderWater(int _ped)
		{
			return Function.Call<bool>((Hash)0xC024869A53992F34, _ped);
		}
		/// <summary>
		/// _IS_PED_IN_* (near water?)
		/// </summary>
		public static bool Hash_0xdc88d06719070c39(int _ped)
		{
			return Function.Call<bool>((Hash)0xDC88D06719070C39, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetCreateRandomCops(bool _toggle)
		{
			Function.Call((Hash)0x102E68B2024D536D, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInAnyTrain(int _ped)
		{
			return Function.Call<bool>((Hash)0x6F972C1AB75A1ED0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedGettingIntoAVehicle(int _ped)
		{
			return Function.Call<bool>((Hash)0xBB062B2B5722478E, _ped);
		}
		/// <summary>
		/// _HAS_PED_*
		/// </summary>
		public static bool Hash_0x550cb89dd7f4fa3d(int _ped1, int _ped2)
		{
			return Function.Call<bool>((Hash)0x550CB89DD7F4FA3D, _ped1, _ped2);
		}
		/// <summary>
		/// Ped can not pull out a weapon when true
		/// </summary>
		public static void SetEnableHandcuffs(int _ped, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xDF1AF8B5D56542FA, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEnableBoundAnkles(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xC52E0F855C58FC2E, _ped, _toggle);
		}
		/// <summary>
		/// If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
		/// _GET_D* - _GET_E*
		/// </summary>
		public static bool Hash_0x8822f139408b8d0a(int _ped)
		{
			return Function.Call<bool>((Hash)0x8822F139408B8D0A, _ped);
		}
		/// <summary>
		/// Only used in R* Script train_robbery4
		/// _SET_PED_D*
		/// </summary>
		public static void Hash_0x8822f124788b8d0a(int _ped, bool _p1)
		{
			Function.Call((Hash)0x8822F124788B8D0A, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPedWeaponMovementClipset(int _ped)
		{
			Function.Call((Hash)0x97B0DB5B4AA74E77, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGetupAnimation(int _ped, string _animName, bool _p2)
		{
			Function.Call((Hash)0x3AE3552E7C207CC5, _ped, _animName, _p2);
		}
		/// <summary>
		/// Used in R* Script generic_weight_control_item
		/// _CLEAR_PED_E* - CLEAR_PED_(G?)L*
		/// </summary>
		public static void Hash_0x88a95bb640fc186f(int _ped)
		{
			Function.Call((Hash)0x88A95BB640FC186F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPedInVehicleContext(int _ped)
		{
			Function.Call((Hash)0x22EF8FF8778030EB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x878e8104fa27cdae(int _vehicle, uint _p1)
		{
			Function.Call((Hash)0x878E8104FA27CDAE, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGestureGroup(int _ped, string _gesture, int _p2)
		{
			Function.Call((Hash)0xDDF803377F94AAA8, _ped, _gesture, _p2);
		}
		/// <summary>
		/// Seems to set the ped's loco type.
		/// Values used in the scripts:
		/// algie
		/// angry_female
		/// arthur_healthy
		/// cowboy
		/// cowboy_f
		/// default
		/// default_female
		/// free_slave_01
		/// free_slave_02
		/// gold_panner
		/// guard_lantern
		/// injured_general
		/// john_marston
		/// lilly_millet
		/// lone_prisoner
		/// lost_man
		/// mp_ova_hunter
		/// mp_ova_hunter_female
		/// murfree
		/// old_female
		/// primate
		/// rally
		/// waiter
		/// war_veteran
		/// </summary>
		public static void SetPedDesiredLocoForModel(int _ped, string _locomotionArchetype)
		{
			Function.Call((Hash)0x923583741DC87BCE, _ped, _locomotionArchetype);
		}
		/// <summary>
		/// Clears locomotion archetype
		/// </summary>
		public static void ClearPedDesiredLocoForModel(int _ped)
		{
			Function.Call((Hash)0x4FD80C3DD84B817B, _ped);
		}
		/// <summary>
		/// Sets peds motion type
		/// </summary>
		public static void SetPedDesiredLocoMotionType(int _ped, string _locoMotionType)
		{
			Function.Call((Hash)0x89F5E7ADECCCB49C, _ped, _locoMotionType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedDesiredLocoMotionType(int _ped)
		{
			Function.Call((Hash)0x58F7DB5BD8FA2288, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2371c39d4f91c288(int _ped)
		{
			Function.Call((Hash)0x2371C39D4F91C288, _ped);
		}
		/// <summary>
		/// Known get up animation types: REAR, FRONT
		/// </summary>
		public static void RequestPedGetupAnimation(int _ped, string _getUpType)
		{
			Function.Call((Hash)0xEAA8242C8479C27D, _ped, _getUpType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PedCowerInPlace(int _ped, int _ped2)
		{
			Function.Call((Hash)0xF6E1E9F47A7686F8, _ped, _ped2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PedCowerMoveToPoint(int _ped, float _p1, float _p2, float _p3, int _ped2, float _p5)
		{
			Function.Call((Hash)0x1E4C940233FC0C6F, _ped, _p1, _p2, _p3, _ped2, _p5);
		}
		/// <summary>
		/// _PED_COWER_M*
		/// </summary>
		public static void Hash_0x16f798a05bb9e3b5(int _ped)
		{
			Function.Call((Hash)0x16F798A05BB9E3B5, _ped);
		}
		/// <summary>
		/// target: 0 affects everyone
		/// duration: -1 indefinite
		/// flag: always 4 in R* Scripts
		/// </summary>
		public static void PedEmotionalPresetLocoMotion(int _ped, string _presetName, int _targetPed, int _duration, int _flag)
		{
			Function.Call((Hash)0xAAB050DA48B57978, _ped, _presetName, _targetPed, _duration, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PedClearLocoMotion(int _ped)
		{
			Function.Call((Hash)0x935CF6E42BAF7F4D, _ped);
		}
		/// <summary>
		/// _STOP_(?)*
		/// </summary>
		public static void Hash_0x32ccad8a981b53d3(int _ped)
		{
			Function.Call((Hash)0x32CCAD8A981B53D3, _ped);
		}
		/// <summary>
		/// SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
		/// </summary>
		public static void SetPedDrunkness(int _ped, bool _enabled, float _drunknessLevel)
		{
			Function.Call((Hash)0x406CCF555B04FAD3, _ped, _enabled, _drunknessLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDrunk(int _ped)
		{
			return Function.Call<bool>((Hash)0x50F124E6EF188B22, _ped);
		}
		/// <summary>
		/// Returns ped drunk level
		/// _H* or _I*
		/// </summary>
		public static float GetPedDrunkness(int _ped)
		{
			return Function.Call<float>((Hash)0x6FB76442469ABD68, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetAnimInitialOffsetPosition(string _animDict, string _animName, float _x, float _y, float _z, float _xRot, float _yRot, float _zRot, float _p8, int _p9)
		{
			return Function.Call<Vector3>((Hash)0xBE22B26DD764C040, _animDict, _animName, _x, _y, _z, _xRot, _yRot, _zRot, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetAnimInitialOffsetRotation(string _animDict, string _animName, float _x, float _y, float _z, float _xRot, float _yRot, float _zRot, float _p8, int _p9)
		{
			return Function.Call<Vector3>((Hash)0x4B805E6046EE9E47, _animDict, _animName, _x, _y, _z, _xRot, _yRot, _zRot, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedRandomComponentVariation(int _ped, int _p1)
		{
			Function.Call((Hash)0xC8A9481A01E63C28, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void KnockOffPedProp(int _ped, bool _p1, bool _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0x6FD7816A36615F48, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlockingOfNonTemporaryEvents(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x9F8AA94D6D97DBF4, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetBlockingOfNonTemporaryEvents(int _ped)
		{
			return Function.Call<bool>((Hash)0x268B3AEBF032A88D, _ped);
		}
		/// <summary>
		/// _SET_PED_P* - _SET_PED_R*
		/// </summary>
		public static void Hash_0xc17a94cc8fc3c61a(int _entity, int _flag, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0xC17A94CC8FC3C61A, _entity, _flag, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedScale(int _ped, float _scale)
		{
			Function.Call((Hash)0x25ACFC650B65C538, _ped, _scale);
		}
		/// <summary>
		/// _GET_PED_M*
		/// </summary>
		public static float Hash_0x134775b093ad5c38(int _ped)
		{
			return Function.Call<float>((Hash)0x134775B093AD5C38, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedHeight(int _ped)
		{
			return Function.Call<float>((Hash)0x1D491CCF7211FB74, _ped);
		}
		/// <summary>
		/// PS_SMALL = 0,
		/// PS_MEDIUM,
		/// PS_MEDIUM_LARGE,
		/// PS_LARGE,
		/// PS_EXTRA_LARGE
		/// </summary>
		public static int GetPedModelSizeFromHash(uint _modelHash)
		{
			return Function.Call<int>((Hash)0xA65AA1ACE81E5A77, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RegisterTarget(int _ped, int _targetPed, bool _p2)
		{
			Function.Call((Hash)0x2F25D9AEFA34FBA2, _ped, _targetPed, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RegisterHatedTargetsInArea(int _ped, float _x, float _y, float _z, float _radius)
		{
			Function.Call((Hash)0xD8736EFDA38EDC5C, _ped, _x, _y, _z, _radius);
		}
		/// <summary>
		/// Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
		/// </summary>
		public static void RegisterHatedTargetsAroundPed(int _ped, float _radius)
		{
			Function.Call((Hash)0x9222F300BF8354FE, _ped, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTarget(int _ped, int _targetPed)
		{
			return Function.Call<bool>((Hash)0x6E5CBCB3941D7D08, _ped, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveTarget(int _ped, int _targetPed)
		{
			Function.Call((Hash)0x4707E9C23D8CA3FE, _ped, _targetPed);
		}
		/// <summary>
		/// Gets the closest ped in a radius.
		/// </summary>
		public static bool GetClosestPed(float _x, float _y, float _z, float _radius, bool _p4, bool _p5, int _outPed, bool _p7, bool _p8, bool _p9, int _pedType)
		{
			return Function.Call<bool>((Hash)0xC33AB876A77F8164, _x, _y, _z, _radius, _p4, _p5, _outPed, _p7, _p8, _p9, _pedType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanPedRagdoll(int _ped)
		{
			return Function.Call<bool>((Hash)0x128F79EDCECE4FD5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetPedToRagdoll(int _ped, int _timeMin, int _timeMax, int _ragdollType, bool _p4, bool _p5, string _p6)
		{
			return Function.Call<bool>((Hash)0xAE99FB955581844A, _ped, _timeMin, _timeMax, _ragdollType, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetPedToRagdollWithFall(int _ped, int _timeMin, int _timeMax, int _ragdollType, float _falldirX, float _falldirY, float _falldirZ, float _p7, float _p8, float _p9, float _p10, float _p11, float _p12, float _p13)
		{
			return Function.Call<bool>((Hash)0xD76632D99E4966C8, _ped, _timeMin, _timeMax, _ragdollType, _falldirX, _falldirY, _falldirZ, _p7, _p8, _p9, _p10, _p11, _p12, _p13);
		}
		/// <summary>
		/// Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
		/// </summary>
		public static void SetPedRagdollOnCollision(int _ped, bool _toggle, bool _p2)
		{
			Function.Call((Hash)0xF0A4F1BBF4FA7497, _ped, _toggle, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedToDisableRagdoll(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x221F4D9912B7FE86, _ped, _toggle);
		}
		/// <summary>
		/// If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
		/// </summary>
		public static bool IsPedRagdoll(int _ped)
		{
			return Function.Call<bool>((Hash)0x47E4E977581C5B55, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedRunningRagdollTask(int _ped)
		{
			return Function.Call<bool>((Hash)0xE3B6097CC25AA69E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedRagdollForceFall(int _ped)
		{
			Function.Call((Hash)0x01F6594B923B9251, _ped);
		}
		/// <summary>
		/// _SET_PED_T* - SET_PED_U*
		/// </summary>
		public static void Hash_0x8cb2553c559102c1(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0x8CB2553C559102C1, _ped, _p1, _p2);
		}
		/// <summary>
		/// _DISABLE_A* - _DISABLE_C*
		/// </summary>
		public static void Hash_0xfd3c31a2e45671e7(int _ped, int _p1)
		{
			Function.Call((Hash)0xFD3C31A2E45671E7, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPedRagdollTimer(int _ped)
		{
			Function.Call((Hash)0x9FA4664CF62E47E8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanRagdoll(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xB128377056A54E2A, _ped, _toggle);
		}
		/// <summary>
		/// _IS_PED_R*
		/// </summary>
		public static bool Hash_0x3aec4a410ecaf30d(int _ped)
		{
			return Function.Call<bool>((Hash)0x3AEC4A410ECAF30D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedRunningMobilePhoneTask(int _ped)
		{
			return Function.Call<bool>((Hash)0x2AFE52F782F25775, _ped);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/RAGDOLL_BLOCKING_FLAGS
		/// 
		/// flags:
		/// enum eRagdollBlockingFlags
		/// {
		/// 	RBF_BULLET_IMPACT = (1 << 0),
		/// 	RBF_VEHICLE_IMPACT = (1 << 1),
		/// 	RBF_FIRE = (1 << 2),
		/// 	RBF_ELECTROCUTION = (1 << 3),
		/// 	RBF_PLAYER_IMPACT = (1 << 4),
		/// 	RBF_EXPLOSION = (1 << 5),
		/// 	RBF_IMPACT_OBJECT = (1 << 6),
		/// 	RBF_MELEE = (1 << 7),
		/// 	RBF_RUBBER_BULLET = (1 << 8),
		/// 	RBF_FALLING = (1 << 9),
		/// 	RBF_WATER_JET = (1 << 10),
		/// 	RBF_DROWNING = (1 << 11),
		/// 	RBF_0x9F52E2C4 = (1 << 12),
		/// 	RBF_PLAYER_BUMP = (1 << 13),
		/// 	RBF_PLAYER_RAGDOLL_BUMP = (1 << 14),
		/// 	RBF_PED_RAGDOLL_BUMP = (1 << 15),
		/// 	RBF_VEHICLE_GRAB = (1 << 16),
		/// 	RBF_SMOKE_GRENADE = (1 << 17),
		/// 	RBF_HORSE_BUMP = (1 << 18),
		/// 	RBF_ACTIVATE_ON_COLLISION = (1 << 19)
		/// };
		/// </summary>
		public static void SetRagdollBlockingFlags(int _ped, int _flags)
		{
			Function.Call((Hash)0x26695EC767728D84, _ped, _flags);
		}
		/// <summary>
		/// flags: see SET_RAGDOLL_BLOCKING_FLAGS
		/// </summary>
		public static void ClearRagdollBlockingFlags(int _ped, int _flags)
		{
			Function.Call((Hash)0xD86D101FCFD00A4B, _ped, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9f933e0985e12c51(int _ped, float _p1, float _p2, float _p3)
		{
			Function.Call((Hash)0x9F933E0985E12C51, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x88b2026a3b0be33d(int _ped, float _p1)
		{
			Function.Call((Hash)0x88B2026A3B0BE33D, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDefensiveAreaVolume(int _ped, int _volume, bool _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0xFC3DB99C8144CD81, _ped, _volume, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedSphereDefensiveArea(int _ped, float _x, float _y, float _z, float _radius, bool _p5, bool _p6, bool _p7)
		{
			Function.Call((Hash)0x9D3151A373974804, _ped, _x, _y, _z, _radius, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDefensiveSphereAttachedToEntity(int _ped, int _entity, float _x, float _y, float _z, float _radius, int _p6, bool _p7)
		{
			Function.Call((Hash)0x1854217C640B39EC, _ped, _entity, _x, _y, _z, _radius, _p6, _p7);
		}
		/// <summary>
		/// _SET_PED_(A?)*
		/// </summary>
		public static void SetPedDefensiveAreaToAngledArea(int _ped, float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _p7, bool _p8, bool _p9, int _entity, bool _p11)
		{
			Function.Call((Hash)0xEB2BFE5D009F0331, _ped, _x1, _y1, _z1, _x2, _y2, _z2, _p7, _p8, _p9, _entity, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDefensiveAreaDirection(int _ped, float _p1, float _p2, float _p3, bool _p4)
		{
			Function.Call((Hash)0x413C6C763A4AFFAD, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// Ped will no longer get angry when you stay near him.
		/// </summary>
		public static void RemovePedDefensiveArea(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x74D4E028107450A9, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetPedDefensiveAreaPosition(int _ped, bool _p1)
		{
			return Function.Call<Vector3>((Hash)0x3C06B8786DD94CD1, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDefensiveAreaActive(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0xBA63D9FE45412247, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedDefensiveVolume(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0xEF2E6F870783369B, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_A*
		/// </summary>
		public static void Hash_0x4ec4ea2f72b36358(int _ped, bool _p1)
		{
			Function.Call((Hash)0x4EC4EA2F72B36358, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_COMBAT_*
		/// </summary>
		public static void Hash_0xcf0b19806473d324(int _ped, float _x, float _y, float _z)
		{
			Function.Call((Hash)0xCF0B19806473D324, _ped, _x, _y, _z);
		}
		/// <summary>
		/// _RESET_PED_C*
		/// </summary>
		public static void Hash_0xb4b7c92fce7347b7(int _ped)
		{
			Function.Call((Hash)0xB4B7C92FCE7347B7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReviveInjuredPed(int _ped)
		{
			Function.Call((Hash)0x8D8ACD8388CD99CE, _ped);
		}
		/// <summary>
		/// This function will simply bring the dead ped back to life.
		/// 
		/// Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
		/// 
		/// Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
		/// </summary>
		public static void ResurrectPed(int _ped)
		{
			Function.Call((Hash)0x71BC8E838B9C6035, _ped);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetPedNameDebug(int _ped, string _name)
		{
			Function.Call((Hash)0x98EFA132A4117BE1, _ped, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpecialFunctionDoNotUse(int _ped, bool _p1)
		{
			Function.Call((Hash)0xF9ACF4A08098EA25, _ped, _p1);
		}
		/// <summary>
		/// _HAS_*
		/// </summary>
		public static bool Hash_0x7020839c7302d8ac(int _ped)
		{
			return Function.Call<bool>((Hash)0x7020839C7302D8AC, _ped);
		}
		/// <summary>
		/// _C*
		/// </summary>
		public static void Hash_0xe1aadd0055d76603(int _ped, int _entity, int _boneIndex1, int _boneIndex2, float _x, float _y, float _z, float _p7, bool _p8, bool _p9, int _p10)
		{
			Function.Call((Hash)0xE1AADD0055D76603, _ped, _entity, _boneIndex1, _boneIndex2, _x, _y, _z, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// _C*
		/// </summary>
		public static void Hash_0x5a1a929c8b729b4a(int _ped)
		{
			Function.Call((Hash)0x5A1A929C8B729B4A, _ped);
		}
		/// <summary>
		/// _SET_PED_D*
		/// </summary>
		public static void Hash_0x97a38b65ebda3d50(int _ped, bool _p1)
		{
			Function.Call((Hash)0x97A38B65EBDA3D50, _ped, _p1);
		}
		/// <summary>
		/// _GET_PED_D*
		/// </summary>
		public static bool Hash_0x06a10b4d7f50b0c3(int _ped)
		{
			return Function.Call<bool>((Hash)0x06A10B4D7F50B0C3, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x88a5564b19c15391(int _ped)
		{
			return Function.Call<bool>((Hash)0x88A5564B19C15391, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x354ca4dddeec397a(int _ped)
		{
			return Function.Call<int>((Hash)0x354CA4DDDEEC397A, _ped);
		}
		/// <summary>
		/// METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
		/// _SET_M* - _SET_P*
		/// </summary>
		public static void Hash_0xfea6126c34df2532(int _ped, bool _p1)
		{
			Function.Call((Hash)0xFEA6126C34DF2532, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_P* - _SET_PED_R*
		/// </summary>
		public static void Hash_0xa967d6a8ed2d713b(int _ped, bool _p1)
		{
			Function.Call((Hash)0xA967D6A8ED2D713B, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ApplyPedBloodSpecific(int _ped, int _p1, float _p2, float _p3, float _p4, float _p5, int _p6, float _p7, int _p8)
		{
			Function.Call((Hash)0xEF0D582CBF2D9B0F, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x58d32261ae0f0843(int _ped, int _boneId, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, string _p8)
		{
			Function.Call((Hash)0x58D32261AE0F0843, _ped, _boneId, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// _SET_PED_F*
		/// </summary>
		public static void Hash_0x735662994e60a710(int _ped, bool _p1)
		{
			Function.Call((Hash)0x735662994E60A710, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x91bab9e064f036cd(int _p0, int _p1)
		{
			Function.Call((Hash)0x91BAB9E064F036CD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x897934e868eddd6c(int _ped, int _p1, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0x897934E868EDDD6C, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// bloodFountainPressure: visible effect from 0.0 till 20.0
		/// yaw: visible effect from -3.0 till 3.0
		/// bloodFountainDirection: 1.0 left side, -1.0 right side
		/// bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
		/// make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
		/// </summary>
		public static void SetPedActivateWoundEffect(int _ped, int _p1, int _boneId, float _moveWoundLeftRight, float _bloodFountainPressure, float _yaw, float _bloodFountainDirection, float _bloodFountainPulse, float _p8, float _p9)
		{
			Function.Call((Hash)0xFFD54D9FE71B966A, _ped, _p1, _boneId, _moveWoundLeftRight, _bloodFountainPressure, _yaw, _bloodFountainDirection, _bloodFountainPulse, _p8, _p9);
		}
		/// <summary>
		/// Params: 0.0f to remove wound effects
		/// </summary>
		public static void UpdatePedWoundEffect(int _ped, float _value)
		{
			Function.Call((Hash)0x66B1CB778D911F49, _ped, _value);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
		/// </summary>
		public static void ApplyPedDamagePack(int _ped, string _damagePack, float _damage, float _mult)
		{
			Function.Call((Hash)0x46DF918788CB093F, _ped, _damagePack, _damage, _mult);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedBloodDamage(int _ped)
		{
			Function.Call((Hash)0x8FE22675A5A45817, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedBloodDamageByZone(int _ped, int _p1)
		{
			Function.Call((Hash)0x56E3B78C5408D9F4, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedDamageDecalByZone(int _ped, int _p1, string _p2)
		{
			Function.Call((Hash)0x523C79AEEFCC4A2A, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedBloodDamageFacial(int _ped, int _p1)
		{
			Function.Call((Hash)0x7F5D88333EE8A86F, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x34c11114887150fd(int _p0, int _p1)
		{
			Function.Call((Hash)0x34C11114887150FD, _p0, _p1);
		}
		/// <summary>
		/// METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
		/// p1 is mostly 10
		/// _CLEAR_PED_N* - _CLEAR_PED_W*
		/// </summary>
		public static void Hash_0xd8544f6260f5f01e(int _ped, int _p1)
		{
			Function.Call((Hash)0xD8544F6260F5F01E, _ped, _p1);
		}
		/// <summary>
		/// Washing player's face/hands now
		/// _FA* - _FI*
		/// </summary>
		public static void Hash_0xeb8886e1065654cd(int _ped, int _p1, string _p2, float _p3)
		{
			Function.Call((Hash)0xEB8886E1065654CD, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FadeAndDestroyPed(int _ped)
		{
			Function.Call((Hash)0x7043D0681285BA2D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedQueuedForDeletion(int _ped)
		{
			return Function.Call<bool>((Hash)0x8D9BFCE3352DE47F, _ped);
		}
		/// <summary>
		/// It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
		/// </summary>
		public static void ClearPedWetness(int _ped)
		{
			Function.Call((Hash)0x9C720776DAA43E7E, _ped);
		}
		/// <summary>
		/// It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
		/// </summary>
		public static void SetPedWetnessHeight(int _ped, float _height)
		{
			Function.Call((Hash)0x44CB6447D2571AA0, _ped, _height);
		}
		/// <summary>
		/// _SET_PED_WETNESS*
		/// </summary>
		public static void Hash_0xf9cff5bb70e8a2cb(int _ped, float _p1)
		{
			Function.Call((Hash)0xF9CFF5BB70E8A2CB, _ped, _p1);
		}
		/// <summary>
		/// combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
		/// </summary>
		public static void SetPedWetnessEnabledThisFrame(int _ped)
		{
			Function.Call((Hash)0xB5485E4907B53019, _ped);
		}
		/// <summary>
		/// Washing player's face/hands now
		/// _CLEAR_PED_E* - _CLEAR_PED_L*
		/// </summary>
		public static void Hash_0xa7a806677f8de138(int _ped)
		{
			Function.Call((Hash)0xA7A806677F8DE138, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa064bbabb064446f(int _p0)
		{
			Function.Call((Hash)0xA064BBABB064446F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedEnvDirt(int _ped)
		{
			Function.Call((Hash)0x6585D955A68452A5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedSweat(int _ped, float _sweat)
		{
			Function.Call((Hash)0x27B0405F59637D1F, _ped, _sweat);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedDecorations(int _ped)
		{
			Function.Call((Hash)0x0E5173C163976E38, _ped);
		}
		/// <summary>
		/// Despite this function's name, it simply returns whether the specified handle is a Ped.
		/// </summary>
		public static bool WasPedSkeletonUpdated(int _ped)
		{
			return Function.Call<bool>((Hash)0x11B499C1E0FF8559, _ped);
		}
		/// <summary>
		/// Gets the position of the specified bone of the specified ped.
		/// 
		/// ped: The ped to get the position of a bone from.
		/// boneId: The ID of the bone to get the position from. This is NOT the index.
		/// offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
		/// offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
		/// offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
		/// </summary>
		public static Vector3 GetPedBoneCoords(int _ped, int _boneId, float _offsetX, float _offsetY, float _offsetZ)
		{
			return Function.Call<Vector3>((Hash)0x17C07FC640E86B4E, _ped, _boneId, _offsetX, _offsetY, _offsetZ);
		}
		/// <summary>
		/// blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/ADD_SCENARIO_BLOCKING_AREA/README.md
		/// </summary>
		public static int AddScenarioBlockingArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _p6, int _blockingFlags)
		{
			return Function.Call<int>((Hash)0x1B5C85C612E5256E, _x1, _y1, _z1, _x2, _y2, _z2, _p6, _blockingFlags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveScenarioBlockingAreas()
		{
			Function.Call((Hash)0xD37401D78A929A49);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveScenarioBlockingArea(int _p0, bool _p1)
		{
			Function.Call((Hash)0x31D16B74C6E29D66, _p0, _p1);
		}
		/// <summary>
		/// flag: see ADD_SCENARIO_BLOCKING_AREA
		/// </summary>
		public static int AddScenarioBlockingVolume(int _volume, bool _p1, int _flag)
		{
			return Function.Call<int>((Hash)0x4C39C95AE5DB1329, _volume, _p1, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6f46f8acb44c4fc1(int _p0)
		{
			return Function.Call<int>((Hash)0x6F46F8ACB44C4FC1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioBlockingAreaValid(int _p0)
		{
			return Function.Call<bool>((Hash)0x91A5F9CBEBB9D936, _p0);
		}
		/// <summary>
		/// Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
		/// </summary>
		public static bool IsPedUsingScenarioHash(int _ped, uint _scenarioHash)
		{
			return Function.Call<bool>((Hash)0x34D6AC1157C8226C, _ped, _scenarioHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedUsingAnyScenario(int _ped)
		{
			return Function.Call<bool>((Hash)0x57AB4A3080F85143, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedUsingThisScenario(int _ped, int _scenario)
		{
			return Function.Call<bool>((Hash)0x9C54041BB66BCF9E, _ped, _scenario);
		}
		/// <summary>
		/// p2 is always 0, p3 is always 0, p4 is always 1
		/// </summary>
		public static bool CanPedUseScenarioPoint(int _ped, int _scenario, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0xAB643407D0B26F07, _ped, _scenario, _p2, _p3, _p4);
		}
		/// <summary>
		/// _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
		/// </summary>
		public static bool Hash_0x1148f706cf4ebdda(int _ped, uint _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x1148F706CF4EBDDA, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetPedPanicExitScenario(int _ped, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xFE07FF6495D52E2A, _ped, _x, _y, _z);
		}
		/// <summary>
		/// If toggle is true, when the ped is using a scenario he will stop it and become scared
		/// If toggle is false, the ped will not be scared anymore and continue his scenario
		/// 
		/// Old name: _SET_PED_SCARED_WHEN_USING_SCENARIO
		/// </summary>
		public static void ToggleScenarioPedCowerInPlace(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x9A77DFD295E29B09, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd8ceeed54c672b5d(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xD8CEEED54C672B5D, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// Old name: _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
		/// </summary>
		public static bool SetPedShouldPlayDirectedNormalScenarioExit(int _ped, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xEC6935EBE0847B90, _ped, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedShouldPlayNormalScenarioExit(int _ped)
		{
			Function.Call((Hash)0xA3A9299C4F2ADB98, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedShouldPlayImmediateScenarioExit(int _ped)
		{
			Function.Call((Hash)0xF1C03A5352243A30, _ped);
		}
		/// <summary>
		/// lookIntensity:
		/// 0 - REACT_LOOK_NONE
		/// 1 - REACT_LOOK_LOW
		/// 2 - REACT_LOOK_MEDIUM
		/// 3 - REACT_LOOK_HIGH
		/// </summary>
		public static bool SetPedShouldPlayFleeScenarioExit(int _ped, float _x, float _y, float _z, int _lookIntensity)
		{
			return Function.Call<bool>((Hash)0xEEED8FAFEC331A70, _ped, _x, _y, _z, _lookIntensity);
		}
		/// <summary>
		/// lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
		/// </summary>
		public static bool SetPedShouldPlayCombatScenarioExit(int _ped, float _x, float _y, float _z, int _lookIntensity)
		{
			return Function.Call<bool>((Hash)0x802092B07E3B1EEA, _ped, _x, _y, _z, _lookIntensity);
		}
		/// <summary>
		/// lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
		/// </summary>
		public static bool SetPedShouldPlayEmotionalScenarioExit(int _ped, float _x, float _y, float _z, int _lookIntensity, bool _p5)
		{
			return Function.Call<bool>((Hash)0x62FDAD5E01D2DD47, _ped, _x, _y, _z, _lookIntensity, _p5);
		}
		/// <summary>
		/// lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
		/// </summary>
		public static bool SetPedShouldPlayQuickScenarioExit(int _ped, float _x, float _y, float _z, int _lookIntensity, bool _p5)
		{
			return Function.Call<bool>((Hash)0x463803429297117C, _ped, _x, _y, _z, _lookIntensity, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xf9331b3a314eb49d(int _ped)
		{
			return Function.Call<bool>((Hash)0xF9331B3A314EB49D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe735a7da22e88359(int _p0)
		{
			Function.Call((Hash)0xE735A7DA22E88359, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x82cb0f3f0c7785e5(int _p0)
		{
			return Function.Call<int>((Hash)0x82CB0F3F0C7785E5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xca95c156c14b2054(int _p0, int _p1)
		{
			Function.Call((Hash)0xCA95C156C14B2054, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFacialIdleAnimOverride(int _ped, string _animName, string _animDict)
		{
			Function.Call((Hash)0xFFC24B988B938B38, _ped, _animName, _animDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearFacialIdleAnimOverride(int _ped)
		{
			Function.Call((Hash)0x726256CC1EEB182F, _ped);
		}
		/// <summary>
		/// Hashes: MOODAGITATED, MOODAIMING, MOODANGRY, MOODBITCHY, MOODCONCENTRATION, MOODCONCENTRATIONEXTREME, MOODCURIOUS, MOODDEAD, MOODDEFUSE, MOODEXERTIONEXTREME, MOODEXERTIONMEDIUM, MOODEXERTIONMILD, MOODHAPPY, MOODINJUREDMILD, MOODINTIMIDATED, MOODKNOCKEDOUT, MOODNERVOUS, MOODNORMAL, MOODNORMALNEUTRAL, MOODPANIC, MOODSCARED, MOODSHOCKED, MOODSLEEPING, MOODSMUG, MOODTIRED
		/// Params: p2 = 6 in R* Scripts
		/// </summary>
		public static void RequestPedFacialMoodThisFrame(int _ped, uint _mood, int _p2)
		{
			Function.Call((Hash)0x8B3B71C80A29A4BB, _ped, _mood, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd2f0fe8805d91647(int _p0, int _p1)
		{
			Function.Call((Hash)0xD2F0FE8805D91647, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanPlayGestureAnims(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0xBAF20C5432058024, _ped, _p1, _p2);
		}
		/// <summary>
		/// Only used in R* Script net_moonshine_property
		/// _A* - _B*
		/// </summary>
		public static void Hash_0x7edb3c766b0d073f(int _ped)
		{
			Function.Call((Hash)0x7EDB3C766B0D073F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanPlayAmbientAnims(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x6373D1349925A70E, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanPlayAmbientBaseAnims(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x0EB0585D15254740, _ped, _toggle);
		}
		/// <summary>
		/// Only used in R* Script shop_harriet
		/// _SET_PED_F*
		/// </summary>
		public static void Hash_0x4f63433ce3c08230(int _ped, bool _p1)
		{
			Function.Call((Hash)0x4F63433CE3C08230, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanArmIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x6C3B4D6D13B4C841, _ped, _toggle);
		}
		/// <summary>
		/// _SET_PED_CAN_(?)_IK*
		/// </summary>
		public static void SetPedCanUnkBodypartIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xEE9DF765990E8D1D, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanHeadIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xC11C18092C5530DC, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanLegIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x73518ECE2485412B, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanTorsoIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xF2B7106D37947CE0, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanTorsoReactIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xF5846EDB26A98A24, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanTorsoVehicleIk(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x6647C5F6F5792496, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanUseAutoConversationLookat(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xEC4686EC06434678, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedHeadtrackingPed(int _ped1, int _ped2)
		{
			return Function.Call<bool>((Hash)0x5CD3CB88A7F8850D, _ped1, _ped2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedHeadtrackingEntity(int _ped, int _entity)
		{
			return Function.Call<bool>((Hash)0x813A0A7C9D2E831F, _ped, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableAmbientLookAtRequests(int _p0, int _p1)
		{
			Function.Call((Hash)0x80038740C96AD17F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableAllLookAtRequests(int _ped, int _p1)
		{
			Function.Call((Hash)0xE1965A380342BE1F, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_R* - _SET_PED_S*
		/// </summary>
		public static void Hash_0xcd9e5f94a2f38683(int _ped, bool _p1)
		{
			Function.Call((Hash)0xCD9E5F94A2F38683, _ped, _p1);
		}
		/// <summary>
		/// Old name: SET_PED_CLOTH_PACKAGE_INDEX
		/// </summary>
		public static void SetPedClothPinFrames(int _ped, bool _p1)
		{
			Function.Call((Hash)0x78C4E9961DB3EB5B, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_CA* - _SET_PED_CO*
		/// </summary>
		public static void Hash_0x1d4636c90bbefacb(int _ped, int _p1)
		{
			Function.Call((Hash)0x1D4636C90BBEFACB, _ped, _p1);
		}
		/// <summary>
		/// _ADD_*
		/// </summary>
		public static void Hash_0xef371232bc6053e1(int _ped)
		{
			Function.Call((Hash)0xEF371232BC6053E1, _ped);
		}
		/// <summary>
		/// _SET_PED_*
		/// </summary>
		public static void Hash_0x86f0b6730c32ac14(int _ped, bool _p1)
		{
			Function.Call((Hash)0x86F0B6730C32AC14, _ped, _p1);
		}
		/// <summary>
		/// _ATTACH_*
		/// </summary>
		public static void Hash_0x8101ba1c0b462412(int _ped, int _ropeId)
		{
			Function.Call((Hash)0x8101BA1C0B462412, _ped, _ropeId);
		}
		/// <summary>
		/// flagId: https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
		/// </summary>
		public static void SetPedConfigFlag(int _ped, int _flagId, bool _value)
		{
			Function.Call((Hash)0x1913FE4CBF41C463, _ped, _flagId, _value);
		}
		/// <summary>
		/// Needs to be called every frame
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
		/// </summary>
		public static void SetPedResetFlag(int _ped, int _flagId, bool _doReset)
		{
			Function.Call((Hash)0xC1E8A365BF3B29F2, _ped, _flagId, _doReset);
		}
		/// <summary>
		/// flagId: see SET_PED_CONFIG_FLAG
		/// </summary>
		public static bool GetPedConfigFlag(int _ped, int _flagId, bool _p2)
		{
			return Function.Call<bool>((Hash)0x7EE53118C892B513, _ped, _flagId, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedResetFlag(int _ped, int _flagId)
		{
			return Function.Call<bool>((Hash)0xAF9E59B1B1FBF2A0, _ped, _flagId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc6981aff6d2a71c2(int _p0)
		{
			Function.Call((Hash)0xC6981AFF6D2A71C2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe0fe107ab174d64a(int _p0, int _p1)
		{
			Function.Call((Hash)0xE0FE107AB174D64A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGroupMemberPassengerIndex(int _ped, int _index)
		{
			Function.Call((Hash)0x0BDDB8D9EC6BCF3C, _ped, _index);
		}
		/// <summary>
		/// Presumably returns the Entity that the Ped is currently diving out of the way of.
		/// </summary>
		public static bool IsPedEvasiveDiving(int _ped, int _evadingEntity)
		{
			return Function.Call<bool>((Hash)0x414641C26E105898, _ped, _evadingEntity);
		}
		/// <summary>
		/// Triggers a gunshot
		/// Params: p5 = -1 in R* Scripts
		/// </summary>
		public static int ShootTriggerAtCoords(int _ped, float _x, float _y, float _z, int _p4, float _p5, int _p6, float _p7)
		{
			return Function.Call<int>((Hash)0x4C57F27D1554E6B0, _ped, _x, _y, _z, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThisModelAHorse(uint _model)
		{
			return Function.Call<bool>((Hash)0x772A1969F649E902, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedModelIsSuppressed(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xE163A4BCE4DE6F11, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedModelSuppressed(uint _model)
		{
			return Function.Call<bool>((Hash)0xAA9F048DCF69B6DC, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7abbd9e449e0db00(int _p0, int _p1)
		{
			Function.Call((Hash)0x7ABBD9E449E0DB00, _p0, _p1);
		}
		/// <summary>
		/// Disables being able to kick move ped.
		/// </summary>
		public static void SetPedDisableKickMove(int _ped, bool _disable)
		{
			Function.Call((Hash)0xADD31A5C7A5FAA73, _ped, _disable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCanRagdollFromPlayerImpact(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xDF993EE5E90ABA25, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe6cb36f43a95d75f(int _p0)
		{
			Function.Call((Hash)0xE6CB36F43A95D75F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedLegIkMode(int _ped, int _mode)
		{
			Function.Call((Hash)0xC396F5B86FF9FEBD, _ped, _mode);
		}
		/// <summary>
		/// If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
		/// If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
		/// _IS_PED_IN_*
		/// </summary>
		public static bool Hash_0x078076ab50fb117f(int _ped, float _x, float _y, float _z, float _p4, bool _p5)
		{
			return Function.Call<bool>((Hash)0x078076AB50FB117F, _ped, _x, _y, _z, _p4, _p5);
		}
		/// <summary>
		/// SET_PED_CAN_*
		/// </summary>
		public static void SetPedCanBeLassoed(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xFD6943B6DF77E449, _ped, _toggle);
		}
		/// <summary>
		/// 0 - Stationary (Will just stand in place)
		/// 1 - Defensive (Will try to find cover and very likely to blind fire)
		/// 2 - Offensive (Will attempt to charge at enemy but take cover as well)
		/// 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
		/// </summary>
		public static void SetPedCombatMovement(int _ped, int _combatMovement)
		{
			Function.Call((Hash)0x4D9CA1009AFBD057, _ped, _combatMovement);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedCombatMovement(int _ped)
		{
			return Function.Call<int>((Hash)0xDEA92412FCAEB3F5, _ped);
		}
		/// <summary>
		/// _SET_PED_COMBAT_R - _SET_PED_C*
		/// </summary>
		public static void Hash_0x815c0074a1bc0d93(int _ped, int _p1)
		{
			Function.Call((Hash)0x815C0074A1BC0D93, _ped, _p1);
		}
		/// <summary>
		/// _GET_PED_COMBAT_M* - _GET_PED_C*
		/// </summary>
		public static int Hash_0xffde295662405b25(int _ped)
		{
			return Function.Call<int>((Hash)0xFFDE295662405B25, _ped);
		}
		/// <summary>
		/// abilityLevel:
		/// enum eCombatAbilityLevel
		/// {
		/// 	CAL_POOR,
		/// 	CAL_AVERAGE,
		/// 	CAL_PROFESSIONAL
		/// };
		/// </summary>
		public static void SetPedCombatAbility(int _ped, int _abilityLevel)
		{
			Function.Call((Hash)0xC7622C0D36B2FDA8, _ped, _abilityLevel);
		}
		/// <summary>
		/// range:
		/// enum eCombatRange
		/// {
		/// 	CR_NEAR,
		/// 	CR_MEDIUM,
		/// 	CR_FAR,
		/// 	CR_VERY_FAR
		/// };
		/// </summary>
		public static void SetPedCombatRange(int _ped, int _range)
		{
			Function.Call((Hash)0x3C606747B23E497B, _ped, _range);
		}
		/// <summary>
		/// attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
		/// </summary>
		public static void SetPedCombatAttributes(int _ped, int _attributeIndex, bool _enabled)
		{
			Function.Call((Hash)0x9F7794730795E019, _ped, _attributeIndex, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedCombatAttribute(int _ped, int _attributeIndex)
		{
			return Function.Call<bool>((Hash)0xCC2B20596E29E4E3, _ped, _attributeIndex);
		}
		/// <summary>
		/// Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
		/// _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
		/// </summary>
		public static void SetPedCombatAttributeHash(int _ped, uint _p1)
		{
			Function.Call((Hash)0xBD75500141E4725C, _ped, _p1);
		}
		/// <summary>
		/// TLR_ExitTask = 0,
		/// TLR_NeverLoseTarget,
		/// TLR_SearchForTarget
		/// </summary>
		public static void SetPedTargetLossResponse(int _ped, int _responseType)
		{
			Function.Call((Hash)0x0703B9079823DA4A, _ped, _responseType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0a4618ffd517e24d(int _p0, int _p1)
		{
			Function.Call((Hash)0x0A4618FFD517E24D, _p0, _p1);
		}
		/// <summary>
		/// _SET_PED_MO*
		/// </summary>
		public static void Hash_0x712b2c2b2471b493(int _ped, uint _p1)
		{
			Function.Call((Hash)0x712B2C2B2471B493, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x00b380ff2df6ab7a(int _p0, int _p1)
		{
			Function.Call((Hash)0x00B380FF2DF6AB7A, _p0, _p1);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
		/// Params: p2 is usually 1, sometimes 0 or 2
		/// duration in seconds, -1.0 = forever
		/// </summary>
		public static void SetPedCombatStyle(int _ped, uint _combatStyleHash, int _p2, float _duration)
		{
			Function.Call((Hash)0x8ACC0506743A8A5C, _ped, _combatStyleHash, _p2, _duration);
		}
		/// <summary>
		/// Params: p1 = 1 in R* Scripts
		/// </summary>
		public static void ClearPedCombatStyle(int _ped, int _p1)
		{
			Function.Call((Hash)0x78815FC52832B690, _ped, _p1);
		}
		/// <summary>
		/// duration in seconds, -1.0 = forever
		/// </summary>
		public static void SetPedCombatStyleMod(int _ped, uint _combatStyleModHash, float _duration)
		{
			Function.Call((Hash)0x8B1E8E35A6E814EA, _ped, _combatStyleModHash, _duration);
		}
		/// <summary>
		/// _CLEAR_PED_COMBAT_*
		/// </summary>
		public static void Hash_0x1fa132cbcd7cb239(int _ped, uint _p1)
		{
			Function.Call((Hash)0x1FA132CBCD7CB239, _ped, _p1);
		}
		/// <summary>
		/// _IS_PED_B* - _IS_PED_C*
		/// </summary>
		public static bool Hash_0x5bf0b9d9a8e227a0(int _ped)
		{
			return Function.Call<bool>((Hash)0x5BF0B9D9A8E227A0, _ped);
		}
		/// <summary>
		/// _SET_PED_M*
		/// </summary>
		public static void Hash_0x642720d8d69328b6(int _ped, uint _p1)
		{
			Function.Call((Hash)0x642720D8D69328B6, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedPerformingMeleeAction(int _ped, int _p1, uint _p2)
		{
			return Function.Call<bool>((Hash)0xDCCA191DF9980FD7, _ped, _p1, _p2);
		}
		/// <summary>
		/// _CAN_PED_*
		/// </summary>
		public static bool Hash_0x99df2639da76c1dc(int _ped1, int _ped2, int _p2)
		{
			return Function.Call<bool>((Hash)0x99DF2639DA76C1DC, _ped1, _ped2, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedMeleeActionPhase(int _ped)
		{
			return Function.Call<float>((Hash)0x6127F25ED21C533C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedBeingStealthKilled(int _ped)
		{
			return Function.Call<bool>((Hash)0x863B23EFDE9C5DF2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMeleeTargetForPed(int _ped)
		{
			return Function.Call<int>((Hash)0x18A3E9EE1297FD39, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdedbed3020da49dc(int _p0)
		{
			Function.Call((Hash)0xDEDBED3020DA49DC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa405bf9f01960c16(int _p0)
		{
			Function.Call((Hash)0xA405BF9F01960C16, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedBrawlingStyle(int _ped)
		{
			return Function.Call<uint>((Hash)0xEC6B59BE445FEC51, _ped);
		}
		/// <summary>
		/// brawlingStyle:
		/// enum eBrawlingStyle : Hash
		/// {
		/// 	BS_AI = 0x802C604D,
		/// 	BS_AI_BARBRAWL = 0x4FF5F0C7,
		/// 	BS_AI_DEFENSIVE = 0xD888F2FD,
		/// 	BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
		/// 	BS_ALLIGATOR = 0x7A5548ED,
		/// 	BS_ALLIGATOR_LARGE = 0x368EC7CB,
		/// 	BS_ALLY = 0x69C76C14,
		/// 	BS_ANIMAL = 0xD777C754,
		/// 	BS_BADGER = 0x7E7C3F53,
		/// 	BS_BEAR = 0x0BC66E35,
		/// 	BS_BEAVER = 0x4E313783,
		/// 	BS_BOAR = 0x176A5831,
		/// 	BS_BOUNTY_HUNTER = 0x3900654C,
		/// 	BS_BRUISER = 0x4514DB61,
		/// 	BS_BULL = 0x4E50C5D2,
		/// 	BS_COUGAR = 0x9DAA7CCB,
		/// 	BS_COW = 0xB0E91295,
		/// 	BS_COYOTE = 0xA448EB69,
		/// 	BS_DEER = 0xA781E6B3,
		/// 	BS_DOG = 0x5A4155C4,
		/// 	BS_ELK = 0x408697F0,
		/// 	BS_FEMALE = 0x6A3BB2C2,
		/// 	BS_FEMALE_STRONG = 0x4DAFDD84,
		/// 	BS_GANGUP = 0xD0CECFF2,
		/// 	BS_GOAT = 0x078E649F,
		/// 	BS_HORSE = 0xF6B775F3,
		/// 	BS_MICAH_FINALE = 0x1F0BB27A,
		/// 	BS_MOOSE = 0x968917AB,
		/// 	BS_MUSKRAT = 0x1EDC33AC,
		/// 	BS_NO_MELEE = 0x25B5F931,
		/// 	BS_PIG = 0x22EAD110,
		/// 	BS_PLAYER = 0x78BAEF07,
		/// 	BS_PLAYER_FINALE = 0xF9E77D2D,
		/// 	BS_PLAYER_MOONSHINER = 0x687BF19F,
		/// 	BS_PLAYER_WINTER1 = 0x3C6A802F,
		/// 	BS_QUICK = 0xC4CABB1B,
		/// 	BS_RACCOON = 0x505F8917,
		/// 	BS_SHEEP = 0x6827CCCF,
		/// 	BS_SNAKE = 0x82BEBC4B,
		/// 	BS_TIMID = 0x431AEF77,
		/// 	BS_WOLF = 0xA8F023D4
		/// };
		/// </summary>
		public static void SetPedBrawlingStyle(int _ped, uint _brawlingStyle)
		{
			Function.Call((Hash)0x8BA83CC4288CD56D, _ped, _brawlingStyle);
		}
		/// <summary>
		/// _RESET_PED_*
		/// </summary>
		public static void Hash_0x9d8dfe2de9cb4dfc(int _ped)
		{
			Function.Call((Hash)0x9D8DFE2DE9CB4DFC, _ped);
		}
		/// <summary>
		/// _SET_PED_M*
		/// </summary>
		public static int Hash_0xc48af420371c7407(int _ped, uint _grapple)
		{
			return Function.Call<int>((Hash)0xC48AF420371C7407, _ped, _grapple);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5efa8a3d8a60d662(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x5EFA8A3D8A60D662, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x242edf85d4e87b65(int _p0)
		{
			return Function.Call<int>((Hash)0x242EDF85D4E87B65, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCombatBehaviour(int _ped, uint _behaviour)
		{
			Function.Call((Hash)0x9238A3D970BBB0A9, _ped, _behaviour);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9a4ac116cc1eee14(int _p0)
		{
			Function.Call((Hash)0x9A4AC116CC1EEE14, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe20027b414bfe6c7(int _p0, int _p1)
		{
			Function.Call((Hash)0xE20027B414BFE6C7, _p0, _p1);
		}
		/// <summary>
		/// NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
		/// </summary>
		public static void SetPedBeatMultiplier(int _ped, float _p1)
		{
			Function.Call((Hash)0x6DBF2D78709AD70B, _ped, _p1);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
		/// </summary>
		public static void SetPedActionDisableFlag(int _ped, int _actionDisableFlag)
		{
			Function.Call((Hash)0xB8DE69D9473B7593, _ped, _actionDisableFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedActionDisableFlag(int _ped, int _actionDisableFlag)
		{
			Function.Call((Hash)0x949B2F9ED2917F5D, _ped, _actionDisableFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedActionDisableFlagEnabled(int _ped, int _actionDisableFlag)
		{
			return Function.Call<bool>((Hash)0xB346C85D49CC998E, _ped, _actionDisableFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedTargetActionDisableFlag(int _ped, int _actionDisableFlag)
		{
			Function.Call((Hash)0xC163DAC52AC975D3, _ped, _actionDisableFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedTargetActionDisableFlag(int _ped, int _actionDisableFlag)
		{
			Function.Call((Hash)0xBBF6D1D07C02D00A, _ped, _actionDisableFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedTargetActionDisableFlagEnabled(int _ped, int _actionDisableFlag)
		{
			return Function.Call<bool>((Hash)0x02AA2096FE00F3E1, _ped, _actionDisableFlag);
		}
		/// <summary>
		/// _SET_PED_M*
		/// </summary>
		public static void Hash_0x57f35552e771be9d(int _ped, int _p1)
		{
			Function.Call((Hash)0x57F35552E771BE9D, _ped, _p1);
		}
		/// <summary>
		/// _CLEAR_PED_M*
		/// </summary>
		public static void Hash_0x7c10221ce718aa72(int _ped, int _p1)
		{
			Function.Call((Hash)0x7C10221CE718AA72, _ped, _p1);
		}
		/// <summary>
		/// _IS_PED_M*
		/// </summary>
		public static bool Hash_0x0d3b1568917ebda0(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0x0D3B1568917EBDA0, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x29f3539189d3e277(int _p0, int _p1)
		{
			Function.Call((Hash)0x29F3539189D3E277, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe9e06ea514a69061(int _p0, int _p1)
		{
			Function.Call((Hash)0xE9E06EA514A69061, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedWrithingDuration(int _ped, float _writhingDuration1, float _writhingDuration2, int _p3)
		{
			Function.Call((Hash)0x4DB9D03AC4E1FA84, _ped, _writhingDuration1, _writhingDuration2, _p3);
		}
		/// <summary>
		/// normalized / non normalized
		/// 0.0        / 1000.0         STARTED IN WRITHE STAGE
		/// 1.0        / 0.0            END OF WRITHE, DEAD
		/// -1.0                        DEAD
		/// 
		/// Returns some value from AI task 562 (unknown).
		/// </summary>
		public static float GetPedRemainingRevivalTime(int _ped, bool _normalized)
		{
			return Function.Call<float>((Hash)0xEBE89623EB861271, _ped, _normalized);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPausePedWritheBleedout(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x925A160133003AC6, _ped, _toggle);
		}
		/// <summary>
		/// _GET_IS_PED_(BLEEDING_OUT?)*
		/// </summary>
		public static bool Hash_0x12eb4e31f092c9b3(int _ped)
		{
			return Function.Call<bool>((Hash)0x12EB4E31F092C9B3, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedIsGrappling(int _ped)
		{
			return Function.Call<bool>((Hash)0x0E99E3BF11BB6367, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedIsBeingGrappled(int _ped)
		{
			return Function.Call<bool>((Hash)0x3BDFCF25B58B0415, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedGrappler(int _ped)
		{
			return Function.Call<int>((Hash)0xD0B7AEB56229D317, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedGrappleState(int _ped)
		{
			return Function.Call<int>((Hash)0x2311F15D971AA680, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedGrappleStyle(int _ped)
		{
			return Function.Call<uint>((Hash)0x753B15AD0FD6F3E3, _ped);
		}
		/// <summary>
		/// Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
		/// </summary>
		public static int SetPedGrappleStyle(int _ped, uint _style)
		{
			return Function.Call<int>((Hash)0x630E7B01F091A197, _ped, _style);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGrappleSequence(int _ped, string _grappleSequence)
		{
			Function.Call((Hash)0x604190F0CF0DF158, _ped, _grappleSequence);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGrappleFlag(int _ped, int _flag, bool _enable)
		{
			Function.Call((Hash)0x789DABD18E9024DB, _ped, _flag, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedGrappleFlag(int _ped, int _flag)
		{
			Function.Call((Hash)0xEAE3B5B019C8D23F, _ped, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedGrappleFlag(int _ped)
		{
			return Function.Call<int>((Hash)0xF3C873ED0C595109, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGrappleAction(int _ped, uint _grappleAction)
		{
			Function.Call((Hash)0x8301D87B1B89E219, _ped, _grappleAction);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SetPedGrappleEffectMultiplier(int _ped, float _multiplier)
		{
			return Function.Call<int>((Hash)0x99A6E246C315BF60, _ped, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedGrappleAnimation(int _ped, uint _grappleAnim)
		{
			Function.Call((Hash)0x56E9C26CD29D1ED6, _ped, _grappleAnim);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/FLEE_ATTRIBUTES
		/// 
		/// attributeFlags:
		/// enum eFleeAttribute
		/// {
		/// 	FA_FORCE_EXIT_VEHICLE = (1 << 16),
		/// 	FA_DISABLE_MOUNT_USAGE = (1 << 20),
		/// 	FA_DISABLE_ENTER_VEHICLES = (1 << 22),
		/// };
		/// </summary>
		public static void SetPedFleeAttributes(int _ped, int _attributeFlags, bool _enable)
		{
			Function.Call((Hash)0x70A2D1137C8ED7C9, _ped, _attributeFlags, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedCowering(int _ped)
		{
			return Function.Call<bool>((Hash)0xB086C8C0F5701D14, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyPedNearPoint(float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0x083961498679DC9F, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForcePedAiAndAnimationUpdate(int _ped, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x2208438012482A1A, _ped, _p1, _p2);
		}
		/// <summary>
		/// _FORCE_PED_*
		/// </summary>
		public static void Hash_0xc2722b252c79e641(int _ped, int _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0xC2722B252C79E641, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDoingScenarioTransition(int _ped)
		{
			return Function.Call<bool>((Hash)0xC488B8C0E52560D8, _ped);
		}
		/// <summary>
		/// _IS_PED_D*
		/// </summary>
		public static bool Hash_0x2dc0e8dcbd3546e9(int _ped)
		{
			return Function.Call<bool>((Hash)0x2DC0E8DCBD3546E9, _ped);
		}
		/// <summary>
		/// Forces transition now, called together with 0xD65FDC686A031C83
		/// </summary>
		public static void AddScenarioTransition(int _ped)
		{
			Function.Call((Hash)0x6D07B371E9439019, _ped);
		}
		/// <summary>
		/// Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
		/// https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
		/// </summary>
		public static void GivePedHashCommand(int _ped, uint _commandHash, float _activationDuration)
		{
			Function.Call((Hash)0xD65FDC686A031C83, _ped, _commandHash, _activationDuration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsPedCommandHashPresent(int _ped, uint _commandHash)
		{
			return Function.Call<bool>((Hash)0x68821369A2CEADD5, _ped, _commandHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedHeadingTowardsPosition(int _ped, float _x, float _y, float _z, float _p4)
		{
			return Function.Call<bool>((Hash)0xFCF37A457CB96DC0, _ped, _x, _y, _z, _p4);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void Hash_0x600bbdd29820370c(int _ped)
		{
			Function.Call((Hash)0x600BBDD29820370C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestPedVisibilityTracking(int _ped)
		{
			Function.Call((Hash)0x7D7A2E43E74E2EB8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleasePedVisibilityTracking(int _ped)
		{
			Function.Call((Hash)0x3088634CF8C819CF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestPedVehicleVisibilityTracking(int _ped, bool _p1)
		{
			Function.Call((Hash)0x2BC338A7B21F4608, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestPedUseSmallBboxVisibilityTracking(int _ped, bool _p1)
		{
			Function.Call((Hash)0x75BA1CB3B7D40CAF, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTrackedPedPixelcount(int _ped)
		{
			return Function.Call<int>((Hash)0x511F1A683387C7E2, _ped);
		}
		/// <summary>
		/// Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
		/// Target needs to be tracked first, won't work otherwise.
		/// </summary>
		public static bool IsTrackedPedVisible(int _ped)
		{
			return Function.Call<bool>((Hash)0x91C8E617F64188AC, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTrackedPedVisibilityPercentageNotLessThan(int _ped, float _percent)
		{
			return Function.Call<bool>((Hash)0x164CECC59E70DF86, _ped, _percent);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedVisibilityTracked(int _ped)
		{
			return Function.Call<bool>((Hash)0x5102307CE88798EB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanPedBeMounted(int _ped)
		{
			return Function.Call<bool>((Hash)0x2D64376CF437363E, _ped);
		}
		/// <summary>
		/// Returns true if given ped is a fish.
		/// _IS_ME* - _IS_MO*
		/// </summary>
		public static bool IsMetapedFish(int _ped)
		{
			return Function.Call<bool>((Hash)0x118D476A6F1A13F1, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEventInQueue(int _ped, uint _eventType)
		{
			return Function.Call<bool>((Hash)0xC8D523BF5BBD3808, _ped, _eventType);
		}
		/// <summary>
		/// Returns:
		/// 0 - CTR_CANNOT_TARGET
		/// 1 - CTR_CAN_TARGET
		/// 2 - CTR_NOT_SURE_YET
		/// </summary>
		public static int CanPedSeeEntity(int _ped, int _targetEntity, bool _p2, bool _p3)
		{
			return Function.Call<int>((Hash)0x7F9B9791D4CB71F6, _ped, _targetEntity, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CanPedSeePedCached(int _ped, int _targetPed, bool _p2)
		{
			return Function.Call<int>((Hash)0x9D9473CB82D83A30, _ped, _targetPed, _p2);
		}
		/// <summary>
		/// _CAN_PED_B* - _CAN_PED_I*
		/// </summary>
		public static float Hash_0x0ea9eacba3b01601(int _ped1, int _ped2, bool _p2)
		{
			return Function.Call<float>((Hash)0x0EA9EACBA3B01601, _ped1, _ped2, _p2);
		}
		/// <summary>
		/// no bone = -1
		/// </summary>
		public static int GetPedBoneIndex(int _ped, int _boneId)
		{
			return Function.Call<int>((Hash)0x3F428D08BE5AAE31, _ped, _boneId);
		}
		/// <summary>
		/// Returns boneIndex
		/// _GET_PED_N* - _GET_PED_R*
		/// </summary>
		public static int Hash_0xc5303f460a40d21d(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0xC5303F460A40D21D, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_R* -_SET_PED_S*
		/// </summary>
		public static void Hash_0xe29d8cd66553dbaa(int _horse)
		{
			Function.Call((Hash)0xE29D8CD66553DBAA, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb06f5f1def417216(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xB06F5F1DEF417216, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfc23348f0f4e245f(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xFC23348F0F4E245F, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9184788bff1edad7(int _p0, int _p1)
		{
			Function.Call((Hash)0x9184788BFF1EDAD7, _p0, _p1);
		}
		/// <summary>
		/// Params: ped, 0f, -1, true, true in R* MP Scripts
		/// _SET_PED_DE* - _SET_PED_F*
		/// </summary>
		public static void SetPedDirtCleaned(int _ped, float _p1, int _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0xE3144B932DFDFF65, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0105fee8f9091255(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x0105FEE8F9091255, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd049920cd29f6cc8(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xD049920CD29F6CC8, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbb3e5370ebb6be28(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xBB3E5370EBB6BE28, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2fa568bfa725f8d6(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x2FA568BFA725F8D6, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x56e4bad93d33453c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x56E4BAD93D33453C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x75a082563b4452e5(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x75A082563B4452E5, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x16802c32b2fca06b(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x16802C32B2FCA06B, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8ba0c65ac15a7d33(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x8BA0C65AC15A7D33, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0ffdf937e5c11382(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x0FFDF937E5C11382, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5fcf25d584065bfd(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x5FCF25D584065BFD, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// _SET_PED_*
		/// </summary>
		public static void Hash_0xa2116c1e4ed85c24(int _ped, bool _inverted)
		{
			Function.Call((Hash)0xA2116C1E4ED85C24, _ped, _inverted);
		}
		/// <summary>
		/// motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/FORCE_PED_MOTION_STATE#readme
		/// </summary>
		public static bool ForcePedMotionState(int _ped, uint _motionStateHash, bool _p2, int _p3, bool _p4)
		{
			return Function.Call<bool>((Hash)0xF28965D04F570DCA, _ped, _motionStateHash, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x75d3333409cd33ce(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x75D3333409CD33CE, _p0, _p1, _p2);
		}
		/// <summary>
		/// Old name: _GET_PED_CURRENT_MOVEMENT_SPEED
		/// </summary>
		public static bool GetPedCurrentMoveBlendRatio(int _ped, float _speedX, float _speedY)
		{
			return Function.Call<bool>((Hash)0xF60165E1D2C5370B, _ped, _speedX, _speedY);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedMaxMoveBlendRatio(int _ped, float _value)
		{
			Function.Call((Hash)0x433083750C5E064A, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedMinMoveBlendRatio(int _ped, float _value)
		{
			Function.Call((Hash)0x01A898D26E2333DD, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbc1dc48270468444(int _p0)
		{
			Function.Call((Hash)0xBC1DC48270468444, _p0);
		}
		/// <summary>
		/// Returns vehicle (desired) speed
		/// _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
		/// </summary>
		public static float Hash_0x46bf2a810679d6e6(int _ped, float _maxMoveBlendRatio)
		{
			return Function.Call<float>((Hash)0x46BF2A810679D6E6, _ped, _maxMoveBlendRatio);
		}
		/// <summary>
		/// Returns vehicle speed
		/// _COMPUTE_*
		/// </summary>
		public static float Hash_0xca95924c893a0c91(int _ped, float _p1)
		{
			return Function.Call<float>((Hash)0xCA95924C893A0C91, _ped, _p1);
		}
		/// <summary>
		/// _H* - _I*
		/// </summary>
		public static void HorseAgitate(int _mount, bool _kickOffRider)
		{
			Function.Call((Hash)0xBAE08F00021BFFB2, _mount, _kickOffRider);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x413697ec260aabbf(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x413697EC260AABBF, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcac43d060099ea72(int _ped)
		{
			Function.Call((Hash)0xCAC43D060099EA72, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc9151483cc06a414(int _ped)
		{
			Function.Call((Hash)0xC9151483CC06A414, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xad3330e3c3e98007(int _p0, int _p1)
		{
			Function.Call((Hash)0xAD3330E3C3E98007, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb8e2d655e1d5bd39(int _p0)
		{
			return Function.Call<int>((Hash)0xB8E2D655E1D5BD39, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7bb810e8b343ac7b(int _p0)
		{
			return Function.Call<int>((Hash)0x7BB810E8B343AC7B, _p0);
		}
		/// <summary>
		/// Min: 0.0f
		/// Max: 1.15f
		/// </summary>
		public static void SetPedMoveRateOverride(int _ped, float _value)
		{
			Function.Call((Hash)0x085BF80FA50A39D1, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedNearbyVehicles(int _ped, int _sizeAndVehs)
		{
			return Function.Call<int>((Hash)0xCFF869CBFA210D82, _ped, _sizeAndVehs);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedNearbyPeds(int _ped, int _sizeAndPeds, int _ignoredPedType, int _p3)
		{
			return Function.Call<int>((Hash)0x23F8F5FC7E8C4A6B, _ped, _sizeAndPeds, _ignoredPedType, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedReadyToRender(int _ped)
		{
			return Function.Call<bool>((Hash)0xA0BC8FAED8CFEB3C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6a489892e813951a(int _p0)
		{
			Function.Call((Hash)0x6A489892E813951A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedUsingActionMode(int _ped)
		{
			return Function.Call<bool>((Hash)0x00E73468D085F745, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedUsingActionMode2(int _ped)
		{
			return Function.Call<bool>((Hash)0xEBB208D6AE712C03, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedUsingActionMode(int _ped, bool _bActionModeEnabled, int _p2, string _action)
		{
			Function.Call((Hash)0xD75ACCF5E0FB5367, _ped, _bActionModeEnabled, _p2, _action);
		}
		/// <summary>
		/// Overrides the ped's collision capsule radius for the current tick.
		/// Must be called every tick to be effective.
		/// 
		/// Setting this to 0.001 will allow warping through some objects.
		/// </summary>
		public static void SetPedCapsule(int _ped, float _value)
		{
			Function.Call((Hash)0x364DF566EC833DE2, _ped, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRiderOfMount(int _mount, bool _p1)
		{
			return Function.Call<int>((Hash)0xB676EFDA03DADA52, _mount, _p1);
		}
		/// <summary>
		/// Params: p4 = 35.f, duration = 5000 in R* Scripts
		/// </summary>
		public static void SpawnpointsStartSearch(float _x, float _y, float _z, float _width, float _p4, int _spawnpointsFlag, float _p6, int _duration, float _p8)
		{
			Function.Call((Hash)0x2DF9038C90AD5264, _x, _y, _z, _width, _p4, _spawnpointsFlag, _p6, _duration, _p8);
		}
		/// <summary>
		/// Searching area between coords 1 and 2
		/// </summary>
		public static void SpawnpointsStartSearchInAngledArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _width, int _spawnpointsFlag, float _p8, int _duration, float _p10)
		{
			Function.Call((Hash)0xB2AFF10216DEFA2F, _x1, _y1, _z1, _x2, _y2, _z2, _width, _spawnpointsFlag, _p8, _duration, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpawnpointsStartSearchWithVolume(int _volume, int _spawnpointsFlag, float _p2, int _duration, float _p4)
		{
			Function.Call((Hash)0x83ED1FC9DF3411F5, _volume, _spawnpointsFlag, _p2, _duration, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpawnpointsCancelSearch()
		{
			Function.Call((Hash)0xFEE4A5459472A9F8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpawnpointsIsSearchActive()
		{
			return Function.Call<bool>((Hash)0x3C67506996001F5E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpawnpointsIsSearchComplete()
		{
			return Function.Call<bool>((Hash)0xA586FBEB32A53DBB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpawnpointsIsSearchFailed()
		{
			return Function.Call<bool>((Hash)0xF445DE8DA80A1792);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SpawnpointsGetNumSearchResults()
		{
			return Function.Call<int>((Hash)0xA635C11B8C44AFC2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpawnpointsGetSearchResult(int _randomInt, float _x, int _y, float _z)
		{
			Function.Call((Hash)0x280C7E3AC7F56E90, _randomInt, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpawnpointsGetSearchResultFlags(int _p0, int _p1)
		{
			Function.Call((Hash)0xB782F8238512BAD5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetIkTarget(int _ped, int _ikIndex, int _entityLookAt, int _boneLookAt, float _offsetX, float _offsetY, float _offsetZ, int _p7, int _blendInDuration, int _blendOutDuration)
		{
			Function.Call((Hash)0xC32779C16FCEECD9, _ped, _ikIndex, _entityLookAt, _boneLookAt, _offsetX, _offsetY, _offsetZ, _p7, _blendInDuration, _blendOutDuration);
		}
		/// <summary>
		/// For more information, see common:/data/emotional_presets.meta
		/// </summary>
		public static void RequestPedEmotionalPreset(int _ped, string _name)
		{
			Function.Call((Hash)0x5C3C55EAAD19915F, _ped, _name);
		}
		/// <summary>
		/// See _REQUEST_PED_EMOTIONAL_PRESET
		/// </summary>
		public static bool HasPedEmotionalPresetLoaded(int _ped, string _name)
		{
			return Function.Call<bool>((Hash)0xDE3904B22695D9F9, _ped, _name);
		}
		/// <summary>
		/// See _REQUEST_PED_EMOTIONAL_PRESET
		/// </summary>
		public static void RemovePedEmotionalPreset(int _ped, string _name)
		{
			Function.Call((Hash)0xFC3BAB1801A8255A, _ped, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestMotionTypeAsset(uint _nameHash, int _ped)
		{
			Function.Call((Hash)0xF7EA250B9A919E03, _nameHash, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasMotionTypeAssetLoaded(uint _nameHash, int _ped)
		{
			return Function.Call<bool>((Hash)0x854BC9B1A1CCD034, _nameHash, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveMotionTypeAsset(uint _nameHash, int _ped)
		{
			Function.Call((Hash)0xDE7B2B4144906CDF, _nameHash, _ped);
		}
		/// <summary>
		/// _IS_PED_L* - _IS_PED_M*
		/// </summary>
		public static bool Hash_0x290b2e6ccde532e1(int _ped)
		{
			return Function.Call<bool>((Hash)0x290B2E6CCDE532E1, _ped);
		}
		/// <summary>
		/// _IS_PED_L* - _IS_PED_M*
		/// </summary>
		public static bool Hash_0x0eef7a81c17679db(int _ped)
		{
			return Function.Call<bool>((Hash)0x0EEF7A81C17679DB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedLodMultiplier(int _ped, float _multiplier)
		{
			Function.Call((Hash)0xDC2C5C242AAC342B, _ped, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedLodMultiplier(int _ped)
		{
			return Function.Call<float>((Hash)0x1B710E6F4AB69341, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa218d2bbcaa7388c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xA218D2BBCAA7388C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyHostilePedNearPoint(int _ped, float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0x68772DB2B2526F9F, _ped, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcbde59c48f2b06f5(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xCBDE59C48F2B06F5, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6a190b94c2541a99(int _p0)
		{
			Function.Call((Hash)0x6A190B94C2541A99, _p0);
		}
		/// <summary>
		/// Returns true if ped is in perception (focused and looking at target ped)
		/// Most float params are -1.f in R* Scripts
		/// </summary>
		public static bool IsTargetPedInPerceptionArea(int _ped, int _targetPed, float _p2, float _customDistance, float _p4, float _p5)
		{
			return Function.Call<bool>((Hash)0x06087579E7AA85A9, _ped, _targetPed, _p2, _customDistance, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPopControlSphereThisFrame(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xD8C3BE3EE94CAF2D, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedHogtied(int _ped)
		{
			return Function.Call<bool>((Hash)0x3AA24CCC0D451379, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedBeingHogtied(int _ped)
		{
			return Function.Call<bool>((Hash)0xD453BB601D4A606E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3d9f958834ab9c30(int _ped)
		{
			return Function.Call<int>((Hash)0x3D9F958834AB9C30, _ped);
		}
		/// <summary>
		/// _IS_PED_S* - _IS_PED_U*
		/// </summary>
		public static bool Hash_0x913d04a5176f84c9(int _ped)
		{
			return Function.Call<bool>((Hash)0x913D04A5176F84C9, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedHogtying(int _ped)
		{
			return Function.Call<bool>((Hash)0x42429C674B61238B, _ped);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
		/// </summary>
		public static bool GetPedLassoHogtieFlag(int _ped, int _flagId)
		{
			return Function.Call<bool>((Hash)0x2C76FA0E01681F8D, _ped, _flagId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedLassoHogtieFlag(int _ped, int _flagId, bool _value)
		{
			Function.Call((Hash)0xAE6004120C18DF97, _ped, _flagId, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4642182a298187d0(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x4642182A298187D0, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6b67320e0d57856a(int _ped, int _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0x6B67320E0D57856A, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetFirstEntityPedIsCarrying(int _ped)
		{
			return Function.Call<int>((Hash)0xD806CD2A4F2C2996, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaa6c49ae90a32299(int _ped, uint _p1)
		{
			Function.Call((Hash)0xAA6C49AE90A32299, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCarrierAsPed(int _entity)
		{
			return Function.Call<int>((Hash)0x09B83E68DE004CD4, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCarrierAsMount(int _entity)
		{
			return Function.Call<int>((Hash)0xA033D7E4BBF9844D, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCarrierAsHuman(int _entity)
		{
			return Function.Call<int>((Hash)0x79443D56C8DF45EE, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCarriedAttachedInfoForSlot(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x608BC6A6AACD5036, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachCarriableEntity(int _entity, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xED00D72F81CF7278, _entity, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FindAllAttachedCarriableEntities(int _ped, int _itemset)
		{
			Function.Call((Hash)0xB5ACE8B23A438EC0, _ped, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedCarryingSomething(int _ped)
		{
			return Function.Call<bool>((Hash)0xA911EE21EDF69DAF, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb65927f861e7ae39(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0xB65927F861E7AE39, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa1fbac56d38563e2(int _volume)
		{
			return Function.Call<bool>((Hash)0xA1FBAC56D38563E2, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6f43c351a5d51e2f(int _ped, int _p1)
		{
			return Function.Call<int>((Hash)0x6F43C351A5D51E2F, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedLassoed(int _ped)
		{
			return Function.Call<bool>((Hash)0x9682F850056C9ADE, _ped);
		}
		/// <summary>
		/// _IS_PED_S* - _IS_PED_U*
		/// </summary>
		public static int GetLassoerOfPed(int _ped)
		{
			return Function.Call<int>((Hash)0x833F0053340EF413, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLassoTarget(int _ped)
		{
			return Function.Call<int>((Hash)0xB65A4DAB460A19BD, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLassoedLassoer(int _ped)
		{
			return Function.Call<int>((Hash)0x0C31C51168E80365, _ped);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
		/// 
		/// lootFlag:
		/// enum eLootFlag
		/// {
		/// 	LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
		/// 	LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
		/// 	LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
		/// };
		/// </summary>
		public static void SetLootingFlag(int _ped, int _lootFlag, bool _enabled)
		{
			Function.Call((Hash)0x6569F31A01B4C097, _ped, _lootFlag, _enabled);
		}
		/// <summary>
		/// lootFlag: see SET_LOOTING_FLAG
		/// </summary>
		public static bool GetLootingFlag(int _ped, int _lootFlag)
		{
			return Function.Call<bool>((Hash)0xE4C11F104620DDCE, _ped, _lootFlag);
		}
		/// <summary>
		/// Returns loot state
		/// LAP_NONE = 0,
		/// LAP_RESUMING,
		/// LAP_GETTING_ON_FOOT,
		/// LAP_DISTANT_NAV,
		/// LAP_CHOOSING_ACTION,
		/// LAP_APPROACHING,
		/// LAP_ENTERING,
		/// LAP_LOOTING,
		/// LAP_EXITING
		/// </summary>
		public static int Hash_0x5463c962bc7777c3(int _ped, int _p1, int _lootTarget, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x5463C962BC7777C3, _ped, _p1, _lootTarget, _p3, _p4);
		}
		/// <summary>
		/// enum ePedLootStatus
		/// {
		/// 	PLS_NONE,
		/// 	PLS_PRE_LOOT,
		/// 	PLS_SAMPLING,
		/// 	PLS_SKINNING
		/// };
		/// </summary>
		public static int GetPedLootStatusMp(int _ped)
		{
			return Function.Call<int>((Hash)0xC737697C41628340, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4b19f171450e0d4f(int _ped)
		{
			return Function.Call<int>((Hash)0x4B19F171450E0D4F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x758f081db204ddde(int _ped)
		{
			return Function.Call<bool>((Hash)0x758F081DB204DDDE, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLootingPickupTargetEntity(int _ped)
		{
			return Function.Call<int>((Hash)0x14169FA823679E41, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7b5c293238ee4f20(int _p0)
		{
			return Function.Call<int>((Hash)0x7B5C293238EE4F20, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xae6b68a83abbe7c0(int _p0)
		{
			Function.Call((Hash)0xAE6B68A83ABBE7C0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xa4b6432e3880f2f9(int _ped)
		{
			return Function.Call<bool>((Hash)0xA4B6432E3880F2F9, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AddPedSubscribeToLegendaryBlips(int _ped)
		{
			return Function.Call<bool>((Hash)0xE37287EE358939C3, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RemovePedSubscribeToLegendaryBlips(int _ped)
		{
			return Function.Call<bool>((Hash)0x011A42FD923D41CA, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedIncapacitated(int _ped)
		{
			return Function.Call<bool>((Hash)0xB655DB7582AEC805, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedIncapacitationModifiers(int _ped, bool _canBeIncapacitated, int _threshold, int _bleedoutTime, int _p4)
		{
			Function.Call((Hash)0x39ED303390DDEAC7, _ped, _canBeIncapacitated, _threshold, _bleedoutTime, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedCanBeIncapacitatedThisFrame(int _ped)
		{
			return Function.Call<bool>((Hash)0x7A4E00364B5D727B, _ped);
		}
		/// <summary>
		/// When set on a player ped, its just like when you die in RDO
		/// </summary>
		public static void SetPedCanBeIncapacitated(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x5240864E847C691C, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedIncapacitationHealth(int _ped)
		{
			return Function.Call<int>((Hash)0x89BFDF6D53145545, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedIncapacitationTotalBleedOutDuration(int _ped, float _duration)
		{
			Function.Call((Hash)0x2890418B39BC8FFF, _ped, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPedIncapacitationBleedOutDuration(int _ped)
		{
			Function.Call((Hash)0x4B9668DB91DC39B8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedIncapacitationFlags(int _ped, int _flags)
		{
			Function.Call((Hash)0xD67B6F3BCF81BA47, _ped, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x92a1b55a59720395(int _p0, int _p1)
		{
			Function.Call((Hash)0x92A1B55A59720395, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void IncapacitatedRevive(int _ped, int _ped2)
		{
			Function.Call((Hash)0xF6262491C7704A63, _ped, _ped2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetIncapacitationTimeRemaining(int _ped)
		{
			return Function.Call<int>((Hash)0x88D9D76D78065487, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedKnockedByOneHit(int _ped, float _p1)
		{
			Function.Call((Hash)0x5BCF0B79D4F5DBA3, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2e5b5d1f1453e08e(int _ped, int _p1)
		{
			Function.Call((Hash)0x2E5B5D1F1453E08E, _ped, _p1);
		}
		/// <summary>
		/// _SET_PED_K* or _SET_PED_L*
		/// </summary>
		public static void Hash_0x29924eb8ee9db926(int _ped, float _p1)
		{
			Function.Call((Hash)0x29924EB8EE9DB926, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb285ad0ec870b2df(int _p0, int _p1)
		{
			Function.Call((Hash)0xB285AD0EC870B2DF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xcb86d3e3e3708901(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0xCB86D3E3E3708901, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x633f83b301c87994(int _p0, int _p1)
		{
			Function.Call((Hash)0x633F83B301C87994, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x5203038ff8bae577(int _ped, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x5203038FF8BAE577, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x7f090958ae95b61b(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0x7F090958AE95B61B, _ped, _p1);
		}
		/// <summary>
		/// [WARDROBE] Player took off their disguise: p1 = 13
		/// [WARDROBE] Player put on a disguise: p1 = 0
		/// </summary>
		public static void Hash_0xc494c76a34266e82(int _ped, int _p1)
		{
			Function.Call((Hash)0xC494C76A34266E82, _ped, _p1);
		}
		/// <summary>
		/// _GET_PED_G* - _GET_PED_I*
		/// </summary>
		public static bool Hash_0xc3995d396f1d97b6(int _ped, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0xC3995D396F1D97B6, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x15f4732c357b1d6d(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x15F4732C357B1D6D, _p0, _p1, _p2);
		}
		/// <summary>
		/// flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/PED___0x947E43F544B6AB34/README.md 
		/// _GET_PED_G* - _GET_PED_I(NTERACTION?)*
		/// </summary>
		public static bool Hash_0x947e43f544b6ab34(int _ped, int _player, int _flag, int _ms)
		{
			return Function.Call<bool>((Hash)0x947E43F544B6AB34, _ped, _player, _flag, _ms);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x32417cb860a3bdc4(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x32417CB860A3BDC4, _p0, _p1);
		}
		/// <summary>
		/// Only used in R* Script nb_animal_attack: p2 = 120000
		/// _SET_PED_SH* - _SET_PED_SP*
		/// </summary>
		public static void Hash_0xe737d5f14304a2ec(int _ped, int _player, int _p2)
		{
			Function.Call((Hash)0xE737D5F14304A2EC, _ped, _player, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xebd49472bccf7642(int _p0, int _p1)
		{
			Function.Call((Hash)0xEBD49472BCCF7642, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerGreetDisabledForPed(int _ped, int _player, int _duration)
		{
			Function.Call((Hash)0x19173C3F15367B54, _ped, _player, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerAntagonizeDisabledForPed(int _ped, int _player, int _duration)
		{
			Function.Call((Hash)0x5708EDD71B50C008, _ped, _player, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb9bdfae609dfb7c5(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xB9BDFAE609DFB7C5, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf7327acc7a89aef1(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xF7327ACC7A89AEF1, _p0, _p1, _p2);
		}
		/// <summary>
		/// AI_ATTITUDE_NEUTRAL = 0,
		/// AI_ATTITUDE_FRIENDLY,
		/// AI_ATTITUDE_WARY,
		/// AI_ATTITUDE_COMBATIVE,
		/// AI_ATTITUDE_NEVER_MET
		/// </summary>
		public static int GetPedAttitude(int _ped, int _player)
		{
			return Function.Call<int>((Hash)0x7CC2186C32D3540A, _ped, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x1e017404784aa6a3(int _ped, uint _p1)
		{
			return Function.Call<bool>((Hash)0x1E017404784AA6A3, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2b4ce170de09f346(int _p0, int _p1)
		{
			Function.Call((Hash)0x2B4CE170DE09F346, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7c8aa850617651d9(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x7C8AA850617651D9, _p0, _p1);
		}
		/// <summary>
		/// If targetPed is set to 0 the ped motivationState affects everyone
		/// </summary>
		public static float GetPedMotivation(int _ped, int _motivationState, int _targetPed)
		{
			return Function.Call<float>((Hash)0x42688E94E96FD9B4, _ped, _motivationState, _targetPed);
		}
		/// <summary>
		/// enum eMotivationState
		/// {
		/// 	TOILET_STATE,
		/// 	FEAR_STATE,
		/// 	ANGRY_STATE,
		/// 	AGITATION_STATE,
		/// 	HUNGRY_STATE,
		/// 	TIRED_STATE,
		/// 	SAD_STATE,
		/// 	BRAVE_STATE,
		/// 	OFFER_ITEM_STATE,
		/// 	SUSPICION,
		/// 	DRUNK_STATE
		/// };
		/// 
		/// If targetPed is set to 0 the ped motivationState affects everyone
		/// </summary>
		public static void SetPedMotivation(int _ped, int _motivationState, float _threshold, int _targetPed)
		{
			Function.Call((Hash)0x06D26A96CA1BCA75, _ped, _motivationState, _threshold, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x23bde06596a22cec(int _ped, int _p1, float _p2, int _p3)
		{
			Function.Call((Hash)0x23BDE06596A22CEC, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcdfb8c04d4c95d9b(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xCDFB8C04D4C95D9B, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// motivationState: see _SET_PED_MOTIVATION
		/// </summary>
		public static bool GetIsPedMotivationStateEnabled(int _ped, int _motivationState)
		{
			return Function.Call<bool>((Hash)0x33FA048675821DA7, _ped, _motivationState);
		}
		/// <summary>
		/// motivationState: see _SET_PED_MOTIVATION
		/// </summary>
		public static void SetPedMotivationStateOverride(int _ped, int _motivationState, bool _enabled)
		{
			Function.Call((Hash)0x2EB75FB86C41F026, _ped, _motivationState, _enabled);
		}
		/// <summary>
		/// The higher the modifier, the slower the motivationState value will decrease
		/// </summary>
		public static void SetPedMotivationModifier(int _ped, int _motivationState, float _modifier)
		{
			Function.Call((Hash)0xA1EB5D029E0191D3, _ped, _motivationState, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfd8e853f0bc2e942(int _p0, int _p1)
		{
			Function.Call((Hash)0xFD8E853F0BC2E942, _p0, _p1);
		}
		/// <summary>
		/// 0.0 - 1.0
		/// Modifies the "scent line" on the ped's body when using Eagle Eye.
		/// </summary>
		public static void SetPedScent(int _ped, float _scent)
		{
			Function.Call((Hash)0x01B21B81865E2A1F, _ped, _scent);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedLadderMovementSpeedModifier(int _ped, float _p1)
		{
			Function.Call((Hash)0x05CE6AF4DF071D23, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPedLadderMovementSpeedModifier(int _ped)
		{
			Function.Call((Hash)0x801917E7D7BCE418, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc6c4e15cf7d52fea(int _p0, int _p1)
		{
			Function.Call((Hash)0xC6C4E15CF7D52FEA, _p0, _p1);
		}
		/// <summary>
		/// _SET_PED_S* - _SET_PED_T*
		/// </summary>
		public static void SetPedVoiceVolume(int _ped, float _volume)
		{
			Function.Call((Hash)0xD05AD61F242C626B, _ped, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0f967019cc853bcc(int _p0, int _p1)
		{
			Function.Call((Hash)0x0F967019CC853BCC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDragging(int _ped)
		{
			return Function.Call<bool>((Hash)0x226CF9B159E38F42, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedBeingDragged(int _ped)
		{
			return Function.Call<bool>((Hash)0xEF3A8772F085B4AA, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x070a3841406c43d5(int _p0, int _p1)
		{
			Function.Call((Hash)0x070A3841406C43D5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AddPedStayOutVolume(int _ped, int _volume)
		{
			return Function.Call<bool>((Hash)0xE9B168527B337BF0, _ped, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RemovePedStayOutVolume(int _ped, int _volume)
		{
			return Function.Call<bool>((Hash)0x0CAB404CD2DB41F5, _ped, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9e66708b2b41f14a(int _p0, int _p1)
		{
			Function.Call((Hash)0x9E66708B2B41F14A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf634e2892220ef34(int _ped, int _p1)
		{
			Function.Call((Hash)0xF634E2892220EF34, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaac0ee3b4999abb5(int _ped, int _targetPed)
		{
			Function.Call((Hash)0xAAC0EE3B4999ABB5, _ped, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedMotionFocusEntity(int _ped)
		{
			return Function.Call<int>((Hash)0x243E1B4607040057, _ped);
		}
		/// <summary>
		/// Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
		/// 
		/// index = Ped expression ID's / face features
		/// List of face features: https://pastebin.com/9jb88FXW
		/// value: -1.0 to 1.0
		/// 
		/// This native also allows you to change a horse's gender.
		/// </summary>
		public static void SetPedFaceFeature(int _ped, int _index, float _value)
		{
			Function.Call((Hash)0x5653AB26C82938CF, _ped, _index, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedFaceFeature(int _ped, int _index)
		{
			return Function.Call<float>((Hash)0xFD1BA1EEF7985BB8, _ped, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5bb04bc74a474b47(int _p0, int _p1)
		{
			Function.Call((Hash)0x5BB04BC74A474B47, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9078fb0557364099(int _p0)
		{
			Function.Call((Hash)0x9078FB0557364099, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedFallingOver(int _ped)
		{
			return Function.Call<bool>((Hash)0x3E592D0486DEC0F6, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPedBeenShovedRecently(int _ped, int _ms)
		{
			return Function.Call<bool>((Hash)0x29FCE825613FEFCA, _ped, _ms);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedTranquilizer(int _ped)
		{
			return Function.Call<int>((Hash)0x65C75FDCCAC86464, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0d497aa69059fe40(int _p0, int _p1)
		{
			Function.Call((Hash)0x0D497AA69059FE40, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd7d2f45c56a4f4df(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD7D2F45C56A4F4DF, _p0, _p1, _p2);
		}
		/// <summary>
		/// The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
		/// </summary>
		public static void SetPedCullRange(int _ped, float _p1, float _p2)
		{
			Function.Call((Hash)0x8AC1D721B2097B6E, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1d23d3f70606d788(int _p0, int _p1)
		{
			Function.Call((Hash)0x1D23D3F70606D788, _p0, _p1);
		}
		/// <summary>
		/// enum eMetaPedType
		/// {
		/// 	MPT_MALE,
		/// 	MPT_FEMALE,
		/// 	MPT_TEEN,
		/// 	MPT_ANIMAL,
		/// 	MPT_NONE
		/// };
		/// </summary>
		public static int GetMetaPedType(int _ped)
		{
			return Function.Call<int>((Hash)0xEC9A1261BF0CE510, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMetapedUsingComponent(int _ped, uint _component)
		{
			return Function.Call<bool>((Hash)0xFB4891BD7578CDC1, _ped, _component);
		}
		/// <summary>
		/// _IS_PED_M* - _IS_PED_O*
		/// </summary>
		public static bool Hash_0xbd0e4f52f6d95242(int _ped)
		{
			return Function.Call<bool>((Hash)0xBD0E4F52F6D95242, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedChild(int _ped)
		{
			return Function.Call<bool>((Hash)0x137772000DAF42C5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xffa1594703ed27ca(int _ped, int _p1)
		{
			Function.Call((Hash)0xFFA1594703ED27CA, _ped, _p1);
		}
		/// <summary>
		/// Use to apply metaped player components
		/// Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
		/// </summary>
		public static void SetMetaPedTag(int _ped, uint _drawable, uint _albedo, uint _normal, uint _material, uint _palette, int _tint0, int _tint1, int _tint2)
		{
			Function.Call((Hash)0xBC6DF00D7A4A6819, _ped, _drawable, _albedo, _normal, _material, _palette, _tint0, _tint1, _tint2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveTagFromMetaPed(int _ped, uint _component, int _p2)
		{
			Function.Call((Hash)0xD710A5007C2AC539, _ped, _component, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa2b8e47442c76cec(int _p0, int _p1)
		{
			Function.Call((Hash)0xA2B8E47442C76CEC, _p0, _p1);
		}
		/// <summary>
		/// Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
		/// </summary>
		public static int GetNumComponentCategoriesInPed(int _ped)
		{
			return Function.Call<int>((Hash)0xA622E66EEE92A08D, _ped);
		}
		/// <summary>
		/// Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
		/// </summary>
		public static uint GetPedComponentCategoryByIndex(int _ped, int _index)
		{
			return Function.Call<uint>((Hash)0xCCB97B51893C662F, _ped, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumComponentsInPed(int _ped)
		{
			return Function.Call<int>((Hash)0x90403E8107B60E81, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9b90842304c938a7(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x9B90842304C938A7, _p0, _p1, _p2);
		}
		/// <summary>
		/// Update variation on ped, needed after first creation, or when component or texture/overlay is changed
		/// </summary>
		public static void UpdatePedVariation(int _ped, bool _p1, bool _p2, bool _p3, bool _p4, bool _p5)
		{
			Function.Call((Hash)0xCC8CA3E88256E58F, _ped, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcb1a3864c524f784(int _p0, int _p1)
		{
			Function.Call((Hash)0xCB1A3864C524F784, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfa0d206b489a6846(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xFA0D206B489A6846, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa4ac05b1a364ebc5(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xA4AC05B1A364EBC5, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1298b3d8e4c2409f(int _p0)
		{
			Function.Call((Hash)0x1298B3D8E4C2409F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa274f51ef7e34b95(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xA274F51EF7E34B95, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc2ef407645beecdc(int _p0)
		{
			return Function.Call<int>((Hash)0xC2EF407645BEECDC, _p0);
		}
		/// <summary>
		/// Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
		/// 
		/// Body Types:
		/// MPCREATOR_NEUTRAL
		/// MPCREATOR_SKINNY
		/// MPCREATOR_SKINNY_MUSCULAR
		/// MPCREATOR_HEAVY
		/// MPCREATOR_HEAVY_MUSCULAR
		/// 
		/// eBodyWeightOutfit (pedattributes.ymt):
		/// -2045421226 (smallest)
		/// -1745814259
		/// -325933489
		/// -1065791927
		/// -844699484
		/// -1273449080
		/// 927185840
		/// 149872391
		/// 399015098
		/// -644349862
		/// 1745919061 (default)
		/// 1004225511
		/// 1278600348
		/// 502499352
		/// -2093198664
		/// -1837436619
		/// 1736416063
		/// 2040610690
		/// -1173634986
		/// -867801909
		/// 1960266524 (biggest)
		/// 
		/// https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
		/// 
		/// Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
		/// </summary>
		public static void EquipMetaPedOutfit(int _ped, uint _hash)
		{
			Function.Call((Hash)0x1902C4CFCC5BE57C, _ped, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfa742b82d093d848(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xFA742B82D093D848, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedMetaOutfitHash(int _ped)
		{
			return Function.Call<uint>((Hash)0x30569F348D126A5A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa2f8b3b5fedfc100(int _p0, int _p1)
		{
			Function.Call((Hash)0xA2F8B3B5FEDFC100, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EquipMetaPedSuboutfit(int _ped, uint _suboutfit, int _p2)
		{
			Function.Call((Hash)0x66FF395445A88A6E, _ped, _suboutfit, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesMetapedOutfitExistForPedModel(uint _outfit, uint _model)
		{
			return Function.Call<bool>((Hash)0xC0E880B7A441164D, _outfit, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesMetapedSuboutfitExistForPedModel(uint _outfit, uint _suboutfit, uint _model)
		{
			return Function.Call<bool>((Hash)0x4FF3C2B4E6A196C1, _outfit, _suboutfit, _model);
		}
		/// <summary>
		/// Returns p1 value for 0x8E84119A23C16623
		/// </summary>
		public static int Hash_0x62fdf4e678e40cc6(int _entity, int _p1)
		{
			return Function.Call<int>((Hash)0x62FDF4E678E40CC6, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPedComponents(int _ped)
		{
			Function.Call((Hash)0x0BFA1BD465CDFEFD, _ped);
		}
		/// <summary>
		/// _RESET_PED_*
		/// </summary>
		public static void Hash_0x370a973252741ac4(int _ped, bool _p1)
		{
			Function.Call((Hash)0x370A973252741AC4, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRandomOutfitVariation(int _ped, bool _p1)
		{
			Function.Call((Hash)0x283978A15512B2FE, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumMetaPedOutfits(int _ped)
		{
			return Function.Call<int>((Hash)0x10C70A515BC03707, _ped);
		}
		/// <summary>
		/// Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
		/// If p2 is true as player, then certain components like facial hair and hair will not be removed
		/// </summary>
		public static void EquipMetaPedOutfitPreset(int _ped, int _presetId, bool _p2)
		{
			Function.Call((Hash)0x77FF8D35EEC6BBC4, _ped, _presetId, _p2);
		}
		/// <summary>
		/// Changes Multiplayer ped face and body type components, they can be stacked
		/// Params: p3 = 1
		/// Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
		/// Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
		/// Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
		/// </summary>
		public static void EquipMetaPedOutfitExtra(int _ped, int _component, int _p2, int _p3)
		{
			Function.Call((Hash)0xA5BAE410B03E7371, _ped, _component, _p2, _p3);
		}
		/// <summary>
		/// Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
		/// </summary>
		public static bool IsMetaPedOutfitEquipped(int _ped, uint _outfit)
		{
			return Function.Call<bool>((Hash)0x98082246107A6ACF, _ped, _outfit);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x851966e1e35af491(int _p0, int _p1)
		{
			Function.Call((Hash)0x851966E1E35AF491, _p0, _p1);
		}
		/// <summary>
		/// Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
		/// </summary>
		public static void Hash_0x4efc1f8ff1ad94de(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x4EFC1F8FF1AD94DE, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// Returns requestId
		/// Params: p1 = 1 in R* Scripts (Used in SP only)
		/// </summary>
		public static int RequestMetapedPed(uint _model, int _p1)
		{
			return Function.Call<int>((Hash)0xF97C34C33487D569, _model, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasMetapedPedRequestLoaded(int _requestId)
		{
			return Function.Call<bool>((Hash)0xC0940AC858C1E126, _requestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMetapedPedRequestValid(int _requestId)
		{
			return Function.Call<bool>((Hash)0x43E4DA469541A9C9, _requestId);
		}
		/// <summary>
		/// Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
		/// </summary>
		public static int CreateMetapedPed(int _requestId, float _x, float _y, float _z, float _heading, bool _p5, bool _p6, bool _p7, bool _p8, bool _p9)
		{
			return Function.Call<int>((Hash)0x0BCD4091C8EABA42, _requestId, _x, _y, _z, _heading, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseMetapedPedRequest(int _requestId)
		{
			Function.Call((Hash)0x3972F78A78B5D9DF, _requestId);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
		/// Returns requestId, to be used with 0x74F512E29CB717E2
		/// </summary>
		public static int RequestMetapedOutfit(uint _model, uint _outfit)
		{
			return Function.Call<int>((Hash)0x13154A76CE0CF9AB, _model, _outfit);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x27e8a84c12b0b7d1(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x27E8A84C12B0B7D1, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x273915ce30780986(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x273915CE30780986, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseMetapedOutfitRequest(int _requestId)
		{
			Function.Call((Hash)0x4592B8B9B0EF5F48, _requestId);
		}
		/// <summary>
		/// Used for script function PROCESS_PLAYER_HAT_EVENT
		/// Returns requestId to be used with 0x13E7320C762F0477
		/// </summary>
		public static int Hash_0x3fcbb5fcfd968698(uint _drawable, uint _albedo, uint _normal, uint _material, int _p4)
		{
			return Function.Call<int>((Hash)0x3FCBB5FCFD968698, _drawable, _albedo, _normal, _material, _p4);
		}
		/// <summary>
		/// Returns requestId
		/// Params: p1 = 1 in R* Scripts
		/// </summary>
		public static int RequestMetapedAssetBundle(uint _asset, int _p1)
		{
			return Function.Call<int>((Hash)0x91FE941F9FCFB702, _asset, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RequestMetapedComponent(int _metaPedType, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0xF6D9E1F3560CBF8E, _metaPedType, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseMetapedAssetRequest(int _requestId)
		{
			Function.Call((Hash)0x13E7320C762F0477, _requestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasMetapedAssetLoaded(int _requestId)
		{
			return Function.Call<bool>((Hash)0xB0B2C6D170B0E8E5, _requestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMetapedAssetValid(int _requestId)
		{
			return Function.Call<bool>((Hash)0x93FFD92F05EC32FD, _requestId);
		}
		/// <summary>
		/// Creates prop from metaped asset bundle
		/// https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
		/// Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
		/// </summary>
		public static int CreateMetapedAsset(uint _asset, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, bool _p7, bool _p8, bool _p9)
		{
			return Function.Call<int>((Hash)0x9641A9A20310F6B8, _asset, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasMetapedOutfitLoaded(int _requestId)
		{
			return Function.Call<bool>((Hash)0x610438375E5D1801, _requestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMetapedOutfitRequestValid(int _requestId)
		{
			return Function.Call<bool>((Hash)0xB25E57FC8E37114D, _requestId);
		}
		/// <summary>
		/// Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
		/// </summary>
		public static int CreateMetapedOutfitPed(int _requestId, float _x, float _y, float _z, float _heading, bool _p5, bool _p6, bool _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0xEAF682A14F8E5F53, _requestId, _x, _y, _z, _heading, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
		/// </summary>
		public static bool ApplyPedMetapedOutfit(int _requestId, int _ped, bool _p2, bool _p3)
		{
			return Function.Call<bool>((Hash)0x74F512E29CB717E2, _requestId, _ped, _p2, _p3);
		}
		/// <summary>
		/// Sets ped eye redness, weariness: 0.f to 1.f
		/// </summary>
		public static void SetMetapedWeariness(int _ped, float _weariness)
		{
			Function.Call((Hash)0x314C5465195F3B30, _ped, _weariness);
		}
		/// <summary>
		/// Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
		/// </summary>
		public static void Hash_0xf47d54b986f0a346(int _ped, int _danceIntensity)
		{
			Function.Call((Hash)0xF47D54B986F0A346, _ped, _danceIntensity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3efed081b4834ba1(int _p0)
		{
			Function.Call((Hash)0x3EFED081B4834BA1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0fb1ba7ff73b41e1(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x0FB1BA7FF73B41E1, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb292203008ebbaac(int _p0)
		{
			return Function.Call<int>((Hash)0xB292203008EBBAAC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xd4d403ea031f351c(int _ped)
		{
			return Function.Call<bool>((Hash)0xD4D403EA031F351C, _ped);
		}
		/// <summary>
		/// Returns peltId
		/// </summary>
		public static int GetPeltFromHorse(int _horse, int _index)
		{
			return Function.Call<int>((Hash)0x0CEEB6F4780B1F2F, _horse, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPeltForHorse(int _horse, int _peltId)
		{
			Function.Call((Hash)0xA73F50E8796150D5, _horse, _peltId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc412aa1c73111fe0(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xC412AA1C73111FE0, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPeltFromHorse(int _horse, int _peltId)
		{
			Function.Call((Hash)0x627F7F3A0C4C51FF, _horse, _peltId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedLights(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x13A210949FCBD92B, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd049fdaf089fddb0(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD049FDAF089FDDB0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdd9540e7b1c9714f(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xDD9540E7B1C9714F, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x55546004a244302a(int _p0, int _p1)
		{
			Function.Call((Hash)0x55546004A244302A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetHealthRechargeMultiplier(int _ped, int _multiplier)
		{
			Function.Call((Hash)0xDE1B1907A83A1550, _ped, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetHealthRechargeMultiplier(int _ped)
		{
			return Function.Call<float>((Hash)0x95B8E397B8F4360F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStaminaDepletionMultiplier(int _ped, int _multiplier)
		{
			Function.Call((Hash)0xEF5A3D2285D8924B, _ped, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetStaminaDepletionMultiplier(int _ped)
		{
			return Function.Call<float>((Hash)0x825F6DD559A0895B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStaminaRechargeMultiplier(int _ped, int _multiplier)
		{
			Function.Call((Hash)0x345C9F993A8AB4A4, _ped, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetStaminaRechargeMultiplier(int _ped)
		{
			return Function.Call<float>((Hash)0xE7687EB2F634ABF0, _ped);
		}
		/// <summary>
		/// Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
		/// </summary>
		public static bool ChangePedStamina(int _ped, float _amount)
		{
			return Function.Call<bool>((Hash)0xC3D4B754C0E86B9E, _ped, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedStamina(int _ped)
		{
			return Function.Call<float>((Hash)0x775A1CA7893AA8B5, _ped);
		}
		/// <summary>
		/// Returns stamina normalizedValue / normalizedUnlockedMax
		/// </summary>
		public static float GetPedStaminaNormalized(int _ped)
		{
			return Function.Call<float>((Hash)0x22F2A386D43048A9, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedMaxStamina(int _ped)
		{
			return Function.Call<float>((Hash)0xCB42AFE2B613EE55, _ped);
		}
		/// <summary>
		/// _RESET_PED_*
		/// </summary>
		public static void Hash_0x36513affc703c60d(int _p0)
		{
			Function.Call((Hash)0x36513AFFC703C60D, _p0);
		}
		/// <summary>
		/// 0.0 <= stamina <= 100.0
		/// </summary>
		public static void RestorePedStamina(int _ped, float _stamina)
		{
			Function.Call((Hash)0x675680D089BFA21F, _ped, _stamina);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfc3b580c4380b5b7(int _p0)
		{
			return Function.Call<int>((Hash)0xFC3B580C4380B5B7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xea8763e505afd49a(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xEA8763E505AFD49A, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe4ef4382e22c780c(int _p0)
		{
			Function.Call((Hash)0xE4EF4382E22C780C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd61fcf9fcfd515b7(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD61FCF9FCFD515B7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8d9db115fba8e23d(int _p0)
		{
			Function.Call((Hash)0x8D9DB115FBA8E23D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumReservedHealth(int _ped)
		{
			return Function.Call<int>((Hash)0x16F2C8C084AB2092, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd97bc27ac039f681(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xD97BC27AC039F681, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf6a8c4b4a11ae89c(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xF6A8C4B4A11AE89C, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe4c95e0ae31c6512(int _ped, int _p1)
		{
			Function.Call((Hash)0xE4C95E0AE31C6512, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedLastDroppedHat(int _ped)
		{
			return Function.Call<int>((Hash)0x1F714E7A9DADFC42, _ped);
		}
		/// <summary>
		/// Related to ped hat
		/// _SET_PED_LA* - _SET_PED_LE*
		/// </summary>
		public static void Hash_0x5d4cd22a8c82a81a(int _ped, bool _p1)
		{
			Function.Call((Hash)0x5D4CD22A8C82A81A, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbf567df2bef211a6(int _p0, int _p1)
		{
			Function.Call((Hash)0xBF567DF2BEF211A6, _p0, _p1);
		}
		/// <summary>
		/// Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
		/// Can be useful to "point" player at some specific position.
		/// Only works while on-foot.
		/// 
		/// _CREATE_[P-Z]
		/// </summary>
		public static int CreateGravityWell(float _xPos, float _yPos, float _zPos, float _heading, float _radius, float _p5, float _p6, float _p7, bool _stopAtDestination)
		{
			return Function.Call<int>((Hash)0x4F5EBE70081E5A20, _xPos, _yPos, _zPos, _heading, _radius, _p5, _p6, _p7, _stopAtDestination);
		}
		/// <summary>
		/// Removes gravity well by handle returned from 0x4F5EBE70081E5A20
		/// </summary>
		public static void RemoveGravityWell(int _handle)
		{
			Function.Call((Hash)0x87247BC60B60BED8, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedIntimidated(int _ped)
		{
			return Function.Call<bool>((Hash)0x57779B55B83E2BEA, _ped);
		}
		/// <summary>
		/// _IS_PED_H* - _IS_PED_I*
		/// </summary>
		public static bool Hash_0x7ee3a8660f38797e(int _ped)
		{
			return Function.Call<bool>((Hash)0x7EE3A8660F38797E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa180fbd502a03125(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xA180FBD502A03125, _p0, _p1, _p2);
		}
		/// <summary>
		/// Creates a texture override data for ped and returns it's index.
		/// So you can replace any texture of any ped's component.
		/// Also, you can add overlays on it, such as aging, lipstick and more.
		/// Textures can be reused by multiple peds at once.
		/// You can keep only 32 textures at once(including other peds).
		/// 
		/// https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
		/// materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
		/// </summary>
		public static int RequestTexture(uint _albedoHash, uint _normalHash, uint _materialHash)
		{
			return Function.Call<int>((Hash)0xC5E7204F322E49EB, _albedoHash, _normalHash, _materialHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ApplyTextureOnPed(int _ped, uint _componentHash, int _textureId)
		{
			Function.Call((Hash)0x0B46E25761519058, _ped, _componentHash, _textureId);
		}
		/// <summary>
		/// Removes a texture created by 0xC5E7204F322E49EB.
		/// </summary>
		public static void ReleaseTexture(int _textureId)
		{
			Function.Call((Hash)0x6BEFAA907B076859, _textureId);
		}
		/// <summary>
		/// Should be called at least once for any new texture override.
		/// Otherwise component textures will be just black.
		/// Also needs to be called for updating any ped overlays to apply the changes.
		/// </summary>
		public static void UpdatePedTexture(int _textureId)
		{
			Function.Call((Hash)0x92DAABA2C1C10B0E, _textureId);
		}
		/// <summary>
		/// Removes every texture layer but the base layer
		/// Clearing texture's data: setting params to default values, but keep overlays.
		/// </summary>
		public static void ResetPedTexture(int _textureId)
		{
			Function.Call((Hash)0x8472A1789478F82F, _textureId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTextureValid(int _textureId)
		{
			return Function.Call<bool>((Hash)0x31DC8D3F216D8509, _textureId);
		}
		/// <summary>
		/// Creates ped overlay in texture override data and returns it's index.
		/// This index are used for further overlay editing.
		/// 
		/// albedoHash: a hash of overlay's albedo texture
		/// colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
		/// </summary>
		public static int AddTextureLayer(int _textureId, uint _albedoHash, uint _normalHash, uint _materialHash, int _blendType, float _texAlpha, int _sheetGridIndex)
		{
			return Function.Call<int>((Hash)0x86BB5FF45F193A02, _textureId, _albedoHash, _normalHash, _materialHash, _blendType, _texAlpha, _sheetGridIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedOverlay(int _textureId, int _overlayId)
		{
			Function.Call((Hash)0x96C349DE04C49011, _textureId, _overlayId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTextureLayerSheetGridIndex(int _textureId, int _layerId, int _sheetGridIndex)
		{
			Function.Call((Hash)0x3329AAE2882FC8E4, _textureId, _layerId, _sheetGridIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTextureLayerAlpha(int _textureId, int _layerId, float _texAlpha)
		{
			Function.Call((Hash)0x6C76BC24F8BB709A, _textureId, _layerId, _texAlpha);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTextureLayerRoughness(int _textureId, int _layerId, float _texRough)
		{
			Function.Call((Hash)0x057C4F092E2298BE, _textureId, _layerId, _texRough);
		}
		/// <summary>
		/// paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
		/// </summary>
		public static void SetTextureLayerPallete(int _textureId, int _layerId, uint _paletteHash)
		{
			Function.Call((Hash)0x1ED8588524AC9BE1, _textureId, _layerId, _paletteHash);
		}
		/// <summary>
		/// Seem color is not RGB or HSV
		/// </summary>
		public static void SetTextureLayerTint(int _textureId, int _layerId, int _tint0, int _tint1, int _tint2)
		{
			Function.Call((Hash)0x2DF59FFE6FFD6044, _textureId, _layerId, _tint0, _tint1, _tint2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTextureLayerMod(int _textureId, int _layerId, uint _modTextureHash, float _modAlpha, int _modChannel)
		{
			Function.Call((Hash)0xF2EA041F1146D75B, _textureId, _layerId, _modTextureHash, _modAlpha, _modChannel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTextureLayerTextureMap(int _textureId, int _layerId, uint _albedoHash, uint _normalHash, uint _materialHash)
		{
			Function.Call((Hash)0x253A63B5BADBC398, _textureId, _layerId, _albedoHash, _normalHash, _materialHash);
		}
		/// <summary>
		/// Removes every texture layer
		/// Old Name: _RESET_PED_TEXTURE_2
		/// </summary>
		public static void ClearPedTexture(int _textureId)
		{
			Function.Call((Hash)0xB63B9178D0F58D82, _textureId);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void Hash_0xc991ef46fe323867(int _ped, int _p1)
		{
			Function.Call((Hash)0xC991EF46FE323867, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1f8215d0e446f593(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x1F8215D0E446F593, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsLocationSpawnSafe(int _ped, float _p1)
		{
			return Function.Call<bool>((Hash)0xFB1E7998B8595825, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x53ba7d96b9a421d9(int _p0, int _p1)
		{
			Function.Call((Hash)0x53BA7D96B9A421D9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x96c7b659854de629(int _p0, int _p1)
		{
			Function.Call((Hash)0x96C7B659854DE629, _p0, _p1);
		}
		/// <summary>
		/// -1 - HORSE_ASSIST__NO_CHANGE
		///  0 - HORSE_ASSIST__MANUAL
		///  1 - HORSE_ASSIST__SEMIASSIST
		///  2 - HORSE_ASSIST__FULLASSIST
		/// </summary>
		public static void SetHorseAvoidanceLevel(int _horse, int _avoidanceLevel)
		{
			Function.Call((Hash)0xDDCF6FEA5D7ACC17, _horse, _avoidanceLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetHorseAvoidanceLevelToDefault(int _horse)
		{
			Function.Call((Hash)0x2A5AFD2B8381A6E1, _horse);
		}
		/// <summary>
		/// Doesn't actually return anything.
		/// </summary>
		public static int SetPedUseHorseMapCollision(int _ped, bool _toggle)
		{
			return Function.Call<int>((Hash)0xEB72453B6F5B45B0, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5b73975b4f12f7f3(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x5B73975B4F12F7F3, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// This is a way to get what drawables a ped has equipped
		/// Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
		/// Note: this works with non shop components, direct .ydd files.
		/// </summary>
		public static bool GetMetaPedAssetGuids(int _ped, int _index, uint _drawable, uint _albedo, uint _normal, uint _material)
		{
			return Function.Call<bool>((Hash)0xA9C28516A6DC9D56, _ped, _index, _drawable, _albedo, _normal, _material);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetMetaPedAssetTint(int _ped, int _index, uint _pallete, int _tint0, int _tint1, int _tint2)
		{
			return Function.Call<bool>((Hash)0xE7998FEC53A33BBE, _ped, _index, _pallete, _tint0, _tint1, _tint2);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
		/// Blackboard natives allow you to apply and check certain data to/for peds.
		/// Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
		/// Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
		/// "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
		/// </summary>
		public static void SetPedBlackboardInt(int _ped, string _variableName, int _value, int _removeTimer)
		{
			Function.Call((Hash)0x5F53010C4C3F6BAF, _ped, _variableName, _value, _removeTimer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedBlackboardBool(int _ped, string _variableName, bool _value, int _removeTimer)
		{
			Function.Call((Hash)0xCB9401F918CB0F75, _ped, _variableName, _value, _removeTimer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedBlackboardFloat(int _ped, string _variableName, float _value, int _removeTimer)
		{
			Function.Call((Hash)0x437C08DB4FEBE2BD, _ped, _variableName, _value, _removeTimer);
		}
		/// <summary>
		/// p1:
		/// BodyPartChained
		/// OverloadMostInjuredBodyPart
		/// 
		/// p2:
		/// LeftLeg
		/// Legs
		/// RightArm
		/// </summary>
		public static void SetPedBlackboardHash(int _ped, string _variableName, string _value, int _removeTimer)
		{
			Function.Call((Hash)0xA762C9D6CF165E0D, _ped, _variableName, _value, _removeTimer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedBlackboardInt(int _ped, string _variableName)
		{
			Function.Call((Hash)0x81B75428A7813E67, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedBlackboardBool(int _ped, string _variableName)
		{
			Function.Call((Hash)0xA6F67BEC53379A32, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedBlackboardFloat(int _ped, string _variableName)
		{
			Function.Call((Hash)0x411189E51B8020BA, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedBlackboardHash(int _ped, string _variableName)
		{
			Function.Call((Hash)0x0E17378642156790, _ped, _variableName);
		}
		/// <summary>
		/// Can be used to get a peds foliage active status: variableName = FoliageActive
		/// </summary>
		public static bool GetPedBlackboardBool(int _ped, string _variableName)
		{
			return Function.Call<bool>((Hash)0x498F2E77982D6945, _ped, _variableName);
		}
		/// <summary>
		/// Can be used to get a peds foliage raw height: variableName = FoliageHeight
		/// </summary>
		public static float GetPedBlackboardFloat(int _ped, string _variableName)
		{
			return Function.Call<float>((Hash)0x56E58D4D118FB45E, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedBlackboardHash(int _ped, string _variableName)
		{
			return Function.Call<uint>((Hash)0xBF5E791BBBF90A3C, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedBlackboardScriptInt(int _ped, string _variableName)
		{
			return Function.Call<int>((Hash)0xB71B91B398F8F067, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedBlackboardScriptBool(int _ped, string _variableName)
		{
			return Function.Call<bool>((Hash)0x4912DFE492DB98CD, _ped, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedBlackboardScriptFloat(int _ped, string _variableName)
		{
			return Function.Call<float>((Hash)0xA29FD00D45311EB7, _ped, _variableName);
		}
		/// <summary>
		/// Size will be permanent
		/// </summary>
		public static void SetTankAttributeSize(int _ped, int _attributeIndex, float _size)
		{
			Function.Call((Hash)0x7FF72DE061DF55E2, _ped, _attributeIndex, _size);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa31d350d66fa1855(int _p0)
		{
			return Function.Call<int>((Hash)0xA31D350D66FA1855, _p0);
		}
		/// <summary>
		/// _IS_TRACKED_* - IS_V*
		/// </summary>
		public static bool IsUsingSlipstream(int _ped)
		{
			return Function.Call<bool>((Hash)0xAF61B3CD8C3B82C3, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeedc9b29314b2733(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0xEEDC9B29314B2733, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5c90e20c25e6d83c(int _p0)
		{
			Function.Call((Hash)0x5C90E20C25E6D83C, _p0);
		}
		/// <summary>
		/// NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
		/// </summary>
		public static void Hash_0x10f96086123b939f(int _legendaryPed, int _preyPed, float _p2)
		{
			Function.Call((Hash)0x10F96086123B939F, _legendaryPed, _preyPed, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3fdbb99efd8ce4af(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x3FDBB99EFD8CE4AF, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7e8f9949b7aabbf0(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x7E8F9949B7AABBF0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5da36cccb63c0895(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x5DA36CCCB63C0895, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x56076667e7c2dcd6(int _p0, int _p1)
		{
			Function.Call((Hash)0x56076667E7C2DCD6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ApplyShopItemToPed(int _ped, uint _componentHash, bool _immediately, bool _isMp, bool _p4)
		{
			Function.Call((Hash)0xD3A7B003ED343FD9, _ped, _componentHash, _immediately, _isMp, _p4);
		}
		/// <summary>
		/// Directly removes a shop item component from a ped
		/// Params: p2 and p3 are always 0
		/// </summary>
		public static void RemoveShopItemFromPed(int _ped, uint _componentHash, int _p2, bool _p3)
		{
			Function.Call((Hash)0x0D7FFA1B2F69ED82, _ped, _componentHash, _p2, _p3);
		}
		/// <summary>
		/// Params: p2, p3 usually 0 in R* Scripts
		/// </summary>
		public static void RemoveShopItemFromPedByCategory(int _ped, uint _componentCategory, int _p2, bool _p3)
		{
			Function.Call((Hash)0xDF631E4BCE1B1FC4, _ped, _componentCategory, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UpdateShopItemWearableState(int _ped, uint _componentHash, uint _wearableState, int _p3, bool _p4, int _p5)
		{
			Function.Call((Hash)0x66B957AAC2EAAEAB, _ped, _componentHash, _wearableState, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetShopPedComponentAtIndex(int _ped, int _index, bool _p2, int _argStruct, int _argStruct2)
		{
			return Function.Call<uint>((Hash)0x77BA37622E22023B, _ped, _index, _p2, _argStruct, _argStruct2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xffcc2db2d9953401(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xFFCC2DB2D9953401, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6243635af2f1b826(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x6243635AF2F1B826, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetShopPedComponentCategory(uint _componentHash, int _metapedType, bool _isMP)
		{
			return Function.Call<uint>((Hash)0x5FF9A878C3D115B8, _componentHash, _metapedType, _isMP);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x31b2e7f2e3c58b89(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x31B2E7F2E3C58B89, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetShopPedBaseLayers(uint _shopItem, int _p1, int _ped, int _metapedType, bool _p4, uint _drawable, uint _albedo, uint _normal, uint _material, uint _p9, uint _p10, uint _p11, uint _p12)
		{
			return Function.Call<bool>((Hash)0x63342C50EC115CE8, _shopItem, _p1, _ped, _metapedType, _p4, _drawable, _albedo, _normal, _material, _p9, _p10, _p11, _p12);
		}
		/// <summary>
		/// Related to _0x704C908E9C405136 for component loading
		/// _S*
		/// </summary>
		public static int Hash_0xaab86462966168ce(int _ped, bool _isMP)
		{
			return Function.Call<int>((Hash)0xAAB86462966168CE, _ped, _isMP);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetShopPedHatComponent(int _ped, int _metapedType, bool _p2)
		{
			return Function.Call<int>((Hash)0x7E02E4218D916B94, _ped, _metapedType, _p2);
		}
		/// <summary>
		/// p1 is always 1
		/// </summary>
		public static void RefreshMetaPedShopItems(int _ped, int _p1)
		{
			Function.Call((Hash)0x59BD177A1A48600A, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd103f6dbb5442be8(int _p0, int _p1)
		{
			Function.Call((Hash)0xD103F6DBB5442BE8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPromptNameFromGxtEntry(int _ped, uint _gxtEntryHash)
		{
			Function.Call((Hash)0xFCA8FB9E15FA80D3, _ped, _gxtEntryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPromptName(int _ped, string _name)
		{
			Function.Call((Hash)0x4A48B6E03BABB4AC, _ped, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc2745d9261664901(int _p0, int _p1)
		{
			Function.Call((Hash)0xC2745D9261664901, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x19b14e04b009e28b(int _p0, int _p1)
		{
			Function.Call((Hash)0x19B14E04B009E28B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf917f92bf22ecbab(int _p0)
		{
			Function.Call((Hash)0xF917F92BF22ECBAB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x49dadfc4cd808b0a(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x49DADFC4CD808B0A, _p0, _p1, _p2);
		}
		/// <summary>
		/// limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
		/// </summary>
		public static bool HasPedTakenGoreDamage(int _ped, int _limb)
		{
			return Function.Call<bool>((Hash)0xBA208A8D6399A3AC, _ped, _limb);
		}
		/// <summary>
		/// _CLEAR*
		/// </summary>
		public static void Hash_0x704c908e9c405136(int _ped)
		{
			Function.Call((Hash)0x704C908E9C405136, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7406c71f4ac2ffcc(int _p0)
		{
			Function.Call((Hash)0x7406C71F4AC2FFCC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x28508173c6a7cc18(int _p0)
		{
			Function.Call((Hash)0x28508173C6A7CC18, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x52250b92ea70be3d(int _p0)
		{
			return Function.Call<int>((Hash)0x52250B92EA70BE3D, _p0);
		}
		/// <summary>
		/// quality: see _GET_PED_QUALITY
		/// </summary>
		public static void SetPedQuality(int _ped, int _quality)
		{
			Function.Call((Hash)0xCE6B874286D640BB, _ped, _quality);
		}
		/// <summary>
		/// Returns Ped Quality to be used to calculate Skinning Quality
		/// 
		/// enum ePedQuality
		/// {
		/// 	PQ_INVALID = -1,
		/// 	PQ_LOW,
		/// 	PQ_MEDIUM,
		/// 	PQ_HIGH,
		/// 	PQ_MAX
		/// };
		/// </summary>
		public static int GetPedQuality(int _ped)
		{
			return Function.Call<int>((Hash)0x7BCC6087D130312A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xce7a6c1d5cde1f9d(int _ped, int _object, string _propName, string _animName)
		{
			Function.Call((Hash)0xCE7A6C1D5CDE1F9D, _ped, _object, _propName, _animName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x604e1010e3162e86(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x604E1010E3162E86, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe8abe3b73fc7fe17(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xE8ABE3B73FC7FE17, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePedProp(int _ped, string _propName)
		{
			Function.Call((Hash)0x3A50753042B6891B, _ped, _propName);
		}
		/// <summary>
		/// _SET_W(EAPON?)*
		/// </summary>
		public static void SetTotalPedDamageFalloffBonus(int _ped, float _bonus)
		{
			Function.Call((Hash)0x932786CE3C76477C, _ped, _bonus);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x095c2277fed731db(int _p0)
		{
			return Function.Call<int>((Hash)0x095C2277FED731DB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x09171a6f8fde5dc1(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x09171A6F8FDE5DC1, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x09e378c52b1433b5(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x09E378C52B1433B5, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// _IS_N* - _IS_P*
		/// </summary>
		public static bool Hash_0x6507ac3bd7c99009(float _x, float _y, float _z, float _p3)
		{
			return Function.Call<bool>((Hash)0x6507AC3BD7C99009, _x, _y, _z, _p3);
		}
		/// <summary>
		/// Returns how deep the water is below the ped (if in water)
		/// -1.0f = Not in water
		/// 10.0f = Max water depth
		/// </summary>
		public static float GetPlayerPedWaterDepth(int _ped)
		{
			return Function.Call<float>((Hash)0x2942457417A5FD24, _ped);
		}
		/// <summary>
		/// duration in seconds
		/// </summary>
		public static void SetPedTrailEffect(int _ped, bool _p1, float _duration)
		{
			Function.Call((Hash)0xA5950E16B8F31052, _ped, _p1, _duration);
		}
		/// <summary>
		/// If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
		/// If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
		/// _IS_PED_T* - _IS_PED_U*
		/// </summary>
		public static bool Hash_0xebaac9a750e7563b(int _ped)
		{
			return Function.Call<bool>((Hash)0xEBAAC9A750E7563B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x992187d975635df5(int _p0, int _p1)
		{
			Function.Call((Hash)0x992187D975635DF5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0b787a37eedd226f(int _p0, int _p1)
		{
			Function.Call((Hash)0x0B787A37EEDD226F, _p0, _p1);
		}
		// :#####################: //
		// : namespace: PERSCHAR : //
		// :#####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x63aa2b8eb087886a(int _p0, int _p1)
		{
			Function.Call((Hash)0x63AA2B8EB087886A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPerscharModelName(uint _persCharHash)
		{
			return Function.Call<uint>((Hash)0xA00DF706C60173D1, _persCharHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8bc555034a5a5e8c(int _p0, int _p1)
		{
			Function.Call((Hash)0x8BC555034A5A5E8C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x70605812abc9ff0f(int _p0, int _p1)
		{
			Function.Call((Hash)0x70605812ABC9FF0F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdc9655d47dec0353(int _p0)
		{
			return Function.Call<int>((Hash)0xDC9655D47DEC0353, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2df89cd2ed1d0bde(int _p0, int _p1)
		{
			Function.Call((Hash)0x2DF89CD2ED1D0BDE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x535a66aad2bf68f9(int _p0, int _p1)
		{
			Function.Call((Hash)0x535A66AAD2BF68F9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xceb40b678e403759(int _p0)
		{
			return Function.Call<int>((Hash)0xCEB40B678E403759, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPerscharSchedule(uint _persCharHash, string _schedule)
		{
			Function.Call((Hash)0x187D65F3AEC5D679, _persCharHash, _schedule);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8b44273a92cd406c(int _p0)
		{
			Function.Call((Hash)0x8B44273A92CD406C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe0e65e0d261f7507(int _p0)
		{
			Function.Call((Hash)0xE0E65E0D261F7507, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x112ddf56300bc6e5(int _p0)
		{
			return Function.Call<int>((Hash)0x112DDF56300BC6E5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePersistentCharacter(uint _hash)
		{
			return Function.Call<int>((Hash)0x4F76E3676583D951, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPersistentCharacterValid(int _persChar)
		{
			return Function.Call<bool>((Hash)0x800DF3FC913355F3, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeletePerschar(int _persChar)
		{
			Function.Call((Hash)0xFC77C5B44D5FF7C0, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x5ee6fccc9c832ca2(int _p0)
		{
			return Function.Call<Vector3>((Hash)0x5EE6FCCC9C832CA2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x59c7ad6fea2ac449(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x59C7AD6FEA2AC449, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbb68908cd11aebdc(int _p0)
		{
			Function.Call((Hash)0xBB68908CD11AEBDC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x94995829ed15a598(int _p0)
		{
			return Function.Call<Vector3>((Hash)0x94995829ED15A598, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPerscharPedIndex(int _persChar)
		{
			return Function.Call<int>((Hash)0x31C70A716CAE1FEE, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPerscharIndexFromPedIndex(int _ped)
		{
			return Function.Call<int>((Hash)0x32A1E3B83D501096, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf8de7154f7d1458f(int _p0)
		{
			return Function.Call<int>((Hash)0xF8DE7154F7D1458F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x669c25840c6f7ae2(int _p0, int _p1)
		{
			Function.Call((Hash)0x669C25840C6F7AE2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RetaskPersistentCharacter(int _persChar)
		{
			Function.Call((Hash)0x631CD2D77FDC0316, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0b3a99ab6713aa52(int _p0)
		{
			Function.Call((Hash)0x0B3A99AB6713AA52, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPersistentCharacterDead(int _persChar)
		{
			return Function.Call<bool>((Hash)0xEB98B38CA60742D7, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RevivePerschar(int _persChar)
		{
			return Function.Call<bool>((Hash)0x49A8C2CD97815215, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd4b614179bcd0654(int _p0)
		{
			Function.Call((Hash)0xD4B614179BCD0654, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x406808610220405b(int _p0)
		{
			Function.Call((Hash)0x406808610220405B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa2b18ff8d39f6d87(int _p0)
		{
			Function.Call((Hash)0xA2B18FF8D39F6D87, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe4c51a8a3bd1664c(int _p0)
		{
			return Function.Call<int>((Hash)0xE4C51A8A3BD1664C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8ae4efa464dae42d(int _p0, int _p1)
		{
			Function.Call((Hash)0x8AE4EFA464DAE42D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa4dcb3f0dd7488bd(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xA4DCB3F0DD7488BD, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd95d777f828b2bbb(int _p0)
		{
			Function.Call((Hash)0xD95D777F828B2BBB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x92690b0822493ce0()
		{
			Function.Call((Hash)0x92690B0822493CE0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xefc5c6670e0b99ba()
		{
			Function.Call((Hash)0xEFC5C6670E0B99BA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2e957aa81f2c61c9()
		{
			Function.Call((Hash)0x2E957AA81F2C61C9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb173599d61faeb31()
		{
			Function.Call((Hash)0xB173599D61FAEB31);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x08fc896d2cb31fcc(int _p0, bool _p1)
		{
			return Function.Call<int>((Hash)0x08FC896D2CB31FCC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ForceSpawnPerschar(int _persChar, bool _p1)
		{
			return Function.Call<int>((Hash)0x0CADC3A977997472, _persChar, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceDespawnPerschar(int _persChar)
		{
			Function.Call((Hash)0x7B204F88F6C3D287, _persChar);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfcc6db8dbe709bc8(int _p0)
		{
			Function.Call((Hash)0xFCC6DB8DBE709BC8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa8c406c2a56edc16(int _p0)
		{
			Function.Call((Hash)0xA8C406C2A56EDC16, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4f81ead1de8fa19b(int _p0)
		{
			Function.Call((Hash)0x4F81EAD1DE8FA19B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6759bee6762e140b(int _p0)
		{
			Function.Call((Hash)0x6759BEE6762E140B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb65e7f733956cf25(int _p0)
		{
			Function.Call((Hash)0xB65E7F733956CF25, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4afc7288c77238b3(int _p0)
		{
			return Function.Call<int>((Hash)0x4AFC7288C77238B3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa8120ebeaf290c7a(int _p0)
		{
			return Function.Call<int>((Hash)0xA8120EBEAF290C7A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x69786495c92a3044(int _p0)
		{
			return Function.Call<int>((Hash)0x69786495C92A3044, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xec254c2c9b0f08f1(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xEC254C2C9B0F08F1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9c7f95946e304778(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x9C7F95946E304778, _p0, _p1);
		}
		// :########################: //
		// : namespace: PERSISTENCE : //
		// :########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7a1bd123e5cdb6e5()
		{
			Function.Call((Hash)0x7A1BD123E5CDB6E5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PersistenceRemoveAllEntitiesInArea(float _x, float _y, float _z, float _radius)
		{
			Function.Call((Hash)0x9D16896F0DBE78A2, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x065887b694359799(int _p0)
		{
			Function.Call((Hash)0x065887B694359799, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfc9806da9a460093(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2)
		{
			Function.Call((Hash)0xFC9806DA9A460093, _x1, _y1, _z1, _x2, _y2, _z2);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xb03140014aca6c40(int _p0, int _p1)
		{
			Function.Call((Hash)0xB03140014ACA6C40, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe225cef1901f6108(int _p0, int _p1)
		{
			Function.Call((Hash)0xE225CEF1901F6108, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8de104bec243a73b(int _p0)
		{
			Function.Call((Hash)0x8DE104BEC243A73B, _p0);
		}
		/// <summary>
		/// Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
		/// </summary>
		public static void PersistenceRefreshTownVolume(int _volume)
		{
			Function.Call((Hash)0xEFB5F34CC0953B27, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xba2c49ea6a8d24ff(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0xBA2C49EA6A8D24FF, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2e545965df98d476(int _p0)
		{
			return Function.Call<int>((Hash)0x2E545965DF98D476, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf5622fa6acfca7db(int _p0, int _p1)
		{
			Function.Call((Hash)0xF5622FA6ACFCA7DB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3ca5e58c9731a16b(int _p0, int _p1)
		{
			Function.Call((Hash)0x3CA5E58C9731A16B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc0a1f0ecec9f0c0(int _p0, int _p1)
		{
			Function.Call((Hash)0xDC0A1F0ECEC9F0C0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5a79220f6d38d7c3(int _p0)
		{
			return Function.Call<int>((Hash)0x5A79220F6D38D7C3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xcfda2518f322d836(int _p0)
		{
			return Function.Call<int>((Hash)0xCFDA2518F322D836, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1f56fb3fdb4eaf65(int _p0)
		{
			return Function.Call<int>((Hash)0x1F56FB3FDB4EAF65, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x291cc21d1fb6790e(int _p0)
		{
			Function.Call((Hash)0x291CC21D1FB6790E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PersistenceAddScenarioLooted(int _scenario)
		{
			Function.Call((Hash)0x8245C1F3262F4AC2, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PersistenceIsScenarioMarkedAsLooted(int _scenario)
		{
			return Function.Call<bool>((Hash)0xFB7CF1DE938A3E22, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PersistenceIsScenarioMarkedAsLootedAtCoords(float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xB6E1A185C2B9319A, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PersistenceIsScenarioMarkedAsLootedAtCoordsWithModel(float _x, float _y, float _z, uint _model)
		{
			return Function.Call<bool>((Hash)0x188313616D184213, _x, _y, _z, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x66daa3a9274e8e82()
		{
			Function.Call((Hash)0x66DAA3A9274E8E82);
		}
		// :####################: //
		// : namespace: PHYSICS : //
		// :####################: //
		/// <summary>
		/// There are 19 types of rope, from type = 0 to type = 18
		/// Rope definitions are stored in ropedata.xml
		/// Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
		/// </summary>
		public static int AddRope(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _length, int _ropeType, float _maxLength, float _minLength, float _p10, bool _p11, bool _p12, bool _rigid, float _p14, bool _breakWhenShot, int _unkPtr, bool _p17)
		{
			return Function.Call<int>((Hash)0xE832D760399EB220, _x, _y, _z, _rotX, _rotY, _rotZ, _length, _ropeType, _maxLength, _minLength, _p10, _p11, _p12, _rigid, _p14, _breakWhenShot, _unkPtr, _p17);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddRope2(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _length, int _ropeType, bool _isNetworked, int _p9, float _p10)
		{
			return Function.Call<int>((Hash)0xE9C59F6809373A99, _x, _y, _z, _rotX, _rotY, _rotZ, _length, _ropeType, _isNetworked, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteRope(int _ropeId)
		{
			Function.Call((Hash)0x52B4829281364649, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseRope(int _ropeId)
		{
			Function.Call((Hash)0x6076213101A47B3B, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteChildRope(int _ropeId)
		{
			Function.Call((Hash)0xAA5D6B1888E4DB20, _ropeId);
		}
		/// <summary>
		/// ropeTop returns top half of rope, ropeBottom returns bottom half of rope
		/// </summary>
		public static void BreakRope(int _ropeId, int _ropeTop, int _ropeBottom, float _offsetX, float _offsetY, float _offsetZ, int _p6)
		{
			Function.Call((Hash)0x4CFA2B7FAE115ECB, _ropeId, _ropeTop, _ropeBottom, _offsetX, _offsetY, _offsetZ, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesRopeExist(int _ropeId)
		{
			return Function.Call<bool>((Hash)0xFD5448BE3111ED96, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsRopeBroken(int _ropeId)
		{
			return Function.Call<bool>((Hash)0x79C2BEC82CFD7F7F, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7a54d82227a139db(int _ropeId, int _p1)
		{
			Function.Call((Hash)0x7A54D82227A139DB, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RopeDrawShadowEnabled(int _ropeId, bool _toggle)
		{
			Function.Call((Hash)0xF159A63806BB5BA8, _ropeId, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRopeVertexCount(int _ropeId)
		{
			return Function.Call<int>((Hash)0x3655F544CD30F0B5, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe54bf2ce6c7d23a9(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xE54BF2CE6C7D23A9, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9c24846d0a4a2776(int _p0)
		{
			Function.Call((Hash)0x9C24846D0A4A2776, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0cb16d05e03fb525(int _p0)
		{
			Function.Call((Hash)0x0CB16D05E03FB525, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf27f1a8de4f50a1b(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xF27F1A8DE4F50A1B, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x21d0890d88dfb0b0(int _ropeId, bool _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9, int _p10)
		{
			Function.Call((Hash)0x21D0890D88DFB0B0, _ropeId, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// Attaches entity 1 to entity 2.
		/// If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
		/// </summary>
		public static void AttachEntitiesToRope(int _ropeId, int _entity1, int _entity2, float _ent1X, float _ent1Y, float _ent1Z, float _ent2X, float _ent2Y, float _ent2Z, float _length, int _alwaysZero1, int _alwaysZero2, string _boneName1, string _boneName2, bool _p14, int _boneId1, int _boneId2, int _alwaysZero3, int _alwaysZero4, bool _p19, bool _p20)
		{
			Function.Call((Hash)0x3D95EC8B6D940AC3, _ropeId, _entity1, _entity2, _ent1X, _ent1Y, _ent1Z, _ent2X, _ent2Y, _ent2Z, _length, _alwaysZero1, _alwaysZero2, _boneName1, _boneName2, _p14, _boneId1, _boneId2, _alwaysZero3, _alwaysZero4, _p19, _p20);
		}
		/// <summary>
		/// Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
		/// </summary>
		public static void AttachEntitiesToRope2(int _ropeId, int _entity1, int _entity2, float _ent1X, float _ent1Y, float _ent1Z, float _ent2X, float _ent2Y, float _ent2Z, string _boneName1, string _boneName2)
		{
			Function.Call((Hash)0x462FF2A432733A44, _ropeId, _entity1, _entity2, _ent1X, _ent1Y, _ent1Z, _ent2X, _ent2Y, _ent2Z, _boneName1, _boneName2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AttachEntitesToRope3(int _ropeId, int _entity1, int _entity2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0xE9CD9A67834985A7, _ropeId, _entity1, _entity2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x69c810b72291d831(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x69C810B72291D831, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb7469cb9ac3c0fd4(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xB7469CB9AC3C0FD4, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc64e7a62632ad2fe(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xC64E7A62632AD2FE, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsRopeAttachedToEntity(int _ropeId, int _entity)
		{
			return Function.Call<bool>((Hash)0x9B4F7E3E4F9C77B3, _ropeId, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachRopeFromEntity(int _ropeId, int _entity)
		{
			Function.Call((Hash)0xBCF3026912A8647D, _ropeId, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HitchHorse(int _horse, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x06AADE17334F7A40, _horse, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnhitchHorse(int _horse)
		{
			Function.Call((Hash)0x0348469DAA17576C, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6ea0e93cffa472cc(int _p0)
		{
			Function.Call((Hash)0x6EA0E93CFFA472CC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbdda142759307528(int _p0)
		{
			Function.Call((Hash)0xBDDA142759307528, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x32f4dbfdfcccc735(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x32F4DBFDFCCCC735, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf8ca39d5c0d1d9a1(int _p0, int _p1)
		{
			Function.Call((Hash)0xF8CA39D5C0D1D9A1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeaf529446488eb18(int _p0)
		{
			Function.Call((Hash)0xEAF529446488EB18, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x31160ec47e7c9549(int _p0, int _p1)
		{
			Function.Call((Hash)0x31160EC47E7C9549, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5e981c764df33117(int _p0, int _p1)
		{
			Function.Call((Hash)0x5E981C764DF33117, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RopeSetUpdateOrder(int _ropeId, int _p1)
		{
			Function.Call((Hash)0xDC57A637A20006ED, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfb9153a54ac713e8(int _ropeId, bool _p1)
		{
			Function.Call((Hash)0xFB9153A54AC713E8, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd699e688b49c0fd2(int _ropeId, float _p1, float _p2, float _p3, bool _p4)
		{
			Function.Call((Hash)0xD699E688B49C0FD2, _ropeId, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbb3e9b073e66c3c9(int _ropeId, bool _p1, bool _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0xBB3E9B073E66C3C9, _ropeId, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x522fa3f490e2f7ac(int _ropeId, int _p1, int _p2)
		{
			Function.Call((Hash)0x522FA3F490E2F7AC, _ropeId, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3900491c0d61ed4b(int _p0, int _p1)
		{
			Function.Call((Hash)0x3900491C0D61ED4B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc89e7410a93ac19a(int _ropeId, float _p1)
		{
			Function.Call((Hash)0xC89E7410A93AC19A, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1d97da8acb5d2582(int _ropeId, int _p1)
		{
			Function.Call((Hash)0x1D97DA8ACB5D2582, _ropeId, _p1);
		}
		/// <summary>
		/// Combining this with ADD_ROPE enables winding
		/// </summary>
		public static void Hash_0x3c6490d940ff5d0b(int _ropeId, int _p1, string _ropeModelType, float _length, bool _p4)
		{
			Function.Call((Hash)0x3C6490D940FF5D0B, _ropeId, _p1, _ropeModelType, _length, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetRopeLastVertexCoord(int _ropeId)
		{
			return Function.Call<Vector3>((Hash)0x21BB0FBD3E217C2D, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetRopeVertexCoord(int _ropeId, int _vertex)
		{
			return Function.Call<Vector3>((Hash)0xEA61CA8E80F09E4D, _ropeId, _vertex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartRopeWinding(int _ropeId)
		{
			Function.Call((Hash)0x1461C72C889E343E, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopRopeWinding(int _ropeId)
		{
			Function.Call((Hash)0xCB2D4AB84A19AA7C, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartRopeUnwindingFront(int _ropeId)
		{
			Function.Call((Hash)0x538D1179EC1AA9A9, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopRopeUnwindingFront(int _ropeId)
		{
			Function.Call((Hash)0xFFF3A50779EFBBB3, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartRopeUnwindingBack(int _ropeId)
		{
			Function.Call((Hash)0x00F611A794A3C36E, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopRopeUnwindingBack(int _ropeId)
		{
			Function.Call((Hash)0x10DAA76CB8A201A1, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x461fcbdeb4d06717(int _ropeId, bool _p1)
		{
			Function.Call((Hash)0x461FCBDEB4D06717, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x423c6b1f3786d28b(int _p0, int _p1)
		{
			Function.Call((Hash)0x423C6B1F3786D28B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x76bad9d538bca1aa(int _ropeId, float _p1)
		{
			Function.Call((Hash)0x76BAD9D538BCA1AA, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb40ea9e0d2e2f7f3(int _ropeId, float _p1)
		{
			Function.Call((Hash)0xB40EA9E0D2E2F7F3, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3d69537039f8d824(int _p0)
		{
			return Function.Call<int>((Hash)0x3D69537039F8D824, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x751df00eeff122e3(int _p0)
		{
			Function.Call((Hash)0x751DF00EEFF122E3, _p0);
		}
		/// <summary>
		/// Forces a rope to a certain length.
		/// </summary>
		public static void RopeForceLength(int _ropeId, float _length)
		{
			Function.Call((Hash)0xD009F759A723DB1B, _ropeId, _length);
		}
		/// <summary>
		/// _ROPE_SET_*
		/// </summary>
		public static void Hash_0x8d59079c37c21d78(int _ropeId, float _p1)
		{
			Function.Call((Hash)0x8D59079C37C21D78, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x814d453fcfdf119f(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x814D453FCFDF119F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1fc92bdba1106bd2(int _p0, int _p1)
		{
			Function.Call((Hash)0x1FC92BDBA1106BD2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdede679ed29dd4e7(int _ropeId, bool _p1)
		{
			Function.Call((Hash)0xDEDE679ED29DD4E7, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf1ea2a881eb7f2cd(int _ropeId, bool _p1)
		{
			Function.Call((Hash)0xF1EA2A881EB7F2CD, _ropeId, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5a989b7ee3672a56(int _p0, int _p1)
		{
			Function.Call((Hash)0x5A989B7EE3672A56, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x483d4e917b0d35a9(int _p0, int _p1)
		{
			Function.Call((Hash)0x483D4E917B0D35A9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RopeGetBreakerOfRope(int _ropeId)
		{
			return Function.Call<int>((Hash)0xEE360CFC80C8B2BC, _ropeId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDamping(int _entity, int _vertex, float _value)
		{
			Function.Call((Hash)0xEEA3B200A6FEB65B, _entity, _vertex, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ActivatePhysics(int _entity)
		{
			Function.Call((Hash)0x710311ADF0E20730, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BreakEntityGlass(int _entity, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, int _p9, bool _p10)
		{
			Function.Call((Hash)0x2E648D16F6E308F3, _entity, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8eedfd8921389928(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x8EEDFD8921389928, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisableBreaking(int _object, bool _toggle)
		{
			Function.Call((Hash)0x5CEC1A84620E7D5B, _object, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisableFragDamage(int _object, bool _toggle)
		{
			Function.Call((Hash)0x01BA3AED21C16CFB, _object, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5bd7457221cc5ff4(int _p0, int _p1)
		{
			Function.Call((Hash)0x5BD7457221CC5FF4, _p0, _p1);
		}
		// :###################: //
		// : namespace: PLAYER : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerPed(int _player)
		{
			return Function.Call<int>((Hash)0x275F255ED201B937, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerPed2(int _player)
		{
			return Function.Call<int>((Hash)0x5EBE38A20BC51C27, _player);
		}
		/// <summary>
		/// Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
		/// </summary>
		public static void Hash_0x325434c68358d282(bool _toggle)
		{
			Function.Call((Hash)0x325434C68358D282, _toggle);
		}
		/// <summary>
		/// Does the same like PLAYER::GET_PLAYER_PED
		/// </summary>
		public static int GetPlayerPedScriptIndex(int _player)
		{
			return Function.Call<int>((Hash)0x5C880F9056D784C8, _player);
		}
		/// <summary>
		/// Make sure to request the model first and wait until it has loaded.
		/// </summary>
		public static void SetPlayerModel(int _player, uint _modelHash, bool _p2)
		{
			Function.Call((Hash)0xED40380076A31506, _player, _modelHash, _p2);
		}
		/// <summary>
		/// Returns true if the given player has a valid ped.
		/// </summary>
		public static bool NetworkHasPlayerValidPed(int _player)
		{
			return Function.Call<bool>((Hash)0x0760D6F70EBCC05C, _player);
		}
		/// <summary>
		/// Gets the player's team.
		/// Returns -1 in singleplayer.
		/// </summary>
		public static int GetPlayerTeam(int _player)
		{
			return Function.Call<int>((Hash)0xB464EB6A40C7975B, _player);
		}
		/// <summary>
		/// Sets the player's team.
		/// </summary>
		public static void SetPlayerTeam(int _player, int _team, bool _bRestrictToThisScript)
		{
			Function.Call((Hash)0xE8DD8536F01DE600, _player, _team, _bRestrictToThisScript);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPlayerName(int _player)
		{
			return Function.Call<string>((Hash)0x7124FD9AC0E01BA0, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string FormatPlayerNameString(string _string)
		{
			return Function.Call<string>((Hash)0x5B6193813E03E4E9, _string);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetWantedLevelRadius(int _p0)
		{
			return Function.Call<float>((Hash)0x80B00EB26D9521C7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetWantedLevelThreshold(int _wantedLevel)
		{
			return Function.Call<int>((Hash)0x1B1A3B358F7D8F07, _wantedLevel);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetPlayerWantedLevel(int _player, int _wantedLevel, bool _disableNoMission)
		{
			Function.Call((Hash)0x384D4765395E006C, _player, _wantedLevel, _disableNoMission);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerWantedLevelGreater(int _player, int _wantedLevel)
		{
			return Function.Call<bool>((Hash)0xE1C0AD4C24324C36, _player, _wantedLevel);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void ClearPlayerWantedLevel(int _player)
		{
			Function.Call((Hash)0x4E4B996C928C7AA6, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerDead(int _player)
		{
			return Function.Call<bool>((Hash)0x2E9C3FCB6798F397, _player);
		}
		/// <summary>
		/// flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/SET_PLAYER_CONTROL/README.md
		/// </summary>
		public static void SetPlayerControl(int _player, bool _toggle, int _flags, bool _bPreventHeadingChange)
		{
			Function.Call((Hash)0x4D51E59243281D80, _player, _toggle, _flags, _bPreventHeadingChange);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerWantedLevel(int _player)
		{
			return Function.Call<int>((Hash)0xABC532F9098BFD9D, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMaxWantedLevel(int _maxWantedLevel)
		{
			Function.Call((Hash)0x28A4BD2CEE236E19, _maxWantedLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMaxWantedLevel2(int _maxWantedLevel)
		{
			Function.Call((Hash)0xEA6DE0CD15AECBE2, _maxWantedLevel);
		}
		/// <summary>
		/// If toggle is set to false:
		///  The police won't be shown on the (mini)map
		/// 
		/// If toggle is set to true:
		///  The police will be shown on the (mini)map
		/// </summary>
		public static void SetPoliceRadarBlips(bool _toggle)
		{
			Function.Call((Hash)0x6FD7DD6B63F2820E, _toggle);
		}
		/// <summary>
		/// Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
		/// </summary>
		public static bool IsPlayerPlaying(int _player)
		{
			return Function.Call<bool>((Hash)0xBFFB35986CAAE58C, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEveryoneIgnorePlayer(int _player, bool _toggle)
		{
			Function.Call((Hash)0x34630A768925B852, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsPlayerUiPromptActive(int _player, int _p1)
		{
			return Function.Call<bool>((Hash)0x51BEA356B1C60225, _player, _p1);
		}
		/// <summary>
		/// Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/_MODIFY_PLAYER_UI_PROMPT/README.md
		/// promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
		/// </summary>
		public static void ModifyPlayerUiPrompt(int _player, int _promptType, int _promptMode, bool _disabled)
		{
			Function.Call((Hash)0x0751D461F06E41CE, _player, _promptType, _promptMode, _disabled);
		}
		/// <summary>
		/// Returns false if PromptType is enabled
		/// Params: See 0x0751D461F06E41CE
		/// </summary>
		public static bool GetPlayerUiPromptIsDisabled(int _player, int _promptType, int _promptMode)
		{
			return Function.Call<bool>((Hash)0x6614F9039BD31931, _player, _promptType, _promptMode);
		}
		/// <summary>
		/// Params: See 0x0751D461F06E41CE
		/// </summary>
		public static void ModifyPlayerUiPromptForPed(int _player, int _ped, int _promptType, int _promptMode, bool _enabled)
		{
			Function.Call((Hash)0xA3DB37EDF9A74635, _player, _ped, _promptType, _promptMode, _enabled);
		}
		/// <summary>
		/// Returns true if PromptType is enabled for ped (mount)
		/// Params: See 0x0751D461F06E41CE
		/// </summary>
		public static bool GetPlayerUiPromptForPedIsEnabled(int _player, int _ped, int _promptType, int _promptMode)
		{
			return Function.Call<bool>((Hash)0xEA8F168A76A0B9BC, _player, _ped, _promptType, _promptMode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x93624b36e8851b42(int _player)
		{
			Function.Call((Hash)0x93624B36E8851B42, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9073ec5456651a90(int _p0, int _p1)
		{
			Function.Call((Hash)0x9073EC5456651A90, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2e67707bec52ca4b(int _p0)
		{
			Function.Call((Hash)0x2E67707BEC52CA4B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllRandomPedsFlee(int _player, bool _toggle)
		{
			Function.Call((Hash)0xE705309B8C6445A4, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllRandomPedsFleeThisFrame(int _player)
		{
			Function.Call((Hash)0xD5C198A62F1DEB0A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllNeutralRandomPedsFleeThisFrame(int _player)
		{
			Function.Call((Hash)0x16752DAA7E6D3F72, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1d256eed194f5b58(int _p0)
		{
			Function.Call((Hash)0x1D256EED194F5B58, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5b7b97e99f84138b(int _p0)
		{
			return Function.Call<int>((Hash)0x5B7B97E99F84138B, _p0);
		}
		/// <summary>
		/// Disables the players ability to be wanted by lawmen
		/// </summary>
		public static void SetDisablePlayerWantedLevel(int _player, bool _disable)
		{
			Function.Call((Hash)0x8674D138391FFB1B, _player, _disable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa82964b9d8d6a983()
		{
			return Function.Call<int>((Hash)0xA82964B9D8D6A983);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWantedLevelMultiplier(float _multiplier)
		{
			Function.Call((Hash)0xD7FA719CB54866C2, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetWantedLevelDifficulty(int _player)
		{
			Function.Call((Hash)0x062D14F18E8B0CAE, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UpdateWantedPositionThisFrame(int _player)
		{
			Function.Call((Hash)0xD0B0B044112BF424, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SuppressWitnessesCallingPoliceThisFrame(int _player)
		{
			Function.Call((Hash)0x96722257E5381E00, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReportPoliceSpottedPlayer(int _player)
		{
			Function.Call((Hash)0xCBCCF73FFA69CC6B, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLawResponseDelayOverride(float _p0)
		{
			Function.Call((Hash)0xD2DFC9CCA5596A11, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetLawResponseDelayOverride()
		{
			Function.Call((Hash)0x5CE5CACC01D0F985);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanPlayerStartMission(int _player)
		{
			return Function.Call<bool>((Hash)0x2DF170B1185AF777, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerReadyForCutscene(int _player)
		{
			return Function.Call<bool>((Hash)0xAA67BCB0097F2FA3, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerTargettingEntity(int _player, int _entity, bool _p2)
		{
			return Function.Call<bool>((Hash)0x27F89FDC16688A7A, _player, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPlayerTargetEntity(int _player, int _entity)
		{
			return Function.Call<bool>((Hash)0xAE663DDD99C8A670, _player, _entity);
		}
		/// <summary>
		/// _GET_A* - _GET_C*
		/// </summary>
		public static bool Hash_0x927861b2c08dbea5(int _player)
		{
			return Function.Call<bool>((Hash)0x927861B2C08DBEA5, _player);
		}
		/// <summary>
		/// Checks if player is focused on any entity
		/// </summary>
		public static bool IsPlayerFreeFocusing(int _player)
		{
			return Function.Call<bool>((Hash)0x1A51BFE60708E482, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPlayerInteractionTargetEntity(int _player, int _outEntity, bool _p2, bool _p3)
		{
			return Function.Call<bool>((Hash)0x3EE1F7A8C32F24E1, _player, _outEntity, _p2, _p3);
		}
		/// <summary>
		/// _GET_PLAYER_I*
		/// </summary>
		public static int Hash_0xbea3a6e5f5f79a6f(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xBEA3A6E5F5F79A6F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerInScope(int _player)
		{
			return Function.Call<bool>((Hash)0x04D7F33640662FA2, _player);
		}
		/// <summary>
		/// Gets a value indicating whether the specified player is currently aiming freely.
		/// </summary>
		public static bool IsPlayerFreeAiming(int _player)
		{
			return Function.Call<bool>((Hash)0x936F967D4BE1CE9D, _player);
		}
		/// <summary>
		/// Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
		/// </summary>
		public static bool IsPlayerFreeAimingAtEntity(int _player, int _entity)
		{
			return Function.Call<bool>((Hash)0x8C67C11C68713D25, _player, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetEntityPlayerIsFreeAimingAt(int _player, int _entity)
		{
			return Function.Call<bool>((Hash)0xA6817C110B830EAD, _player, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3daabe78a23694bc(int _p0, int _p1)
		{
			Function.Call((Hash)0x3DAABE78A23694BC, _p0, _p1);
		}
		/// <summary>
		/// Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
		/// _GET_PLAYER_*
		/// </summary>
		public static bool Hash_0x7ae93c45ec14a166(int _player, int _ped)
		{
			return Function.Call<bool>((Hash)0x7AE93C45EC14A166, _player, _ped);
		}
		/// <summary>
		/// Affects the range of auto aim target.
		/// </summary>
		public static void SetPlayerLockonRangeOverride(int _player, float _range)
		{
			Function.Call((Hash)0x3A3CD06597388322, _player, _range);
		}
		/// <summary>
		/// Sets whether this player can be hassled by gangs.
		/// </summary>
		public static void SetPlayerCanBeHassledByGangs(int _player, bool _toggle)
		{
			Function.Call((Hash)0xC7FE774412046825, _player, _toggle);
		}
		/// <summary>
		/// Sets whether this player can take cover.
		/// </summary>
		public static void SetPlayerCanUseCover(int _player, bool _toggle)
		{
			Function.Call((Hash)0x5EDA520F7A3BAF4E, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd1a70c1e8d1031fe(int _p0, int _p1)
		{
			Function.Call((Hash)0xD1A70C1E8D1031FE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaca45ddcef6071c4(int _player, bool _p1)
		{
			Function.Call((Hash)0xACA45DDCEF6071C4, _player, _p1);
		}
		/// <summary>
		/// Params: p1 is mostly 15, sometimes 1 in R* Scripts (Function: PLAYER_TOGGLE_PICK_UP_HATS)
		/// </summary>
		public static void Hash_0xa0c683284df027c7(int _player, int _p1, bool _enable)
		{
			Function.Call((Hash)0xA0C683284DF027C7, _player, _p1, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerCanMercyKill(int _player, bool _toggle)
		{
			Function.Call((Hash)0x39363DFD04E91496, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4ec8be63b8a5d4ef(int _player, int _p1)
		{
			Function.Call((Hash)0x4EC8BE63B8A5D4EF, _player, _p1);
		}
		/// <summary>
		/// Gets the maximum wanted level the player can get.
		/// Ranges from 0 to 5.
		/// </summary>
		public static int GetMaxWantedLevel()
		{
			return Function.Call<int>((Hash)0xD04CFAD1E2B7984A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerTargettingAnything(int _player)
		{
			return Function.Call<bool>((Hash)0x4605C66E0F935F83, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RestorePlayerStamina(int _player, float _p1)
		{
			Function.Call((Hash)0xC41F4B6E23FE6A4A, _player, _p1);
		}
		/// <summary>
		/// SET_PLAYER_S/T*
		/// </summary>
		public static void Hash_0x8591ee69cc3ed257(int _player, bool _toggle)
		{
			Function.Call((Hash)0x8591EE69CC3ED257, _player, _toggle);
		}
		/// <summary>
		/// Returns the group ID the player is member of.
		/// </summary>
		public static int GetPlayerGroup(int _player)
		{
			return Function.Call<int>((Hash)0x9BAB31815159ABCF, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3d9da5c9efd20d88(int _p0, int _p1)
		{
			Function.Call((Hash)0x3D9DA5C9EFD20D88, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2beed53b912537d0(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x2BEED53B912537D0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x908d4b72854c8f62(int _p0)
		{
			Function.Call((Hash)0x908D4B72854C8F62, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd1f6b912785bfd35(int _p0)
		{
			return Function.Call<int>((Hash)0xD1F6B912785BFD35, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc4873b053054c04b(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xC4873B053054C04B, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xca59808e51fd67c4(int _p0, int _p1)
		{
			Function.Call((Hash)0xCA59808E51FD67C4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xba5ca1feb5de0df6(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xBA5CA1FEB5DE0DF6, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0869d499a7848309(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x0869D499A7848309, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// _IS_PLAYER_I* - _IS_PLAYER_P*
		/// </summary>
		public static bool Hash_0xb331d8a73f9d2bdf(int _player, int _p1)
		{
			return Function.Call<bool>((Hash)0xB331D8A73F9D2BDF, _player, _p1);
		}
		/// <summary>
		/// Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
		/// </summary>
		public static void Hash_0xac22aa6df4d1c1de(int _player, int _ped, float _p2, float _p3, int _followMode, int _followPriority, int _p6)
		{
			Function.Call((Hash)0xAC22AA6DF4D1C1DE, _player, _ped, _p2, _p3, _followMode, _followPriority, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePlayerAsFollowTarget(int _player, int _ped)
		{
			Function.Call((Hash)0x0C6B89876262A99D, _player, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x12e09e278c6c29b7(int _p0)
		{
			Function.Call((Hash)0x12E09E278C6C29B7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdd33a82352c4652f(int _player, int _ped, int _p2)
		{
			Function.Call((Hash)0xDD33A82352C4652F, _player, _ped, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1fda57e8908f2609(int _player, int _ped, bool _useSteerassist)
		{
			Function.Call((Hash)0x1FDA57E8908F2609, _player, _ped, _useSteerassist);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x84481018e668e1b8(int _player, int _ped, int _p2)
		{
			Function.Call((Hash)0x84481018E668E1B8, _player, _ped, _p2);
		}
		/// <summary>
		/// _IS_PLAYER_F*
		/// </summary>
		public static bool Hash_0x2009f8ab7a5e9d6d(int _player)
		{
			return Function.Call<bool>((Hash)0x2009F8AB7A5E9D6D, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerFollowingTarget(int _player, int _ped)
		{
			return Function.Call<bool>((Hash)0xE24C64D9ADED2EF5, _player, _ped);
		}
		/// <summary>
		/// _IS_PLAYER_A* - _IS_PLAYER_BE*
		/// </summary>
		public static bool Hash_0xe7f8707269544b29(int _player, int _ped)
		{
			return Function.Call<bool>((Hash)0xE7F8707269544B29, _player, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe631eaf35828fa67(int _p0)
		{
			return Function.Call<int>((Hash)0xE631EAF35828FA67, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x086549f3b0381cb1(int _p0, int _p1)
		{
			Function.Call((Hash)0x086549F3B0381CB1, _p0, _p1);
		}
		/// <summary>
		/// Returns whether the player can control himself.
		/// </summary>
		public static bool IsPlayerControlOn(int _player)
		{
			return Function.Call<bool>((Hash)0x7964097FCE4C244B, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerScriptControlOn(int _player)
		{
			return Function.Call<bool>((Hash)0xB78350754157C00F, _player);
		}
		/// <summary>
		/// Returns TRUE if the player ('s ped) is climbing at the moment.
		/// </summary>
		public static bool IsPlayerClimbing(int _player)
		{
			return Function.Call<bool>((Hash)0xB8A70C22FD48197A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xebb6e27ac2ff32da(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xEBB6E27AC2FF32DA, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb15cd2f9932c9ab5(int _p0)
		{
			return Function.Call<int>((Hash)0xB15CD2F9932C9AB5, _p0);
		}
		/// <summary>
		/// _IS_PLAYER_S* - _IS_PLAYER_T*
		/// </summary>
		public static bool Hash_0x621d1b289caf5978(int _player)
		{
			return Function.Call<bool>((Hash)0x621D1B289CAF5978, _player);
		}
		/// <summary>
		/// Return true while player is being arrested / busted.
		/// 
		/// If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
		/// 
		/// If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
		/// </summary>
		public static bool IsPlayerBeingArrested(int _player, bool _atArresting)
		{
			return Function.Call<bool>((Hash)0xC8183AE963C58374, _player, _atArresting);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPlayerArrestState(int _player)
		{
			Function.Call((Hash)0x12917931C31F1750, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcbb54cc7ffffab86(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xCBB54CC7FFFFAB86, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbed386157f65942c(int _p0, int _p1)
		{
			Function.Call((Hash)0xBED386157F65942C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdab6a2fc56b7de65(int _p0)
		{
			return Function.Call<int>((Hash)0xDAB6A2FC56B7DE65, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0f4eaf69da41af43(int _p0)
		{
			return Function.Call<int>((Hash)0x0F4EAF69DA41AF43, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBountyTarget(int _player, int _target)
		{
			Function.Call((Hash)0x6ADF821FBF21920E, _player, _target);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearBountyTarget(int _player)
		{
			Function.Call((Hash)0x8F2A81C09DA9124A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayersLastVehicle()
		{
			return Function.Call<int>((Hash)0x2F96E7720B0B19EA);
		}
		/// <summary>
		/// Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
		/// </summary>
		public static int GetPlayerIndex()
		{
			return Function.Call<int>((Hash)0x47E385B0D957C8D4);
		}
		/// <summary>
		/// Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
		/// </summary>
		public static int IntToPlayerindex(int _value)
		{
			return Function.Call<int>((Hash)0x748B3A65C2604C33, _value);
		}
		/// <summary>
		/// Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
		/// </summary>
		public static int IntToParticipantindex(int _value)
		{
			return Function.Call<int>((Hash)0x58FF971FC8F2702C, _value);
		}
		/// <summary>
		/// This returns YOUR 'identity' as a Player type.
		/// 
		/// Always returns 0 in story mode.
		/// </summary>
		public static int PlayerId()
		{
			return Function.Call<int>((Hash)0x217E9DC48139933D);
		}
		/// <summary>
		/// Returns current player ped
		/// </summary>
		public static int PlayerPedId()
		{
			return Function.Call<int>((Hash)0x096275889B8E0EE0);
		}
		/// <summary>
		/// Does exactly the same thing as PLAYER_ID()
		/// </summary>
		public static int NetworkPlayerIdToInt()
		{
			return Function.Call<int>((Hash)0x8A9386F0749A17FA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasForceCleanupOccurred(int _cleanupFlags)
		{
			return Function.Call<bool>((Hash)0xC11469DCA6FC3BB5, _cleanupFlags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceCleanup(int _cleanupFlags)
		{
			Function.Call((Hash)0x768C017FB878E4F4, _cleanupFlags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceCleanupForAllThreadsWithThisName(string _name, int _cleanupFlags)
		{
			Function.Call((Hash)0xDAACAF8B687F2353, _name, _cleanupFlags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceCleanupForThreadWithThisId(int _id, int _cleanupFlags)
		{
			Function.Call((Hash)0xF4C9512A2F0A3031, _id, _cleanupFlags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetCauseOfMostRecentForceCleanup()
		{
			return Function.Call<int>((Hash)0x84E8E29EBD4A46D2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x39bed552db46ffa9(int _p0, int _p1)
		{
			Function.Call((Hash)0x39BED552DB46FFA9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x054473164c012699(int _player)
		{
			return Function.Call<int>((Hash)0x054473164C012699, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerMayOnlyEnterThisVehicle(int _player, int _vehicle)
		{
			Function.Call((Hash)0xDA35A134038557EC, _player, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc71d07c96946e263(int _p0, int _p1)
		{
			Function.Call((Hash)0xC71D07C96946E263, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerMayNotEnterAnyVehicle(int _player)
		{
			Function.Call((Hash)0xBEC463B3A11C909E, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSystemUiBeingDisplayed()
		{
			return Function.Call<bool>((Hash)0x908258B6209E71F7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd48227263e3d06ae(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0xD48227263E3D06AE, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3946fc742ac305cd(int _player, int _ped, string _p2, float _x, float _y, float _z, int _targetEntity, string _p7)
		{
			Function.Call((Hash)0x3946FC742AC305CD, _player, _ped, _p2, _x, _y, _z, _targetEntity, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa28056cd1b04b250(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0xA28056CD1B04B250, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// _DISABLE_*(PLAYER_FORCED_INTERACTION_LOCKON?)
		/// </summary>
		public static void Hash_0xc67a4910425f11f1(int _player, string _name)
		{
			Function.Call((Hash)0xC67A4910425F11F1, _player, _name);
		}
		/// <summary>
		/// Simply sets you as invincible (Health will not deplete).
		/// </summary>
		public static void SetPlayerInvincible(int _player, bool _toggle)
		{
			Function.Call((Hash)0xFEBEEBC9CBDF4B12, _player, _toggle);
		}
		/// <summary>
		/// Returns the player's invincibility status.
		/// </summary>
		public static bool GetPlayerInvincible(int _player)
		{
			return Function.Call<bool>((Hash)0x0CBBCB2CCFA7DC4E, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerLockon(int _player, bool _toggle)
		{
			Function.Call((Hash)0x462AA1973CBBA75E, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetLockonToFriendlyPlayers(int _player, bool _toggle)
		{
			Function.Call((Hash)0x4A056257802DD3E5, _player, _toggle);
		}
		/// <summary>
		/// Sets your targeting mode for when you're on foot.
		/// enum eTargetingMode
		/// {
		/// 	TARGETING_MODE_INVALID = -1,
		/// 	TARGETING_MODE_CAUSAL, (Wide)
		/// 	TARGETING_MODE_NORMAL,
		/// 	TARGETING_MODE_HARD, (Narrow)
		/// 	TARGETING_MODE_EXPERT (Free Aim)
		/// };
		/// </summary>
		public static void SetPlayerTargetingMode(int _targetMode)
		{
			Function.Call((Hash)0xD66A941F401E7302, _targetMode);
		}
		/// <summary>
		/// Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
		/// see SET_PLAYER_TARGETING_MODE for eTargetingMode
		/// </summary>
		public static void SetPlayerInVehicleTargetingMode(int _targetMode)
		{
			Function.Call((Hash)0x19B4F71703902238, _targetMode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x747257807b8721ce(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x747257807B8721CE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8702d9150d9fbb3d(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x8702D9150D9FBB3D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcb0b9506bc91e441(int _p0, int _p1)
		{
			Function.Call((Hash)0xCB0B9506BC91E441, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPlayerHasDamagedAtLeastOnePed(int _player)
		{
			Function.Call((Hash)0x270B63A641BE32F2, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPlayerDamagedAtLeastOnePed(int _player)
		{
			return Function.Call<bool>((Hash)0xDA4A4B9B96E20092, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPlayerHasDamagedAtLeastOneNonAnimalPed(int _player)
		{
			Function.Call((Hash)0x0361096D6CE4372C, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPlayerDamagedAtLeastOneNonAnimalPed(int _player)
		{
			return Function.Call<bool>((Hash)0x16C8D205DD5A2E90, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeacebaae0a33fb3f(int _p0)
		{
			Function.Call((Hash)0xEACEBAAE0A33FB3F, _p0);
		}
		/// <summary>
		/// _HAS_PLAYER_D*
		/// </summary>
		public static bool Hash_0x72ad59f7b7fb6e24(int _player, int _p1)
		{
			return Function.Call<bool>((Hash)0x72AD59F7B7FB6E24, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x1a6e84f13c952094(int _player, int _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x1A6E84F13C952094, _player, _p1, _p2);
		}
		/// <summary>
		/// damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
		/// </summary>
		public static void SetPlayerDamageInfoOverride(int _player, string _damageInfo)
		{
			Function.Call((Hash)0x78B3D19AF6391A55, _player, _damageInfo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1f488807bc8e0630(int _p0)
		{
			Function.Call((Hash)0x1F488807BC8E0630, _p0);
		}
		/// <summary>
		/// This can be between 1.0f - 50.0f
		/// </summary>
		public static void SetAirDragMultiplierForPlayersVehicle(int _player, float _multiplier)
		{
			Function.Call((Hash)0x5DA6500FE849DA16, _player, _multiplier);
		}
		/// <summary>
		/// Swim speed multiplier.
		/// Multiplier goes up to 1.49f
		/// </summary>
		public static void SetSwimMultiplierForPlayer(int _player, float _multiplier)
		{
			Function.Call((Hash)0xBFCEABDE34DA5085, _player, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x73eb2ef2e92d23bf()
		{
			return Function.Call<bool>((Hash)0x73EB2EF2E92D23BF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerForcedAim(int _player, bool _toggle, int _ped, int _p3, bool _p4)
		{
			Function.Call((Hash)0xD5FCC166AEB2FD0F, _player, _toggle, _ped, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x310ce349e0c0ec4b(int _player, int _ped, int _p2)
		{
			Function.Call((Hash)0x310CE349E0C0EC4B, _player, _ped, _p2);
		}
		/// <summary>
		/// Inhibits the player from using any method of combat including melee and firearms.
		/// 
		/// NOTE: Only disables the firing for one frame
		/// </summary>
		public static void DisablePlayerFiring(int _player, bool _toggle)
		{
			Function.Call((Hash)0x2970929FD5F9FC89, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xebff94328ff7a18a(int _p0, int _p1)
		{
			Function.Call((Hash)0xEBFF94328FF7A18A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf993373285053d77(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xF993373285053D77, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe956c2340a76272e(int _p0)
		{
			return Function.Call<int>((Hash)0xE956C2340A76272E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableCustomDeadeyeAbility(int _player, bool _enable)
		{
			Function.Call((Hash)0x95EE1DEE1DCD9070, _player, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xde6c85975f9d4894(int _p0)
		{
			return Function.Call<int>((Hash)0xDE6C85975F9D4894, _p0);
		}
		/// <summary>
		/// Used in script function INIT_DEADEYE_SLOWDOWN
		/// _SPECIAL_ABILITY*
		/// </summary>
		public static void Hash_0xbba140062b15a8ac(int _player)
		{
			Function.Call((Hash)0xBBA140062B15A8AC, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpecialAbilitySetDisabled(int _player, bool _disabled)
		{
			Function.Call((Hash)0xAE637BB8EF017875, _player, _disabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSpecialAbilityActive(int _player)
		{
			return Function.Call<bool>((Hash)0xB16223CB7DA965F0, _player);
		}
		/// <summary>
		/// Toggle handles wether Deadeye and Eagleeye are infinite or not.
		/// </summary>
		public static void ModifyInfiniteTrailVision(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x28A13BF6B05C3D83, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SpecialAbilitySetEagleEyeDisabled(int _ped)
		{
			Function.Call((Hash)0xC0B21F235C02139C, _ped);
		}
		/// <summary>
		/// Restores Deadeye by given amount.
		/// Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
		/// </summary>
		public static void SpecialAbilityRestoreByAmount(int _player, float _amount, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x51345AE20F22C261, _player, _amount, _p2, _p3, _p4);
		}
		/// <summary>
		/// Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
		/// _SPECIAL_ABILITY*
		/// </summary>
		public static void Hash_0xfa437fa0738c370c(int _player, float _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xFA437FA0738C370C, _player, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// Only used in R* SP Script short_update
		/// Restores Deadeye Outer Ring
		/// </summary>
		public static void SpecialAbilityRestoreOuterRing(int _player, float _amount)
		{
			Function.Call((Hash)0x2498035289B5688F, _player, _amount);
		}
		/// <summary>
		/// If player has less Dead Eye than required, Dead Eye cant be triggered.
		/// </summary>
		public static float GetPlayerRequiredDeadEyeAmount(int _player)
		{
			return Function.Call<float>((Hash)0x811A748B1BE231BA, _player);
		}
		/// <summary>
		/// Returns Deadeye value from player
		/// </summary>
		public static float SpecialAbilityGetAmountCached(int _player)
		{
			return Function.Call<float>((Hash)0x029884FB65821B07, _player);
		}
		/// <summary>
		/// Drains Deadeye by given amount.
		/// </summary>
		public static void SpecialAbilityDrainByAmount(int _player, float _amount, int _p2)
		{
			Function.Call((Hash)0x200114E99552462B, _player, _amount, _p2);
		}
		/// <summary>
		/// Params: p1 = -1 in R* Scripts
		/// </summary>
		public static void SpecialAbilityStartRestore(int _player, int _p1, bool _p2)
		{
			Function.Call((Hash)0x1D77B47AFA584E90, _player, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSpecialAbilityMultiplier(int _player, float _multiplier)
		{
			Function.Call((Hash)0x5A498FCA232F71E1, _player, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerSpecialAbilityMultiplier(int _player)
		{
			return Function.Call<float>((Hash)0xAB3773E7AA1E9DCC, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x00ba333da05adc23(int _p0, int _p1)
		{
			Function.Call((Hash)0x00BA333DA05ADC23, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x22b3cabeddb538b2(int _player, float _p1)
		{
			Function.Call((Hash)0x22B3CABEDDB538B2, _player, _p1);
		}
		/// <summary>
		/// durationCost: per second
		/// </summary>
		public static void SetSpecialAbilityDurationCost(int _player, float _durationCost)
		{
			Function.Call((Hash)0xB783F75940B23014, _player, _durationCost);
		}
		/// <summary>
		/// Only used in R* SP Script short_update
		/// </summary>
		public static void SetSpecialAbilityDisableTimer(int _player, float _timer)
		{
			Function.Call((Hash)0xC0B1C05B313693D1, _player, _timer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x57d9991dc1334151(int _p0)
		{
			return Function.Call<int>((Hash)0x57D9991DC1334151, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x21091b4beb6376ee(int _p0)
		{
			return Function.Call<int>((Hash)0x21091B4BEB6376EE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSpecialAbilityActivationCost(int _player, float _activationCost, int _p2)
		{
			Function.Call((Hash)0xAE4BCC79C587EBBF, _player, _activationCost, _p2);
		}
		/// <summary>
		/// _SET_SPECIAL_ABILITY_*
		/// </summary>
		public static void Hash_0x4d1699543b1c023c(int _player, float _p1)
		{
			Function.Call((Hash)0x4D1699543B1C023C, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerDeadEyeMeterLevel(int _player, bool _p1)
		{
			return Function.Call<float>((Hash)0x3A6AE4EEE30370FE, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerDeadEye(int _player)
		{
			return Function.Call<float>((Hash)0xA81D24AE0AF99A5E, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerCachedDeadEyeAmount(int _player)
		{
			return Function.Call<float>((Hash)0xDF66A37936D5F3D9, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerMaxDeadEye(int _player, int _p1)
		{
			return Function.Call<float>((Hash)0x592F58BC4D2A2CF3, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerHealth(int _player)
		{
			return Function.Call<float>((Hash)0x0317C947D062854E, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerStamina(int _player)
		{
			return Function.Call<float>((Hash)0x0FF421E467373FCF, _player);
		}
		/// <summary>
		/// _N*, _O* or _PE*
		/// </summary>
		public static void SetPlayerStatFlagHash(int _player, uint _p1)
		{
			Function.Call((Hash)0x768E81AE285A4B67, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0e1db1f8f5b561dc(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x0E1DB1F8F5B561DC, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x08e22898a6af4905(int _p0, int _p1)
		{
			Function.Call((Hash)0x08E22898A6AF4905, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbefed69ce8317f91(int _p0)
		{
			return Function.Call<int>((Hash)0xBEFED69CE8317F91, _p0);
		}
		/// <summary>
		/// (Un)lock Eagle Eye functionality
		/// </summary>
		public static void EnableEagleeye(int _player, bool _enable)
		{
			Function.Call((Hash)0xA63FCAD3A6FEC6D2, _player, _enable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe022cc1b545f1d9f(int _p0)
		{
			return Function.Call<int>((Hash)0xE022CC1B545F1D9F, _p0);
		}
		/// <summary>
		/// Activates EagleEye, called together with 0x28A13BF6B05C3D83
		/// </summary>
		public static void SecondarySpecialAbilitySetActive(int _player)
		{
			Function.Call((Hash)0x1710BC33CFB83634, _player);
		}
		/// <summary>
		/// Deactivates EagleEye, called together with 0xC0B21F235C02139C
		/// </summary>
		public static void SecondarySpecialAbilitySetDisabled(int _player, bool _disabled)
		{
			Function.Call((Hash)0x64FF4BF9AF59E139, _player, _disabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSecondarySpecialAbilityActive(int _player)
		{
			return Function.Call<bool>((Hash)0x45AB66D02B601FA7, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x107f2a66e1c4c83a(int _p0)
		{
			Function.Call((Hash)0x107F2A66E1C4C83A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StartPlayerTeleport(int _player, float _x, float _y, float _z, float _heading, bool _p5, bool _p6, bool _p7, bool _p8)
		{
			Function.Call((Hash)0xDF8822C55EDDA65B, _player, _x, _y, _z, _heading, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2c2d287748e8e9b7(bool _p0)
		{
			Function.Call((Hash)0x2C2D287748E8E9B7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UpdatePlayerTeleport(int _player)
		{
			return Function.Call<bool>((Hash)0xC39DCE4672CBFBC1, _player);
		}
		/// <summary>
		/// Disables the player's teleportation
		/// </summary>
		public static void StopPlayerTeleport()
		{
			Function.Call((Hash)0x0858B86146601BE8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerTeleportActive()
		{
			return Function.Call<bool>((Hash)0x085EEAEB8783FEB5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerCurrentStealthNoise(int _player)
		{
			return Function.Call<float>((Hash)0xD7ECC25E176ECBA5, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerHealthRechargeMultiplier(int _player, float _regenRate)
		{
			Function.Call((Hash)0x8899C244EBCF70DE, _player, _regenRate);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerHealthRechargeMultiplier(int _player)
		{
			return Function.Call<float>((Hash)0x22CD23BB0C45E0CD, _player);
		}
		/// <summary>
		/// Setting player's Health recharge time to zero forces immediate health regen
		/// </summary>
		public static void SetPlayerHealthRechargeTimeModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0x535ED4605F89AB6E, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerStaminaRechargeMultiplier(int _player, float _multiplier)
		{
			Function.Call((Hash)0xFECA17CF3343694B, _player, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerStaminaRechargeMultiplier(int _player)
		{
			return Function.Call<float>((Hash)0x617D3494AD58200F, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerStaminaSprintDepletionMultiplier(int _player, float _multiplier)
		{
			Function.Call((Hash)0xBBADFB5E5E5766FB, _player, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerStaminaDepletionMultiplier(int _player)
		{
			return Function.Call<float>((Hash)0x68A0389E0718AC8F, _player);
		}
		/// <summary>
		/// Seems to work similar to 0xD2CB0FB0FDCB473D
		/// </summary>
		public static void SetPedActivePlayerHorse(int _player, int _horse)
		{
			Function.Call((Hash)0x8FBF9EDB378CCB8C, _player, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetActiveHorseForPlayer(int _player)
		{
			return Function.Call<int>((Hash)0x46FA0AE18F4C7FA9, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAsSaddleHorseForPlayer(int _player, int _mount)
		{
			Function.Call((Hash)0xD2CB0FB0FDCB473D, _player, _mount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetSaddleHorseForPlayer(int _player)
		{
			return Function.Call<int>((Hash)0xB48050D326E9A2F3, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetPedAsTempPlayerHorse(int _player, int _horse)
		{
			return Function.Call<bool>((Hash)0x227B06324234FB09, _player, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTempPlayerHorse(int _player)
		{
			return Function.Call<int>((Hash)0xD3F7445CEA2E5035, _player);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x77b0b6d17a3ac9aa(int _p0, int _p1)
		{
			Function.Call((Hash)0x77B0B6D17A3AC9AA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdf93973251fb2ca5(int _p0, int _p1)
		{
			Function.Call((Hash)0xDF93973251FB2CA5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x694ffa4308060cd1(int _p0, int _p1)
		{
			Function.Call((Hash)0x694FFA4308060CD1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BoostPlayerHorseSpeedForTime(int _player, float _speedBoost, int _duration)
		{
			Function.Call((Hash)0x09C28F828EE674FA, _player, _speedBoost, _duration);
		}
		/// <summary>
		/// This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
		/// </summary>
		public static void SetPlayerWeaponDamageModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0x94D529F7B73D7A85, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerWeaponDefenseModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0xD15CC2D493160BE3, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x818241b3eda84191(int _p0, int _p1)
		{
			Function.Call((Hash)0x818241B3EDA84191, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerMeleeWeaponDamageModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0xE4CB5A3F18170381, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerExplosiveWeaponDamageModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0x2D3ACE3DE0A2B622, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x83c989d5b5b5b466(int _p0, int _p1)
		{
			Function.Call((Hash)0x83C989D5B5B5B466, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x03b4b759a8990505(int _p0)
		{
			return Function.Call<int>((Hash)0x03B4B759A8990505, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x67659a8f248e0141(int _p0, int _p1)
		{
			Function.Call((Hash)0x67659A8F248E0141, _p0, _p1);
		}
		/// <summary>
		/// Decreases the damage the player receives while on horseback
		/// </summary>
		public static void SetReceivedHorsebackDamageDecrease(int _player, float _damageDecrease)
		{
			Function.Call((Hash)0xB427911EA6DFFEF3, _player, _damageDecrease);
		}
		/// <summary>
		/// Sets Player's Defense against AI modifier
		/// </summary>
		public static void SetAiPlayerDefenseModifierAgainstAi(int _player, float _modifier)
		{
			Function.Call((Hash)0x914071FF93AF2692, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAiPlayerDefenseModifierAgainstAi(int _player)
		{
			return Function.Call<float>((Hash)0x2E78D822208E740A, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x19b2c7a6c34fad54(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x19B2C7A6C34FAD54, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9422743a5ba50e10(int _p0)
		{
			return Function.Call<int>((Hash)0x9422743A5BA50E10, _p0);
		}
		/// <summary>
		/// Sets stamina core drains peed using ranged damage scale and melee damage scale
		/// </summary>
		public static void SetPlayerDefenseModifier(int _player, float _weaponDefenseMod, float _meleeDefenseMod)
		{
			Function.Call((Hash)0x497A6539BB0E8787, _player, _weaponDefenseMod, _meleeDefenseMod);
		}
		/// <summary>
		/// bullet damage modifier: type = 4
		/// explosive damage Defense mod: type = 7
		/// fire damage Defense mod: type = 8, 15
		/// </summary>
		public static void SetPlayerDefenseTypeModifier(int _player, int _type, float _defenseModifier)
		{
			Function.Call((Hash)0x93F499CAE53FCD05, _player, _type, _defenseModifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerWeaponTypeDamageModifier(int _player, uint _weaponHash, float _damageModifier)
		{
			Function.Call((Hash)0xD04AD186CE8BB129, _player, _weaponHash, _damageModifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerWeaponDamage(int _player, uint _weaponHash)
		{
			return Function.Call<float>((Hash)0xFE0304050261442C, _player, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5c2e5e3caeeb1f58(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x5C2E5E3CAEEB1F58, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerWeaponGroupDamageModifier(int _player, uint _weaponGroup, float _modifier)
		{
			Function.Call((Hash)0xFC79DCC94D0A5897, _player, _weaponGroup, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerWeaponGroupAsInstantKill(int _player, uint _weaponGroup, bool _toggle)
		{
			Function.Call((Hash)0x59F0AFF3E0A1B019, _player, _weaponGroup, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerTrampleDamageModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0xAF341032E97FB061, _player, _modifier);
		}
		/// <summary>
		/// _SET_PLAYER_A* - _SET_PLAYER_C*
		/// </summary>
		public static void SetPlayerLassoDamagePerSecond(int _player, float _damage)
		{
			Function.Call((Hash)0x43F50A7CD2482156, _player, _damage);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerTotalAccuracyModifier(int _player, float _accuracy)
		{
			Function.Call((Hash)0x967FF5BC0CFE6D26, _player, _accuracy);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerLocalAccuracyFloorModifier(int _player, float _accuracy)
		{
			Function.Call((Hash)0x4EA69188FBCE6A7D, _player, _accuracy);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerRemoteAccuracyFloorModifier(int _player, float _accuracy)
		{
			Function.Call((Hash)0xDEE80FEDFDD43C9B, _player, _accuracy);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3ad212429e095efb(int _p0, int _p1)
		{
			Function.Call((Hash)0x3AD212429E095EFB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerNoiseMultiplier(int _player, float _multiplier)
		{
			Function.Call((Hash)0xB5EC6BDAEBCA454C, _player, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x113ef458ab6cda67(int _p0, int _p1)
		{
			Function.Call((Hash)0x113EF458AB6CDA67, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerSneakingNoiseMultiplier(int _player, float _multiplier)
		{
			Function.Call((Hash)0x4DE44FA389DCA565, _player, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SimulatePlayerInputGait(int _player, float _amount, int _gaitType, float _speed, bool _p4, bool _p5)
		{
			Function.Call((Hash)0xFA0C063C422C4355, _player, _amount, _gaitType, _speed, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetPlayerInputGait(int _player)
		{
			Function.Call((Hash)0x61A2EECAB274829B, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerSimulateAiming(int _player, bool _toggle)
		{
			Function.Call((Hash)0xE0447DEF81CCDFD2, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerClothPinFrames(int _ped, int _p1)
		{
			Function.Call((Hash)0xD0D9317DFEEF9A66, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPlayerBeenSpottedInStolenVehicle(int _player)
		{
			return Function.Call<bool>((Hash)0xC932F57F31EA9152, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPlayerReceivedBattleEventRecently(int _player, int _p1, bool _p2)
		{
			return Function.Call<bool>((Hash)0xFB6EB8785F808551, _player, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMountPromptDisabled(bool _disabled)
		{
			Function.Call((Hash)0x5B9813ECF7633FE8, _disabled);
		}
		/// <summary>
		/// Returns true if the player is riding a train.
		/// </summary>
		public static bool IsPlayerRidingTrain(int _player)
		{
			return Function.Call<bool>((Hash)0x2FB0ACADA6A238DD, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9afcf9fe1884bf62(int _p0, int _p1)
		{
			Function.Call((Hash)0x9AFCF9FE1884BF62, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1e8099f449abb0ba(int _p0)
		{
			return Function.Call<int>((Hash)0x1E8099F449ABB0BA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetDeadeyeAbilityLevel(int _player)
		{
			return Function.Call<int>((Hash)0xCCE7C695C164C35F, _player);
		}
		/// <summary>
		/// Max level is 5.
		/// </summary>
		public static void SetDeadeyeAbilityLevel(int _player, int _level)
		{
			Function.Call((Hash)0xF0FE8E790BFEB5BB, _player, _level);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDeadeyeAbilityLocked(int _player, int _abilityType)
		{
			return Function.Call<bool>((Hash)0x8A0643B0B4CA276B, _player, _abilityType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDeadeyeAbilityLocked(int _player, int _abilityType, bool _toggle)
		{
			Function.Call((Hash)0x2797B8D66DD0EBB8, _player, _abilityType, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDeadeyeTaggingEnabled(int _player, bool _toggle)
		{
			Function.Call((Hash)0x6B5DDFB967E5073D, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsDeadeyeTaggingEnabled(int _player)
		{
			return Function.Call<bool>((Hash)0x32348719DCED2969, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3c4ae8506638c7e2(int _p0, int _p1)
		{
			Function.Call((Hash)0x3C4AE8506638C7E2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x51139d8c17b16fbc(int _p0)
		{
			return Function.Call<int>((Hash)0x51139D8C17B16FBC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8f44ebb3ba8f6d44(int _p0, int _p1)
		{
			Function.Call((Hash)0x8F44EBB3BA8F6D44, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDeadeyeTaggingConfig(int _player, int _filter)
		{
			Function.Call((Hash)0x83FCD6921FC8FD05, _player, _filter);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe92261bd28c0878f(int _p0)
		{
			return Function.Call<int>((Hash)0xE92261BD28C0878F, _p0);
		}
		/// <summary>
		/// Only used in R* SP Script short_update
		/// </summary>
		public static void SetDeadeyeAbilityDepletionDelay(int _player, float _delay)
		{
			Function.Call((Hash)0x870634493CB4372C, _player, _delay);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa54000d4bfd90bde(int _p0)
		{
			return Function.Call<int>((Hash)0xA54000D4BFD90BDE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6edb5d08cb03e763(int _p0, int _p1)
		{
			Function.Call((Hash)0x6EDB5D08CB03E763, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x27ad7162d3fed01e(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x27AD7162D3FED01E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumMarkedDeadeyeTargets(int _player)
		{
			return Function.Call<int>((Hash)0xCCD9B77F70D31C9D, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc93a9a45430d484e(int _p0)
		{
			return Function.Call<int>((Hash)0xC93A9A45430D484E, _p0);
		}
		/// <summary>
		/// Used in script function INIT_DEADEYE_SLOWDOWN
		/// </summary>
		public static void Hash_0x570a13a4ca2799bb(int _player, bool _p1)
		{
			Function.Call((Hash)0x570A13A4CA2799BB, _player, _p1);
		}
		/// <summary>
		/// Used in script function INIT_DEADEYE_SLOWDOWN
		/// </summary>
		public static void Hash_0x3acac8832e77bc93(int _player, bool _p1)
		{
			Function.Call((Hash)0x3ACAC8832E77BC93, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2b12b6fc8b8772ab(int _player, int _p1)
		{
			Function.Call((Hash)0x2B12B6FC8B8772AB, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe910932f4b30be23(int _player)
		{
			Function.Call((Hash)0xE910932F4B30BE23, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x131e294ef60160df(int _player, float _p1, float _p2, float _p3, float _p4, int _p5)
		{
			Function.Call((Hash)0x131E294EF60160DF, _player, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0e9057a9da78d0f8(int _player, int _bitflag)
		{
			Function.Call((Hash)0x0E9057A9DA78D0F8, _player, _bitflag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x263d69767f76059c(int _player, int _p1)
		{
			Function.Call((Hash)0x263D69767F76059C, _player, _p1);
		}
		/// <summary>
		/// Used for setting up eagle eye for entity
		/// Params: p2 = re-register or not?
		/// </summary>
		public static void RegisterEagleEyeForEntity(int _player, int _entity, bool _p2)
		{
			Function.Call((Hash)0x543DFE14BE720027, _player, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RegisterEagleEyeTrailsForEntity(int _player, int _entity, int _p2)
		{
			Function.Call((Hash)0xAC67098A1E54ABB0, _player, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnregisterEagleEyeForEntity(int _player, int _entity)
		{
			Function.Call((Hash)0x9DAE1380CC5C6451, _player, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnregisterEagleEyeTrailsForEntity(int _player, int _entity, int _p2)
		{
			Function.Call((Hash)0x9A957912CE2EABD1, _player, _entity, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe5d3eb37abc1eb03(int _p0)
		{
			Function.Call((Hash)0xE5D3EB37ABC1EB03, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEagleEyeRegisteredForEntity(int _player, int _entity)
		{
			return Function.Call<bool>((Hash)0x0E6846476906C9DD, _player, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6852288340b43239(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x6852288340B43239, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe50a67c33514a390(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xE50A67C33514A390, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd288e02e364972d2(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD288E02E364972D2, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeDisableTrackingTrail(int _entity, string _trail, int _p2, int _p3)
		{
			Function.Call((Hash)0x40AB73092C95B5F5, _entity, _trail, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6ecfc621a168424c(int _entity1, int _entity2, int _p2, float _p3)
		{
			Function.Call((Hash)0x6ECFC621A168424C, _entity1, _entity2, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc5e09d012d759c4(int _entity1, int _entity2, int _p2)
		{
			Function.Call((Hash)0xDC5E09D012D759C4, _entity1, _entity2, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x00b156afebcc5ae0(int _p0)
		{
			Function.Call((Hash)0x00B156AFEBCC5AE0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc58ce6824e604dec(int _p0)
		{
			Function.Call((Hash)0xC58CE6824E604DEC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x330ca55a3647fa1c(int _p0, int _p1)
		{
			Function.Call((Hash)0x330CA55A3647FA1C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa62bbaae67a05bb0(int _p0)
		{
			return Function.Call<int>((Hash)0xA62BBAAE67A05BB0, _p0);
		}
		/// <summary>
		/// false: default eagleeye color
		/// true: green eagleeye color
		/// </summary>
		public static void EagleEyeSetColor(int _player, bool _p1, int _p2)
		{
			Function.Call((Hash)0x2C41D93F550D5E37, _player, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x22c8b10802301381(int _p0, int _p1)
		{
			Function.Call((Hash)0x22C8B10802301381, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetDrainRateModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0xE0D6C2A146A5C993, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x06e1fb78b1e59ca5(int _ped, bool _p1)
		{
			Function.Call((Hash)0x06E1FB78B1E59CA5, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetPlusFlagDisabled(int _ped, bool _disabled)
		{
			Function.Call((Hash)0xCE285A4413B00B7F, _ped, _disabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3813e11a378958a5(int _p0)
		{
			return Function.Call<int>((Hash)0x3813E11A378958A5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetFocusOnAssociatedClueTrail(int _player, int _linkedWaypointPed)
		{
			Function.Call((Hash)0x2AF423D6ECB2C485, _player, _linkedWaypointPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0f9cf06986300875(int _p0)
		{
			Function.Call((Hash)0x0F9CF06986300875, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetTrackingUpgrade(int _player, float _p1)
		{
			Function.Call((Hash)0xDFC85C5199045026, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetTrackingUpgrade2(int _player, float _p1)
		{
			Function.Call((Hash)0x6FA957D1B55941C1, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1da5c5b0923e1b85(int _p0)
		{
			return Function.Call<int>((Hash)0x1DA5C5B0923E1B85, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xaaed694ce814817f(int _p0)
		{
			return Function.Call<int>((Hash)0xAAED694CE814817F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetCustomEntityTint(int _entity, int _red, int _green, int _blue)
		{
			Function.Call((Hash)0x62ED71E133B6C9F1, _entity, _red, _green, _blue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbc02b3d151d3859f(int _entity, int _p1)
		{
			Function.Call((Hash)0xBC02B3D151D3859F, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EagleEyeSetCustomDistance(int _entity, float _distance)
		{
			Function.Call((Hash)0x907B16B3834C69E2, _entity, _distance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf21c7a3f3ffba629(int _p0)
		{
			Function.Call((Hash)0xF21C7A3F3FFBA629, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerManageBuffSuperJump(int _player, float _p1)
		{
			Function.Call((Hash)0x292F0B6EDC82E3A4, _player, _p1);
		}
		/// <summary>
		/// see personaabilities.meta
		/// enum ePersonaAbilityFlag
		/// {
		/// 	PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
		/// 	PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
		/// 	PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
		/// 	PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
		/// 	PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
		/// 	PERSONA_DEADEYE_INSTANT_RELOAD,
		/// 	PERSONA_USE_PHOSPHOROUS_ROUNDS,
		/// 	PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
		/// 	PERSONA_CONT_DEADEYE_ON_RELOAD,
		/// 	PERSONA_CONT_DEADEYE_ON_SHOOTING,
		/// 	PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
		/// 	PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
		/// 	PERSONA_CONT_DEADEYE_ON_RAGDOLL,
		/// 	PERSONA_USE_EXPLOSIVE_ROUNDS,
		/// 	PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
		/// 	PERSONA_CARRY_TWO_MONEYBAGS,
		/// 	PERSONA_ABILITY_LONG_PICK_HERBS,
		/// 	PERSONA_ABILITY_UNBREAKABLE_LASSO,
		/// 	PERSONA_CONT_DEADEYE_ON_SPRINTING,
		/// 	PERSONA_CANT_DEAL_HEADSHOTS,
		/// 	PERSONA_HANGMAN,
		/// 	PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
		/// 	PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
		/// 	PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
		/// 	PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
		/// 	PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
		/// 	PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
		/// 	PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
		/// 	PERSONA_CONT_EAGLEEYE_ON_SPRINT,
		/// 	PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
		/// };
		/// </summary>
		public static void SetLocalPlayerPersonaAbilityFlag(int _flagId, bool _toggle)
		{
			Function.Call((Hash)0x7146CF430965927C, _flagId, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerMaxAmmoOverrideForAmmoType(int _player, uint _ammoType, int _amount)
		{
			Function.Call((Hash)0xE133C1EC5300F740, _player, _ammoType, _amount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc900a465364a85d6(int _player)
		{
			Function.Call((Hash)0xC900A465364A85D6, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcfb2eed4fcb7bd77(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xCFB2EED4FCB7BD77, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2bb8d58e88777499(int _p0)
		{
			Function.Call((Hash)0x2BB8D58E88777499, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x00eb5a760638db55(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x00EB5A760638DB55, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x65887eac535a0b0c(int _p0)
		{
			Function.Call((Hash)0x65887EAC535A0B0C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeaponDegradationModifier(int _player, float _modifier)
		{
			Function.Call((Hash)0x11A7FF918EF6BC66, _player, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBowDrawReductionTimeInDeadeye(int _player, float _drawReductionTime)
		{
			Function.Call((Hash)0xBE0C524970892D41, _player, _drawReductionTime);
		}
		/// <summary>
		/// Decreases Stamina bar drain speed by % when drawing a bow.
		/// </summary>
		public static void SetBowStaminaDrainSpeed(int _player, float _staminaDrain)
		{
			Function.Call((Hash)0xFE7C9CF376D23342, _player, _staminaDrain);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDamageCloseDistanceBonus(int _player, float _closeRangeLowerBound, float _closeRangeUpperBound)
		{
			Function.Call((Hash)0x7761A30432C91297, _player, _closeRangeLowerBound, _closeRangeUpperBound);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDamageCloseDistanceBonusTotal(int _player, float _closeDamageBonus)
		{
			Function.Call((Hash)0x5006C36652D6EC56, _player, _closeDamageBonus);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDamageFarDistanceBonus(int _player, float _farRangeLowerBound, float _farRangeUpperBound)
		{
			Function.Call((Hash)0xED591CB17C8BA216, _player, _farRangeLowerBound, _farRangeUpperBound);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDamageFarDistanceBonusTotal(int _player, float _farDamageBonus)
		{
			Function.Call((Hash)0x1F0E3A4434565F8F, _player, _farDamageBonus);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6c54e69516cc56bd(int _p0)
		{
			return Function.Call<int>((Hash)0x6C54E69516CC56BD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3a8611bd7bde84f7(int _p0, int _p1)
		{
			Function.Call((Hash)0x3A8611BD7BDE84F7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc177c827cefc0aa4(int _p0, int _p1)
		{
			Function.Call((Hash)0xC177C827CEFC0AA4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbd96185264ddaaea(int _p0, int _p1)
		{
			Function.Call((Hash)0xBD96185264DDAAEA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x628e742fe1f79c4a(int _p0, int _p1)
		{
			Function.Call((Hash)0x628E742FE1F79C4A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc6366a585659d15c(int _p0, int _p1)
		{
			Function.Call((Hash)0xC6366A585659D15C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x98cd760de43b612e(int _p0, int _p1)
		{
			Function.Call((Hash)0x98CD760DE43B612E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x216bc0d3d2e413d2(int _player, int _p1)
		{
			Function.Call((Hash)0x216BC0D3D2E413D2, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x45ef176b532ca851(int _p0, int _p1)
		{
			Function.Call((Hash)0x45EF176B532CA851, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa342495f93b7b838(int _p0, int _p1)
		{
			Function.Call((Hash)0xA342495F93B7B838, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3bb84f812e052c90(int _p0)
		{
			Function.Call((Hash)0x3BB84F812E052C90, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9fc5a003fb76edbd(int _p0, int _p1)
		{
			Function.Call((Hash)0x9FC5A003FB76EDBD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0faf95d71ed67ade(int _player, string _p1)
		{
			Function.Call((Hash)0x0FAF95D71ED67ADE, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x988c9045531b9fce(int _player, string _p1)
		{
			Function.Call((Hash)0x988C9045531B9FCE, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x06c3db00b69d5435(int _player, string _p1)
		{
			Function.Call((Hash)0x06C3DB00B69D5435, _player, _p1);
		}
		/// <summary>
		/// NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
		/// NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
		/// NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
		/// NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
		/// NPEW__ENUM__EMOTE_CATEGORY_GREET
		/// NPEW__ENUM__NUM_EMOTE_CATEGORIES
		/// NPEW__ENUM__NUM_DISPLAY_TEXTURES
		/// </summary>
		public static void Hash_0xbb6ea5d59e926095(int _category, uint _emote)
		{
			Function.Call((Hash)0xBB6EA5D59E926095, _category, _emote);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xe1d356f5a66d0ffa(uint _emote)
		{
			return Function.Call<bool>((Hash)0xE1D356F5A66D0FFA, _emote);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x929ddd5538f3df1f(int _p0, int _p1)
		{
			Function.Call((Hash)0x929DDD5538F3DF1F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfa7daae3959e6c7b(int _p0, int _p1)
		{
			Function.Call((Hash)0xFA7DAAE3959E6C7B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9461a8fab0378e5b(int _p0, int _p1)
		{
			Function.Call((Hash)0x9461A8FAB0378E5B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcb61a63aa53d7d22(int _p0, int _p1)
		{
			Function.Call((Hash)0xCB61A63AA53D7D22, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcffc3eccd7a5cceb(int _player, uint _weapon, bool _p2)
		{
			Function.Call((Hash)0xCFFC3ECCD7A5CCEB, _player, _weapon, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x76f7e1bcd623a429(int _p0)
		{
			Function.Call((Hash)0x76F7E1BCD623A429, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x585ce159db46fadb(int _p0, int _p1)
		{
			Function.Call((Hash)0x585CE159DB46FADB, _p0, _p1);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
		/// </summary>
		public static void SetPlayerResetFlag(int _player, int _playerResetFlag, bool _p2)
		{
			Function.Call((Hash)0x9F9A829C6751F3C7, _player, _playerResetFlag, _p2);
		}
		/// <summary>
		/// playerResetFlag: See 0x9F9A829C6751F3C7
		/// </summary>
		public static bool GetPlayerResetFlag(int _player, int _playerResetFlag)
		{
			return Function.Call<bool>((Hash)0xFE691E89C08937B6, _player, _playerResetFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMountOwnedByPlayer(int _player)
		{
			return Function.Call<int>((Hash)0xF49F14462F0AE27C, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerOwnerOfMount(int _mount)
		{
			return Function.Call<int>((Hash)0xAD03B03737CE6810, _mount);
		}
		/// <summary>
		/// Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
		/// </summary>
		public static void SetPlayerOwnsMount(int _player, int _mount)
		{
			Function.Call((Hash)0xE6D4E435B56D5BD0, _player, _mount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleOwnedByPlayer(int _player)
		{
			return Function.Call<int>((Hash)0xB9050A97594C8832, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerOwnerOfVehicle(int _vehicle)
		{
			return Function.Call<int>((Hash)0x7C803BDC8343228D, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerOwnsVehicle(int _player, int _vehicle)
		{
			Function.Call((Hash)0xD0E02AA618020D17, _player, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerHuntingWagon(int _player)
		{
			return Function.Call<int>((Hash)0x5CA6BBD4A7D8145E, _player);
		}
		/// <summary>
		/// Only applies to HUNTERCART01
		/// </summary>
		public static void SetPlayerHuntingWagon(int _player, int _wagon)
		{
			Function.Call((Hash)0x6A4404BDFA62CE2C, _player, _wagon);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9044835be9d9dbfe(int _p0, int _p1)
		{
			Function.Call((Hash)0x9044835BE9D9DBFE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetDiscoverableNameHashAndTypeForEntity(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x0139637A3BFF8B6D, _p0, _p1);
		}
		/// <summary>
		/// p0: mostly Ped Hashes
		/// </summary>
		public static uint GetConstructedDiscoveredCharacterName(uint _p0, bool _model, bool _outfit)
		{
			return Function.Call<uint>((Hash)0x8E84119A23C16623, _p0, _model, _outfit);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetTargetCharacterNameScriptOverrideHash(int _ped)
		{
			return Function.Call<uint>((Hash)0x0335106F3ACABBED, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetTargetCharacterNameScriptOverrideRawString(int _ped)
		{
			return Function.Call<string>((Hash)0x755E08680F21EF30, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetTargetCharacterNameForLocalPlayer(int _ped)
		{
			return Function.Call<uint>((Hash)0x36E3D8B5A6552FE8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xda9d7be231fe865f(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xDA9D7BE231FE865F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x946d46cd6dfb9742(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x946D46CD6DFB9742, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0772f87d7b07719a(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x0772F87D7B07719A, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcddd4b74660e2335(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xCDDD4B74660E2335, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x77e83c315a3b31ca(int _p0)
		{
			Function.Call((Hash)0x77E83C315A3B31CA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerHasDiscoveredCharacterNameMp(uint _discoveryHash)
		{
			Function.Call((Hash)0x7C32191D9FB2BDEA, _discoveryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetHasPlayerDiscoveredCharacterNameMp(uint _discoveryHash)
		{
			return Function.Call<bool>((Hash)0x354F689C4FFAAB37, _discoveryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ModifyPlayerDiscoveredCharacterNameMpSetUndiscovered(uint _discoveryHash)
		{
			Function.Call((Hash)0xFB0E622B401884D3, _discoveryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc68829bb3f37023(int _player, bool _showingInfoCard)
		{
			Function.Call((Hash)0xDC68829BB3F37023, _player, _showingInfoCard);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4dbc4873707e8fd6(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x4DBC4873707E8FD6, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcedc16930526f728(int _p0)
		{
			Function.Call((Hash)0xCEDC16930526F728, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x14e57f88ba0a07fc(uint _location)
		{
			Function.Call((Hash)0x14E57F88BA0A07FC, _location);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2e1abe627c95ed9b()
		{
			return Function.Call<int>((Hash)0x2E1ABE627C95ED9B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x497a18f8f88aa9d8()
		{
			Function.Call((Hash)0x497A18F8F88AA9D8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4f0d2256aae94eda(int _p0)
		{
			Function.Call((Hash)0x4F0D2256AAE94EDA, _p0);
		}
		/// <summary>
		/// Focus Fire VFX start for player: p1 = focusfire
		/// </summary>
		public static void SetLockonFocusFireVfx(int _player, string _p1)
		{
			Function.Call((Hash)0x5F8E0303C229C84B, _player, _p1);
		}
		/// <summary>
		/// Hardcoded to return zero/false.
		/// </summary>
		public static int Hash_0x0b7803f6f7bb43e0()
		{
			return Function.Call<int>((Hash)0x0B7803F6F7BB43E0);
		}
		/// <summary>
		/// Hardcoded to return zero/false.
		/// </summary>
		public static int Hash_0xc74eb3f2ec169f6b(int _p0)
		{
			return Function.Call<int>((Hash)0xC74EB3F2EC169F6B, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x3b296934db026873(int _p0, int _p1)
		{
			Function.Call((Hash)0x3B296934DB026873, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMinTimeBeforeHorseBucking(int _mount, int _iMinBuckTime)
		{
			Function.Call((Hash)0x506CE71FB6E8CF5E, _mount, _iMinBuckTime);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf4cb347d7b5eb0fd()
		{
			return Function.Call<int>((Hash)0xF4CB347D7B5EB0FD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcd7ca3013fd12749(int _p0, int _p1)
		{
			Function.Call((Hash)0xCD7CA3013FD12749, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceRestScenario(bool _toggle)
		{
			Function.Call((Hash)0xE5A3DD2FF84E1A4B, _toggle);
		}
		/// <summary>
		/// _IS_PLAYER_D* - _IS_PLAYER_F*
		/// </summary>
		public static bool Hash_0x57028fd99886f6f9()
		{
			return Function.Call<bool>((Hash)0x57028FD99886F6F9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x35a33783ec3c3448(int _p0)
		{
			Function.Call((Hash)0x35A33783EC3C3448, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x39d8d7082bc34b72(int _p0)
		{
			Function.Call((Hash)0x39D8D7082BC34B72, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1ad8ad999c27f44a(int _p0)
		{
			Function.Call((Hash)0x1AD8AD999C27F44A, _p0);
		}
		// :#######################: //
		// : namespace: POPULATION : //
		// :#######################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumModelsInPopulationSet(uint _popSetHash)
		{
			return Function.Call<int>((Hash)0xA1E3171ED0E47564, _popSetHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedModelNameInPopulationSet(uint _popSetHash, int _index)
		{
			return Function.Call<uint>((Hash)0x3EAFA1C533B7139E, _popSetHash, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetRandomModelFromPopulationSet(uint _popSetHash, int _flags, uint _p2, bool _p3, bool _p4, float _x, float _y, float _z)
		{
			return Function.Call<uint>((Hash)0x6B12ED8C77E8567B, _popSetHash, _flags, _p2, _p3, _p4, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePopzoneFromVolume(int _volume)
		{
			return Function.Call<int>((Hash)0x9AC1C64FE46B6D09, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteScriptPopzone(int _popZone)
		{
			Function.Call((Hash)0xA6E6A66FC4CA4224, _popZone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPopzoneValid(int _popZone)
		{
			return Function.Call<bool>((Hash)0xA5BD585005EFCAD4, _popZone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPopzonePopulationSet(int _popZone, uint _populationSetHash)
		{
			Function.Call((Hash)0x3E6A49D9B519E85C, _popZone, _populationSetHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7e6bc0b94f5928f0(int _popZone, int _p1, int _p2)
		{
			Function.Call((Hash)0x7E6BC0B94F5928F0, _popZone, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x578e2fa64e847c60(int _popZone, int _p1)
		{
			Function.Call((Hash)0x578E2FA64E847C60, _popZone, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x08892122769770d5(int _popZone, bool _p1)
		{
			Function.Call((Hash)0x08892122769770D5, _popZone, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0f1861101c9a9944(int _popZone, bool _p1)
		{
			Function.Call((Hash)0x0F1861101C9A9944, _popZone, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSpawnerInfoPriority(uint _p0, uint _p1, int _priority)
		{
			Function.Call((Hash)0x60CDE717A6D47769, _p0, _p1, _priority);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearSpawnerInfoPriority(uint _p0, uint _p1)
		{
			Function.Call((Hash)0x217A54DE2D200305, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x638fcfc6042a9473(int _p0, int _p1)
		{
			Function.Call((Hash)0x638FCFC6042A9473, _p0, _p1);
		}
		/// <summary>
		/// include/exclude flags: PFF_AllAnimals = 2016,
		/// PFF_Humans = 8192
		/// </summary>
		public static void AddAmbientAvoidanceRestriction(int _volume, int _includeFlags, int _excludeFlags, uint _p3, uint _p4, uint _p5, int _p6)
		{
			Function.Call((Hash)0xB56D41A694E42E86, _volume, _includeFlags, _excludeFlags, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAmbientAvoidanceRestriction(int _volume)
		{
			Function.Call((Hash)0x74C2B3DC0B294102, _volume);
		}
		/// <summary>
		/// include/exclude flags: PFF_AllAnimals = 2016,
		/// PFF_Humans = 8192
		/// </summary>
		public static void AddAmbientSpawnRestriction(int _volume, int _includeFlags, int _excludeFlags, uint _p3, uint _p4, uint _p5, int _p6)
		{
			Function.Call((Hash)0x18262CAFEBB5FBE1, _volume, _includeFlags, _excludeFlags, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAmbientSpawnRestriction(int _volume)
		{
			Function.Call((Hash)0xA1CFB35069D23C23, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2161278c6322f740(int _includeFlags, int _excludeFlags, int _p2, uint _p3, int _p4, int _volume)
		{
			Function.Call((Hash)0x2161278C6322F740, _includeFlags, _excludeFlags, _p2, _p3, _p4, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf45e46deecf7df6e(int _bitFlag, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xF45E46DEECF7DF6E, _bitFlag, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8ec7cd701f872f87(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x8EC7CD701F872F87, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc4533e3e87125c9e(int _p0)
		{
			Function.Call((Hash)0xC4533E3E87125C9E, _p0);
		}
		/// <summary>
		/// p1: 0 = Disable avoidance, 1 = Enabled avoidance, 2 = Enabled avoidance (?)
		/// </summary>
		public static void SetPedShouldIgnoreAvoidanceVolumes(int _ped, int _p1)
		{
			Function.Call((Hash)0xF74E134F40192884, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdbbf12ea7c1029b2(int _p0, int _p1)
		{
			Function.Call((Hash)0xDBBF12EA7C1029B2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x247f86595d396344(int _p0)
		{
			Function.Call((Hash)0x247F86595D396344, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x324ab2a68ad8aee5()
		{
			Function.Call((Hash)0x324AB2A68AD8AEE5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableAmbientRoadPopulation(bool _unk)
		{
			Function.Call((Hash)0xC6DCC2A3A8825C85, _unk);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableAmbientRoadPopulation()
		{
			Function.Call((Hash)0xBC90BDF4E5228EA1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2660e7720edc4bd0(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x2660E7720EDC4BD0, _p0, _p1, _p2);
		}
		/// <summary>
		/// Returns model hash of the closest fish
		/// </summary>
		public static uint GetRandomFishTypeForLocation()
		{
			return Function.Call<uint>((Hash)0x595478B3BBC3076D);
		}
		/// <summary>
		/// Only used for Special Event (XMAS).
		/// _SET_P*
		/// </summary>
		public static void Hash_0xec116edb683ad479(bool _p0)
		{
			Function.Call((Hash)0xEC116EDB683AD479, _p0);
		}
		// :##################: //
		// : namespace: POSSE : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc086ff658b2e51db()
		{
			return Function.Call<int>((Hash)0xC086FF658B2E51DB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc086ff658b2e51da(int _p0)
		{
			return Function.Call<int>((Hash)0xC086FF658B2E51DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc087ff658b2e51da(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC087FF658B2E51DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PosseGetPosseMembershipCount()
		{
			return Function.Call<int>((Hash)0xC088FF658B2E51DA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc089ff658b2e51da(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC089FF658B2E51DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc08aff658b2e51da(int _p0)
		{
			Function.Call((Hash)0xC08AFF658B2E51DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08bff658b2e51da(int _p0)
		{
			return Function.Call<int>((Hash)0xC08BFF658B2E51DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc08aff658b2e51db(int _p0)
		{
			Function.Call((Hash)0xC08AFF658B2E51DB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08cff658b2e51da(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC08CFF658B2E51DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc09cff658b2e51da(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xC09CFF658B2E51DA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08def658b2e51da(int _p0)
		{
			return Function.Call<int>((Hash)0xC08DEF658B2E51DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08dff658b2e51da()
		{
			return Function.Call<int>((Hash)0xC08DFF658B2E51DA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08dff658b2e51db(int _p0)
		{
			return Function.Call<int>((Hash)0xC08DFF658B2E51DB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08eff658b2e51db(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC08EFF658B2E51DB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08fff658b2e51da()
		{
			return Function.Call<int>((Hash)0xC08FFF658B2E51DA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc08fff658b2e51db(int _p0)
		{
			return Function.Call<int>((Hash)0xC08FFF658B2E51DB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e61da(int _p0)
		{
			return Function.Call<int>((Hash)0xC084FF658B2E61DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e71da(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xC084FF658B2E71DA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e81da(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xC084FF658B2E81DA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e52da(int _p0)
		{
			return Function.Call<int>((Hash)0xC084FF658B2E52DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e53da()
		{
			return Function.Call<int>((Hash)0xC084FF658B2E53DA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e54da(int _p0)
		{
			return Function.Call<int>((Hash)0xC084FF658B2E54DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc084ff658b2e55da(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC084FF658B2E55DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc484ff658b2e55da(int _p0)
		{
			Function.Call((Hash)0xC484FF658B2E55DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc584ff658b2e55da(int _p0)
		{
			Function.Call((Hash)0xC584FF658B2E55DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc684ff658b2e55da(int _p0)
		{
			Function.Call((Hash)0xC684FF658B2E55DA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc184ff658b2e55da(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC184FF658B2E55DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc284ff658b2e55da(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xC284FF658B2E55DA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc394ff658b2e55da(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xC394FF658B2E55DA, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc07cff658b2e51da(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xC07CFF658B2E51DA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xc06cff658b2e51da(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xC06CFF658B2E51DA, _p0, _p1, _p2);
		}
		// :####################: //
		// : namespace: PROPSET : //
		// :####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool RequestPropSet(uint _hash)
		{
			return Function.Call<bool>((Hash)0xF3DE57A46D5585E9, _hash);
		}
		/// <summary>
		/// Same as _REQUEST_PROP_SET
		/// </summary>
		public static bool RequestPropSet2(uint _hash)
		{
			return Function.Call<bool>((Hash)0xE72F591958F3ACAB, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPropSetLoaded(uint _hash)
		{
			return Function.Call<bool>((Hash)0x48A88FC684C55FDC, _hash);
		}
		/// <summary>
		/// Same as _HAS_PROP_SET_LOADED
		/// </summary>
		public static bool HasPropSetLoaded2(uint _hash)
		{
			return Function.Call<bool>((Hash)0xD090ABEF4D6A7D96, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPropSetAsNoLongerNeeded(int _propSet)
		{
			Function.Call((Hash)0x909E3C7FAE539FB1, _propSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeletePropSet(int _propSet, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x58AC173A55D9D7B4, _propSet, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ReleasePropSet(uint _hash)
		{
			return Function.Call<bool>((Hash)0xB1964A83B345B4AB, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePropSet(uint _hash, float _x, float _y, float _z, int _p4, float _heading, float _p6, bool _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0xE65C5CBA95F0E510, _hash, _x, _y, _z, _p4, _heading, _p6, _p7, _p8);
		}
		/// <summary>
		/// Same as _CREATE_PROP_SET
		/// https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
		/// </summary>
		public static int CreatePropSet2(uint _hash, float _x, float _y, float _z, int _p4, float _p5, float _p6, bool _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0x899C97A1CCE7D483, _hash, _x, _y, _z, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreatePropSetInstanceAttachedToEntity(uint _hash, float _x, float _y, float _z, int _entity, float _p5, bool _p6, int _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0x9609DBDDE18FAD8C, _hash, _x, _y, _z, _entity, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
		/// </summary>
		public static int CreatePropSet4(uint _hash, float _x, float _y, float _z, int _entity, float _p5, bool _p6, int _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0xACA7FB30269096D4, _hash, _x, _y, _z, _entity, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPropSetExist(int _propSet)
		{
			return Function.Call<bool>((Hash)0x7DDDCF815E650FF5, _propSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesPropSetOfTypeExistNearCoords(uint _propsetHash, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0x72068021F498E6E3, _propsetHash, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPropSetFullyLoaded(int _propSet)
		{
			return Function.Call<bool>((Hash)0xF42DB680A8B2A4D9, _propSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPropSetVisible(int _propSet, bool _toggle)
		{
			Function.Call((Hash)0x9D096A5BD02F953E, _propSet, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPropSetVisible(int _propSet)
		{
			return Function.Call<bool>((Hash)0x0CE8AAFE9E433A23, _propSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPropSetModel(int _propSet)
		{
			return Function.Call<uint>((Hash)0xA6A9712955F53D9C, _propSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetVehiclePropSetHash(int _vehicle)
		{
			return Function.Call<uint>((Hash)0x36F69E7A22655653, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetEntitiesFromPropSet(int _propSet, int _itemSet, uint _model, bool _p3, bool _p4)
		{
			return Function.Call<int>((Hash)0x738271B660FE0695, _propSet, _itemSet, _model, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc4b67ef3fd65622d(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xC4B67EF3FD65622D, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x58e0b01d45ca7357(int _p0)
		{
			Function.Call((Hash)0x58E0B01D45CA7357, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPropSetFlag(int _propSet, int _flag)
		{
			Function.Call((Hash)0xC1AB7EEFD3E6EE49, _propSet, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehiclePropSet(int _vehicle)
		{
			return Function.Call<int>((Hash)0xCE2ACD6F602803E5, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesVehicleHaveAnyPropSet(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x53784CEA0159439B, _vehicle);
		}
		/// <summary>
		/// List of vehicle propsets (wagons & trains): https://pastebin.com/1CsnvGLu / https://pastebin.com/v7TtqTgE
		/// </summary>
		public static void AddPropSetForVehicle(int _vehicle, uint _propset)
		{
			Function.Call((Hash)0xD80FAF919A2E56EA, _vehicle, _propset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveVehiclePropSets(int _vehicle)
		{
			Function.Call((Hash)0x3BCF32FF37EA9F1D, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehiclePropSetLoaded(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x155B2FBE72D7D1D0, _vehicle);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
		/// </summary>
		public static void AddAdditionalPropSetForVehicle(int _vehicle, uint _propset)
		{
			Function.Call((Hash)0x75F90E4051CC084C, _vehicle, _propset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehiclePropSetLoadedAdditional(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x7264F9CA87A9830B, _vehicle);
		}
		/// <summary>
		/// Returns PropSet handle to be used with _GET_PROP_SET_MODEL
		/// </summary>
		public static int GetVehicleLightPropSet(int _vehicle)
		{
			return Function.Call<int>((Hash)0xA079300AF757FB1A, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesVehicleHaveAnyLightPropSet(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xC9B4B3A36F81FD75, _vehicle);
		}
		/// <summary>
		/// To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
		/// 0xA6A9712955F53D9C returns lightPropset Hashes
		/// https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
		/// </summary>
		public static void AddLightPropSetToVehicle(int _vehicle, uint _lightPropset)
		{
			Function.Call((Hash)0xC0F0417A90402742, _vehicle, _lightPropset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveVehicleLightPropSets(int _vehicle)
		{
			Function.Call((Hash)0xE31C0CB1C3186D40, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleLightPropSetLoaded(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x0790473EEE1977D3, _vehicle);
		}
		/// <summary>
		/// Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
		/// </summary>
		public static int GetTrainCarriagePropSet(int _trainCarriage)
		{
			return Function.Call<int>((Hash)0xCFC0BD09BB1B73FF, _trainCarriage);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasVehicleTrailerPropSetLoaded(int _vehicle, int _wagonIndex)
		{
			return Function.Call<bool>((Hash)0x8F3333F0A6900B3C, _vehicle, _wagonIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPropSetAtCoords(uint _propsetHash, float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0xC061E50F8D299F95, _propsetHash, _x, _y, _z);
		}
		// :##################: //
		// : namespace: QUEUE : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool EventQueueIsEmpty(uint _hash)
		{
			return Function.Call<bool>((Hash)0x402B5D7D269FF796, _hash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EventQueuePop(uint _hash)
		{
			Function.Call((Hash)0xD87DF294B049211D, _hash);
		}
		// :######################: //
		// : namespace: RECORDING : //
		// :######################: //
		/// <summary>
		/// nullsub, doesn't do anything
		/// 
		/// Old name: _STOP_RECORDING_THIS_FRAME
		/// </summary>
		public static void ReplayPreventRecordingThisFrame()
		{
			Function.Call((Hash)0xA8C44C13419634F2);
		}
		// :###################: //
		// : namespace: REPLAY : //
		// :###################: //
		/// <summary>
		/// Hardcoded to return false.
		/// 
		/// Old name: _IS_INTERIOR_RENDERING_DISABLED
		/// </summary>
		public static bool ReplaySystemHasRequestedAScriptCleanup()
		{
			return Function.Call<bool>((Hash)0x0F838D47DE58EDB2);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetScriptsHaveCleanedUpForReplaySystem()
		{
			Function.Call((Hash)0x57C6525034E76EB0);
		}
		/// <summary>
		/// Hardcoded to return true.
		/// </summary>
		public static bool OpenVideoEditor()
		{
			return Function.Call<bool>((Hash)0xB3F2829907403C13);
		}
		/// <summary>
		/// Hardcoded to return true.
		/// </summary>
		public static bool CloseVideoEditor(int _p0)
		{
			return Function.Call<bool>((Hash)0xCEEC64BD27A59312, _p0);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool IsVideoEditorRunning()
		{
			return Function.Call<bool>((Hash)0x9EEB007317FA3B9C);
		}
		// :####################: //
		// : namespace: SCRIPTS : //
		// :####################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerBitAtIndex(int _value, int _bitIndex)
		{
			Function.Call((Hash)0x31010318BA9897AC, _value, _bitIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPlayerBitAtIndex(int _value, int _bitIndex)
		{
			Function.Call((Hash)0xD426E2E3288469D6, _value, _bitIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe4abe20dce7c7cfe(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xE4ABE20DCE7C7CFE, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xffddf802279be128(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xFFDDF802279BE128, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x64f765d9a1f8f02c(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x64F765D9A1F8F02C, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllPlayerBits(int _value)
		{
			Function.Call((Hash)0x20F4CB76689ACDBC, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearAllPlayerBits(int _value)
		{
			Function.Call((Hash)0xDE544B7EC0C187CC, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x72b2e00c9bac6789(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x72B2E00C9BAC6789, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyPlayerBitSet(int _playerBits)
		{
			return Function.Call<bool>((Hash)0x179A6F0EE2E79026, _playerBits);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetBlockOfPlayerBits(int _value, int _p1)
		{
			return Function.Call<int>((Hash)0xFA3B530A5CC693D5, _value, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBlockOfPlayerBits(int _value, int _p1, int _p2)
		{
			Function.Call((Hash)0xC6DFB8C04C86D5A5, _value, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CountPlayerBits(int _value)
		{
			return Function.Call<int>((Hash)0x462C687BEA254BD9, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1bdb5a07307f6929(int _p0, int _p1)
		{
			Function.Call((Hash)0x1BDB5A07307F6929, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1c5eb3c27f7508cb(int _p0, int _p1)
		{
			Function.Call((Hash)0x1C5EB3C27F7508CB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x42a429cdfed6d99d(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x42A429CDFED6D99D, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5827be85a87b073d(int _p0)
		{
			Function.Call((Hash)0x5827BE85A87B073D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0a79c81c418f5d38(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x0A79C81C418F5D38, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa88e1d7fa1e20080(int _p0)
		{
			return Function.Call<int>((Hash)0xA88E1D7FA1E20080, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CountParticipantBits(int _value)
		{
			return Function.Call<int>((Hash)0x2F050A3FF8738245, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestScript(string _scriptName)
		{
			Function.Call((Hash)0x46ED607DDD40D7FE, _scriptName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScriptAsNoLongerNeeded(string _scriptName)
		{
			Function.Call((Hash)0x0086D3067E1CFD1C, _scriptName);
		}
		/// <summary>
		/// Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
		/// </summary>
		public static bool HasScriptLoaded(string _scriptName)
		{
			return Function.Call<bool>((Hash)0xE97BD36574F8B0A6, _scriptName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScriptExist(string _scriptName)
		{
			return Function.Call<bool>((Hash)0x552B171E3F69E5AE, _scriptName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestScriptWithNameHash(uint _scriptHash)
		{
			Function.Call((Hash)0xF6B9CE3F8D5B9B74, _scriptHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScriptWithNameHashAsNoLongerNeeded(uint _scriptHash)
		{
			Function.Call((Hash)0x50723A1567C8361E, _scriptHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasScriptWithNameHashLoaded(uint _scriptHash)
		{
			return Function.Call<bool>((Hash)0xA5D8E0C2F3C7EEBC, _scriptHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScriptWithNameHashExist(uint _scriptHash)
		{
			return Function.Call<bool>((Hash)0xA34E89749F628284, _scriptHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TerminateThread(int _threadId)
		{
			Function.Call((Hash)0x87ED52AE40EA1A52, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThreadActive(int _threadId, bool _ignoreKilledState)
		{
			return Function.Call<bool>((Hash)0x46E9AE36D8FA6417, _threadId, _ignoreKilledState);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesThreadExist(int _threadId)
		{
			return Function.Call<bool>((Hash)0xFF975BC4435A0FA3, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetThreadExistenceDetails(int _threadId, bool _threadExists, bool _hasScriptHandler)
		{
			Function.Call((Hash)0xD92FA81B64920E85, _threadId, _threadExists, _hasScriptHandler);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetHashOfThread(int _threadId)
		{
			return Function.Call<uint>((Hash)0x724CB89D35B283D0, _threadId);
		}
		/// <summary>
		/// Starts a new iteration of the current threads.
		/// Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
		/// </summary>
		public static void ScriptThreadIteratorReset()
		{
			Function.Call((Hash)0x39382EB8DCD8684D);
		}
		/// <summary>
		/// If the function returns 0, the end of the iteration has been reached.
		/// </summary>
		public static int ScriptThreadIteratorGetNextThreadId()
		{
			return Function.Call<int>((Hash)0x3CE3FB167E837D7C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBackgroundScript(int _threadId)
		{
			return Function.Call<bool>((Hash)0x20B7F69B40C6B755, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetIdOfThisThread()
		{
			return Function.Call<int>((Hash)0x55525C346BEF6960);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TerminateThisThread()
		{
			Function.Call((Hash)0x5E8B6D17FF91CD59);
		}
		/// <summary>
		/// Gets the number of instances of the specified script is currently running.
		/// 
		/// Actually returns numRefs - 1.
		/// if (program)
		/// 	v3 = rage::scrProgram::GetNumRefs(program) - 1;
		/// return v3;
		/// 
		/// Old name: _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
		/// </summary>
		public static int GetNumberOfThreadsRunningTheScriptWithThisHash(uint _scriptHash)
		{
			return Function.Call<int>((Hash)0x8E34C953364A76DD, _scriptHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestThreadExit(int _threadId)
		{
			Function.Call((Hash)0x7DE4643157AD646C, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestThreadExitForAllThreadsWithThisName(uint _nameHash)
		{
			Function.Call((Hash)0x7423F7835770F619, _nameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThreadExitRequested()
		{
			return Function.Call<bool>((Hash)0x9E4EF615E307FBBE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThreadExitRequestedForThreadWithThisId(int _threadId)
		{
			return Function.Call<bool>((Hash)0x30BED53646C86D11, _threadId);
		}
		/// <summary>
		/// enum eThreadExitReason
		/// {
		/// 	THREAD_EXIT_REASON_NONE,
		/// 	THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
		/// 	THREAD_EXIT_REASON_SESSION_MERGE,
		/// 	THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
		/// 	THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
		/// };
		/// </summary>
		public static int GetThreadExitReason()
		{
			return Function.Call<int>((Hash)0x54AE4FDEEFEAB77E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetHashOfThisScriptName()
		{
			return Function.Call<uint>((Hash)0xBC2C927F5C264960);
		}
		/// <summary>
		/// eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
		/// </summary>
		public static int GetNumberOfEvents(int _eventGroup)
		{
			return Function.Call<int>((Hash)0x5CE8DE5909565748, _eventGroup);
		}
		/// <summary>
		/// eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
		/// </summary>
		public static bool GetEventExists(int _eventGroup, int _eventIndex)
		{
			return Function.Call<bool>((Hash)0xC9F59C0A710ECD34, _eventGroup, _eventIndex);
		}
		/// <summary>
		/// eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
		/// 
		/// Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
		/// </summary>
		public static uint GetEventAtIndex(int _eventGroup, int _eventIndex)
		{
			return Function.Call<uint>((Hash)0xA85E614430EFF816, _eventGroup, _eventIndex);
		}
		/// <summary>
		/// eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
		/// 
		/// Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
		/// 
		/// https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
		/// </summary>
		public static bool GetEventData(int _eventGroup, int _eventIndex, int _eventData, int _eventDataSize)
		{
			return Function.Call<bool>((Hash)0x57EC5FA4D4D6AFCA, _eventGroup, _eventIndex, _eventData, _eventDataSize);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEventFlagForDeletion(int _eventGroup, int _eventIndex, bool _p2)
		{
			Function.Call((Hash)0x4768D5252EAEB76F, _eventGroup, _eventIndex, _p2);
		}
		/// <summary>
		/// eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
		/// 
		/// Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
		/// 
		/// playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
		/// </summary>
		public static void TriggerScriptEvent(int _eventGroup, int _eventData, int _eventDataSize, int _scriptMetadataIndex, int _playerBits)
		{
			Function.Call((Hash)0x5AE99C571D5BBE5D, _eventGroup, _eventData, _eventDataSize, _scriptMetadataIndex, _playerBits);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TriggerScriptEvent2(int _eventData, int _eventDataSize, int _scriptMetadataIndex, int _threadId)
		{
			Function.Call((Hash)0x8B61C950A148FFA2, _eventData, _eventDataSize, _scriptMetadataIndex, _threadId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe7282390542f570d(int _p0)
		{
			return Function.Call<int>((Hash)0xE7282390542F570D, _p0);
		}
		/// <summary>
		/// Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
		/// </summary>
		public static void Hash_0x11b0a0b282fa9b10(bool _p0)
		{
			Function.Call((Hash)0x11B0A0B282FA9B10, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6f700a4bf7c3331b(bool _p0)
		{
			Function.Call((Hash)0x6F700A4BF7C3331B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf9e951a1e5517c06()
		{
			Function.Call((Hash)0xF9E951A1E5517C06);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x76cbcd9eadc00955()
		{
			Function.Call((Hash)0x76CBCD9EADC00955);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShutdownLoadingScreen()
		{
			Function.Call((Hash)0xFC179D7E8886DADF);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNoLoadingScreen(bool _toggle)
		{
			Function.Call((Hash)0x5CB83156AA038F95, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetNoLoadingScreen()
		{
			return Function.Call<bool>((Hash)0x323DAF00687E0F28);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisplayLoadingScreens(uint _p0, uint _p1, uint _p2, string _gamemodeName, string _title, string _subtitle)
		{
			Function.Call((Hash)0x1E5B70E53DB661E5, _p0, _p1, _p2, _gamemodeName, _title, _subtitle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x29fb4ce89472c3cb(int _p0, int _p1, float _p2, float _p3, string _p4, string _p5, string _p6, int _p7)
		{
			Function.Call((Hash)0x29FB4CE89472C3CB, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopDisplayingMpTransitionLoadingScreens(int _p0)
		{
			Function.Call((Hash)0x778D4733E0F2F265, _p0);
		}
		/// <summary>
		/// Same as GET_IS_LOADING_SCREEN_ACTIVE
		/// </summary>
		public static bool IsLoadingScreenVisible()
		{
			return Function.Call<bool>((Hash)0xB54ADBE65D528FCB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BailToLandingPage(int _bailCode)
		{
			Function.Call((Hash)0xBC2C927F5C264243, _bailCode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BailWithPassThroughParams(string _params)
		{
			Function.Call((Hash)0xE98204D3C25AE14C, _params);
		}
		/// <summary>
		/// Returns true if GtaThread+0x77C is equal to 1.
		/// 
		/// Old name: _BG_EXITED_BECAUSE_BACKGROUND_THREAD_STOPPED
		/// </summary>
		public static bool BgIsExitflagSet()
		{
			return Function.Call<bool>((Hash)0x2238EC3EC631AB1F);
		}
		/// <summary>
		/// Sets bit 0 in GtaThread+0x784
		/// </summary>
		public static void BgSetExitflagResponse()
		{
			Function.Call((Hash)0x4858148E3B8A75D0);
		}
		/// <summary>
		/// Hashed version of BG_START_CONTEXT
		/// </summary>
		public static void BgStartContextHash(uint _contextHash)
		{
			Function.Call((Hash)0x2EB67D564DCC09D5, _contextHash);
		}
		/// <summary>
		/// Hashed version of BG_END_CONTEXT
		/// </summary>
		public static void BgEndContextHash(uint _contextHash)
		{
			Function.Call((Hash)0x6D1431744182CDE8, _contextHash);
		}
		/// <summary>
		/// Inserts the given context into the background scripts context map.
		/// </summary>
		public static void BgStartContext(string _contextName)
		{
			Function.Call((Hash)0x49BA5678BA040CA7, _contextName);
		}
		/// <summary>
		/// Deletes the given context from the background scripts context map.
		/// </summary>
		public static void BgEndContext(string _contextName)
		{
			Function.Call((Hash)0x3ABF7BA1C3E2C8CF, _contextName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool BgDoesLaunchParamExist(int _scriptIndex, string _p1)
		{
			return Function.Call<bool>((Hash)0x4AE1DFF337A86FDE, _scriptIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BgGetLaunchParamValue(int _scriptIndex, string _p1)
		{
			return Function.Call<int>((Hash)0x55C40B7592BAD213, _scriptIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int BgGetScriptIdFromNameHash(uint _p0)
		{
			return Function.Call<int>((Hash)0x829CD22E043A2577, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BgReloadAllBackgroundScripts()
		{
			Function.Call((Hash)0xBE7D814CFA181B56);
		}
		/// <summary>
		/// goalContext: see <availableContexts> in common/data/stats_and_challenges/goals_*.meta
		/// </summary>
		public static void ActivateGoalContext(uint _goalContext)
		{
			Function.Call((Hash)0x7D654266025E921B, _goalContext);
		}
		/// <summary>
		/// goalContext: see _ACTIVATE_GOAL_CONTEXT
		/// </summary>
		public static void DeactivateGoalContext(uint _goalContext)
		{
			Function.Call((Hash)0x50B72A754EE64A71, _goalContext);
		}
		/// <summary>
		/// goalContext: see _ACTIVATE_GOAL_CONTEXT
		/// </summary>
		public static bool IsGoalContextActive(uint _goalContext)
		{
			return Function.Call<bool>((Hash)0x7409669C5ED50144, _goalContext);
		}
		/// <summary>
		/// Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
		/// </summary>
		public static string NetRpcGuidToString(int _netRpcGuid)
		{
			return Function.Call<string>((Hash)0xAC9FF854BD4BA9B5, _netRpcGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AwardsGetResultItem(int _rpcGuid, uint _awardHash, int _itemIndex, int _outResultItem)
		{
			return Function.Call<bool>((Hash)0xAC8FAB22A914AE34, _rpcGuid, _awardHash, _itemIndex, _outResultItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AwardsGetUnlockClaimData(int _rpcGuid, uint _awardHash, int _dataIndex, int _outUnlockData)
		{
			return Function.Call<bool>((Hash)0xB9467E41DAB1CF2C, _rpcGuid, _awardHash, _dataIndex, _outUnlockData);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LootGetResultItem(int _rpcGuid, int _itemIndex, int _outResultItem)
		{
			return Function.Call<bool>((Hash)0x4293B44A855F82CC, _rpcGuid, _itemIndex, _outResultItem);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LootGetLootClaimData(int _rpcGuid, int _dataIndex, int _outLootData)
		{
			return Function.Call<bool>((Hash)0xF1E9045F5AA9E428, _rpcGuid, _dataIndex, _outLootData);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StoreGlobalBlock(int _index)
		{
			return Function.Call<bool>((Hash)0xB952A3AC41D58F2F, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RestoreGlobalBlock(int _index)
		{
			return Function.Call<bool>((Hash)0xDC3914A99B4A5FDF, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesCompressedGlobalBlockBufferExist(int _index)
		{
			return Function.Call<bool>((Hash)0x66EE5B93C308F734, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGlobalBlockCanBeAccessed(int _index, bool _toggle)
		{
			Function.Call((Hash)0xE66F392BFCE734AF, _index, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetGlobalBlockCanBeAccessed(int _index)
		{
			return Function.Call<bool>((Hash)0x42A7EB5C814C2DE0, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllGlobalBlocksHaveBeenLoaded(bool _toggle)
		{
			Function.Call((Hash)0x11986B05885564D2, _toggle);
		}
		/// <summary>
		/// Waiting for child scripts to terminate / waiting for collapse of child scripts
		/// </summary>
		public static bool HaveAllChildScriptsTerminated(int _p0)
		{
			return Function.Call<bool>((Hash)0x380FFA15B72408FB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartNewScript(string _scriptName, int _stackSize)
		{
			return Function.Call<int>((Hash)0xE81651AD79516E48, _scriptName, _stackSize);
		}
		/// <summary>
		/// return : script thread id, 0 if failed
		/// Pass pointer to struct of args in p1, size of struct goes into p2
		/// </summary>
		public static int StartNewScriptWithArgs(string _scriptName, int _args, int _argCount, int _stackSize)
		{
			return Function.Call<int>((Hash)0xB8BA7F44DF1575E1, _scriptName, _args, _argCount, _stackSize);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartNewScriptWithNameHash(uint _scriptHash, int _stackSize)
		{
			return Function.Call<int>((Hash)0xEB1C67C3A5333A92, _scriptHash, _stackSize);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartNewScriptWithNameHashAndArgs(uint _scriptHash, int _args, int _argCount, int _stackSize)
		{
			return Function.Call<int>((Hash)0xC4BB298BD441BE78, _scriptHash, _args, _argCount, _stackSize);
		}
		// :#################: //
		// : namespace: SAVE : //
		// :#################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4fb5869e2b37fc00()
		{
			Function.Call((Hash)0x4FB5869E2B37FC00);
		}
		/// <summary>
		/// enum eSavegameType : Hash
		/// {
		/// 	SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
		/// 	SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
		/// 	SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
		/// 	SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
		/// 	SAVEGAMETYPE_END_MATCH = 0xE470ED50,
		/// 	SAVEGAMETYPE_END_MISSION = 0x9A444E54,
		/// 	SAVEGAMETYPE_END_SESSION = 0x6D23956C,
		/// 	SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
		/// 	SAVEGAMETYPE_RANKUP = 0xE25F8017,
		/// 	SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
		/// 	SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
		/// 	SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
		/// 	SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
		/// };
		/// </summary>
		public static bool SavegameSaveSp(uint _savegameType)
		{
			return Function.Call<bool>((Hash)0x62C9EB51656D68CE, _savegameType);
		}
		/// <summary>
		/// See SAVEGAME_SAVE_SP
		/// </summary>
		public static bool SavegameSaveMp(uint _savegameType)
		{
			return Function.Call<bool>((Hash)0x1840F3B30ED0105F, _savegameType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SavegameIsSavePending()
		{
			return Function.Call<bool>((Hash)0x3CF46F55C6585590);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1431540bca1a1bd2()
		{
			return Function.Call<int>((Hash)0x1431540BCA1A1BD2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa7ecebafbaf997a5(uint _savegameType)
		{
			return Function.Call<int>((Hash)0xA7ECEBAFBAF997A5, _savegameType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xed4b0c1057892b2e(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xED4B0C1057892B2E, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9bb83c4dd7be0802(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x9BB83C4DD7BE0802, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe8346e62fd7fb962()
		{
			Function.Call((Hash)0xE8346E62FD7FB962);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc0abf784590798a9(int _p0)
		{
			Function.Call((Hash)0xC0ABF784590798A9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb00ce33465b5406d(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xB00CE33465B5406D, _p0, _p1);
		}
		/// <summary>
		/// Does the exact same as 0x529B9CCD0972AF4E
		/// Commonly used with time/timestamps
		/// </summary>
		public static void SavegameGetInt2(int _p0, string _variableName)
		{
			Function.Call((Hash)0x529B9CCD0972AF4D, _p0, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SavegameGetInt(int _p0, string _variableName)
		{
			Function.Call((Hash)0x529B9CCD0972AF4E, _p0, _variableName);
		}
		/// <summary>
		/// Does the exact same as 0x529B9CCD0972AF4E
		/// Commonly used with enums and flags
		/// </summary>
		public static void SavegameGetInt3(int _p0, string _variableName)
		{
			Function.Call((Hash)0xB25B5A375BE5BE26, _p0, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SavegameGetFloat(int _p0, string _variableName)
		{
			Function.Call((Hash)0x35DEFECAE36D4FAE, _p0, _variableName);
		}
		/// <summary>
		/// Does the exact same as 0x529B9CCD0972AF4E
		/// </summary>
		public static void SavegameGetBool(int _p0, string _variableName)
		{
			Function.Call((Hash)0xBB7F4273C186BC4B, _p0, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SavegameGetTextLabel23(int _p0, string _variableName)
		{
			Function.Call((Hash)0x5A10D6506B2F2C63, _p0, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SavegameGetTextLabel31(int _p0, string _variableName)
		{
			Function.Call((Hash)0x4845E7E7643A908C, _p0, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SavegameGetTextLabel63(int _p0, string _variableName)
		{
			Function.Call((Hash)0x186608A2AC6F9E88, _p0, _variableName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x443174c20b8b9e7f(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x443174C20B8B9E7F, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8e8ffb9e4ad051d2(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x8E8FFB9E4AD051D2, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe0b45e983bfc0768()
		{
			Function.Call((Hash)0xE0B45E983BFC0768);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x81f4e92be3958364(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x81F4E92BE3958364, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa844feb5c22c2c74()
		{
			Function.Call((Hash)0xA844FEB5C22C2C74);
		}
		// :######################: //
		// : namespace: SHAPETEST : //
		// :######################: //
		/// <summary>
		/// Asynchronously starts a line-of-sight (raycast) world probe shape test.
		/// 
		/// Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
		/// 
		/// p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
		/// </summary>
		public static int StartShapeTestLosProbe(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _flags, int _entity, int _p8)
		{
			return Function.Call<int>((Hash)0x7EE9F5D83DD4F90E, _x1, _y1, _z1, _x2, _y2, _z2, _flags, _entity, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x04aa59ca40571c2e(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x04AA59CA40571C2E, _p0, _p1);
		}
		/// <summary>
		/// Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
		/// </summary>
		public static int StartExpensiveSynchronousShapeTestLosProbe(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _flags, int _entityToIgnore, int _p8)
		{
			return Function.Call<int>((Hash)0x377906D8A31E5586, _x1, _y1, _z1, _x2, _y2, _z2, _flags, _entityToIgnore, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartShapeTestBox(float _x, float _y, float _z, float _x1, float _y2, float _z2, float _rotX, float _rotY, float _rotZ, int _p9, int _p10, int _entity, int _p12)
		{
			return Function.Call<int>((Hash)0xFE466162C4401D18, _x, _y, _z, _x1, _y2, _z2, _rotX, _rotY, _rotZ, _p9, _p10, _entity, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartShapeTestCapsule(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _radius, int _flags, int _entityToIgnore, int _p9)
		{
			return Function.Call<int>((Hash)0x28579D1B8F8AAC80, _x1, _y1, _z1, _x2, _y2, _z2, _radius, _flags, _entityToIgnore, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartShapeTestSweptSphere(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, float _radius, int _flags, int _entity, int _p9)
		{
			return Function.Call<int>((Hash)0xAA5B7C8309F73230, _x1, _y1, _z1, _x2, _y2, _z2, _radius, _flags, _entity, _p9);
		}
		/// <summary>
		/// Old name: _START_SHAPE_TEST_SURROUNDING_COORDS
		/// </summary>
		public static int StartShapeTestMouseCursorLosProbe(Vector3 _pVec1, Vector3 _pVec2, int _flag, int _entity, int _flag2)
		{
			return Function.Call<int>((Hash)0x9839013D8B6014F1, _pVec1, _pVec2, _flag, _entity, _flag2);
		}
		/// <summary>
		/// Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
		/// 
		/// When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
		/// 
		/// enum eShapeTestStatus
		/// {
		/// 	SHAPETEST_STATUS_NONEXISTENT,
		/// 	SHAPETEST_STATUS_RESULTS_NOTREADY,
		/// 	SHAPETEST_STATUS_RESULTS_READY
		/// };
		/// </summary>
		public static int GetShapeTestResult(int _shapeTestHandle, bool _hit, Vector3 _endCoords, Vector3 _surfaceNormal, int _entityHit)
		{
			return Function.Call<int>((Hash)0xEDE8AC7C5108FB1D, _shapeTestHandle, _hit, _endCoords, _surfaceNormal, _entityHit);
		}
		// :#######################: //
		// : namespace: SOCIALCLUB : //
		// :#######################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int ScInboxGetTotalNumMessages()
		{
			return Function.Call<int>((Hash)0x8EF0F633280C0663);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint ScInboxGetMessageTypeAtIndex(int _msgIndex)
		{
			return Function.Call<uint>((Hash)0xFF92537C4DDC1241, _msgIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScInboxGetMessageIsReadAtIndex(int _msgIndex)
		{
			return Function.Call<bool>((Hash)0x74CF39E030A382C4, _msgIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScInboxSetMessageAsReadAtIndex(int _msgIndex)
		{
			return Function.Call<bool>((Hash)0x63CAC501FFF66DC4, _msgIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScInboxMessageGetDataInt(int _p0, string _context, int _out)
		{
			return Function.Call<bool>((Hash)0x95BB39C4DA99F348, _p0, _context, _out);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScInboxMessageGetDataString(int _p0, string _context, string _out)
		{
			return Function.Call<bool>((Hash)0x66F77FD58506FF6B, _p0, _context, _out);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string ScInboxMessageGetRawTypeAtIndex(int _p0)
		{
			return Function.Call<string>((Hash)0x176D077685CD83E4, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScPresenceAttrSetFloat(uint _attrHash, float _value)
		{
			return Function.Call<bool>((Hash)0xA31DAFCDC33775E9, _attrHash, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScPresenceAttrSetIntEx(string _attrName, int _value, bool _p2)
		{
			return Function.Call<bool>((Hash)0x0000000085488C49, _attrName, _value, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScPresenceAttrSetFloatEx(string _attrName, float _value, bool _p2)
		{
			return Function.Call<bool>((Hash)0x00000000467F4CAA, _attrName, _value, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScPresenceAttrSetStringEx(string _attrName, string _value, bool _p2)
		{
			return Function.Call<bool>((Hash)0x00000000EB2D93B3, _attrName, _value, _p2);
		}
		/// <summary>
		/// Starts a task to check an entered string for profanity on the ROS/Social Club services.
		/// </summary>
		public static bool ScProfanityCheckString(string _string, int _token)
		{
			return Function.Call<bool>((Hash)0x9C74AC9D87B3FFF4, _string, _token);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScProfanityGetCheckIsValid(int _token)
		{
			return Function.Call<bool>((Hash)0x08C8052AF40C4247, _token);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScProfanityGetCheckIsPending(int _token)
		{
			return Function.Call<bool>((Hash)0x3A10BCD0C8AA0B82, _token);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScProfanityGetStringPassed(int _token)
		{
			return Function.Call<bool>((Hash)0xF302973BB8BE70E6, _token);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ScProfanityGetStringStatus(int _token)
		{
			return Function.Call<int>((Hash)0x0CF3BFB99EBBE5B1, _token);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventIsActive()
		{
			return Function.Call<bool>((Hash)0xCBF743C984695CF3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ScCommunityEventGetEventId()
		{
			return Function.Call<int>((Hash)0xD635DF6BAA5A6017);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataInt(string _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xB4411D4D6B81438E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataFloat(string _p0, float _p1)
		{
			return Function.Call<bool>((Hash)0x060BBAD634C2B44B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataString(string _p0, string _p1)
		{
			return Function.Call<bool>((Hash)0x9F6DCD0C939C71E9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetDisplayName(string _p0)
		{
			return Function.Call<bool>((Hash)0x89D9BDE7334B110F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventIsActiveForType(string _p0)
		{
			return Function.Call<bool>((Hash)0x09937EB0CEBC2F9F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ScCommunityEventGetEventIdForType(string _p0)
		{
			return Function.Call<int>((Hash)0x03C03ABBABBEF752, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataIntForType(string _p0, int _p1, string _p2)
		{
			return Function.Call<bool>((Hash)0x3519CC3525319A96, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataFloatForType(string _p0, float _p1, string _p2)
		{
			return Function.Call<bool>((Hash)0x1BDB56DB258F052D, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataStringForType(string _p0, string _p1, string _p2)
		{
			return Function.Call<bool>((Hash)0xC8FC3B2432E8229D, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetDisplayNameForType(string _p0, string _p1)
		{
			return Function.Call<bool>((Hash)0x85EA0BEC7B1F7622, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventIsActiveById(int _p0)
		{
			return Function.Call<bool>((Hash)0x62B384FEFDE06817, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataIntById(int _p0, string _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x7C981DE05A7403A0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataFloatById(int _p0, string _p1, float _p2)
		{
			return Function.Call<bool>((Hash)0x91C9E2A0F9DD6DD4, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetExtraDataStringById(int _p0, string _p1, string _p2)
		{
			return Function.Call<bool>((Hash)0x049D2196D9D11184, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScCommunityEventGetDisplayNameById(int _p0, string _p1)
		{
			return Function.Call<bool>((Hash)0x11EA52CAD1B55910, _p0, _p1);
		}
		// :###########################: //
		// : namespace: SOCIALCLUBFEED : //
		// :###########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int ScFeedSubmitPresetMessage(int _type, int _subType)
		{
			return Function.Call<int>((Hash)0xEFB64240F6B17817, _type, _subType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ScFeedHubHasNewData()
		{
			return Function.Call<bool>((Hash)0x068332D20CB6F897);
		}
		// :##########################: //
		// : namespace: SPACTIONPROXY : //
		// :##########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpactionproxyStartManager()
		{
			return Function.Call<bool>((Hash)0x1F471B79ACC91BEE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpactionproxyManagerIsReady()
		{
			return Function.Call<bool>((Hash)0x1F471B79ACC91BED);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpactionproxyManagerIsFailed()
		{
			return Function.Call<bool>((Hash)0x1F471B79ACC91BEC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpactionproxyGetNextPendingCraftingAction(int _data)
		{
			return Function.Call<bool>((Hash)0x1F471B79ACC97BEF, _data);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpactionproxyGetNextPendingBuyAction(int _data)
		{
			return Function.Call<bool>((Hash)0x1F471B79ACC98BEF, _data);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SpactionproxyProcessAction(int _p0, bool _p1)
		{
			return Function.Call<bool>((Hash)0x1F471B79ACC94BEF, _p0, _p1);
		}
		// :##################: //
		// : namespace: STATS : //
		// :##################: //
		/// <summary>
		/// struct StatId
		/// {
		/// 	alignas(8) Hash BaseId;
		/// 	alignas(8) Hash PermutationId;
		/// }
		/// </summary>
		public static bool StatIdIsValid(int _statId)
		{
			return Function.Call<bool>((Hash)0xC48FE1971C9743FF, _statId);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdSetInt(int _statId, int _value, bool _p2)
		{
			return Function.Call<bool>((Hash)0xA4DDF5DF95E65EEE, _statId, _value, _p2);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdSetFloat(int _statId, float _value, bool _p2)
		{
			return Function.Call<bool>((Hash)0x481BDF6A10C5EF68, _statId, _value, _p2);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdSetBool(int _statId, bool _value, bool _p2)
		{
			return Function.Call<bool>((Hash)0x3B5107353267D7A1, _statId, _value, _p2);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdSetGxtLabel(int _statId, string _label, bool _p2)
		{
			return Function.Call<bool>((Hash)0x05060A54834F2382, _statId, _label, _p2);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdSetDate(int _statId, int _date, bool _p2)
		{
			return Function.Call<bool>((Hash)0x1FAE9B2FAA2DFE06, _statId, _date, _p2);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdGetInt(int _statId, int _p1)
		{
			return Function.Call<bool>((Hash)0x767FBC2AC802EF3E, _statId, _p1);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdGetFloat(int _statId, float _value)
		{
			return Function.Call<bool>((Hash)0xD7AE6C9C9C6AC54D, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdGetBool(int _statId, bool _value)
		{
			return Function.Call<bool>((Hash)0x11B5E6D2AE73F48F, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool StatIdGetDate(int _statId, int _date)
		{
			return Function.Call<bool>((Hash)0x8B0FACEFC36C824C, _statId, _date);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static void Hash_0x0fee2561120f3333(int _statId)
		{
			Function.Call((Hash)0x0FEE2561120F3333, _statId);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static void StatIdIncrementInt(int _statId, int _value)
		{
			Function.Call((Hash)0x6A0184E904CDF25E, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static void StatIdIncrementFloat(int _statId, float _value)
		{
			Function.Call((Hash)0x4A47E38EA3D60939, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static void StatIdDecrementInt(int _statId, int _value)
		{
			Function.Call((Hash)0xBD861AE8A5181ED7, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static void Hash_0x91a4f58e01ed5e4c(int _statId, int _value)
		{
			Function.Call((Hash)0x91A4F58E01ED5E4C, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// Only used in R* SP Scripts
		/// _STAT_ID_SET_*
		/// </summary>
		public static void Hash_0xe141f6b40b1e3683(int _statId, float _value)
		{
			Function.Call((Hash)0xE141F6B40B1E3683, _statId, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static void StatIdSetToPosseId(int _statId)
		{
			Function.Call((Hash)0x34B22DE38477EDB4, _statId);
		}
		/// <summary>
		/// Calculation: (value / 1000) / 60 % 60
		/// </summary>
		public static int StatCalculateCooldown(int _value)
		{
			return Function.Call<int>((Hash)0x1E7384AB5D4F4581, _value);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool Hash_0x5420d398a42917fc(int _entity, int _statId)
		{
			return Function.Call<bool>((Hash)0x5420D398A42917FC, _entity, _statId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatItemFishCaught(int _fish, float _weight, uint _category, uint _subcategory)
		{
			Function.Call((Hash)0xDA26263C87CCE9C1, _fish, _weight, _category, _subcategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x831bf01c56149a8a(int _ped)
		{
			Function.Call((Hash)0x831BF01C56149A8A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7c2abf6e556b21fc(int _item, int _slot, int _p2, int _p3)
		{
			Function.Call((Hash)0x7C2ABF6E556B21FC, _item, _slot, _p2, _p3);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0x8312f09c56149a8a(uint _animalType)
		{
			Function.Call((Hash)0x8312F09C56149A8A, _animalType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x378d3b1b11d9385b(int _p0)
		{
			Function.Call((Hash)0x378D3B1B11D9385B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xda26263c07cce9c2(int _p0)
		{
			Function.Call((Hash)0xDA26263C07CCE9C2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd64dbc8b0424135f(int _ped, uint _animalType)
		{
			Function.Call((Hash)0xD64DBC8B0424135F, _ped, _animalType);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static void Hash_0xa59590050f80ff2e(int _p0, bool _p1, bool _p2, bool _p3)
		{
			Function.Call((Hash)0xA59590050F80FF2E, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x90e9a5dadbabc918(uint _animalType)
		{
			Function.Call((Hash)0x90E9A5DADBABC918, _animalType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf8181b5ef156862c(int _ped)
		{
			Function.Call((Hash)0xF8181B5EF156862C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatAddBountyTarget(uint _p0, int _ped)
		{
			Function.Call((Hash)0x6B1044FDC2B09101, _p0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8c889e4cbb4b2356(int _p0, int _ped)
		{
			Function.Call((Hash)0x8C889E4CBB4B2356, _p0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatBountyCaptured(int _entity)
		{
			Function.Call((Hash)0x262EF7CF49CF1EB9, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa596890cf55b5095(int _ped, bool _p1)
		{
			Function.Call((Hash)0xA596890CF55B5095, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatBountyEscaped(int _ped)
		{
			Function.Call((Hash)0xB22F05732F72F70C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf21a5d66874fcedd(int _p0, uint _p1, uint _p2)
		{
			Function.Call((Hash)0xF21A5D66874FCEDD, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3eb2791a1fbc8a42(uint _p0, int _p1)
		{
			Function.Call((Hash)0x3EB2791A1FBC8A42, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdf95df488a645ce7()
		{
			Function.Call((Hash)0xDF95DF488A645CE7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatPhotographTaken(int _itemset)
		{
			Function.Call((Hash)0x4D31051A4CA83787, _itemset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbe66b26b6529e943(uint _p0, int _ped, uint _p2)
		{
			Function.Call((Hash)0xBE66B26B6529E943, _p0, _ped, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf2b5abde09958689(uint _p0, int _ped1, int _ped2)
		{
			Function.Call((Hash)0xF2B5ABDE09958689, _p0, _ped1, _ped2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatRegisterLegendaryAnimalDeed(uint _deedHash)
		{
			Function.Call((Hash)0xCD0D69C65BB0E8B9, _deedHash);
		}
		/// <summary>
		/// statId: see STAT_ID_IS_VALID
		/// </summary>
		public static bool Hash_0x302e71c1d9ee75b9(int _statId, uint _p1, int _p2)
		{
			return Function.Call<bool>((Hash)0x302E71C1D9EE75B9, _statId, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StatstrackerIsInitialized(uint _p0)
		{
			return Function.Call<bool>((Hash)0x01F4D242765C6B24, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6123e2832c34243d(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x6123E2832C34243D, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xca41e86545413b5b(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xCA41E86545413B5B, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StatstrackerDeedStarted(uint _p0, int _p1)
		{
			Function.Call((Hash)0xB2A38826E5886E83, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd5910ecf81a2278c(int _p0, uint _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xD5910ECF81A2278C, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x99230691875fc218(int _p0, uint _p1, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x99230691875FC218, _p0, _p1, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x025e98e317652cdd(int _p0)
		{
			Function.Call((Hash)0x025E98E317652CDD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe5a680a5d8b1f687(int _p0)
		{
			Function.Call((Hash)0xE5A680A5D8B1F687, _p0);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static bool Hash_0x4dac398297981b87(int _p0)
		{
			return Function.Call<bool>((Hash)0x4DAC398297981B87, _p0);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
		/// </summary>
		public static bool ChalIsGoalActive(uint _chalHash, uint _goalHash)
		{
			return Function.Call<bool>((Hash)0x04DAC3929796EB87, _chalHash, _goalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalSetGoalDisabled(uint _chalHash, uint _goalHash, bool _disabled)
		{
			Function.Call((Hash)0xF63DF9EE16393343, _chalHash, _goalHash, _disabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ChalGetNumRanksCompleted(uint _chalHash)
		{
			return Function.Call<int>((Hash)0x58CB53DB63F84DE9, _chalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ChalGetMaxRanks(uint _chalHash)
		{
			return Function.Call<int>((Hash)0x58CB53DB63F84DEA, _chalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalAddGoalProgressInt(uint _chalHash, uint _goalHash, int _value)
		{
			Function.Call((Hash)0xDDBD560745B1EE9A, _chalHash, _goalHash, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalAddGoalProgressFloat(uint _chalHash, uint _goalHash, float _value)
		{
			Function.Call((Hash)0x86922D8C02FB7703, _chalHash, _goalHash, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalSetGoalProgressInt(uint _chalHash, uint _goalHash, int _value)
		{
			Function.Call((Hash)0xDDBD560745B1EE9B, _chalHash, _goalHash, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalAddGoalProgressIntByScoreId(uint _p0, int _value)
		{
			Function.Call((Hash)0xDDBD560745B1EE9C, _p0, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalAddGoalProgressFloatByScoreId(uint _p0, float _value)
		{
			Function.Call((Hash)0x86922D8C02FB7705, _p0, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ChalAchievementIsComplete(uint _p0, uint _p1)
		{
			return Function.Call<bool>((Hash)0x77B97A827739D434, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ChalAchievementGetProgressInt(uint _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x808712E428F697B8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalNetStartChal(uint _chalHash)
		{
			Function.Call((Hash)0x4ABF7E4DB6279E8F, _chalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalNetStopChal(uint _chalHash)
		{
			Function.Call((Hash)0x43B0163154A50C86, _chalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalNetStartGoal(uint _chalHash, uint _goalHash)
		{
			Function.Call((Hash)0xC3FCB47344DCB638, _chalHash, _goalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalNetStopGoal(uint _chalHash, uint _goalHash)
		{
			Function.Call((Hash)0x00CE6A93324A590B, _chalHash, _goalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xddbd560745b1ee98(uint _chalHash, uint _goalHash, int _player)
		{
			return Function.Call<int>((Hash)0xDDBD560745B1EE98, _chalHash, _goalHash, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string Hash_0xb112b9262ec29c20(uint _p0, int _p1)
		{
			return Function.Call<string>((Hash)0xB112B9262EC29C20, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4fcbcc0584cd08e9(uint _p0)
		{
			Function.Call((Hash)0x4FCBCC0584CD08E9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xca1f0b5103936891(uint _p0)
		{
			return Function.Call<bool>((Hash)0xCA1F0B5103936891, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint Hash_0x8ba3d7b1e83ef803(uint _p0)
		{
			return Function.Call<uint>((Hash)0x8BA3D7B1E83EF803, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ChalMissionGetNumGoals(uint _missionHash)
		{
			return Function.Call<int>((Hash)0x0B0576DD3A75E58D, _missionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int ChalMissionGetNumGoalsComplete(uint _missionHash)
		{
			return Function.Call<int>((Hash)0xA785A52B59B7E7B2, _missionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ChalMissionIsGoalComplete(uint _missionHash, uint _goalHash)
		{
			return Function.Call<bool>((Hash)0xC0BB774787BBF301, _missionHash, _goalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ChalMissionAddGoalProgressInt(uint _missionHash, uint _goalHash, int _value)
		{
			Function.Call((Hash)0x97E18E7C098626DE, _missionHash, _goalHash, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0x9d0f5d2e1951cd84()
		{
			return Function.Call<float>((Hash)0x9D0F5D2E1951CD84);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x218f7710a139d012()
		{
			Function.Call((Hash)0x218F7710A139D012);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x3aeabae3f3c7600c()
		{
			return Function.Call<bool>((Hash)0x3AEABAE3F3C7600C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string Hash_0x3f6fd87d2030adc6()
		{
			return Function.Call<string>((Hash)0x3F6FD87D2030ADC6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa2e2bea4e83f6270(uint _p0)
		{
			return Function.Call<int>((Hash)0xA2E2BEA4E83F6270, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb5e2eda2135e0fa1(uint _p0, int _p1, uint _scheduleLocation)
		{
			return Function.Call<bool>((Hash)0xB5E2EDA2135E0FA1, _p0, _p1, _scheduleLocation);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int WeeklyCollectibleGetNumSets(uint _chalHash)
		{
			return Function.Call<int>((Hash)0x8F5317729F791D10, _chalHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint WeeklyCollectibleGetItemSetBuyAward(uint _chalHash, int _index)
		{
			return Function.Call<uint>((Hash)0x610783F646894D25, _chalHash, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint WeeklyCollectibleGetItemSetLabel(uint _chalHash, int _index)
		{
			return Function.Call<uint>((Hash)0xBFFA88522FF0F730, _chalHash, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int WeeklyCollectibleGetNumItemsInSet(uint _chalHash, int _index)
		{
			return Function.Call<int>((Hash)0x7D675C9DDDB365BE, _chalHash, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WeeklyCollectibleGetItemInSet(uint _chalHash, int _setIndex, int _itemIndex, uint _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0xBA61BA6205A3F5A8, _chalHash, _setIndex, _itemIndex, _p3, _p4);
		}
		/// <summary>
		/// Only used in R* Script net_char_creator
		/// </summary>
		public static void Hash_0x4f2d5fa23db992de()
		{
			Function.Call((Hash)0x4F2D5FA23DB992DE);
		}
		/// <summary>
		/// Only used in R* Script net_char_creator
		/// </summary>
		public static void Hash_0x4e463a3cdefffe96()
		{
			Function.Call((Hash)0x4E463A3CDEFFFE96);
		}
		// :######################: //
		// : namespace: STREAMING : //
		// :######################: //
		/// <summary>
		/// Request a model to be loaded into memory.
		/// </summary>
		public static void RequestModel(uint _model, bool _p1)
		{
			Function.Call((Hash)0xFA28FE3A6246FC30, _model, _p1);
		}
		/// <summary>
		/// Checks if the specified model has loaded into memory.
		/// </summary>
		public static bool HasModelLoaded(uint _model)
		{
			return Function.Call<bool>((Hash)0x1283B8B89DD5D1B6, _model);
		}
		/// <summary>
		/// Marks the model as no longer needed.
		/// </summary>
		public static void SetModelAsNoLongerNeeded(uint _model)
		{
			Function.Call((Hash)0x4AD96EF928BD4F9A, _model);
		}
		/// <summary>
		/// Returns whether the specified model exists in the game.
		/// </summary>
		public static bool IsModelInCdimage(uint _model)
		{
			return Function.Call<bool>((Hash)0xD6F3B6D7716CFF8E, _model);
		}
		/// <summary>
		/// Returns whether the specified model is valid
		/// </summary>
		public static bool IsModelValid(uint _model)
		{
			return Function.Call<bool>((Hash)0x392C8D8E07B70EFC, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsModelAPed(uint _model)
		{
			return Function.Call<bool>((Hash)0xC3F09DE9D6D17DDA, _model);
		}
		/// <summary>
		/// Returns whether the specified model represents a vehicle.
		/// </summary>
		public static bool IsModelAVehicle(uint _model)
		{
			return Function.Call<bool>((Hash)0x354F62672DE7DB0A, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsModelAnObject(uint _model)
		{
			return Function.Call<bool>((Hash)0x274EE1B90CFA669E, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasCollisionLoadedAtCoord(float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xDA8B2EAF29E872E2, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x80b3e0597366adf1()
		{
			Function.Call((Hash)0x80B3E0597366ADF1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestCollisionAtCoord(float _x, float _y, float _z)
		{
			Function.Call((Hash)0x0A3720F162A033C9, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestMetadataAtCoord(float _x, float _y, float _z)
		{
			Function.Call((Hash)0xA8432A14D4DC2101, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestCollisionForModel(uint _model)
		{
			Function.Call((Hash)0xF1767BE37F661551, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasCollisionForModelLoaded(uint _model)
		{
			return Function.Call<bool>((Hash)0x210A79C9EC89778F, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestAdditionalCollisionAtCoord(float _x, float _y, float _z)
		{
			Function.Call((Hash)0x83A8D71650D1894F, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesAnimDictExist(string _animDict)
		{
			return Function.Call<bool>((Hash)0x537F44CB0D7F150D, _animDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestAnimDict(string _animDict)
		{
			Function.Call((Hash)0xA862A2AD321F94B4, _animDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasAnimDictLoaded(string _animDict)
		{
			return Function.Call<bool>((Hash)0x27FF6FE8009B40CA, _animDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAnimDict(string _animDict)
		{
			Function.Call((Hash)0x4763145053A33D46, _animDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestMoveNetworkDef(string _name)
		{
			Function.Call((Hash)0x2B6529C54D29037A, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasMoveNetworkDefLoaded(string _name)
		{
			return Function.Call<bool>((Hash)0x2C04D89A0FB4E244, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveMoveNetworkDef(string _name)
		{
			Function.Call((Hash)0x57A197AD83F66BBF, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestClipSet(string _clipSet)
		{
			Function.Call((Hash)0xEF7611B57A820126, _clipSet);
		}
		/// <summary>
		/// Alias for HAS_ANIM_SET_LOADED.
		/// </summary>
		public static bool HasClipSetLoaded(string _clipSet)
		{
			return Function.Call<bool>((Hash)0x1F23D6B6DA1CC3B2, _clipSet);
		}
		/// <summary>
		/// Alias for REMOVE_ANIM_SET.
		/// </summary>
		public static void RemoveClipSet(string _clipSet)
		{
			Function.Call((Hash)0x817FA1B1EE7CD6F0, _clipSet);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestClipSetByHash(uint _clipSetHash)
		{
			Function.Call((Hash)0xAC37644A538F7524, _clipSetHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x03ddbf2d73799f9e(int _p0)
		{
			Function.Call((Hash)0x03DDBF2D73799F9E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x85b8f04555ab49b8(int _p0)
		{
			return Function.Call<int>((Hash)0x85B8F04555AB49B8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9f348de670423460(int _p0)
		{
			Function.Call((Hash)0x9F348DE670423460, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5288b7f0690f7c1f(int _p0)
		{
			return Function.Call<int>((Hash)0x5288B7F0690F7C1F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RequestScenarioType(uint _scenarioType, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x19A6BE7D9C6884D3, _scenarioType, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasScenarioTypeLoaded(uint _scenarioType, bool _p1)
		{
			return Function.Call<bool>((Hash)0x9427C94D2E4094A4, _scenarioType, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RemoveScenarioAsset(uint _scenarioType)
		{
			return Function.Call<int>((Hash)0x4EDDD9E9CA5AF985, _scenarioType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb223249b7798eeed(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xB223249B7798EEED, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa0ae7653e8181725(int _p0)
		{
			return Function.Call<int>((Hash)0xA0AE7653E8181725, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x66bc28e50e85270e(int _p0)
		{
			return Function.Call<int>((Hash)0x66BC28E50E85270E, _p0);
		}
		/// <summary>
		/// Outputs IPL position and radius (previously wrongly named heading)
		/// https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
		/// </summary>
		public static bool GetIplBoundingSphere(uint _iplHash, Vector3 _position, float _radius)
		{
			return Function.Call<bool>((Hash)0x9C77964B0E07B633, _iplHash, _position, _radius);
		}
		/// <summary>
		/// Old name: _REQUEST_IMAP
		/// </summary>
		public static void RequestIplHash(uint _iplHash)
		{
			Function.Call((Hash)0x59767C5A7A9AE6DA, _iplHash);
		}
		/// <summary>
		/// Old name: _REQUEST_IMAP_2
		/// </summary>
		public static void RequestIplByHash(uint _iplHash)
		{
			Function.Call((Hash)0x9E211A378F95C97C, _iplHash);
		}
		/// <summary>
		/// Old name: _REMOVE_IMAP
		/// </summary>
		public static void RemoveIplHash(uint _iplHash)
		{
			Function.Call((Hash)0x5A3E5CF7B4014B96, _iplHash);
		}
		/// <summary>
		/// Old name: _REMOVE_IMAP_2
		/// </summary>
		public static void RemoveIplByHash(uint _iplHash)
		{
			Function.Call((Hash)0x431E3AB760629B34, _iplHash);
		}
		/// <summary>
		/// Old name: _IS_IMAP_ACTIVE
		/// </summary>
		public static bool IsIplActiveHash(uint _iplHash)
		{
			return Function.Call<bool>((Hash)0xD779B9B910BD3B7C, _iplHash);
		}
		/// <summary>
		/// Old name: _IS_IMAP_ACTIVE_2
		/// </summary>
		public static bool IsIplActiveByHash(uint _iplHash)
		{
			return Function.Call<bool>((Hash)0x93AC1B91CB6D9913, _iplHash);
		}
		/// <summary>
		/// Returns true if IPL is streamed in (?)
		/// </summary>
		public static bool IsPositionInsideIplStreamingExtents(uint _iplHash, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0x73B40D97D7BAAD77, _iplHash, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdeee1f265b7ecef5()
		{
			Function.Call((Hash)0xDEEE1F265B7ECEF5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGamePausesForStreaming(bool _toggle)
		{
			Function.Call((Hash)0xB3BC8250F4FE8B63, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumberOfStreamingRequests()
		{
			return Function.Call<int>((Hash)0x30CCCC4D88E654CA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestPtfxAsset()
		{
			Function.Call((Hash)0x001FF43843028E0C);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPtfxAssetLoaded()
		{
			return Function.Call<bool>((Hash)0x13A3F30A9ED0BC31);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemovePtfxAsset()
		{
			Function.Call((Hash)0x042F9049EA419E86);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestNamedPtfxAsset(uint _fxNameHash)
		{
			Function.Call((Hash)0xF2B2353BBC0D4E8F, _fxNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasNamedPtfxAssetLoaded(uint _fxNameHash)
		{
			return Function.Call<bool>((Hash)0x65BB72F29138F5D6, _fxNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveNamedPtfxAsset(uint _fxNameHash)
		{
			Function.Call((Hash)0xF20866829E1C81A2, _fxNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPopulationBudgetMultiplier(float _fBudgetMultiplier)
		{
			Function.Call((Hash)0x2F9AC754FE179D58, _fBudgetMultiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPopulationBudgetMultiplier()
		{
			return Function.Call<float>((Hash)0x8A3945405B31048F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x071769bcb24379e5()
		{
			return Function.Call<int>((Hash)0x071769BCB24379E5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearFocus()
		{
			Function.Call((Hash)0x86CCAF7CE493EFBE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetFocusPosAndVel(float _x, float _y, float _z, float _offsetX, float _offsetY, float _offsetZ)
		{
			Function.Call((Hash)0x25F6EF88664540E2, _x, _y, _z, _offsetX, _offsetY, _offsetZ);
		}
		/// <summary>
		/// It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
		/// </summary>
		public static void SetFocusEntity(int _entity)
		{
			Function.Call((Hash)0x955AEDD58F4BD309, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntityFocus(int _entity)
		{
			return Function.Call<bool>((Hash)0xF87DE697E9A06EC6, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMapdatacullboxEnabled(string _name, bool _toggle)
		{
			Function.Call((Hash)0x3CACC83F6FED837C, _name, _toggle);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetAllMapdataCulled(int _p0)
		{
			Function.Call((Hash)0x19ABCC581D28E6F9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf01d21df39554115(int _p0)
		{
			Function.Call((Hash)0xF01D21DF39554115, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LoadSceneStart(float _posX, float _posY, float _posZ, float _offsetX, float _offsetY, float _offsetZ, float _radius, int _p7)
		{
			return Function.Call<bool>((Hash)0x387AD749E3B69B70, _posX, _posY, _posZ, _offsetX, _offsetY, _offsetZ, _radius, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool LoadSceneStartSphere(float _x, float _y, float _z, float _radius, int _p4)
		{
			return Function.Call<bool>((Hash)0x513F8AA5BF2F17CF, _x, _y, _z, _radius, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void LoadSceneStop()
		{
			Function.Call((Hash)0x5A8B01199C3E79C3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsLoadSceneActive()
		{
			return Function.Call<bool>((Hash)0xCF45DF50C7775F2A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsLoadSceneLoaded()
		{
			return Function.Call<bool>((Hash)0x0909F71B5C070797);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsRenderedSceneLoaded()
		{
			return Function.Call<bool>((Hash)0x45BF3A6239A576B7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerSwitchInProgress()
		{
			return Function.Call<bool>((Hash)0xED20CB1F5297791D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSceneStreamingTracksCamPosThisFrame()
		{
			Function.Call((Hash)0xA03A6812529AD9C8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void IplGroupSwapStart(string _iplName1, string _iplName2)
		{
			Function.Call((Hash)0x20D504994FDC4412, _iplName1, _iplName2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void IplGroupSwapCancel()
		{
			Function.Call((Hash)0x31108BB5715D035F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IplGroupSwapIsReady()
		{
			return Function.Call<bool>((Hash)0xC2C05DEFE85A0B64);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void IplGroupSwapFinish()
		{
			Function.Call((Hash)0x040EE319EFD1D3B5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IplGroupSwapIsActive()
		{
			return Function.Call<bool>((Hash)0xFC464598F6EE97B0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PrefetchSrl(string _srl)
		{
			Function.Call((Hash)0x354837E5A5BAA5AF, _srl);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xae00387e53b1e9fc()
		{
			Function.Call((Hash)0xAE00387E53B1E9FC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xef1a8a484118735e()
		{
			Function.Call((Hash)0xEF1A8A484118735E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd9f2ff4af394d926()
		{
			Function.Call((Hash)0xD9F2FF4AF394D926);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsSrlLoaded()
		{
			return Function.Call<bool>((Hash)0x5C2C88512CF6DAFB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BeginSrl()
		{
			Function.Call((Hash)0x0360710033BE60D9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndSrl()
		{
			Function.Call((Hash)0x1CE71FB33CA079FE);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSrlTime(float _p0)
		{
			Function.Call((Hash)0x18231AEF458BCFF2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSrlReadaheadTimes(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xD346248C1DCE0D76, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSrlLongJumpMode(bool _p0)
		{
			Function.Call((Hash)0x7C907E8A725E5FD2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetHdArea(float _x, float _y, float _z, float _radius)
		{
			Function.Call((Hash)0xB88B905AFA35CB4D, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearHdArea()
		{
			Function.Call((Hash)0xD83B22434E52728D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x09fbf15d73efc900()
		{
			Function.Call((Hash)0x09FBF15D73EFC900);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf11d7cb962fcd747(int _p0)
		{
			Function.Call((Hash)0xF11D7CB962FCD747, _p0);
		}
		/// <summary>
		/// Sorts some unknown data.
		/// 
		/// Likely SORT_*
		/// </summary>
		public static void Hash_0xb9b9e47edb9d63db()
		{
			Function.Call((Hash)0xB9B9E47EDB9D63DB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbe8daa9d8d01da6a(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xBE8DAA9D8D01DA6A, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x53764309c4618087(int _p0)
		{
			return Function.Call<int>((Hash)0x53764309C4618087, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x032a14d082a9b269(uint _p0)
		{
			Function.Call((Hash)0x032A14D082A9B269, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xafa87a7d41ee346a(int _p0)
		{
			Function.Call((Hash)0xAFA87A7D41EE346A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6a6e79fbe8678c98()
		{
			Function.Call((Hash)0x6A6E79FBE8678C98);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcc61d8d6c19d9f14(int _p0)
		{
			Function.Call((Hash)0xCC61D8D6C19D9F14, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xda7fdeff4de86839()
		{
			return Function.Call<int>((Hash)0xDA7FDEFF4DE86839);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5d5e2102b174b8d2()
		{
			return Function.Call<int>((Hash)0x5D5E2102B174B8D2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7b8c2b846c05e5ad()
		{
			return Function.Call<int>((Hash)0x7B8C2B846C05E5AD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x62d5f0588915b277()
		{
			Function.Call((Hash)0x62D5F0588915B277);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2f4d53023f826ff0()
		{
			return Function.Call<int>((Hash)0x2F4D53023F826FF0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdabfe48ba0d457aa()
		{
			return Function.Call<int>((Hash)0xDABFE48BA0D457AA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe5b76e5b56cd77dd()
		{
			return Function.Call<int>((Hash)0xE5B76E5B56CD77DD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x27af48c62b281341()
		{
			return Function.Call<int>((Hash)0x27AF48C62B281341);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x99f92061efe908ba()
		{
			return Function.Call<int>((Hash)0x99F92061EFE908BA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x05dd384f39de1c8c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x05DD384F39DE1C8C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x198b85cc3c7a4593(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x198B85CC3C7A4593, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2a6d1daab9ebb262(int _p0)
		{
			return Function.Call<int>((Hash)0x2A6D1DAAB9EBB262, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x07559b29950301ff(int _p0, int _p1)
		{
			Function.Call((Hash)0x07559B29950301FF, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd6e39dc5d46df4ab(int _p0)
		{
			return Function.Call<int>((Hash)0xD6E39DC5D46DF4AB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x8d56bda343d9519f(int _p0)
		{
			return Function.Call<int>((Hash)0x8D56BDA343D9519F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd840c130d7aacfa5(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD840C130D7AACFA5, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2e24c27b112b5b12(int _p0)
		{
			Function.Call((Hash)0x2E24C27B112B5B12, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGuarmaWorldhorizonActive(bool _toggle)
		{
			Function.Call((Hash)0x74E2261D2A66849A, _toggle);
		}
		// :#################: //
		// : namespace: TASK : //
		// :#################: //
		/// <summary>
		/// This tasks the ped to do nothing for the specified amount of milliseconds.
		/// This is useful if you want to add a delay between tasks when using a sequence task.
		/// </summary>
		public static void TaskPause(int _ped, int _ms)
		{
			Function.Call((Hash)0xE73A266DB0CA9042, _ped, _ms);
		}
		/// <summary>
		/// Makes the specified ped stand still for (time) milliseconds.
		/// </summary>
		public static void TaskStandStill(int _ped, int _time)
		{
			Function.Call((Hash)0x919BE13EED931959, _ped, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskJump(int _ped, bool _unused)
		{
			Function.Call((Hash)0x0AE4086104E067B1, _ped, _unused);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskJump2(int _ped, float _x, float _y, float _z, int _entity)
		{
			Function.Call((Hash)0x91083103137D7254, _ped, _x, _y, _z, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCower(int _ped, int _duration, int _pedToCowerFrom, string _p3)
		{
			Function.Call((Hash)0x3EB1FE9E8E908E15, _ped, _duration, _pedToCowerFrom, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskHandsUp(int _ped, int _duration, int _facingPed, int _p3, bool _p4)
		{
			Function.Call((Hash)0xF2EAB31979A7F910, _ped, _duration, _facingPed, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskKnockedOut(int _ped, float _p1, bool _permanently)
		{
			Function.Call((Hash)0xF90427F00A495A28, _ped, _p1, _permanently);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskKnockedOutAndHogtied(int _ped, float _p1, int _p2)
		{
			Function.Call((Hash)0x42AC6401ABB8C7E5, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xffb520a3e16f7b7b(int _ped, float _p1)
		{
			Function.Call((Hash)0xFFB520A3E16F7B7B, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8b1fdf63c3193eda(int _ped, float _p1)
		{
			Function.Call((Hash)0x8B1FDF63C3193EDA, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UpdateTaskHandsUpDuration(int _ped, int _duration)
		{
			Function.Call((Hash)0xA98FCAFD7893C834, _ped, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x28ef780bdea8a639(int _ped, int _p1)
		{
			Function.Call((Hash)0x28EF780BDEA8A639, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskDuck(int _ped, int _p1)
		{
			Function.Call((Hash)0xA14B5FBF986BAC23, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskBoardVehicle(int _ped, int _vehicle, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xE53D17AD837CBF7C, _ped, _vehicle, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskDisembarkVehicle(int _p0, int _vehicle, int _p2, int _p3, float _p4, int _p5)
		{
			Function.Call((Hash)0xA7C6854BB5A4192A, _p0, _vehicle, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskBoardVehicle2(int _ped, int _p1, int _p2, float _p3, int _flags)
		{
			Function.Call((Hash)0xE41A09C8DDFF7AA4, _ped, _p1, _p2, _p3, _flags);
		}
		/// <summary>
		/// flags: See TASK_ENTER_VEHICLE
		/// </summary>
		public static void TaskDisembarkNearestTrainCarriage(int _ped, float _p1, int _flags)
		{
			Function.Call((Hash)0x0A11F3BDEC03ED5F, _ped, _p1, _flags);
		}
		/// <summary>
		/// flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/ECF%20Flags/README.md
		/// </summary>
		public static void TaskEnterVehicle(int _ped, int _vehicle, int _timeout, int _seat, float _speed, int _flag, int _p6)
		{
			Function.Call((Hash)0xC20E50AA46D09CA8, _ped, _vehicle, _timeout, _seat, _speed, _flag, _p6);
		}
		/// <summary>
		/// flags: See TASK_ENTER_VEHICLE
		/// </summary>
		public static void TaskLeaveVehicle(int _ped, int _vehicle, int _flags, int _unkPed)
		{
			Function.Call((Hash)0xD3DBCE61A490BE02, _ped, _vehicle, _flags, _unkPed);
		}
		/// <summary>
		/// timer: in ms, if it reaches 0 it will auto warp the ped on the horse
		/// mountStyle: See TASK_ENTER_VEHICLE
		/// Flags will still apply to mountStyle
		/// </summary>
		public static void TaskMountAnimal(int _ped, int _mount, int _timer, int _seatIndex, float _pedSpeed, int _mountStyle, int _p6, int _p7)
		{
			Function.Call((Hash)0x92DB0739813C5186, _ped, _mount, _timer, _seatIndex, _pedSpeed, _mountStyle, _p6, _p7);
		}
		/// <summary>
		/// Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
		/// flags: See TASK_ENTER_VEHICLE
		/// </summary>
		public static void TaskDismountAnimal(int _rider, int _taskFlag, int _p2, int _p3, int _p4, int _targetPed)
		{
			Function.Call((Hash)0x48E92D3DDE23C23A, _rider, _taskFlag, _p2, _p3, _p4, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskHitchAnimal(int _ped, int _scenarioPoint, int _flag)
		{
			Function.Call((Hash)0x9030AD4B6207BFE8, _ped, _scenarioPoint, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe05a5d39be6e93af(int _p0)
		{
			Function.Call((Hash)0xE05A5D39BE6E93AF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleDriveToCoord(int _ped, int _vehicle, float _x, float _y, float _z, float _speed, int _p6, uint _vehicleModel, int _drivingMode, float _stopRange, float _p10)
		{
			Function.Call((Hash)0xE2A2AA2F659D77A7, _ped, _vehicle, _x, _y, _z, _speed, _p6, _vehicleModel, _drivingMode, _stopRange, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleDriveToCoord2(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xF0108F01FB105DA2, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleDriveWander(int _ped, int _vehicle, float _speed, int _drivingStyle)
		{
			Function.Call((Hash)0x480142959D337D00, _ped, _vehicle, _speed, _drivingStyle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowToOffsetOfEntity(int _ped, int _entity, float _offsetX, float _offsetY, float _offsetZ, float _movementSpeed, int _timeout, float _stoppingRange, bool _persistFollowing, bool _p9, bool _walkOnly, bool _p11, bool _p12, bool _p13)
		{
			Function.Call((Hash)0x304AE42E357B8C7E, _ped, _entity, _offsetX, _offsetY, _offsetZ, _movementSpeed, _timeout, _stoppingRange, _persistFollowing, _p9, _walkOnly, _p11, _p12, _p13);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowToOffsetOfCoord(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14)
		{
			Function.Call((Hash)0x2E3676282C18A692, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3ffcd7bba074cc80(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0x3FFCD7BBA074CC80, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoStraightToCoord(int _ped, float _x, float _y, float _z, float _moveBlendSpeedY, int _p5, float _p6, float _p7, int _p8)
		{
			Function.Call((Hash)0xD76B57B44F1E6F8B, _ped, _x, _y, _z, _moveBlendSpeedY, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoStraightToCoordRelativeToEntity(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x61E360B7E040D12E, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveInTraffic(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x8AA1593AEC087A29, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveInTrafficToDestination(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0xDCA3A13F7A45338B, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveInTrafficAwayFromEntity(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x13DED0BC45600FE1, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbaab791aa72c2821(int _p0, int _p1)
		{
			Function.Call((Hash)0xBAAB791AA72C2821, _p0, _p1);
		}
		/// <summary>
		/// Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
		/// </summary>
		public static void TaskMoveFollowRoadUsingNavmesh(int _ped, float _moveBlendRatio, float _x, float _y, float _z, int _p5)
		{
			Function.Call((Hash)0x79482C12482A860D, _ped, _moveBlendRatio, _x, _y, _z, _p5);
		}
		/// <summary>
		/// Makes the specified ped achieve the specified heading.
		/// 
		/// pedHandle: The handle of the ped to assign the task to.
		/// heading: The desired heading.
		/// timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
		/// </summary>
		public static void TaskAchieveHeading(int _ped, float _heading, int _timeout)
		{
			Function.Call((Hash)0x93B93A37987F1F3D, _ped, _heading, _timeout);
		}
		/// <summary>
		/// Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
		/// </summary>
		public static void TaskFlushRoute()
		{
			Function.Call((Hash)0x841142A1376E9006);
		}
		/// <summary>
		/// Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
		/// 
		/// A maximum of 8 points can be added.
		/// </summary>
		public static void TaskExtendRoute(float _x, float _y, float _z)
		{
			Function.Call((Hash)0x1E7889778264843A, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowPointRoute(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x0E14C5550DC3CD1D, _ped, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// flags:
		/// MOVE_WHILST_WAITING_FOR_PATH = (1 << 0),
		/// DO_NOT_STAND_STILL_AT_END_OF_PATH = (1 << 1),
		/// SKIP_NAVIGATION = (1 << 2),
		/// TEASF_AUTO_START_ANIM_SCENE = (1 << 3),
		/// FORCE_STAND_STILL_AT_END_OF_PATH = (1 << 6),
		/// ENTER_ANIM_SCENE_DONT_FOLLOW_NAVMESH = (1 << 7)
		/// </summary>
		public static void TaskEnterAnimScene(int _ped, int _animScene, string _entityName, string _playbackListName, float _enterSpeed, bool _bAutoStart, int _flag, int _p7, float _p8)
		{
			Function.Call((Hash)0xC2329B0206426644, _ped, _animScene, _entityName, _playbackListName, _enterSpeed, _bAutoStart, _flag, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveBeInFormation(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x4AA5AA97C65E4A2F, _ped, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToEntity(int _ped, int _target, int _duration, float _distance, float _speed, float _p5, int _p6)
		{
			Function.Call((Hash)0x6A071245EB0D1882, _ped, _target, _duration, _distance, _speed, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowAndConverseWithPed(int _ped, int _targetPed, int _p2, int _p3, float _p4, float _p5, int _p6, int _p7, int _p8, float _p9, float _p10)
		{
			Function.Call((Hash)0x489FFCCCE7392B55, _ped, _targetPed, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa052608a12559bbb(int _p0, int _p1)
		{
			Function.Call((Hash)0xA052608A12559BBB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWanderAndConverseWithPed(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x8AC76D1408731732, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLeadAndConverse(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xAA19711D33C6708C, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xde0c8b145ea466ff(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xDE0C8B145EA466FF, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSeekClearLosToEntity(int _ped, int _entity, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0x8D7F2A63688C20A4, _ped, _entity, _p2, _p3, _p4);
		}
		/// <summary>
		/// enum eWhistleType
		/// {
		/// 	WHISTLE_MAIN,
		/// 	WHISTLE_SECONDARY,
		/// 	WHISTLE_DOUBLE,
		/// 	WHISTLE_URGENT,
		/// 	WHISTLE_LONG
		/// };
		/// </summary>
		public static void TaskGoToWhistle(int _ped, int _p1, int _whistleType)
		{
			Function.Call((Hash)0xBAD6545608CECA6E, _ped, _p1, _whistleType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xeb67d4e056c85a81(int _p0)
		{
			return Function.Call<int>((Hash)0xEB67D4E056C85A81, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x78d8c1d4eb80c588(int _p0)
		{
			return Function.Call<int>((Hash)0x78D8C1D4EB80C588, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLeadHorse(int _ped, int _horse)
		{
			Function.Call((Hash)0x9A7A4A54596FE09D, _ped, _horse);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskStopLeadingHorse(int _ped)
		{
			Function.Call((Hash)0xED27560703F37258, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFleeFromCoord(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11)
		{
			Function.Call((Hash)0x6879FF208ED87F2A, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFleeFromPed(int _ped, int _fleeFromTarget, float _x, float _y, float _z, float _distance, int _p6, int _p7, float _p8, int _targetPed)
		{
			Function.Call((Hash)0x7B74D8EEDE9B5727, _ped, _fleeFromTarget, _x, _y, _z, _distance, _p6, _p7, _p8, _targetPed);
		}
		/// <summary>
		/// Makes the specified ped flee the specified distance from the specified position.
		/// </summary>
		public static void TaskSmartFleeCoord(int _ped, float _x, float _y, float _z, float _distance, int _time, int _fleeType, float _fleeSpeed)
		{
			Function.Call((Hash)0x94587F17E9C365D5, _ped, _x, _y, _z, _distance, _time, _fleeType, _fleeSpeed);
		}
		/// <summary>
		/// Makes a ped run away from another ped (fleeFromTarget)
		/// 
		/// fleeDistance = ped will flee this distance
		/// fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
		/// fleeType = can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
		/// fleeSpeed = mostly 3f, rarely 1f in R* Scripts
		/// </summary>
		public static void TaskSmartFleePed(int _ped, int _fleeFromTarget, float _fleeDistance, int _fleeTime, int _fleeType, float _fleeSpeed, int _targetPed)
		{
			Function.Call((Hash)0x22B0D0E37CCB840D, _ped, _fleeFromTarget, _fleeDistance, _fleeTime, _fleeType, _fleeSpeed, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x673a8779d229ba5a(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x673A8779D229BA5A, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2e1d6d87346bb7d2(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x2E1D6D87346BB7D2, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
		/// fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/eFleeStyle/README.md
		/// </summary>
		public static void TaskFleeCoord(int _ped, float _x, float _y, float _z, int _fleeStyle, int _p5, float _p6, int _duration, int _p8)
		{
			Function.Call((Hash)0x58428248BF4B64E4, _ped, _x, _y, _z, _fleeStyle, _p5, _p6, _duration, _p8);
		}
		/// <summary>
		/// Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
		/// fleeStyle: see TASK_FLEE_COORD
		/// </summary>
		public static void TaskFleePed(int _ped, int _fleeFromTarget, int _fleeStyle, int _flag, float _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xFD45175A6DFD7CE9, _ped, _fleeFromTarget, _fleeStyle, _flag, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFleeCoordVia(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11)
		{
			Function.Call((Hash)0x390E0B697D25EAF5, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFleePedVia(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x5802E0F910E4CF1D, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddFleeTargetCoords(int _ped, float _x, float _y, float _z, float _p4)
		{
			Function.Call((Hash)0xE8F1A5B4CED3725A, _ped, _x, _y, _z, _p4);
		}
		/// <summary>
		/// Params: p2 is always -1.f in R* Scripts
		/// </summary>
		public static void AddFleeTargetPed(int _ped, int _targetPed, float _p2)
		{
			Function.Call((Hash)0x3923EC958249657D, _ped, _targetPed, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa42dc7919159cccf(int _p0)
		{
			Function.Call((Hash)0xA42DC7919159CCCF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFlyAway(int _ped, int _fleeFromTarget)
		{
			Function.Call((Hash)0xE86A537B5A3C297C, _ped, _fleeFromTarget);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFlyToCoord(int _ped, float _travelMbr, float _x, float _y, float _z, bool _p5, bool _p6)
		{
			Function.Call((Hash)0xD6CFC2D59DA72042, _ped, _travelMbr, _x, _y, _z, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFlyingCircle(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x72997893BFB8ECCC, _ped, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWalkAway(int _ped, int _entity)
		{
			Function.Call((Hash)0x04ACFAC71E6858F9, _ped, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskShockingEventReact(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x452419CBD838065B, _ped, _p1, _p2);
		}
		/// <summary>
		/// Makes a ped react to an entity.
		/// Params: reactingTo Entity can be 0, p8 is always 4
		/// </summary>
		public static void TaskReact(int _ped, int _reactingTo, float _x, float _y, float _z, string _reactionName, float _p6, float _p7, int _p8)
		{
			Function.Call((Hash)0xC4C32C31920E1B70, _ped, _reactingTo, _x, _y, _z, _reactionName, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWanderInArea(int _ped, float _x, float _y, float _z, float _radius, float _p5, float _p6, int _p7)
		{
			Function.Call((Hash)0xE054346CA3A0F315, _ped, _x, _y, _z, _radius, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWanderInVolume(int _ped, int _volume, float _p2, float _p3, int _p4)
		{
			Function.Call((Hash)0x9FDA168777B28424, _ped, _volume, _p2, _p3, _p4);
		}
		/// <summary>
		/// Makes ped walk around the area.
		/// 
		/// set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
		/// </summary>
		public static void TaskWanderStandard(int _ped, float _p1, int _p2)
		{
			Function.Call((Hash)0xBB9CE077274F6A1B, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWanderSwim(int _ped, int _p1)
		{
			Function.Call((Hash)0x527EA3DB8BC7F03B, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPlantBomb(int _ped, float _x, float _y, float _z, float _heading)
		{
			Function.Call((Hash)0x965FEC691D55E9BF, _ped, _x, _y, _z, _heading);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
		/// Params: p2, p3 are set to 0 in R* Scripts
		/// </summary>
		public static void TaskHorseAction(int _ped, int _action, int _targetPed, int _p3)
		{
			Function.Call((Hash)0xA09CFD29100F06C3, _ped, _action, _targetPed, _p3);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
		/// </summary>
		public static void TaskAnimalInteraction(int _ped, int _targetPed, uint _interactionType, uint _interactionModel, bool _skipIdleAnimationClip)
		{
			Function.Call((Hash)0xCD181A959CFDD7F4, _ped, _targetPed, _interactionType, _interactionModel, _skipIdleAnimationClip);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatAnimalWarn(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0xF960F3D57B660E96, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatAnimalChargePed(int _ped, int _targetPed, bool _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xEE3AA414CF99F368, _ped, _targetPed, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x76610d12a838ebde(int _p0)
		{
			return Function.Call<int>((Hash)0x76610D12A838EBDE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAmbientAnimalStalk(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x37C13863ABA1B4A3, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAmbientAnimalHunt(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x4B39D8F9D0FE7749, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAnimalUnalerted(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x21FDF9A25CFE1CE5, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAnimalAlerted(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x979D93372FC8C565, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAnimalFlee(int _ped, int _targetPed, int _p2)
		{
			Function.Call((Hash)0xA899B61C66F09134, _ped, _targetPed, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x244430c13ba5258e(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x244430C13BA5258E, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskEat(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0xBD7949BD07299672, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskBark(int _ped, int _barkAtTarget, uint _mood)
		{
			Function.Call((Hash)0x83BFC1F836B2F3F2, _ped, _barkAtTarget, _mood);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowPavementToCoord(int _ped, int _args)
		{
			Function.Call((Hash)0x1B1475414E70DD8E, _ped, _args);
		}
		/// <summary>
		/// If no timeout, set timeout to -1.
		/// </summary>
		public static void TaskFollowNavMeshToCoord(int _ped, float _x, float _y, float _z, float _speedMultiplier, int _timeout, float _stoppingRange, int _flags, float _heading)
		{
			Function.Call((Hash)0x15D3A79D4E44B913, _ped, _x, _y, _z, _speedMultiplier, _timeout, _stoppingRange, _flags, _heading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowNavMeshToCoordAdvanced(int _ped, float _x, float _y, float _z, float _speedMultiplier, int _timeout, float _stoppingRange, int _flags, float _p8, float _p9, float _p10, int _entity, float _unk)
		{
			Function.Call((Hash)0x17F58B88D085DBAC, _ped, _x, _y, _z, _speedMultiplier, _timeout, _stoppingRange, _flags, _p8, _p9, _p10, _entity, _unk);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathCanUseClimbovers(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x8E06A6FE76C9EFF4, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathCanUseLadders(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x77A5B103C87F476E, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathCanDropFromHeight(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xE361C5C71C431A4F, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe6a151364c600b24(int _p0)
		{
			return Function.Call<int>((Hash)0xE6A151364C600B24, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1632eb9386cdbe64(int _p0, int _p1)
		{
			Function.Call((Hash)0x1632EB9386CDBE64, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathClimbCostModifier(int _ped, float _modifier)
		{
			Function.Call((Hash)0x88E32DB8C1A4AA4B, _ped, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathDeepSnowCostModifier(int _ped, float _modifier)
		{
			Function.Call((Hash)0xE8C296B75EACC357, _ped, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathFoliageCostModifier(int _ped, float _modifier)
		{
			Function.Call((Hash)0x3AD8EFF9703BE657, _ped, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8798cf6815b8fe0f(int _p0, int _p1)
		{
			Function.Call((Hash)0x8798CF6815B8FE0F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5b68d0007d9c92eb(int _p0, int _p1)
		{
			Function.Call((Hash)0x5B68D0007D9C92EB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x82ed59f095056550(int _p0, int _p1)
		{
			Function.Call((Hash)0x82ED59F095056550, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe01c8dc8edd28d31(int _p0, int _p1)
		{
			Function.Call((Hash)0xE01C8DC8EDD28D31, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x098caa6dbe7d8d82(int _p0, int _p1)
		{
			Function.Call((Hash)0x098CAA6DBE7D8D82, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedIsIgnoringDeadBodies(int _ped)
		{
			return Function.Call<bool>((Hash)0x1948BBE561A2375A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedIgnoreDeadBodies(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x013A7BA5015C1372, _ped, _toggle);
		}
		/// <summary>
		/// _SET_PED_PATH_P*
		/// </summary>
		public static void SetPedPathLadderCostModifier(int _ped, float _modifier)
		{
			Function.Call((Hash)0x70F7A1EAB1AE3AA8, _ped, _modifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathMayEnterWater(int _ped, bool _mayEnterWater)
		{
			Function.Call((Hash)0xF35425A4204367EC, _ped, _mayEnterWater);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathMayEnterDeepWater(int _ped, bool _mayEnterDeepWater)
		{
			Function.Call((Hash)0x9DE63896B176EA94, _ped, _mayEnterDeepWater);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc6170856e54557b2(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xC6170856E54557B2, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf948f4356f010f11(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xF948F4356F010F11, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathPreferToAvoidWater(int _ped, bool _avoidWater, float _p2)
		{
			Function.Call((Hash)0x38FE1EC73743793C, _ped, _avoidWater, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8bb283a7888ad1ad(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x8BB283A7888AD1AD, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x12990818c1d35886(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x12990818C1D35886, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7c015d8bcec72cf4(int _p0, int _p1)
		{
			Function.Call((Hash)0x7C015D8BCEC72CF4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedPathAvoidFire(int _ped, bool _avoidFire)
		{
			Function.Call((Hash)0x4455517B28441E60, _ped, _avoidFire);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x42cfd8fd8cc8dc69(int _p0, int _p1)
		{
			Function.Call((Hash)0x42CFD8FD8CC8DC69, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x216343750545a486(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x216343750545A486, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x06ecf3925bc2abae(int _p0, int _p1)
		{
			Function.Call((Hash)0x06ECF3925BC2ABAE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfa30e2254461adeb(int _p0, int _p1)
		{
			Function.Call((Hash)0xFA30E2254461ADEB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordAnyMeans(int _ped, float _x, float _y, float _z, float _speed, int _entity, bool _p6, int _walkingStyle, float _p8)
		{
			Function.Call((Hash)0x5BC448CB78FA3E88, _ped, _x, _y, _z, _speed, _entity, _p6, _walkingStyle, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordAnyMeansExtraParams(int _ped, float _x, float _y, float _z, float _speed, int _p5, bool _p6, int _walkingStyle, float _p8, int _p9, int _p10, int _p11, int _p12)
		{
			Function.Call((Hash)0x1DD45F9ECFDB1BC9, _ped, _x, _y, _z, _speed, _p5, _p6, _walkingStyle, _p8, _p9, _p10, _p11, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14)
		{
			Function.Call((Hash)0xB8ECD61F531A7B02, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/animations
		/// </summary>
		public static void TaskPlayAnim(int _ped, string _animDict, string _animName, float _speed, float _speedMultiplier, int _duration, int _flags, float _playbackRate, bool _p8, int _p9, bool _p10, string _taskFilter, bool _p12)
		{
			Function.Call((Hash)0xEA47FE3719165B94, _ped, _animDict, _animName, _speed, _speedMultiplier, _duration, _flags, _playbackRate, _p8, _p9, _p10, _taskFilter, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPlayAnimAdvanced(int _ped, string _animDict, string _animName, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, float _speed, float _speedMultiplier, int _duration, int _flags, float _p13, int _p14, int _p15, int _p16)
		{
			Function.Call((Hash)0x83CDB10EA29B370B, _ped, _animDict, _animName, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _speed, _speedMultiplier, _duration, _flags, _p13, _p14, _p15, _p16);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPlayUpperAnimFacingEntity(int _ped, string _animDict, string _animName, int _entity, int _p4, float _p5, float _p6, int _p7, float _p8, bool _p9, bool _p10, float _p11, string _p12, int _p13, float _p14)
		{
			Function.Call((Hash)0xAD67214236AB1CFE, _ped, _animDict, _animName, _entity, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopAnimTask(int _ped, string _animDictionary, string _animationName, float _p3)
		{
			Function.Call((Hash)0x97FF36A1D40EA00A, _ped, _animDictionary, _animationName, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskScriptedAnimation(int _ped, int _args)
		{
			Function.Call((Hash)0x126EF75F1E17ABE5, _ped, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayEntityScriptedAnim(int _entity, int _args)
		{
			Function.Call((Hash)0x77A1EEC547E7FCF1, _entity, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopAnimPlayback(int _ped, int _p1, bool _p2)
		{
			Function.Call((Hash)0xEE08C992D238C5D1, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimFilter(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x87B66D77D545DB66, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAnimRate(int _p0, float _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0x032D49C5E359C847, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanStartItemInteraction(int _ped, uint _itemHash, uint _interactionAnimHash, int _p3)
		{
			return Function.Call<bool>((Hash)0x2D19BC4DF626CBE7, _ped, _itemHash, _interactionAnimHash, _p3);
		}
		/// <summary>
		/// Params: p3 = 0, 1; p5 = 0.0f, -1.0f
		/// https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
		/// </summary>
		public static void StartTaskItemInteraction(int _ped, uint _itemHash, uint _interactionAnimHash, int _p3, int _flag, float _p5)
		{
			Function.Call((Hash)0xAE72E7DF013AAA61, _ped, _itemHash, _interactionAnimHash, _p3, _flag, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskItemInteraction2(int _ped, uint _propNameGxt, int _prop, uint _propId, uint _itemInteractionState, int _p5, int _p6, float _p7)
		{
			Function.Call((Hash)0x72F52AA2D2B172CC, _ped, _propNameGxt, _prop, _propId, _itemInteractionState, _p5, _p6, _p7);
		}
		/// <summary>
		/// Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
		/// </summary>
		public static void TaskItemInteraction3(int _ped, uint _item, int _guid, int _p3, int _p4, int _p5, float _p6)
		{
			Function.Call((Hash)0xD61D5E1AD9876DEB, _ped, _item, _guid, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb35370d5353995cb(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xB35370D5353995CB, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetItemInteractionState(int _ped)
		{
			return Function.Call<uint>((Hash)0x6AA3DCA2C6F5EB6D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetItemInteractionItemId(int _ped)
		{
			return Function.Call<uint>((Hash)0x804425C4BBD00883, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedRunningInspectionTask(int _ped)
		{
			return Function.Call<bool>((Hash)0x038B1F1674F0E242, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedRunningTaskItemInteraction(int _ped)
		{
			return Function.Call<bool>((Hash)0xEC7E480FF8BD0BED, _ped);
		}
		/// <summary>
		/// item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
		/// </summary>
		public static int GetItemInteractionEntityFromPed(int _ped, uint _item)
		{
			return Function.Call<int>((Hash)0x05A0100EA714DB68, _ped, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetItemInteractionPromptProgress(int _ped, uint _inputContext)
		{
			return Function.Call<float>((Hash)0xBC864A70AD55E0C1, _ped, _inputContext);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x678d3226cf70b9c8(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x678D3226CF70B9C8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskEvasiveAnim(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x5F22926E1BCE9B08, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLookAtCoord(int _ped, float _x, float _y, float _z, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x6FA46612594F7973, _ped, _x, _y, _z, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// param3: duration in ms, use -1 to look forever
		/// param4: using 2048 is fine
		/// param5: using 3 is fine
		/// </summary>
		public static void TaskLookAtEntity(int _ped, int _lookAtTarget, int _duration, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x69F4BE8C8CC4796C, _ped, _lookAtTarget, _duration, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskClearLookAt(int _ped)
		{
			Function.Call((Hash)0x0F804F1DB19B9689, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x508f5053e3f6f0c4(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x508F5053E3F6F0C4, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x23767d80c7eed7c6(int _p0, int _p1)
		{
			Function.Call((Hash)0x23767D80C7EED7C6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void OpenSequenceTask(int _taskSequenceId)
		{
			Function.Call((Hash)0xE8854A4326B9E12B, _taskSequenceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseSequenceTask(int _taskSequenceId)
		{
			Function.Call((Hash)0x39E72BC99E6360CB, _taskSequenceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPerformSequence(int _ped, int _taskSequenceId)
		{
			Function.Call((Hash)0x5ABA3986D90D8A3B, _ped, _taskSequenceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPerformSequence2(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x4FC0AF869D6E309D, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearSequenceTask(int _taskSequenceId)
		{
			Function.Call((Hash)0x3841422E9C488D8C, _taskSequenceId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSequenceToRepeat(int _taskSequenceId, bool _repeat)
		{
			Function.Call((Hash)0x58C70CF3A41E4AE7, _taskSequenceId, _repeat);
		}
		/// <summary>
		/// returned values:
		/// 0 to 7 = task that's currently in progress, 0 meaning the first one.
		/// -1 no task sequence in progress.
		/// </summary>
		public static int GetSequenceProgress(int _ped)
		{
			return Function.Call<int>((Hash)0x00A9010CFE1E3533, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsTaskActive(int _ped, int _taskIndex)
		{
			return Function.Call<bool>((Hash)0xB0760331C7AA4155, _ped, _taskIndex);
		}
		/// <summary>
		/// Gets the status of a script-assigned task, and returns an int between 0-8
		/// taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt 
		/// 
		/// WAITING_TO_START_TASK = 0,
		/// PERFORMING_TASK
		/// DORMANT_TASK
		/// VACANT_STAGE
		/// GROUP_TASK_STAGE
		/// ATTRACTOR_SCRIPT_TASK_STAGE
		/// SECONDARY_TASK_STAGE
		/// TASK_NOT_FOUND
		/// FINISHED_TASK
		/// </summary>
		public static int GetScriptTaskStatus(int _ped, uint _taskHash, bool _p2)
		{
			return Function.Call<int>((Hash)0x77F1BEB8863288D5, _ped, _taskHash, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9ff5f9b24e870748(int _p0)
		{
			return Function.Call<int>((Hash)0x9FF5F9B24E870748, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetScriptTaskActionTime(int _ped, uint _task)
		{
			return Function.Call<float>((Hash)0xA710DC5D25F8B942, _ped, _task);
		}
		/// <summary>
		/// lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
		/// 
		/// exitAnimation: LOOK_RETURN_GENERIC = 1,
		/// LOOK_RETURN_DISMISSIVE = 2,
		/// LOOK_RETURN_RELIEVED = 3
		/// </summary>
		public static void ReactLookAt(int _ped, int _targetPed, int _lookIntensity, int _exitAnimation, float _duration, int _p5, int _targetPed2, int _p7, int _p8)
		{
			Function.Call((Hash)0xE7FA07624574B79A, _ped, _targetPed, _lookIntensity, _exitAnimation, _duration, _p5, _targetPed2, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReactLookAtEnd(int _ped, int _exitAnimation, bool _p2)
		{
			Function.Call((Hash)0x541E5B41DCA45828, _ped, _exitAnimation, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedScenarioReactLooking(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x916B8E075ABC8B4E, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetActiveVehicleMissionType(int _vehicle)
		{
			return Function.Call<int>((Hash)0x534AEBA6E5ED4CAB, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLeaveAnyVehicle(int _ped, int _p1, int _taskFlag)
		{
			Function.Call((Hash)0x504D54DF3F6F2247, _ped, _p1, _taskFlag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbd70108d01875299(int _p0)
		{
			return Function.Call<int>((Hash)0xBD70108D01875299, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseRandomScenarioInGroup(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x14747F4A5971DE4E, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
		/// </summary>
		public static void TaskAimGunAtEntity(int _ped, int _targetEntity, int _duration, bool _p3, int _p4)
		{
			Function.Call((Hash)0x9B53BB6E8943AF53, _ped, _targetEntity, _duration, _p3, _p4);
		}
		/// <summary>
		/// duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
		/// </summary>
		public static void TaskTurnPedToFaceEntity(int _ped, int _targetEntity, int _duration, float _p3, float _p4, float _p5)
		{
			Function.Call((Hash)0x5AD23D40115353AC, _ped, _targetEntity, _duration, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAimGunAtCoord(int _ped, float _x, float _y, float _z, int _time, bool _p5, bool _p6)
		{
			Function.Call((Hash)0x6671F3EEC681BDA1, _ped, _x, _y, _z, _time, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAimAtCoord(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x4AF1D73861212F52, _ped, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAimAtEntity(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xCF7569BD0FB480A0, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskShootAtCoord(int _ped, float _x, float _y, float _z, int _duration, uint _firingPattern, int _p6)
		{
			Function.Call((Hash)0x46A6CC01E0826106, _ped, _x, _y, _z, _duration, _firingPattern, _p6);
		}
		/// <summary>
		/// Makes the specified ped shuffle to the next vehicle seat.
		/// The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
		/// </summary>
		public static void TaskShuffleToNextVehicleSeat(int _ped, int _vehicle)
		{
			Function.Call((Hash)0x7AA80209BDA643EB, _ped, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedTasks(int _ped, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xE1EF3C1216AFF2CD, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1a7d63cb1b0bb223(int _p0)
		{
			Function.Call((Hash)0x1A7D63CB1B0BB223, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb2d15d3551fe4fae(int _p0)
		{
			Function.Call((Hash)0xB2D15D3551FE4FAE, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdf94844d474f31e5(int _ped)
		{
			Function.Call((Hash)0xDF94844D474F31E5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeba2081e0a5f4d17(int _p0)
		{
			Function.Call((Hash)0xEBA2081E0A5F4D17, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x141bc64c8d7c5529(int _vehicle)
		{
			Function.Call((Hash)0x141BC64C8D7C5529, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedSecondaryTask(int _ped)
		{
			Function.Call((Hash)0x176CECF6F920D707, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskEveryoneLeaveVehicleInOrder(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x6F1C49F275BD25B3, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskInvestigate(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x5C8514540D27FBFB, _ped, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGotoEntityOffset(int _ped, int _entity, int _p2, float _x, float _y, float _z, int _duration)
		{
			Function.Call((Hash)0xE39B4FF4FDEBDE27, _ped, _entity, _p2, _x, _y, _z, _duration);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGotoEntityOffsetXy(int _ped, int _entity, int _duration, float _p3, float _p4, float _p5, float _p6, bool _p7)
		{
			Function.Call((Hash)0x338E7EF52B6095A9, _ped, _entity, _duration, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGotoEntityOffsetXyz(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xFA6DA9D151769392, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGotoEntityOffsetXyAiming(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0x901BD69984400F62, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGotoEntityOffsetXyzAiming(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x41B0832CA96B5351, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowEntityWhileAimingAtEntity(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x2D532EAA142CF83F, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// duration in milliseconds
		/// </summary>
		public static void TaskTurnPedToFaceCoord(int _ped, float _x, float _y, float _z, int _duration)
		{
			Function.Call((Hash)0x1DDA930A0AC38571, _ped, _x, _y, _z, _duration);
		}
		/// <summary>
		/// Documentation from GTA V, might be the same in RDR:
		/// 
		/// '1 - brake
		/// '3 - brake + reverse
		/// '4 - turn left 90 + braking
		/// '5 - turn right 90 + braking
		/// '6 - brake strong (handbrake?) until time ends
		/// '7 - turn left + accelerate
		/// '7 - turn right + accelerate
		/// '9 - weak acceleration
		/// '10 - turn left + restore wheel pos to center in the end
		/// '11 - turn right + restore wheel pos to center in the end
		/// '13 - turn left + go reverse
		/// '14 - turn left + go reverse
		/// '16 - crash the game after like 2 seconds :)
		/// '17 - keep actual state, game crashed after few tries
		/// '18 - game crash
		/// '19 - strong brake + turn left/right
		/// '20 - weak brake + turn left then turn right
		/// '21 - weak brake + turn right then turn left
		/// '22 - brake + reverse
		/// '23 - accelerate fast
		/// '24 - brake
		/// '25 - brake turning left then when almost stopping it turns left more
		/// '26 - brake turning right then when almost stopping it turns right more
		/// '27 - brake until car stop or until time ends
		/// '28 - brake + strong reverse acceleration
		/// '30 - performs a burnout (brake until stop + brake and accelerate)
		/// '31 - accelerate + handbrake
		/// '32 - accelerate very strong
		/// 
		/// Seems to be this:
		/// Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
		/// </summary>
		public static void TaskVehicleTempAction(int _driver, int _vehicle, int _action, int _time)
		{
			Function.Call((Hash)0xC429DCEEB339E129, _driver, _vehicle, _action, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleMission(int _driver, int _vehicle, int _vehicleTarget, int _missionType, float _p4, int _p5, float _p6, float _p7, bool _DriveAgainstTraffic)
		{
			Function.Call((Hash)0x659427E0EF36BCDE, _driver, _vehicle, _vehicleTarget, _missionType, _p4, _p5, _p6, _p7, _DriveAgainstTraffic);
		}
		/// <summary>
		/// flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
		/// p7 = 6 or 3
		/// p8 = x coordinate
		/// p9 - 8.f
		/// p10 = false
		/// </summary>
		public static void TaskVehicleDriveToDestination(int _driver, int _vehicle, float _x, float _y, float _z, float _speed, int _drivingFlags, int _p7, float _stoppingRange1, float _stoppingRange2, bool _p10)
		{
			Function.Call((Hash)0x7F241A0D14354583, _driver, _vehicle, _x, _y, _z, _speed, _drivingFlags, _p7, _stoppingRange1, _stoppingRange2, _p10);
		}
		/// <summary>
		/// Tasks vehicle towards owner
		/// </summary>
		public static void TaskVehicleDriveToDestination2(int _vehicle, float _x, float _y, float _z, float _speed, int _p5, int _p6, float _p7, float _p8)
		{
			Function.Call((Hash)0x391073B9D3CCE2BA, _vehicle, _x, _y, _z, _speed, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// Vehicle Auto Drive (?)
		/// p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
		/// Speed: usually 8f
		/// Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
		/// </summary>
		public static void TaskVehicleFleeOnCleanup(int _vehicle, float _p1, float _p2, float _p3, float _speed, uint _type)
		{
			Function.Call((Hash)0x55CD5FDDD4335C1E, _vehicle, _p1, _p2, _p3, _speed, _type);
		}
		/// <summary>
		/// Old name: _TASK_VEHICLE_DRIVE_TO_POINT
		/// flag: 524419 and 0 in shop_horse_shop R* Script
		/// </summary>
		public static void TaskVehicleDriveStraightToPoint(int _driver, int _vehicle, float _x, float _y, float _z, float _p5, float _p6, int _flag)
		{
			Function.Call((Hash)0x089FF2FB965F0A29, _driver, _vehicle, _x, _y, _z, _p5, _p6, _flag);
		}
		/// <summary>
		/// Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
		/// </summary>
		public static void TaskVehicleDriveToPoint2(int _vehicle, float _x, float _y, float _z, float _p4, float _p5, int _p6)
		{
			Function.Call((Hash)0x6524A8981E8BE7C9, _vehicle, _x, _y, _z, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1d125814ebc517eb(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x1D125814EBC517EB, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x583ae9af9cee0958(int _vehicle, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0x583AE9AF9CEE0958, _vehicle, _x, _y, _z);
		}
		/// <summary>
		/// See TASK_VEHICLE_MISSION
		/// </summary>
		public static void TaskVehicleMissionPedTarget(int _ped, int _vehicle, int _pedTarget, int _mode, float _maxSpeed, int _drivingStyle, float _minDistance, float _p7, bool _DriveAgainstTraffic)
		{
			Function.Call((Hash)0x9454528DF15D657A, _ped, _vehicle, _pedTarget, _mode, _maxSpeed, _drivingStyle, _minDistance, _p7, _DriveAgainstTraffic);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa263adbbc8056214(int _p0, int _p1)
		{
			Function.Call((Hash)0xA263ADBBC8056214, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleEscort(int _ped, int _vehicle, int _targetVehicle, int _mode, float _speed, int _drivingStyle, float _minDistance, int _p7, float _noRoadsDistance)
		{
			Function.Call((Hash)0x0FA6E4B75F302400, _ped, _vehicle, _targetVehicle, _mode, _speed, _drivingStyle, _minDistance, _p7, _noRoadsDistance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskBoatMission(int _pedDriver, int _boat, int _p2, int _p3, float _x, float _y, float _z, int _p7, float _maxSpeed, int _drivingStyle, float _p10, int _p11)
		{
			Function.Call((Hash)0x15C86013127CE63F, _pedDriver, _boat, _p2, _p3, _x, _y, _z, _p7, _maxSpeed, _drivingStyle, _p10, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWeapon(int _ped)
		{
			Function.Call((Hash)0x7157B82D60E4BC46, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskDriveBy(int _driverPed, int _targetPed, int _targetVehicle, float _targetX, float _targetY, float _targetZ, float _distanceToShoot, int _pedAccuracy, bool _p8, uint _firingPattern)
		{
			Function.Call((Hash)0x2F8AF0E82773A171, _driverPed, _targetPed, _targetVehicle, _targetX, _targetY, _targetZ, _distanceToShoot, _pedAccuracy, _p8, _firingPattern);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDrivebyTaskTarget(int _shootingPed, int _targetPed, int _targetVehicle, float _x, float _y, float _z)
		{
			Function.Call((Hash)0xE5B302114D8162EE, _shootingPed, _targetPed, _targetVehicle, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearDrivebyTaskUnderneathDrivingTask(int _ped)
		{
			Function.Call((Hash)0xC35B5CDB2824CF69, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDrivebyTaskUnderneathDrivingTask(int _ped)
		{
			return Function.Call<bool>((Hash)0x8785E6E40C7A8818, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsPedAimingInTheAir(int _ped)
		{
			return Function.Call<bool>((Hash)0x8785E6E40C7A8819, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedClearAimingInTheAir(int _ped, int _p1)
		{
			Function.Call((Hash)0x34C0010188D7C54A, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMountedWeaponTaskUnderneathDrivingTask(int _ped)
		{
			return Function.Call<bool>((Hash)0xA320EF046186FA3B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskWarpPedIntoVehicle(int _ped, int _vehicle, int _seat)
		{
			Function.Call((Hash)0x9A7D091411C5F684, _ped, _vehicle, _seat);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskShootAtEntity(int _entity, int _targetEntity, int _duration, uint _firingPattern, bool _affectCockedState)
		{
			Function.Call((Hash)0x08DA95E8298AE772, _entity, _targetEntity, _duration, _firingPattern, _affectCockedState);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskShootWithWeapon(int _ped, int _args)
		{
			Function.Call((Hash)0x08AA95E8298AE772, _ped, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2416ec2f31f75266(int _entity, int _targetEntity, int _duration, int _p3, int _p4)
		{
			Function.Call((Hash)0x2416EC2F31F75266, _entity, _targetEntity, _duration, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x41323f4e0c4ae94b(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x41323F4E0C4AE94B, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5ea655f01d93667a(int _p0)
		{
			return Function.Call<int>((Hash)0x5EA655F01D93667A, _p0);
		}
		/// <summary>
		/// Climbs or vaults the nearest thing.
		/// </summary>
		public static void TaskClimb(int _ped, bool _unused)
		{
			Function.Call((Hash)0x89D9FCC2435112F1, _ped, _unused);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskClimb2(int _ped, float _heading)
		{
			Function.Call((Hash)0xDF1D85BCAF60D537, _ped, _heading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskClimbLadder(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xB6C987F9285A3814, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
		/// 
		/// resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
		/// </summary>
		public static void ClearPedTasksImmediately(int _ped, bool _p1, bool _resetCrouch)
		{
			Function.Call((Hash)0xAAA34F8A7CB32098, _ped, _p1, _resetCrouch);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPerformSequenceFromProgress(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x89221B16730234F0, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDesiredMoveBlendRatio(int _ped, float _p1)
		{
			Function.Call((Hash)0x1E982AC8716912C5, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedDesiredMoveBlendRatio(int _ped)
		{
			return Function.Call<float>((Hash)0x8517D4A6CA8513ED, _ped);
		}
		/// <summary>
		/// ped = Ped you want to perform this task.
		/// target = the Entity they should aim at.
		/// distanceToStopAt = distance from the target, where the ped should stop to aim.
		/// StartAimingDist = distance where the ped should start to aim.
		/// </summary>
		public static void TaskGotoEntityAiming(int _ped, int _target, float _distanceToStopAt, float _StartAimingDist)
		{
			Function.Call((Hash)0xA9DA48FAB8A76C12, _ped, _target, _distanceToStopAt, _StartAimingDist);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSetSphereDefensiveArea(int _ped, float _p1, float _p2, float _p3, float _p4)
		{
			Function.Call((Hash)0x933C06518B52A9A4, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskClearDefensiveArea(int _ped)
		{
			Function.Call((Hash)0x95A6C46A31D1917D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPedSlideToCoord(int _ped, float _x, float _y, float _z, float _heading, float _p5)
		{
			Function.Call((Hash)0xD04FE6765D990A06, _ped, _x, _y, _z, _heading, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9420fb11b8d77948(int _p0)
		{
			return Function.Call<int>((Hash)0x9420FB11B8D77948, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6ba606ab3a83bc4d(int _p0)
		{
			return Function.Call<int>((Hash)0x6BA606AB3A83BC4D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddCoverPoint(float _p0, float _p1, float _p2, float _p3, int _p4, int _p5, int _p6, bool _p7)
		{
			return Function.Call<int>((Hash)0xD5C12A75C7B9497F, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x59872ea4cbd11c56(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			return Function.Call<int>((Hash)0x59872EA4CBD11C56, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveCoverPoint(int _coverpoint)
		{
			Function.Call((Hash)0xAE287C923D891715, _coverpoint);
		}
		/// <summary>
		/// Checks if there is a cover point at position
		/// </summary>
		public static bool DoesScriptedCoverPointExistAtCoords(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<bool>((Hash)0xA98B8E3C088E5A31, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetScriptedCoverPointCoords(int _coverpoint)
		{
			return Function.Call<Vector3>((Hash)0x594A1028FC2A3E85, _coverpoint);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0xe116f6f2da2d777e(int _p0)
		{
			return Function.Call<Vector3>((Hash)0xE116F6F2DA2D777E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x50aa09a0da64e73c(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x50AA09A0DA64E73C, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe5831aa1e2fd147c(int _p0)
		{
			Function.Call((Hash)0xE5831AA1E2FD147C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatPed(int _ped, int _targetPed, int _p2, int _p3)
		{
			Function.Call((Hash)0xF166E48407BAC484, _ped, _targetPed, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatPedTimed(int _ped, int _targetPed, int _p2, int _p3)
		{
			Function.Call((Hash)0x944F30DCB7096BDE, _ped, _targetPed, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatPed3(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xC624414FA748B9BA, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSeekCoverFromPos(int _ped, float _x, float _y, float _z, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x75AC2B60386D89F2, _ped, _x, _y, _z, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSeekCoverFromPed(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x84D32B3BEC531324, _ped, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSeekCoverToCoverPoint(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xD43D95C7A869447F, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSeekCoverToCoords(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0x39246A6958EF072C, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPutPedDirectlyIntoCover(int _ped, float _x, float _y, float _z, int _timeout, bool _p5, float _p6, int _p7, int _p8, int _coverpoint, bool _p10, bool _p11, int _p12)
		{
			Function.Call((Hash)0x4172393E6BE1FECE, _ped, _x, _y, _z, _timeout, _p5, _p6, _p7, _p8, _coverpoint, _p10, _p11, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPutPedDirectlyIntoCoverFromCoords(int _ped, float _x, float _y, float _z, float _fromX, float _fromY, float _fromZ, int _timeout, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14, int _p15, int _p16, int _p17)
		{
			Function.Call((Hash)0xDF8A5855B9F9A97B, _ped, _x, _y, _z, _fromX, _fromY, _fromZ, _timeout, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15, _p16, _p17);
		}
		/// <summary>
		/// meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
		/// </summary>
		public static void TaskPutPedDirectlyIntoMelee(int _ped, int _meleeTarget, uint _meleeStyle, float _p3, float _animBlendRatio, bool _p5, int _p6)
		{
			Function.Call((Hash)0x1C6CD14A876FFE39, _ped, _meleeTarget, _meleeStyle, _p3, _animBlendRatio, _p5, _p6);
		}
		/// <summary>
		/// grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
		/// </summary>
		public static void TaskPutPedDirectlyIntoGrapple(int _ped, int _grappleTarget, uint _grappleStyle, float _p3, float _p4, bool _p5, int _p6)
		{
			Function.Call((Hash)0xA05F3F20889D7A5B, _ped, _grappleTarget, _grappleStyle, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCompanionAmbient(int _ped, int _p1)
		{
			Function.Call((Hash)0xE017CF6E2527FE4F, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x098036cab8373d36(int _p0)
		{
			Function.Call((Hash)0x098036CAB8373D36, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x10c44f633e2d6d9e(int _p0)
		{
			Function.Call((Hash)0x10C44F633E2D6D9E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7fb78b2199c10e92(int _p0)
		{
			Function.Call((Hash)0x7FB78B2199C10E92, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGuard(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0xB9FB242EACCAF30F, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGuardCurrentPosition(int _ped, float _p1, float _p2, bool _p3)
		{
			Function.Call((Hash)0x4A58A47A72E3FCB4, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGuardAssignedDefensiveArea2(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x1FC9B33976BACD6C, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGuardAssignedDefensiveArea(int _ped, float _p1, float _p2, float _p3, float _p4, float _p5, int _p6)
		{
			Function.Call((Hash)0xD2A207EEBDF9889B, _ped, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskStandGuard(int _ped, float _x, float _y, float _z, float _heading, string _scenarioName)
		{
			Function.Call((Hash)0xAE032F8BBA959E90, _ped, _x, _y, _z, _heading, _scenarioName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDriveTaskCruiseSpeed(int _driver, float _cruiseSpeed)
		{
			Function.Call((Hash)0x5C9B84BD7D31D908, _driver, _cruiseSpeed);
		}
		/// <summary>
		/// Not implemented.
		/// </summary>
		public static void SetDriveTaskMaxCruiseSpeed(int _ped, float _maxCruiseSpeed)
		{
			Function.Call((Hash)0x404A5AA9B9F0B746, _ped, _maxCruiseSpeed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddCoverBlockingArea(float _playerX, float _playerY, float _playerZ, float _radiusX, float _radiusY, float _radiusZ, bool _p6, bool _p7, bool _p8, bool _p9)
		{
			Function.Call((Hash)0x45C597097DD7CB81, _playerX, _playerY, _playerZ, _radiusX, _radiusY, _radiusZ, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddCoverBlockingVolume(int _volume, bool _p1, bool _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0xEB2ED1DC3AEC0654, _volume, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAllCoverBlockingAreas()
		{
			Function.Call((Hash)0xDB6708C0B46F56D8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2a10538d0a005e81(int _p0, int _p1)
		{
			Function.Call((Hash)0x2A10538D0A005E81, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4f57397388e1dff8()
		{
			Function.Call((Hash)0x4F57397388E1DFF8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskRobPed(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x7BB967F85D8CCBDB, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xbedbe39b5fd98fd6(int _ped)
		{
			return Function.Call<bool>((Hash)0xBEDBE39B5FD98FD6, _ped);
		}
		/// <summary>
		/// Returns scenario
		/// </summary>
		public static int CreateScenarioPointHash(uint _scenarioHash, float _x, float _y, float _z, float _heading, int _p5, int _p6, bool _p7)
		{
			return Function.Call<int>((Hash)0x94B745CE41DB58A1, _scenarioHash, _x, _y, _z, _heading, _p5, _p6, _p7);
		}
		/// <summary>
		/// Returns scenario
		/// </summary>
		public static int CreateScenarioPointHashAttachedToEntity(int _entity, uint _scenarioHash, float _x, float _y, float _z, float _heading, int _p6, int _p7, bool _p8)
		{
			return Function.Call<int>((Hash)0x794AB1379A74064D, _entity, _scenarioHash, _x, _y, _z, _heading, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScenarioPointHaveProps(int _scenario)
		{
			return Function.Call<bool>((Hash)0xEA31F199A73801D3, _scenario);
		}
		/// <summary>
		/// Old name: _GET_SCENARIO_POINT_ENTITY
		/// </summary>
		public static int GetPropForScenarioPoint(int _scenarioPoint, string _name)
		{
			return Function.Call<int>((Hash)0x295514F198EFD0CA, _scenarioPoint, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AssociatePropWithScenario(int _scenario, int _entity, string _propName, bool _p3)
		{
			return Function.Call<bool>((Hash)0x8360C47380B6F351, _scenario, _entity, _propName, _p3);
		}
		/// <summary>
		/// flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/blob/main/_SET_SCENARIO_POINT_FLAG/README.md
		/// </summary>
		public static void SetScenarioPointFlag(int _scenario, int _flag, bool _value)
		{
			Function.Call((Hash)0x5AF19B6CC2115D34, _scenario, _flag, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioPointFlagSet(int _scenario, int _flag)
		{
			return Function.Call<bool>((Hash)0x8569C38D2FB80650, _scenario, _flag);
		}
		/// <summary>
		/// _SET_SCENARIO_POINT_*
		/// </summary>
		public static void Hash_0xadc45010bc17af0e(int _p0, int _p1)
		{
			Function.Call((Hash)0xADC45010BC17AF0E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x974da3408dec4e79(int _p0)
		{
			return Function.Call<int>((Hash)0x974DA3408DEC4E79, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DisassociatePropFromScenario(int _scenario, string _propName)
		{
			return Function.Call<bool>((Hash)0x6EF4E31B4D5D2DA0, _scenario, _propName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScenarioPointExist(int _scenario)
		{
			return Function.Call<bool>((Hash)0x841475AC96E794D1, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x22cd2c33ed4467a1(int _p0)
		{
			return Function.Call<int>((Hash)0x22CD2C33ED4467A1, _p0);
		}
		/// <summary>
		/// Note: The current name for this native is the old name of 0x295514F198EFD0CA
		/// Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
		/// </summary>
		public static int GetScenarioPointEntity(int _scenario)
		{
			return Function.Call<int>((Hash)0x7467165EE97D3C68, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedUsingScenarioPoint(int _scenario)
		{
			return Function.Call<int>((Hash)0x5BA659955369B0E2, _scenario);
		}
		/// <summary>
		/// Params: p1 is always true in R* Scripts
		/// </summary>
		public static Vector3 GetScenarioPointCoords(int _scenario, bool _p1)
		{
			return Function.Call<Vector3>((Hash)0xA8452DD321607029, _scenario, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x91cb5e431f579ba1(int _p0)
		{
			return Function.Call<Vector3>((Hash)0x91CB5E431F579BA1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x370f57c47f68ebca(int _p0)
		{
			return Function.Call<int>((Hash)0x370F57C47F68EBCA, _p0);
		}
		/// <summary>
		/// Params: p1 is always true in R* Scripts
		/// </summary>
		public static float GetScenarioPointHeading(int _scenario, bool _p1)
		{
			return Function.Call<float>((Hash)0xB93EA7184BAA85C3, _scenario, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetScenarioPointRadius(int _scenario)
		{
			return Function.Call<float>((Hash)0x6718F40313A2B5A6, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioPointCoords(int _scenario, float _xPos, float _yPos, float _zPos, bool _p4)
		{
			Function.Call((Hash)0x2056AB38DF06825C, _scenario, _xPos, _yPos, _zPos, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioPointHeading(int _scenario, float _heading, bool _p2)
		{
			Function.Call((Hash)0xD3A0DA8F91612C6E, _scenario, _heading, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioPointRadius(int _scenario, float _radius)
		{
			Function.Call((Hash)0xC47D9080A9A8856A, _scenario, _radius);
		}
		/// <summary>
		/// _SET_SCENARIO_*
		/// </summary>
		public static void Hash_0xa7479fb665361edb(int _p0, int _p1)
		{
			Function.Call((Hash)0xA7479FB665361EDB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe69fda40aac3efc0(int _p0, int _p1)
		{
			Function.Call((Hash)0xE69FDA40AAC3EFC0, _p0, _p1);
		}
		/// <summary>
		/// Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
		/// </summary>
		public static int GetScenarioPointsInArea(float _posX, float _posY, float _posZ, float _radius, int _scenariosInRadius, int _size)
		{
			return Function.Call<int>((Hash)0x345EC3B7EBDE1CB5, _posX, _posY, _posZ, _radius, _scenariosInRadius, _size);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xefd875c2791ebefd(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xEFD875C2791EBEFD, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x152664aa3188b193(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0x152664AA3188B193, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe7bbc4e56b989449(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xE7BBC4E56B989449, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetScenarioPointPedIsUsing(int _ped, bool _p1)
		{
			return Function.Call<int>((Hash)0xDF7993356F52359A, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRansackScenarioPointPedIsUsing(int _ped)
		{
			return Function.Call<int>((Hash)0xD04241BBF6D03A5E, _ped);
		}
		/// <summary>
		/// Opens/closes containers: ChestDugUp
		/// </summary>
		public static void SetScenarioContainerOpeningState(int _entity, bool _open)
		{
			Function.Call((Hash)0x188F8071F244B9B8, _entity, _open);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa9e7672f8c6c6f74(int _p0)
		{
			return Function.Call<int>((Hash)0xA9E7672F8C6C6F74, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0a98a362c5a19a43(int _p0)
		{
			return Function.Call<int>((Hash)0x0A98A362C5A19A43, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x849791ebbdba0362(int _p0)
		{
			return Function.Call<int>((Hash)0x849791EBBDBA0362, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x640a602946a8c972(int _p0)
		{
			return Function.Call<int>((Hash)0x640A602946A8C972, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x01af8a3729231a43(int _p0)
		{
			return Function.Call<int>((Hash)0x01AF8A3729231A43, _p0);
		}
		/// <summary>
		/// Returns m_eContainerState
		/// </summary>
		public static bool GetScenarioContainerOpeningState(int _entity)
		{
			return Function.Call<bool>((Hash)0xB219612B5568E9EC, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetScenarioForEntity(int _scenario, int _entity)
		{
			Function.Call((Hash)0x2E20878FD208A68E, _scenario, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4161648394262fdf(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x4161648394262FDF, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9c8f42a5d1859dc1(int _p0)
		{
			Function.Call((Hash)0x9C8F42A5D1859DC1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteScenarioPoint(int _scenario)
		{
			Function.Call((Hash)0x81948DFE4F5A0283, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseScenarioPoint(int _ped, int _scenario, string _conditionalAnim, int _p3, bool _p4, bool _p5, uint _p6, bool _p7, float _p8, bool _p9)
		{
			Function.Call((Hash)0xCCDAE6324B6A821C, _ped, _scenario, _conditionalAnim, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseScenarioPoint2(int _ped, int _ped2, int _p2, string _p3, int _p4, uint _p5, float _p6, bool _p7)
		{
			Function.Call((Hash)0x0F6641449DD86FBE, _ped, _ped2, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
		/// Params: duration in milliseconds
		/// 
		/// conditionalHash (optionally):
		/// 0 = play random conditional anim.
		/// Every conditional anim has requirements to play it.
		/// If requirements are not met, ped plays random allowed conditional anim or can be stuck.
		/// For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
		/// </summary>
		public static void TaskStartScenarioInPlaceHash(int _ped, uint _scenarioHash, int _duration, bool _playEnterAnim, uint _conditionalHash, float _heading, bool _p6)
		{
			Function.Call((Hash)0x524B54361229154F, _ped, _scenarioHash, _duration, _playEnterAnim, _conditionalHash, _heading, _p6);
		}
		/// <summary>
		/// Takes scenario point handle instead of hash
		/// </summary>
		public static void TaskStartScenarioInPlace2(int _ped, int _p1, string _p2, int _p3, bool _p4, float _p5, bool _p6)
		{
			Function.Call((Hash)0xA917E39F2CEFD215, _ped, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskStartScenarioAtPosition(int _ped, uint _scenarioHash, float _x, float _y, float _z, float _heading, int _duration, bool _sittingScenario, bool _teleport, string _p9, float _p10, bool _p11)
		{
			Function.Call((Hash)0x4D1F61FC34AF3CD1, _ped, _scenarioHash, _x, _y, _z, _heading, _duration, _sittingScenario, _teleport, _p9, _p10, _p11);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf97f462779b31786(int _p0)
		{
			return Function.Call<int>((Hash)0xF97F462779B31786, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6c269f673c47031e(int _p0)
		{
			return Function.Call<int>((Hash)0x6C269F673C47031E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9667cce29bfa0780(int _p0)
		{
			Function.Call((Hash)0x9667CCE29BFA0780, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x00ffe0f85253c572(int _p0)
		{
			return Function.Call<int>((Hash)0x00FFE0F85253C572, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseNearestScenarioToCoord(int _ped, float _x, float _y, float _z, float _distance, int _duration, bool _p6, bool _p7, bool _p8, bool _p9)
		{
			Function.Call((Hash)0x322BFDEA666E2B0E, _ped, _x, _y, _z, _distance, _duration, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseNearestScenarioToCoordWarp(int _ped, float _x, float _y, float _z, float _distance, int _duration, bool _p6, bool _p7, bool _p8, bool _p9)
		{
			Function.Call((Hash)0x58E2E0F23F6B76C3, _ped, _x, _y, _z, _distance, _duration, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseNearestTrainScenarioToCoordWarp(int _ped, float _x, float _y, float _z, float _distance)
		{
			Function.Call((Hash)0x3774B03456DD6106, _ped, _x, _y, _z, _distance);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseNearestScenarioChainToCoord(int _ped, float _x, float _y, float _z, float _distance, bool _p5, bool _p6, bool _p7, bool _p8)
		{
			Function.Call((Hash)0x9FDA1B3D7E7028B3, _ped, _x, _y, _z, _distance, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskUseNearestScenarioChainToCoordWarp(int _ped, float _x, float _y, float _z, float _distance, bool _p5, bool _p6, bool _p7, bool _p8)
		{
			Function.Call((Hash)0x97A28E63F0BA5631, _ped, _x, _y, _z, _distance, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfdecca06e8b81346(int _p0)
		{
			return Function.Call<int>((Hash)0xFDECCA06E8B81346, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2d657b10f211c572(int _ped, float _p1)
		{
			return Function.Call<int>((Hash)0x2D657B10F211C572, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskRideTrain(int _ped, int _train, int _scenarioPoint, uint _scenarioHash)
		{
			Function.Call((Hash)0x37FB1C870E2EC2C6, _ped, _train, _scenarioPoint, _scenarioHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x79197f7d2bb5e73a(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0x79197F7D2BB5E73A, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScenarioExistInArea(float _x, float _y, float _z, float _radius, bool _p4, int _p5, bool _p6)
		{
			return Function.Call<bool>((Hash)0x5A59271FFADD33C1, _x, _y, _z, _radius, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScenarioOfTypeExistInAreaHash(float _x, float _y, float _z, uint _typeHash, float _radius, bool _p5)
		{
			return Function.Call<bool>((Hash)0x6EEAD6AF637DA752, _x, _y, _z, _typeHash, _radius, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int FindScenarioOfTypeHash(float _xPos, float _yPos, float _zPos, uint _scenarioType, float _distance, int _p5, bool _p6)
		{
			return Function.Call<int>((Hash)0xF533D68FF970D190, _xPos, _yPos, _zPos, _scenarioType, _distance, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0d322aef8878b8fe(int _p0, int _p1)
		{
			Function.Call((Hash)0x0D322AEF8878B8FE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd508fa229f1c4900(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xD508FA229F1C4900, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb8e213d02f37947d(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xB8E213D02F37947D, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioOccupied(float _p0, float _p1, float _p2, float _p3, bool _p4)
		{
			return Function.Call<bool>((Hash)0x788756D73AC2E07C, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1acbc313966c21f3(int _scenario)
		{
			return Function.Call<int>((Hash)0x1ACBC313966C21F3, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PedHasUseScenarioTask(int _ped)
		{
			return Function.Call<bool>((Hash)0x295E3CCEC879CCD7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool PedIsInScenarioBase(int _ped)
		{
			return Function.Call<bool>((Hash)0x02EBBB3989B7E695, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x90703a8f75ee4abd(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x90703A8F75EE4ABD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd999e379265a4501(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD999E379265A4501, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PlayAnimOnRunningScenario(int _ped, string _animDict, string _animName)
		{
			Function.Call((Hash)0x748040460F8DF5DC, _ped, _animDict, _animName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x74f0209674864cbd()
		{
			return Function.Call<int>((Hash)0x74F0209674864CBD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe1c105e6bba48270()
		{
			return Function.Call<int>((Hash)0xE1C105E6BBA48270);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1ac5a8ab50cfaa33(int _p0)
		{
			return Function.Call<int>((Hash)0x1AC5A8AB50CFAA33, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbeefbb608d2aa68a(int _p0)
		{
			Function.Call((Hash)0xBEEFBB608D2AA68A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x19bc99c678fba139(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x19BC99C678FBA139, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5d9b0baaf04cf65b(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x5D9B0BAAF04CF65B, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9b6a58fdb0024f12(int _p0, int _p1)
		{
			Function.Call((Hash)0x9B6A58FDB0024F12, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbc3f847ae2c3dc65(int _p0, int _p1)
		{
			Function.Call((Hash)0xBC3F847AE2C3DC65, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x450080ddedb91258(int _p0, int _p1)
		{
			Function.Call((Hash)0x450080DDEDB91258, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x954451ea2d2120fb(int _p0, int _p1)
		{
			Function.Call((Hash)0x954451EA2D2120FB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0f4f6c4ce471259d(int _p0, int _p1)
		{
			Function.Call((Hash)0x0F4F6C4CE471259D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb8e3486d107f4194(int _p0, int _p1)
		{
			Function.Call((Hash)0xB8E3486D107F4194, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x827a58ced9d4d5b4(int _p0, int _p1)
		{
			Function.Call((Hash)0x827A58CED9D4D5B4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4a7d73989f52eb37(int _p0, int _p1)
		{
			Function.Call((Hash)0x4A7D73989F52EB37, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb79817db31ff72b9(int _p0, int _p1)
		{
			Function.Call((Hash)0xB79817DB31FF72B9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x65d281985f2bdfc2(int _p0, int _p1)
		{
			Function.Call((Hash)0x65D281985F2BDFC2, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x885d19ac2b6fbff4(int _p0, int _p1)
		{
			Function.Call((Hash)0x885D19AC2B6FBFF4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2064b33f6e6b92d4(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x2064B33F6E6B92D4, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xce4e669400e5f8aa(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xCE4E669400E5F8AA, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2eb977293923c723(int _p0, int _p1)
		{
			Function.Call((Hash)0x2EB977293923C723, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe9225354fb7437a7(int _p0, int _p1)
		{
			Function.Call((Hash)0xE9225354FB7437A7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x764db5a48390fbad(int _p0, int _p1)
		{
			Function.Call((Hash)0x764DB5A48390FBAD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8f8c84363810691a(int _p0, int _p1)
		{
			Function.Call((Hash)0x8F8C84363810691A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff8afca532b500d4(int _p0, int _p1)
		{
			Function.Call((Hash)0xFF8AFCA532B500D4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xfe5d28b9b7837cc1(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xFE5D28B9B7837CC1, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2b8af29a78024bd3(int _p0)
		{
			Function.Call((Hash)0x2B8AF29A78024BD3, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0365000d8bf86531(int _p0)
		{
			return Function.Call<int>((Hash)0x0365000D8BF86531, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x865732725536ee39(int _p0)
		{
			return Function.Call<Vector3>((Hash)0x865732725536EE39, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0e184495b27bb57d()
		{
			Function.Call((Hash)0x0E184495B27BB57D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScenarioGroupExist(string _scenarioGroup)
		{
			return Function.Call<bool>((Hash)0xF9034C136C9E00D3, _scenarioGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesScenarioGroupExistHash(uint _scenarioGroup)
		{
			return Function.Call<bool>((Hash)0x76E98B52369A289C, _scenarioGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioGroupEnabled(string _scenarioGroup)
		{
			return Function.Call<bool>((Hash)0x367A09DED4E05B99, _scenarioGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioGroupEnabledHash(uint _scenarioGroup)
		{
			return Function.Call<bool>((Hash)0xDCC374913DE6AAA6, _scenarioGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioGroupEnabled(string _scenarioGroup, bool _toggle)
		{
			Function.Call((Hash)0x02C8E5B49848664E, _scenarioGroup, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioGroupEnabledHash(uint _scenarioGroup, bool _toggle)
		{
			Function.Call((Hash)0x9925EDDB6EAB88CD, _scenarioGroup, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetScenarioGroupsEnabled()
		{
			Function.Call((Hash)0xDD902D0349AFAD3A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x358a1a751b335a11(int _p0)
		{
			Function.Call((Hash)0x358A1A751B335A11, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ForceScenarioGroupPriority(int _p0, int _p1)
		{
			Function.Call((Hash)0x444C910A5058E568, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe55478c5edf70ac2(int _p0)
		{
			return Function.Call<int>((Hash)0xE55478C5EDF70AC2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioPointActive(int _scenario)
		{
			return Function.Call<bool>((Hash)0x0CC36D4156006509, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioPointActive(int _scenario, bool _active)
		{
			Function.Call((Hash)0xEEE4829304F93EEE, _scenario, _active);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetScenarioScript(int _scenario)
		{
			Function.Call((Hash)0x5A40040BB5AE3EA2, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsScenarioTypeEnabled(string _scenarioType)
		{
			return Function.Call<bool>((Hash)0x3A815DB3EA088722, _scenarioType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioTypeEnabled(string _scenarioType, bool _toggle)
		{
			Function.Call((Hash)0xEB47EC4E34FB7EE1, _scenarioType, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetScenarioTypeEnabledHash(uint _scenarioType, bool _toggle)
		{
			Function.Call((Hash)0xD00E50E673802D71, _scenarioType, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetScenarioTypesEnabled()
		{
			Function.Call((Hash)0x0D40EE2A7F2B2D6D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetScenarioPointTypePedIsUsing(int _ped)
		{
			return Function.Call<int>((Hash)0x2D0571BB55879DA2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetScenarioPointType(int _scenario)
		{
			return Function.Call<uint>((Hash)0xA92450B5AE687AAF, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedActiveInScenario(int _ped, int _scenario)
		{
			return Function.Call<bool>((Hash)0xAA135F9482C82CC3, _ped, _scenario);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedExitingScenario(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x0C3CB2E600C8977D, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2c497bdef897c6df(int _p0)
		{
			return Function.Call<int>((Hash)0x2C497BDEF897C6DF, _p0);
		}
		/// <summary>
		/// Despite its name, it only attacks ONE hated target. The one closest to the specified position.
		/// </summary>
		public static void TaskCombatHatedTargetsInArea(int _ped, float _x, float _y, float _z, float _radius, int _flags, int _p6)
		{
			Function.Call((Hash)0x4CF5F55DAC3280A0, _ped, _x, _y, _z, _radius, _flags, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatHatedTargetsNoLosTest(int _ped, float _radius)
		{
			Function.Call((Hash)0xB5BC69D9C4060BC3, _ped, _radius);
		}
		/// <summary>
		/// Despite its name, it only attacks ONE hated target. The one closest hated target.
		/// </summary>
		public static void TaskCombatHatedTargetsAroundPed(int _ped, float _radius, int _flags, int _p3)
		{
			Function.Call((Hash)0x7BF835BB9E2698C8, _ped, _radius, _flags, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatHatedTargetsAroundPedTimed(int _ped, float _radius, float _p2, int _p3)
		{
			Function.Call((Hash)0x2BBA30B854534A0C, _ped, _radius, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCombatHatedTargets(int _ped, float _radius)
		{
			Function.Call((Hash)0x8182B561A29BD597, _ped, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x30b391915538ebe2(int _p0)
		{
			Function.Call((Hash)0x30B391915538EBE2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskThrowProjectile(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x7285951DBF6B5A51, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskThrowProjectile2(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x7282356DFF6B5A51, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
		/// p2: UNSPECIFIED
		/// </summary>
		public static void TaskWhistleAnim(int _ped, uint _audPedWhistleType, uint _p2)
		{
			Function.Call((Hash)0xD6401A1B2F63BED6, _ped, _audPedWhistleType, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSwapWeapon(int _ped, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xA21C51255B205245, _ped, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0000a8acdc2e1b6a(int _p0, int _p1)
		{
			Function.Call((Hash)0x0000A8ACDC2E1B6A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskReloadWeapon(int _ped, bool _unused)
		{
			Function.Call((Hash)0x62D2916F56B9CD2D, _ped, _unused);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPickUpWeapon(int _ped, int _p1)
		{
			Function.Call((Hash)0x55B0ECFD98596624, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedGettingUp(int _ped)
		{
			return Function.Call<bool>((Hash)0x2A74E1D5F2F00EEC, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAnimalWrithe(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x8C038A39C4A4B6D6, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskAnimalBleedOut(int _ped, int _killer, bool _p2, uint _weaponHash, int _p4, int _p5)
		{
			Function.Call((Hash)0x30A768C30D385EC5, _ped, _killer, _p2, _weaponHash, _p4, _p5);
		}
		/// <summary>
		/// This native checks if a ped is on the ground, in pain from a (gunshot) wound.
		/// </summary>
		public static bool IsPedInWrithe(int _ped)
		{
			return Function.Call<bool>((Hash)0xDEB6D52126E7D640, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3f8387db1b9f31b7(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x3F8387DB1B9F31B7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x756c7b4c43df0422(int _p0)
		{
			return Function.Call<int>((Hash)0x756C7B4C43DF0422, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x351f74ed6177ebe7()
		{
			return Function.Call<int>((Hash)0x351F74ED6177EBE7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6c50b9dccca70023(int _p0)
		{
			return Function.Call<int>((Hash)0x6C50B9DCCCA70023, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskReviveTarget(int _ped, int _reviver, uint _tool)
		{
			Function.Call((Hash)0x356088527D9EBAAD, _ped, _reviver, _tool);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void OpenPatrolRoute(string _patrolRoute)
		{
			Function.Call((Hash)0xA36BFB5EE89F3D82, _patrolRoute);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClosePatrolRoute()
		{
			Function.Call((Hash)0xB043ECA801B8CBC1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddPatrolRouteNode(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x8EDF950167586B7C, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddPatrolRouteLink(int _p0, int _p1)
		{
			Function.Call((Hash)0x23083260DEC3A551, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CreatePatrolRoute()
		{
			Function.Call((Hash)0xAF8A443CCC8018DC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeletePatrolRoute(string _patrolRoute)
		{
			Function.Call((Hash)0x7767DD9D65E91319, _patrolRoute);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x643fd1556f621772(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x643FD1556F621772, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPatrol(int _ped, string _patrolRoute, int _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0xBDA5DF49D080FE4E, _ped, _patrolRoute, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPatrol2(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x964B06C88E4C86DB, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// Makes the ped run to take cover
		/// </summary>
		public static void TaskStayInCover(int _ped)
		{
			Function.Call((Hash)0xE5DA8615A6180789, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleShootAtPed(int _ped, int _target, float _p2)
		{
			Function.Call((Hash)0x10AB107B887214D8, _ped, _target, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleAimAtPed(int _ped, int _target)
		{
			Function.Call((Hash)0xE41885592B08B097, _ped, _target);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleShootAtCoord(int _ped, float _x, float _y, float _z, float _p4)
		{
			Function.Call((Hash)0x5190796ED39C9B6D, _ped, _x, _y, _z, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xaf2ef28ce3084505(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xAF2EF28CE3084505, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleAimAtCoord(int _ped, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x447C1E9EF844BC0F, _ped, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleGotoNavmesh(int _ped, int _vehicle, float _x, float _y, float _z, float _speed, int _behaviorFlag, float _stoppingRange)
		{
			Function.Call((Hash)0x195AEEB13CEFE2EE, _ped, _vehicle, _x, _y, _z, _speed, _behaviorFlag, _stoppingRange);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordWhileAimingAtCoord(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14, int _p15)
		{
			Function.Call((Hash)0x11315AB3385B8AC0, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordWhileAimingAtCoordUsingCombatStyle(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14, int _p15)
		{
			Function.Call((Hash)0x639C0425A0B4E77E, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordWhileAimingAtEntity(int _ped1, float _x, float _y, float _z, int _ped2, float _p5, int _p6, float _p7, float _p8, int _p9, int _p10, int _p11, uint _firingPattern, int _p13, int _p14)
		{
			Function.Call((Hash)0xB2A16444EAD9AE47, _ped1, _x, _y, _z, _ped2, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _firingPattern, _p13, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordWhileAimingAtEntityUsingCombatStyle(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14)
		{
			Function.Call((Hash)0x78426D0982D083C9, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// shootatEntity:
		/// If true, peds will shoot at Entity till it is dead.
		/// If false, peds will just walk till they reach the entity and will cease shooting.
		/// </summary>
		public static void TaskGoToEntityWhileAimingAtEntity(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0x97465886D35210E9, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToEntityWhileAimingAtEntityUsingCombatStyle(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0xCEF0117C233026AD, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordAndAimAtHatedEntitiesNearCoord(int _ped, float _goToLocationX, float _goToLocationY, float _goToLocationZ, float _focusLocationX, float _focusLocationY, float _focusLocationZ, float _speed, bool _shootAtEnemies, float _distanceToStopAt, float _noRoadsDistance, bool _unkTrue, int _unkFlag, int _aimingFlag, uint _firingPattern)
		{
			Function.Call((Hash)0xA55547801EB331FC, _ped, _goToLocationX, _goToLocationY, _goToLocationZ, _focusLocationX, _focusLocationY, _focusLocationZ, _speed, _shootAtEnemies, _distanceToStopAt, _noRoadsDistance, _unkTrue, _unkFlag, _aimingFlag, _firingPattern);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14)
		{
			Function.Call((Hash)0x87BD711FC31EA273, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// Makes the ped ragdoll like when falling from a great height
		/// </summary>
		public static void SetHighFallTask(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x8C825BDC7741D37C, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5217b7b6db78e1f3(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x5217B7B6DB78E1F3, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestWaypointRecording(string _waypointRecording)
		{
			Function.Call((Hash)0x9EEFB62EB27B5792, _waypointRecording);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsWaypointRecordingLoaded(string _waypointRecording)
		{
			return Function.Call<bool>((Hash)0xCB4E8BE8A0063C5D, _waypointRecording);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveWaypointRecording(string _waypointRecording)
		{
			Function.Call((Hash)0xFF1B8B4AA1C25DC8, _waypointRecording);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf718931a82eeb898()
		{
			Function.Call((Hash)0xF718931A82EEB898);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WaypointRecordingGetNumPoints(string _waypointRecording, int _points)
		{
			return Function.Call<bool>((Hash)0x5343532C01A07234, _waypointRecording, _points);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WaypointRecordingGetCoord(string _waypointRecording, int _point, Vector3 _coord)
		{
			return Function.Call<bool>((Hash)0x2FB897405C90B361, _waypointRecording, _point, _coord);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float WaypointRecordingGetSpeedAtPoint(string _waypointRecording, int _point)
		{
			return Function.Call<float>((Hash)0x005622AEBC33ACA9, _waypointRecording, _point);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WaypointRecordingGetClosestWaypoint(string _waypointRecording, float _x, float _y, float _z, int _point)
		{
			return Function.Call<bool>((Hash)0xB629A298081F876F, _waypointRecording, _x, _y, _z, _point);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowWaypointRecordingAdvanced(int _ped, int _p1)
		{
			Function.Call((Hash)0x0CFC13EBC19BCA52, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowWaypointRecording(int _ped, string _waypointRecording, int _p2, int _flag, int _p4, bool _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x0759591819534F7B, _ped, _waypointRecording, _p2, _flag, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowWaypointRecordingAtOffset(int _ped, string _waypointRecording, float _p2, int _p3, int _p4, int _p5, bool _p6)
		{
			Function.Call((Hash)0xBE9B0520BD7C445B, _ped, _waypointRecording, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskFollowEntityAlongWaypointRecordingAtOffset(int _ped0, int _ped1, string _waypointRecording, float _p3, float _p4, int _p5, int _p6, int _p7, bool _p8)
		{
			Function.Call((Hash)0x4D2B787BAE9AB760, _ped0, _ped1, _waypointRecording, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWaypointPlaybackGoingOnForPed(int _ped, string _waypointRecording)
		{
			return Function.Call<bool>((Hash)0xE03B3F2D3DC59B64, _ped, _waypointRecording);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedWaypointProgress(int _ped)
		{
			return Function.Call<int>((Hash)0x2720AAA75001E094, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedWaypointDistance(int _ped)
		{
			return Function.Call<float>((Hash)0xE6A877C64CAF1BC5, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SetPedWaypointRouteOffset(int _ped, float _p1, float _p2, float _p3)
		{
			return Function.Call<int>((Hash)0xED98E10B0AFCE4B4, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetWaypointDistanceAlongRoute(string _waypointRecording, int _p1)
		{
			return Function.Call<float>((Hash)0xA5B769058763E497, _waypointRecording, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0x3acc128510142b9d(string _waypointRecording, float _x, float _y, float _z)
		{
			return Function.Call<float>((Hash)0x3ACC128510142B9D, _waypointRecording, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WaypointPlaybackGetIsPaused(int _ped)
		{
			return Function.Call<bool>((Hash)0x701375A7D43F01CB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WaypointPlaybackGetIsAiming(int _ped)
		{
			return Function.Call<bool>((Hash)0xD73A5D1F0325C71C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool WaypointPlaybackGetIsShooting(int _ped)
		{
			return Function.Call<bool>((Hash)0xA5B94DF8AF058F46, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackPause(int _ped, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x0F342546AA06FED5, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackResume(int _ped, bool _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x244F70C84C547D2D, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackOverrideSpeed(int _ped, float _speed, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x7D7D2B47FA788E85, _ped, _speed, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackUseDefaultSpeed(int _ped)
		{
			Function.Call((Hash)0x6599D834B12D0800, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedWaypointOverrideSpeed(int _ped)
		{
			return Function.Call<float>((Hash)0xD39A2F3E7FCAFF08, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UseWaypointRecordingAsAssistedMovementRoute(string _waypointRecording, bool _p1, float _p2, float _p3, bool _p4)
		{
			Function.Call((Hash)0x5A353B8E6B1095B5, _waypointRecording, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStartAimingAtPed(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x20E330937C399D29, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStartAimingAtEntity(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x4F158205E0C74385, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStartAimingAtCoord(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x8968400D900ED8B3, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStartShootingAtPed(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xE70BA7B90F8390DC, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStartShootingAtEntity(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x4AF458F71C1196D2, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStartShootingAtCoord(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x057A25CFCC9DB671, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void WaypointPlaybackStopAimingOrShooting(int _p0)
		{
			Function.Call((Hash)0x47EFA040EBB8E2EA, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AssistedMovementRemoveRoute(string _route)
		{
			Function.Call((Hash)0x3548536485DD792B, _route);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CreateWaypointPath(string _pathName, int _p1, int _nodes, int _p3)
		{
			return Function.Call<bool>((Hash)0x5C885E0978B6AD60, _pathName, _p1, _nodes, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AssistedMovementIsRouteLoaded(string _route)
		{
			return Function.Call<bool>((Hash)0x60F9A4393A21F741, _route);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AssistedMovementSetRouteProperties(string _route, int _props)
		{
			Function.Call((Hash)0xD5002D78B7162E1B, _route, _props);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEnableSpeedRestrainForWaypointRecordingLeader(int _p0, int _p1)
		{
			Function.Call((Hash)0x295F03DC97BEEBC1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetUpSpeedRestrainInformationForPlayerFollower(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xB5C51DD544F14F58, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleFollowWaypointRecording(int _ped, int _vehicle, string _waypointRecording, int _drivingMode, int _p4, int _eWaypoint, int _flag, float _p7, bool _p8, float _stoppingDist, int _p10)
		{
			Function.Call((Hash)0x3123FAA6DB1CF7ED, _ped, _vehicle, _waypointRecording, _drivingMode, _p4, _eWaypoint, _flag, _p7, _p8, _stoppingDist, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskVehicleFollowWaypointRecording2(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x041D17A9E221AE30, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWaypointPlaybackGoingOnForVehicle(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0xF5134943EA29868C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleWaypointProgress(int _vehicle)
		{
			return Function.Call<int>((Hash)0x9824CFF8FC66E159, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleWaypointTargetPoint(int _vehicle)
		{
			return Function.Call<int>((Hash)0x416B62AC8B9E5BBD, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VehicleWaypointPlaybackPause(int _vehicle)
		{
			Function.Call((Hash)0x8A4E6AC373666BC5, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int VehicleWaypointPlaybackGetIsPaused(int _p0)
		{
			return Function.Call<int>((Hash)0x4D6D30AB18B0B089, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VehicleWaypointPlaybackResume(int _vehicle)
		{
			Function.Call((Hash)0xDC04FCAA7839D492, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VehicleWaypointPlaybackUseDefaultSpeed(int _vehicle)
		{
			Function.Call((Hash)0x5CEB25A7D2848963, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void VehicleWaypointPlaybackOverrideSpeed(int _vehicle, float _speed)
		{
			Function.Call((Hash)0x121F0593E0A431D7, _vehicle, _speed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleWaypointPlaybackOverrideSpeed(int _p0)
		{
			return Function.Call<int>((Hash)0x3DC971EB22F73447, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSetBlockingOfNonTemporaryEvents(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x90D2156198831D69, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSetStealthMovement(int _ped, bool _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0x4C3FA937B44A90FA, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskSetCrouchMovement(int _ped, bool _p1, int _p2, bool _p3)
		{
			Function.Call((Hash)0x17293C633C8AC019, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// motionStateHash: see FORCE_PED_MOTION_STATE
		/// </summary>
		public static void TaskForceMotionState(int _ped, uint _motionStateHash, bool _p2)
		{
			Function.Call((Hash)0x4F056E1AFFEF17AB, _ped, _motionStateHash, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveNetworkByName(int _ped, string _task, float _multiplier, bool _p3, string _animDict, int _flags)
		{
			Function.Call((Hash)0x2D537BA194896636, _ped, _task, _multiplier, _p3, _animDict, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveNetworkByNameWithInitParams(int _ped, string _moveNetworkDefName, int _taskData, float _p3, bool _p4, string _animDict, int _flags)
		{
			Function.Call((Hash)0x139805C2A67C4795, _ped, _moveNetworkDefName, _taskData, _p3, _p4, _animDict, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveNetworkAdvancedByNameWithInitParams(int _ped, string _moveNetworkDefName, int _taskData, float _xPos, float _yPos, float _zPos, float _xRot, float _yRot, float _zRot, int _p9, float _p10, int _p11, int _p12, int _flag, int _p14)
		{
			Function.Call((Hash)0x7B6A04F98BBAFB2C, _ped, _moveNetworkDefName, _taskData, _xPos, _yPos, _zPos, _xRot, _yRot, _zRot, _p9, _p10, _p11, _p12, _flag, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskMoveNetworkAdvancedByNameWithInitParamsAttached(int _ped, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14, int _p15, int _p16, int _p17)
		{
			Function.Call((Hash)0xF92171093BCABED4, _ped, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14, _p15, _p16, _p17);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTaskMoveNetworkActive(int _ped)
		{
			return Function.Call<bool>((Hash)0x921CE12C489C4C41, _ped);
		}
		/// <summary>
		/// Returns hash of the underlying move network def, see move_networks.xml
		/// https://alloc8or.re/rdr3/doc/misc/move_networks.txt
		/// </summary>
		public static uint GetTaskMoveNetworkId(int _ped)
		{
			return Function.Call<uint>((Hash)0xCACC2F9D994504B7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTaskMoveNetworkReadyForTransition(int _ped)
		{
			return Function.Call<bool>((Hash)0x30ED88D5E0C56A37, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestTaskMoveNetworkStateTransition(int _ped, string _name)
		{
			Function.Call((Hash)0xD01015C7316AE176, _ped, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetTaskMoveNetworkState(int _ped)
		{
			return Function.Call<string>((Hash)0x717E4D1F2048376D, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe9a6400d1a0e7a55(int _p0)
		{
			return Function.Call<int>((Hash)0xE9A6400D1A0E7A55, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x615dc4a82e90bb48(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x615DC4A82E90BB48, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTaskMoveNetworkSignalFloat(int _ped, string _signalName, float _value)
		{
			Function.Call((Hash)0xD5BB4025AE449A4E, _ped, _signalName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x099d4a855d53b03b(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x099D4A855D53B03B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTaskMoveNetworkSignalBool(int _ped, string _signalName, bool _value)
		{
			Function.Call((Hash)0xB0A6CFD2C69C1088, _ped, _signalName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTaskMoveNetworkSignalVector(int _ped, string _signalName, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x4662BFE01938D98D, _ped, _signalName, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetTaskMoveNetworkPhaseFloat(int _ped, string _phaseName)
		{
			return Function.Call<float>((Hash)0x844CEEE428EA35B0, _ped, _phaseName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetTaskMoveNetworkEvent(int _ped, string _eventName)
		{
			return Function.Call<bool>((Hash)0xB4F47213DF45A64C, _ped, _eventName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9585ff23c4b8ede0(int _p0, int _p1)
		{
			Function.Call((Hash)0x9585FF23C4B8EDE0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeaf87da2be78a15b(int _p0, int _p1)
		{
			Function.Call((Hash)0xEAF87DA2BE78A15B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3bbeecc5b8f35318(int _p0, int _p1)
		{
			Function.Call((Hash)0x3BBEECC5B8F35318, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMoveBlendRatioStill(int _ped)
		{
			return Function.Call<bool>((Hash)0x349CE7B56DAFD95C, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMoveBlendRatioWalking(int _ped)
		{
			return Function.Call<bool>((Hash)0xF133BBBE91E1691F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMoveBlendRatioRunning(int _ped)
		{
			return Function.Call<bool>((Hash)0xD4D8636C0199A939, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsMoveBlendRatioSprinting(int _ped)
		{
			return Function.Call<bool>((Hash)0x24A2AD74FA9814E2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedStill(int _ped)
		{
			return Function.Call<bool>((Hash)0xAC29253EEF8F0180, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedWalking(int _ped)
		{
			return Function.Call<bool>((Hash)0xDE4C184B2B9B071A, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedRunning(int _ped)
		{
			return Function.Call<bool>((Hash)0xC5286FFC176F28A2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedSprinting(int _ped)
		{
			return Function.Call<bool>((Hash)0x57E457CD2C0FC168, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedInHitReact(int _ped)
		{
			return Function.Call<bool>((Hash)0xF330A5C062B29BED, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskArrestPed(int _ped, int _target)
		{
			Function.Call((Hash)0xF3B9A78A178572B1, _ped, _target);
		}
		/// <summary>
		/// This function is hard-coded to always return false.
		/// </summary>
		public static bool IsPedBeingArrested(int _ped)
		{
			return Function.Call<bool>((Hash)0x90A09F3A45FED688, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedArrestingAnyPed(int _ped)
		{
			return Function.Call<bool>((Hash)0xA9CC7856D52DBD25, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CuffPed(int _ped)
		{
			Function.Call((Hash)0x7981037A96E7D174, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UncuffPed(int _ped)
		{
			Function.Call((Hash)0x67406F2C8F87FC4F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedCuffed(int _ped)
		{
			return Function.Call<bool>((Hash)0x74E559B3BC910685, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedDuelling(int _ped)
		{
			return Function.Call<bool>((Hash)0xC8B29D18022EA2B7, _ped);
		}
		/// <summary>
		/// Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
		/// </summary>
		public static void TaskDuel(int _ped, int _p1, float _p2, int _entity, float _p4, int _p5, float _vPosOpponentX, float _vPosOpponentY, float _vPosOpponentZ, float _fOpponentHead, int _p10)
		{
			Function.Call((Hash)0x5D5B0D5BC3626E5A, _ped, _p1, _p2, _entity, _p4, _p5, _vPosOpponentX, _vPosOpponentY, _vPosOpponentZ, _fOpponentHead, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x908bb14bce85c80e(int _p0)
		{
			return Function.Call<int>((Hash)0x908BB14BCE85C80E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1f7a9a9c38c13a56(int _p0)
		{
			return Function.Call<int>((Hash)0x1F7A9A9C38C13A56, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3feb770d8ed9047a(int _p0)
		{
			return Function.Call<int>((Hash)0x3FEB770D8ED9047A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x30146c25686b7836(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x30146C25686B7836, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x59ae5ca4ffb4e378(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x59AE5CA4FFB4E378, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x748d5e0d2a1a4c61(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x748D5E0D2A1A4C61, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndDuel(int _ped, bool _p1, float _p2)
		{
			Function.Call((Hash)0xEED08A3A98B847E2, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x651f0530083c0e5a(int _p0, int _p1)
		{
			Function.Call((Hash)0x651F0530083C0E5A, _p0, _p1);
		}
		/// <summary>
		/// carriableSlot:
		///  7 > Back of a horse
		///  6 > Right side of a horse
		///  5 > Left side of a horse
		/// flags:
		///  512: enables the prompt being the name of the item when using a generic item
		/// </summary>
		public static void TaskCarriable(int _entity, uint _carryConfig, int _carrier, int _carriableSlot, int _flags)
		{
			Function.Call((Hash)0xF0B4F759F35CC7F5, _entity, _carryConfig, _carrier, _carriableSlot, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9ebd34958ab6f824(int _p0)
		{
			Function.Call((Hash)0x9EBD34958AB6F824, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsCarriableEntity(int _entity)
		{
			return Function.Call<bool>((Hash)0x0CCFE72B43C9CF96, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x10adfdf07b7dffba(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x10ADFDF07B7DFFBA, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPlaceCarriedEntityAtCoord(int _ped, int _entity, float _x, float _y, float _z, float _p5, int _flags)
		{
			Function.Call((Hash)0xC7F0B43DCDC57E3D, _ped, _entity, _x, _y, _z, _p5, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPlaceCarriedEntityOnMount(int _ped, int _entity, int _mount, float _p3)
		{
			Function.Call((Hash)0x6D3D87C57B3D52C7, _ped, _entity, _mount, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskDumpCarriableFromParent(int _ped, int _ped2, int _entity)
		{
			Function.Call((Hash)0x17CA98707B15926A, _ped, _ped2, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DetachCarriablePed(int _ped)
		{
			Function.Call((Hash)0x36D188AECB26094B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe2cf104add49d4bf(int _p0)
		{
			Function.Call((Hash)0xE2CF104ADD49D4BF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPickupCarriableEntity(int _ped, int _entity)
		{
			Function.Call((Hash)0x502EC17B1BED4BFA, _ped, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskHogtieTargetPed(int _ped, int _targetPed)
		{
			Function.Call((Hash)0x27829AFD3E03AC1A, _ped, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCutFreeHogtiedTargetPed(int _ped, int _targetPed)
		{
			Function.Call((Hash)0x81D16C4FF3A77ADF, _ped, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskCutFreeHogtiedTargetPed2(int _ped, int _targetPed, float _p2)
		{
			Function.Call((Hash)0x525421A507216084, _ped, _targetPed, _p2);
		}
		/// <summary>
		/// Sets the time it takes for a hogtied ped to escape
		/// -1.0f for ped to never escape
		/// </summary>
		public static void SetHogtieEscapeTimer(int _ped, float _time)
		{
			Function.Call((Hash)0xAB591AE6B48B913E, _ped, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetHogtieEscapeTimer(int _ped)
		{
			return Function.Call<float>((Hash)0x4687E69D258BBE41, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x03d741cb4052e26c(int _p0)
		{
			return Function.Call<int>((Hash)0x03D741CB4052E26C, _p0);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
		/// </summary>
		public static bool RequestHerbCompositeAsset(uint _asset)
		{
			return Function.Call<bool>((Hash)0x73F0D0327BFA0812, _asset);
		}
		/// <summary>
		/// Returns true when requested asset is loaded
		/// </summary>
		public static bool AreCompositeLootableEntityDefAssetsLoaded(uint _asset)
		{
			return Function.Call<bool>((Hash)0x5E5D96BE25E9DF68, _asset);
		}
		/// <summary>
		/// groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
		/// p7: -1 in R* Scripts
		/// Returns compositeId
		/// </summary>
		public static int CreateHerbComposites(uint _asset, float _x, float _y, float _z, float _heading, int _groundSetting, int _p6, int _p7)
		{
			return Function.Call<int>((Hash)0x5B4BBE80AD5972DC, _asset, _x, _y, _z, _heading, _groundSetting, _p6, _p7);
		}
		/// <summary>
		/// Params: p1 is always false except in script nb_egg_protector
		/// </summary>
		public static void DeletePatchObjectsFromHerbComposites(int _compositeId, bool _p1)
		{
			Function.Call((Hash)0x5758B1EE0C3FD4AC, _compositeId, _p1);
		}
		/// <summary>
		/// Flowers, Stalks or whatever the composite has
		/// </summary>
		public static int GetHerbCompositeNumEntities(int _compositeId, int _outEntities)
		{
			return Function.Call<int>((Hash)0x96C6ED22FB742C3E, _compositeId, _outEntities);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdf56a2b50c04dea4(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xDF56A2B50C04DEA4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLootEntity(int _ped, int _entity)
		{
			Function.Call((Hash)0x48FAE038401A2888, _ped, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskBreakVehicleDoorLock(int _ped, int _vehicle)
		{
			Function.Call((Hash)0xBB28D1BC9EA8A6A5, _ped, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLootNearestEntity(int _ped, float _x, float _y, float _z, int _p4, float _p5)
		{
			Function.Call((Hash)0xCF1501CBC4059412, _ped, _x, _y, _z, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskLassoPed(int _ped, int _targetPed)
		{
			Function.Call((Hash)0xC716EB2BD16370A3, _ped, _targetPed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskHogtieable(int _ped)
		{
			Function.Call((Hash)0x6AFD8FE0D723328F, _ped);
		}
		/// <summary>
		/// getupSetHash: see nm_blend_out_sets.meta
		/// </summary>
		public static void UnhogtiePed(int _ped, int _flags, uint _getupSetHash, string _p3, string _p4, float _p5)
		{
			Function.Call((Hash)0x79559BAD83CCD038, _ped, _flags, _getupSetHash, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x722d6a49200174fe(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x722D6A49200174FE, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MakeObjectCarriable(int _object)
		{
			Function.Call((Hash)0x78B4567E18B54480, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MakeObjectNotCarriable(int _object)
		{
			Function.Call((Hash)0x67BFCED22909834D, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8e1dde26d270cc5e(int _p0, int _p1)
		{
			Function.Call((Hash)0x8E1DDE26D270CC5E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa6a76d666a281f2d(int _p0, uint _item)
		{
			Function.Call((Hash)0xA6A76D666A281F2D, _p0, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa21aa2f0c2180125(int _p0, int _p1)
		{
			Function.Call((Hash)0xA21AA2F0C2180125, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint FindModelForItem(uint _item)
		{
			return Function.Call<uint>((Hash)0xE47DD64B9F02677D, _item);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff745b0346e19e2c(int _p0)
		{
			Function.Call((Hash)0xFF745B0346E19E2C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xb8f52a3f84a7cc59(int _p0)
		{
			return Function.Call<int>((Hash)0xB8F52A3F84A7CC59, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6afda2264925bd11(int _p0)
		{
			Function.Call((Hash)0x6AFDA2264925BD11, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x816a3acd265e2297(int _p0, int _p1)
		{
			Function.Call((Hash)0x816A3ACD265E2297, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4e806a395d43a458(int _p0)
		{
			Function.Call((Hash)0x4E806A395D43A458, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTeamCarriableEntity(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x545BF19F86E80F11, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTeamCarriableEntity(int _p0, int _p1)
		{
			return Function.Call<bool>((Hash)0x559A6F8C5133B4EE, _p0, _p1);
		}
		/// <summary>
		/// Returns true while a hat is being picked up
		/// _IS_A* - _IS_D*
		/// </summary>
		public static bool IsHatBeingPickedUp(int _hatObject)
		{
			return Function.Call<bool>((Hash)0x11CD066F54DA0133, _hatObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9addbb9242179d56(int _object, int _ped)
		{
			Function.Call((Hash)0x9ADDBB9242179D56, _object, _ped);
		}
		/// <summary>
		/// Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
		/// _IS_A* - _IS_D*
		/// </summary>
		public static bool IsHatBeingPickedUp2(int _hatObject)
		{
			return Function.Call<bool>((Hash)0x4ECCC2815CA79AE2, _hatObject);
		}
		/// <summary>
		/// _A*
		/// </summary>
		public static void TaskEquipHat(int _hatObject, int _ped)
		{
			Function.Call((Hash)0xAA0AF6025160243A, _hatObject, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7cb99fadde73cd1b(int _p0)
		{
			return Function.Call<int>((Hash)0x7CB99FADDE73CD1B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf3c3503276f4a034(int _entity, int _p1)
		{
			Function.Call((Hash)0xF3C3503276F4A034, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6dac799857ef3f11(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x6DAC799857EF3F11, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x920684be432875b1(int _p0)
		{
			return Function.Call<int>((Hash)0x920684BE432875B1, _p0);
		}
		/// <summary>
		/// clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
		/// clipset can also be 0
		/// </summary>
		public static bool SetEnhancedBreakFree(int _ped, bool _p1, string _clipset)
		{
			return Function.Call<bool>((Hash)0x1BF9D36A5EAFFBAE, _ped, _p1, _clipset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x6afd84aeaa3ea538(int _p0)
		{
			return Function.Call<int>((Hash)0x6AFD84AEAA3EA538, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xbd1c3c0f271c39d3(int _p0, int _p1)
		{
			Function.Call((Hash)0xBD1C3C0F271C39D3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1ecf56c040fd839c(int _p0, int _p1)
		{
			Function.Call((Hash)0x1ECF56C040FD839C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf40a109b4b79a848(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xF40A109B4B79A848, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedLeadingHorse(int _ped)
		{
			return Function.Call<bool>((Hash)0xEFC4303DDC6E60D3, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xac5045ab7f1a34fd(int _p0)
		{
			return Function.Call<int>((Hash)0xAC5045AB7F1A34FD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLedHorseFromPed(int _ped)
		{
			return Function.Call<int>((Hash)0xED1F514AF4732258, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskTurnToFaceClosestPed(int _ped, float _p1, float _p2, int _p3)
		{
			Function.Call((Hash)0x84179419DBDD36F2, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TaskConfront(int _ped, int _targetPed, int _p2)
		{
			return Function.Call<bool>((Hash)0x3A2A2071DF5CC569, _ped, _targetPed, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TaskPolice(int _ped, bool _p1)
		{
			return Function.Call<bool>((Hash)0x87BE56724650408E, _ped, _p1);
		}
		/// <summary>
		/// Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
		/// </summary>
		public static bool TaskMelee(int _ped, int _targetPed, uint _p2, int _p3, int _p4, float _p5, int _p6, float _p7)
		{
			return Function.Call<bool>((Hash)0x482C99D0B38D1B0A, _ped, _targetPed, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
		/// </summary>
		public static bool TaskGrapple(int _ped, int _targetPed, uint _grappleStyle, int _p3, float _p4, int _p5, int _p6)
		{
			return Function.Call<bool>((Hash)0x779A2FFACEFAEA7B, _ped, _targetPed, _grappleStyle, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TaskIntimidated(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<bool>((Hash)0x648B75D44930D6BD, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool TaskIntimidated2(int _victim, int _attacker, int _p2, bool _p3, bool _p4, bool _everyFrame, bool _p6, bool _p7, int _flag)
		{
			return Function.Call<bool>((Hash)0x933ACC1A1771A288, _victim, _attacker, _p2, _p3, _p4, _everyFrame, _p6, _p7, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2948235db2058e99(int _p0, int _p1)
		{
			Function.Call((Hash)0x2948235DB2058E99, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb2f47a1afdfcc595(int _p0, int _p1)
		{
			Function.Call((Hash)0xB2F47A1AFDFCC595, _p0, _p1);
		}
		/// <summary>
		/// _SET_PED_*
		/// </summary>
		public static void Hash_0x41d1331afad5a091(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0x41D1331AFAD5A091, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x801bd27403f3cba0(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x801BD27403F3CBA0, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0fe797dd9f70dfa6(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x0FE797DD9F70DFA6, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskPersistentCharacter(int _ped)
		{
			Function.Call((Hash)0x4391700CBD89C3D8, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfc7f71cf49f70b6b(int _p0)
		{
			Function.Call((Hash)0xFC7F71CF49F70B6B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe01f55b2896f6b37(int _p0, int _p1)
		{
			Function.Call((Hash)0xE01F55B2896F6B37, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe62754d09354f6cf(int _p0)
		{
			return Function.Call<int>((Hash)0xE62754D09354F6CF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4ba972d0e5ad8122(int _p0, int _p1)
		{
			Function.Call((Hash)0x4BA972D0E5AD8122, _p0, _p1);
		}
		/// <summary>
		/// Fishing Research: https://pastebin.com/NmK5ZLVs
		/// Only used in R* Scripts fishing_core and av_fishing_river
		/// </summary>
		public static bool GetTaskFishing(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0xF3735ACD11ACD500, _ped, _p1);
		}
		/// <summary>
		/// Only used in R* Scripts fishing_core and av_fishing_river
		/// </summary>
		public static bool SetTaskFishing(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0xF3735ACD11ACD501, _ped, _p1);
		}
		/// <summary>
		/// Baits: see 0x9B0C7FA063E67629
		/// </summary>
		public static void TaskSwapFishingBait(int _ped, string _bait, bool _withoutBuoy)
		{
			Function.Call((Hash)0x2C28AC30A72722DA, _ped, _bait, _withoutBuoy);
		}
		/// <summary>
		/// Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
		/// </summary>
		public static void SetFishingBait(int _ped, string _bait, bool _withoutBuoy, bool _instantly)
		{
			Function.Call((Hash)0x9B0C7FA063E67629, _ped, _bait, _withoutBuoy, _instantly);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1f298c7bd30d1240(int _ped)
		{
			Function.Call((Hash)0x1F298C7BD30D1240, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void PedFishingrodHookEntity(int _ped, int _entity)
		{
			Function.Call((Hash)0x1A52076D26E09004, _ped, _entity);
		}
		/// <summary>
		/// Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
		/// </summary>
		public static void PedFishingrodHookObject(int _ped, int _object)
		{
			Function.Call((Hash)0xCE71C2F9BAA3F975, _ped, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb520dbda7fcf573f(int _ped)
		{
			return Function.Call<bool>((Hash)0xB520DBDA7FCF573F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x31bb338f64d5c861(int _ped, bool _p1)
		{
			Function.Call((Hash)0x31BB338F64D5C861, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x517d01bf27b682d1(int _ped, int _entity, float _p2, float _p3, float _p4, float _p5, int _p6)
		{
			Function.Call((Hash)0x517D01BF27B682D1, _ped, _entity, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x88fd60d846d9cd63(int _ped)
		{
			Function.Call((Hash)0x88FD60D846D9CD63, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9050df2c53801208(int _ped, float _p1)
		{
			Function.Call((Hash)0x9050DF2C53801208, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x22cdbf317c40a122(int _ped)
		{
			Function.Call((Hash)0x22CDBF317C40A122, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5952dfa38fa529fe()
		{
			return Function.Call<int>((Hash)0x5952DFA38FA529FE);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
		/// emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
		/// 
		/// enum eEmoteType
		/// {
		/// 	EMOTE_TYPE_INVALID = -1,
		/// 	EMOTE_TYPE_REACT,
		/// 	EMOTE_TYPE_ACTION,
		/// 	EMOTE_TYPE_TAUNT,
		/// 	EMOTE_TYPE_GREET,
		/// 	EMOTE_TYPE_TWIRL_GUN,
		/// 	EMOTE_TYPE_DANCE_FLOOR
		/// };
		/// 
		/// enum eEmotePlaybackMode
		/// {
		/// 	EMOTE_PM_INVALID = -1,
		/// 	EMOTE_PM_UPPERBODY,
		/// 	EMOTE_PM_UPPERBODY_LOOP,
		/// 	EMOTE_PM_FULLBODY,
		/// };
		/// </summary>
		public static void TaskPlayEmoteWithHash(int _ped, int _emoteType, int _playbackMode, uint _emote, bool _isSecondaryTask, bool _canBreakOut, bool _disableEarlyOutAnimTag, bool _ignoreInvalidMainTask, bool _destroyProps)
		{
			Function.Call((Hash)0xB31A277C1AC7B7FF, _ped, _emoteType, _playbackMode, _emote, _isSecondaryTask, _canBreakOut, _disableEarlyOutAnimTag, _ignoreInvalidMainTask, _destroyProps);
		}
		/// <summary>
		/// Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
		/// </summary>
		public static void TaskPlayEmote(int _ped, int _emoteType, int _playbackMode, uint _emote, bool _isSecondaryTask, bool _canBreakOut, bool _disableEarlyOutAnimTag, bool _ignoreInvalidMainTask, bool _destroyProps)
		{
			Function.Call((Hash)0x884E3436CC1F41DD, _ped, _emoteType, _playbackMode, _emote, _isSecondaryTask, _canBreakOut, _disableEarlyOutAnimTag, _ignoreInvalidMainTask, _destroyProps);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6a1af481407bf6e9(int _p0)
		{
			Function.Call((Hash)0x6A1AF481407BF6E9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TaskEmoteOutro(int _ped)
		{
			Function.Call((Hash)0xBDFEEB7600BCD938, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xec516fe805d2cb2d(int _p0)
		{
			Function.Call((Hash)0xEC516FE805D2CB2D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x59aea4dc640814b9(int _p0, int _p1)
		{
			Function.Call((Hash)0x59AEA4DC640814B9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x11c7ce1ae38911b5(int _p0)
		{
			return Function.Call<int>((Hash)0x11C7CE1AE38911B5, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd0abc4ea3b5e21a0(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xD0ABC4EA3B5E21A0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEmoteTaskRunning(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0xCF9B71C0AF824036, _ped, _p1);
		}
		// :######################: //
		// : namespace: TELEMETRY : //
		// :######################: //
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetrySetIsFlow(bool _toggle)
		{
			Function.Call((Hash)0x9BEE018A63FFFAD9, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xec0bd8736dcaf841(bool _toggle)
		{
			Function.Call((Hash)0xEC0BD8736DCAF841, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMissionStarted(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x15B0CC1B36F1DE29, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMissionOver(int _p0, int _p1)
		{
			Function.Call((Hash)0xD894437E12C17AEC, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMissionCheckpoint(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x8EC7890D446BD9C1, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPlayerSpawned(int _ped)
		{
			Function.Call((Hash)0x5DA4718DF897EB25, _ped);
		}
		/// <summary>
		/// Works in MP only.
		/// </summary>
		public static bool TelemetryCreateUuid(int _uuid)
		{
			return Function.Call<bool>((Hash)0xE692D336F8A2A97F, _uuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMatchQueue(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x4C08D2B6D8BE17E4, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMatchStarted(int _p0, int _p1)
		{
			Function.Call((Hash)0xF620F47B4F4A78C4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMatchOver(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xA2058154357726BB, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMatchVote(int _p0, int _p1)
		{
			Function.Call((Hash)0xEF3C68F56BAD7B69, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryLobbyProgression(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xECD67E9FA677CCCF, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryGameProgress(int _p0, int _p1)
		{
			Function.Call((Hash)0x51EC204A6E5B5A1A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryHerbPicked(uint _herbType)
		{
			Function.Call((Hash)0xAE693EC3A178F6C2, _herbType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryAnimalSkinned(uint _type, int _items)
		{
			Function.Call((Hash)0x7581972ADF5D699A, _type, _items);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCampCreated(int _p0)
		{
			Function.Call((Hash)0x565EAA726B2CE3B7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCampSupplies(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x217F47761376E16E, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRegion(uint _regionHash)
		{
			Function.Call((Hash)0xCD6F8A0335D821F9, _regionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryShopEntry(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x775B2ED944E44973, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryShopExit(int _p0, int _p1)
		{
			Function.Call((Hash)0xF78E669FDC202E73, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xca9e42f437625a85(int _p0, uint _p1, uint _p2)
		{
			Function.Call((Hash)0xCA9E42F437625A85, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryShopPurchase(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x2A374E6F0075EE81, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryShopSell(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x9BD8A9D0A774A6F8, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryGoldStore(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x536B6025E94AC48F, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x32d5898c4898cd95()
		{
			Function.Call((Hash)0x32D5898C4898CD95);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryShopCutscene(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xB0B19B56697836F5, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryAmbientVignette(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x3145044F3990D321, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryDiscoverable(int _p0)
		{
			Function.Call((Hash)0xF5EAD898EF387E73, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryHonor(int _p0, int _p1)
		{
			Function.Call((Hash)0xE6B763C7F4902201, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCraftItem(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x78C2E029DB205A3A, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCampDonate(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0xDF516E598D966D06, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMoonshineBrew(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0xB5013EFBB5516867, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCollect(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xD6CB05DDAEE43AFD, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMissionIloOption(int _p0, int _p1)
		{
			Function.Call((Hash)0xEA323F5E1A4DA2F1, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6571e4327390ec0b(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x6571E4327390EC0B, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryGangShares(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xE6DC9B21AC7A8729, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryFastTravel(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x7CEF4AC79F7E7FAD, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryNetCamp(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xA72773C3134F9A57, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7e002a36aefcfb55()
		{
			Function.Call((Hash)0x7E002A36AEFCFB55);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetrySleep(int _p0)
		{
			Function.Call((Hash)0xF9F14080D80937BD, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryParleyFeud(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xF37A2149BC9A8A27, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPlayerMenuPin(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x076C5843371EB889, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryNotoriety(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xE26970A7AE0F28E9, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryDefensive(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xE57529D23541D2DD, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryLoot(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xCF63EF77B0DF0397, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2c24af8eeeef8a55(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x2C24AF8EEEEF8A55, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryFavorEmote(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x16B23D4F7A1F50D9, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPokerOver(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x8127C5AA05C5A210, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x80a02d9f948a8bca(int _requestId, int _telemetryId)
		{
			return Function.Call<bool>((Hash)0x80A02D9F948A8BCA, _requestId, _telemetryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xf184b3ece36219cf(int _transactionId, int _telemetryId)
		{
			return Function.Call<bool>((Hash)0xF184B3ECE36219CF, _transactionId, _telemetryId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRoleBounty(int _p0)
		{
			Function.Call((Hash)0xAB43D1C80B5E9500, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryBountyTarget(int _data)
		{
			Function.Call((Hash)0x52FA31DB8F3AD25D, _data);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPrison(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xB204BF9F30298D77, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRoleTrader(int _p0, int _p1)
		{
			Function.Call((Hash)0x476038B5A0734C10, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRoleMoonshiner(int _p0, int _p1)
		{
			Function.Call((Hash)0x99D40C5D74BC88E9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRoleCollector(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x4AC38DFD286DAD14, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPhoto(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xED22BE4C5A399E63, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryStartGunLockerInteraction()
		{
			Function.Call((Hash)0xF0D54E0651DD7E07);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryGunLocker()
		{
			Function.Call((Hash)0x415FE28ED44BFF14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryGunLockerWeaponStored(uint _p0)
		{
			Function.Call((Hash)0xC3ADF4880784FA9C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryGunLockerWeaponRemoved(uint _p0)
		{
			Function.Call((Hash)0x317D9C9560529CC2, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRoleTokenTransaction(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x32C2939564D74BFF, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCoupon(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0x621D719C4836292B, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPersonalVehicleMount(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xFF9052BC7A3B7D33, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPersonalVehicleWagon(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xE67AF24C5A3B6058, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMenuNavigation(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x3255D4D2082C6339, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryHubNavigation(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x25CC50EC1A6F3A96, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x37aa282163b0d2c4(int _p0, int _p1)
		{
			Function.Call((Hash)0x37AA282163B0D2C4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetrySample(int _p0, int _p1, int _p2, int _p3, bool _bTranq)
		{
			Function.Call((Hash)0x61559675D23D8BD1, _p0, _p1, _p2, _p3, _bTranq);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryRoleNaturalist(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9)
		{
			Function.Call((Hash)0x6FB9EA308F302922, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryPhotoCam(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8)
		{
			Function.Call((Hash)0x0777D65EE8A17517, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryIntroSkip(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x1B554723799245F4, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnalyticsPlaytimeFreemodeStart()
		{
			Function.Call((Hash)0xE9F24081D84931B8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AnalyticsPlaytimeFreemodeEnd()
		{
			Function.Call((Hash)0x3180E991D4B8F248);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCustom(int _args)
		{
			Function.Call((Hash)0x40914CCF2A1AB531, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryMatchNomination(int _args)
		{
			Function.Call((Hash)0x330029E121380CEB, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TelemetryCharCreator(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0x7207AD471BC9278C, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		// :################: //
		// : namespace: TXD : //
		// :################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesStreamedTxdExist(uint _txdHash)
		{
			return Function.Call<bool>((Hash)0xBA0163B277C2D2D0, _txdHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestStreamedTxd(uint _txdHash, bool _p1)
		{
			Function.Call((Hash)0xDB1BD07FB464584D, _txdHash, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasStreamedTxdLoaded(uint _txdHash)
		{
			return Function.Call<bool>((Hash)0xBE72591D1509FFE4, _txdHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStreamedTxdAsNoLongerNeeded(uint _txdHash)
		{
			Function.Call((Hash)0x8232F37DF762ACB2, _txdHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesStreamedTextureDictExist(string _textureDict)
		{
			return Function.Call<bool>((Hash)0x7332461FC59EB7EC, _textureDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestStreamedTextureDict(string _textureDict, bool _p1)
		{
			Function.Call((Hash)0xC1BA29DF5631B0F8, _textureDict, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasStreamedTextureDictLoaded(string _textureDict)
		{
			return Function.Call<bool>((Hash)0x54D6900929CCF162, _textureDict);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetStreamedTextureDictAsNoLongerNeeded(string _textureDict)
		{
			Function.Call((Hash)0x4ACA10A91F66F1E2, _textureDict);
		}
		// :###################: //
		// : namespace: UIAPPS : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsUiappActiveByHash(uint _appNameHash)
		{
			return Function.Call<bool>((Hash)0x25B7A0206BDFAC76, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyUiappActive()
		{
			return Function.Call<bool>((Hash)0xAC959AB99AAF3D9F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsUiappRunningByHash(uint _appNameHash)
		{
			return Function.Call<bool>((Hash)0x4E511D093A86AD49, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsUiappRunning(string _appName)
		{
			return Function.Call<bool>((Hash)0xDE4A9B35D028979F, _appName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyUiappRunning()
		{
			return Function.Call<bool>((Hash)0xDB30BEC7A7A5CBD3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetUiappCurrentActivityByHash(uint _appNameHash)
		{
			return Function.Call<uint>((Hash)0x96FD694FE5BE55DC, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseUiappByHash(uint _appNameHash)
		{
			Function.Call((Hash)0x2FF10C9C3F92277E, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseUiappByHashImmediate(uint _appNameHash)
		{
			Function.Call((Hash)0x04428420A248A354, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseUiapp(string _appName)
		{
			Function.Call((Hash)0x818C6CA9B659E8EC, _appName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseUiappImmediate(string _appName)
		{
			Function.Call((Hash)0x3015635426D1B17C, _appName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseAllUiapps()
		{
			Function.Call((Hash)0xAD7B70F7230C5A12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void CloseAllUiappsImmediate()
		{
			Function.Call((Hash)0x12769EEB8DBD7A7B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int LaunchUiappByHashWithEntry(uint _appNameHash, uint _entryHash)
		{
			return Function.Call<int>((Hash)0xC1BCF31E975B3195, _appNameHash, _entryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int LaunchUiappByHash(uint _appNameHash)
		{
			return Function.Call<int>((Hash)0xC8FC7F4E4CF4F581, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int LaunchUiappWithEntry(string _appName, string _entry)
		{
			return Function.Call<int>((Hash)0x7B2027BAC5C8EC89, _appName, _entry);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanLaunchUiappByHashWithEntry(uint _appNameHash, uint _entryHash)
		{
			return Function.Call<bool>((Hash)0x16F47D434B6086BF, _appNameHash, _entryHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanLaunchUiappByHash(uint _appNameHash)
		{
			return Function.Call<bool>((Hash)0xE555EC27D65EDE80, _appNameHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RequestUiappTransitionByHash(uint _appNameHash, uint _transitionHash)
		{
			return Function.Call<bool>((Hash)0x7689CD255655BFD7, _appNameHash, _transitionHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsUiappTransitioningByHash(uint _appNameHash)
		{
			return Function.Call<bool>((Hash)0x42095B886D30DE66, _appNameHash);
		}
		// :####################: //
		// : namespace: UIDEBUG : //
		// :####################: //
		/// <summary>
		/// Note: you must use VAR_STRING
		/// </summary>
		public static void BgDisplayText(string _text, float _x, float _y)
		{
			Function.Call((Hash)0x16794E044C9EFB58, _text, _x, _y);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void BgSetTextScale(float _scaleX, float _scaleY)
		{
			Function.Call((Hash)0xA1253A3C870B6843, _scaleX, _scaleY);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
		/// </summary>
		public static void BgSetTextColor(int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0x16FA5CE47F184F1E, _red, _green, _blue, _alpha);
		}
		// :#####################: //
		// : namespace: UIEVENTS : //
		// :#####################: //
		/// <summary>
		/// Old name: _EVENT_MANAGER_IS_EVENT_PENDING
		/// </summary>
		public static bool EventsUiIsPending(uint _hash)
		{
			return Function.Call<bool>((Hash)0x67ED5A7963F2F722, _hash);
		}
		/// <summary>
		/// eventData:
		/// struct UI_SCRIPT_EVENT
		/// {
		/// 	alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
		/// 	alignas(8) int intParam;
		/// 	alignas(8) Hash hashParam;
		/// 	alignas(8) Hash datastoreParam;
		/// };
		/// 
		/// Old name: _EVENT_MANAGER_GET_EVENT
		/// </summary>
		public static bool EventsUiGetMessage(uint _hash, int _eventData)
		{
			return Function.Call<bool>((Hash)0xE24E957294241444, _hash, _eventData);
		}
		/// <summary>
		/// eventData: see EVENTS_UI_GET_MESSAGE
		/// 
		/// Old name: _EVENT_MANAGER_PEEK_EVENT
		/// </summary>
		public static bool EventsUiPeekMessage(uint _hash, int _eventData)
		{
			return Function.Call<bool>((Hash)0x90237103F27F7937, _hash, _eventData);
		}
		/// <summary>
		/// Old name: _EVENT_MANAGER_POP_EVENT
		/// </summary>
		public static void EventsUiPopMessage(uint _hash)
		{
			Function.Call((Hash)0x8E8A2369F48EC839, _hash);
		}
		// :###################: //
		// : namespace: UIFEED : //
		// :###################: //
		/// <summary>
		/// Example : https://pastebin.com/GvdBp8Dh
		/// </summary>
		public static int UiFeedPostHelpText(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x049D5C615BD38BAD, _p0, _p1, _p2);
		}
		/// <summary>
		/// Example : https://pastebin.com/h1YzycuR
		/// </summary>
		public static int UiFeedPostLocationShard(int _duration, int _data, bool _p2, bool _p3)
		{
			return Function.Call<int>((Hash)0xD05590C1AB38F068, _duration, _data, _p2, _p3);
		}
		/// <summary>
		/// Example : https://pastebin.com/13tuRa63
		/// </summary>
		public static int UiFeedPostObjective(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0xCEDBF17EFCC0E4A4, _p0, _p1, _p2);
		}
		/// <summary>
		/// Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
		/// </summary>
		public static int UiFeedPostFeedTicker(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0xB2920B9760F0F36B, _p0, _p1, _p2);
		}
		/// <summary>
		/// Example : https://pastebin.com/YZMBkAmW
		/// </summary>
		public static int UiFeedPostSampleToast(int _p0, int _p1, bool _p2, bool _p3)
		{
			return Function.Call<int>((Hash)0x26E87218390E6729, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xaff5be9ba496ce40(int _p0, int _p1, bool _p2, bool _p3, uint _collectableCategory)
		{
			return Function.Call<int>((Hash)0xAFF5BE9BA496CE40, _p0, _p1, _p2, _p3, _collectableCategory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostSampleToastWithAppLink(int _p0, int _p1, bool _p2, bool _p3, bool _p4)
		{
			return Function.Call<int>((Hash)0x38838A646FB30AAE, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// Example : https://pastebin.com/kAtEMQTD
		/// </summary>
		public static int UiFeedPostSampleNotification(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xC927890AA64E9661, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostRankupToast(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0x3F9FDDBA79117C69, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// Only used in R* SP Scripts
		/// </summary>
		public static int Hash_0x18d6869fbffec0f8(int _p0, int _p1, bool _p2, bool _p3)
		{
			return Function.Call<int>((Hash)0x18D6869FBFFEC0F8, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostSampleToastRight(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0xB249EBCB30DD88E0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostMissionName(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x2024F4F333095FB1, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostReticleMessage(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x893128CDB4B81FBB, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostOneTextShard(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x860DDFE97CC94DF0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostTwoTextShard(int _p0, int _p1, bool _p2, bool _p3)
		{
			return Function.Call<int>((Hash)0xA6F4216AB10EB08E, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostThreeTextShard(int _p0, int _p1, bool _p2, bool _p3, bool _p4)
		{
			return Function.Call<int>((Hash)0x02BCC0FE9EBA3529, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostGameUpdateShard(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x8D1249BD28791878, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiFeedPostVoiceChatFeed(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0xC48152BC6B3E821C, _p0, _p1, _p2);
		}
		/// <summary>
		/// kFeedChannel_Help = 1,
		/// kFeedChannel_Location / kFeedChannel_MissionName = 9
		/// </summary>
		public static void UiFeedClearChannel(int _feedChannel, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xDD1232B332CBB9E7, _feedChannel, _p1, _p2);
		}
		/// <summary>
		/// Hides Toast Notifications
		/// </summary>
		public static void UiFeedClearAllChannels()
		{
			Function.Call((Hash)0x6035E8FBCA32AC5E);
		}
		/// <summary>
		/// Clears help text
		/// </summary>
		public static void UiFeedClearHelpTextFeed(int _feedMessage, bool _p1)
		{
			Function.Call((Hash)0x2F901291EF177B02, _feedMessage, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6d85126f6ccf02c9(int _feedChannel, int _p1, bool _p2)
		{
			Function.Call((Hash)0x6D85126F6CCF02C9, _feedChannel, _p1, _p2);
		}
		/// <summary>
		/// Returns feedMessage
		/// </summary>
		public static int Hash_0x4e88a65968a55c78(int _p0, bool _p1)
		{
			return Function.Call<int>((Hash)0x4E88A65968A55C78, _p0, _p1);
		}
		/// <summary>
		/// Only used in R* SP Script beat_animal_attack
		/// Returns feedMessage
		/// </summary>
		public static int Hash_0x0fd07141ad048aae(int _p0, bool _p1)
		{
			return Function.Call<int>((Hash)0x0FD07141AD048AAE, _p0, _p1);
		}
		/// <summary>
		/// See 0x07954320D77F6A3D
		/// </summary>
		public static int UiFeedGetMessageState(int _feedMessage)
		{
			return Function.Call<int>((Hash)0x59FA676177DBE4C9, _feedMessage);
		}
		/// <summary>
		/// Returns feedMessage
		/// </summary>
		public static int UiFeedGetCurrentMessage(int _feedChannel)
		{
			return Function.Call<int>((Hash)0xC17F69E1418CD11F, _feedChannel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb7223b91cd6b7e07(int _feedChannel)
		{
			return Function.Call<bool>((Hash)0xB7223B91CD6B7E07, _feedChannel);
		}
		// :##################: //
		// : namespace: UILOG : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool UilogIsEntryRegistered(int _p0, uint _p1)
		{
			return Function.Call<bool>((Hash)0xB8188CCF52202475, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogAddEntryHash(int _p0, int _p1, float _x, float _y, float _z, uint _p5, uint _p6, int _p7)
		{
			Function.Call((Hash)0x69D5479982355D8F, _p0, _p1, _x, _y, _z, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogAddItemToTaskList(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7)
		{
			Function.Call((Hash)0x49C63FDF69744A27, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetEntryIconTexture(int _p0, uint _p1, uint _icon, uint _iconDictionary)
		{
			Function.Call((Hash)0x6965469934958D8F, _p0, _p1, _icon, _iconDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetEntryBriefTexture(int _p0, uint _p1, uint _texture, uint _textureDictionary)
		{
			Function.Call((Hash)0x69684D9936958D8F, _p0, _p1, _texture, _textureDictionary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogUpdateEntrySubheader(int _p0, uint _p1, string _p2)
		{
			Function.Call((Hash)0x80D6524190258C3E, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetEntryPinned(int _p0, uint _p1, bool _p2)
		{
			Function.Call((Hash)0x72A5CD214B342568, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogMarkMissionCompleted(uint _p0)
		{
			Function.Call((Hash)0xDE31D66D1E54C471, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogMarkEntryAvailability(int _p0, uint _p1, int _p2, string _p3)
		{
			Function.Call((Hash)0x13E8D7DD08543482, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogMarkAllEntriesAvailability(int _p0, string _p1)
		{
			Function.Call((Hash)0x3920574CF0A2B7B6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogRemoveEntry(int _p0, uint _p1)
		{
			Function.Call((Hash)0xD594A19BE09A75C6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetDisplayCompletionRating(int _logEntryType, uint _p1, bool _p2)
		{
			Function.Call((Hash)0xA31013798FADCADC, _logEntryType, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa49d6d503e3ea847(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0xA49D6D503E3EA847, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x763637f9b838b0a7(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x763637F9B838B0A7, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogClearAllEntries()
		{
			Function.Call((Hash)0xB95B4EA6B1EDF035);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogAddOrUpdateObjective(int _p0, uint _p1, uint _p2, string _p3, bool _p4, bool _p5, bool _p6)
		{
			Function.Call((Hash)0xB43163388484CC87, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa20398536b7f1134(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xA20398536B7F1134, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetCachedObjective(string _p0)
		{
			Function.Call((Hash)0xFA233F8FE190514C, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogClearCachedObjective()
		{
			Function.Call((Hash)0xDFF0D417277B41F8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UilogHasDisplayedCachedObjective()
		{
			return Function.Call<bool>((Hash)0xCC48FFBB45B54F71);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogClearHasDisplayedCachedObjective()
		{
			Function.Call((Hash)0xA3108D6981A5CADB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetHasDisplayedCachedObjective()
		{
			Function.Call((Hash)0xA3108D6981A5CADC);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string UilogGetCachedObjective()
		{
			return Function.Call<string>((Hash)0x15A4461BEB788096);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogPrintCachedObjective()
		{
			Function.Call((Hash)0xE9990552DEC71600);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UilogSetPendingDetailsId(int _p0, uint _p1)
		{
			return Function.Call<int>((Hash)0x136A027CF37B0A4F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2a4765812202e671()
		{
			return Function.Call<int>((Hash)0x2A4765812202E671);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogAddTotalTakeEntry(uint _p0, uint _p1, string _p2, string _p3, uint _p4)
		{
			Function.Call((Hash)0x60C59968E8E87E6B, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UilogSetTotalTakeSummary(string _p0, string _p1)
		{
			Function.Call((Hash)0xD106B211EF1B8F04, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UilogPostNotification(int _data)
		{
			return Function.Call<int>((Hash)0x49E58FE6EF40B987, _data);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xda0a30153fcc0ffd()
		{
			Function.Call((Hash)0xDA0A30153FCC0FFD);
		}
		// :######################: //
		// : namespace: UIPINNING : //
		// :######################: //
		/// <summary>
		/// ...
		/// </summary>
		public static string UipinningGetTooltipText(uint _hash)
		{
			return Function.Call<string>((Hash)0x3138582E0A13BFAB, _hash);
		}
		// :#######################: //
		// : namespace: UITUTORIAL : //
		// :#######################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool UitutorialGetIsThreatIndicatorCapableRadarShown()
		{
			return Function.Call<bool>((Hash)0x2CC24A2A7A1489C4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UitutorialGetIsThreatIndicatorOn()
		{
			return Function.Call<bool>((Hash)0xFC2E0A5E9ED4E1B4);
		}
		/// <summary>
		/// enum eRpgIcons
		/// {
		/// 	ICON_STAMINA,
		/// 	ICON_STAMINA_CORE,
		/// 	ICON_DEADEYE,
		/// 	ICON_DEADEYE_CORE,
		/// 	ICON_HEALTH,
		/// 	ICON_HEALTH_CORE,
		/// 	ICON_HORSE_HEALTH,
		/// 	ICON_HORSE_HEALTH_CORE,
		/// 	ICON_HORSE_STAMINA,
		/// 	ICON_HORSE_STAMINA_CORE,
		/// 	ICON_HORSE_COURAGE,
		/// 	ICON_HORSE_COURAGE_CORE
		/// };
		/// 
		/// enum eRpgIconVisibility
		/// {
		/// 	ICON_VISIBILITY_WAIT_TO_HIDE,
		/// 	ICON_VISIBILITY_ALWAYS_SHOW,
		/// 	ICON_VISIBILITY_ALWAYS_HIDE,
		/// 	ICON_VISIBILITY_ALWAYS_BLINK
		/// };
		/// </summary>
		public static void UitutorialSetRpgIconVisibility(int _rpgIcon, int _visibility)
		{
			Function.Call((Hash)0xC116E6DF68DCE667, _rpgIcon, _visibility);
		}
		// :###########################: //
		// : namespace: UISTATEMACHINE : //
		// :###########################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int UiflowblockRequest(int _p0)
		{
			return Function.Call<int>((Hash)0xC0081B34E395CE48, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiflowblockRelease(int _p0)
		{
			Function.Call((Hash)0xF320A77DD5F781DF, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiflowblockIsLoaded(int _p0)
		{
			return Function.Call<int>((Hash)0x10A93C057B6BD944, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiflowblockEnter(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x3B7519720C9DCB45, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiStateMachineExists(int _p0)
		{
			return Function.Call<int>((Hash)0x5D15569C0FEBF757, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiStateMachineCreate(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x4C6F2C4B7A03A266, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiStateMachineCanRequestTransition(int _p0)
		{
			return Function.Call<int>((Hash)0xF7C180F57F85D0B8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int UiStateMachineRequestTransition(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x7EA9C3547E80350E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiStateMachineRequestExit(int _p0, int _p1)
		{
			Function.Call((Hash)0x6B9FE4F0BA521A19, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiStateMachineIsExited(uint _p0)
		{
			return Function.Call<bool>((Hash)0x11E73195E735B25B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiStateMachineDestroy(int _p0)
		{
			Function.Call((Hash)0x4EB122210A90E2D8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiStateMachineDestroyAndClear(int _p0)
		{
			Function.Call((Hash)0x2738D68D2B4E09E7, _p0);
		}
		// :#########################: //
		// : namespace: UISTICKYFEED : //
		// :#########################: //
		/// <summary>
		/// Example: https://pastebin.com/EJD7ytnz
		/// </summary>
		public static int UiStickyFeedCreateErrorMessage(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x9F2CC2439A04E7BA, _p0, _p1, _p2);
		}
		/// <summary>
		/// Example: https://pastebin.com/JygJShNU
		/// </summary>
		public static int UiStickyFeedCreateDeathFailMessage(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x815C4065AE6E6071, _p0, _p1, _p2);
		}
		/// <summary>
		/// Example: https://pastebin.com/6mLtee2S
		/// </summary>
		public static int UiStickyFeedCreateWarningMessage(int _p0, int _p1, bool _p2)
		{
			return Function.Call<int>((Hash)0x339E16B41780FC35, _p0, _p1, _p2);
		}
		/// <summary>
		/// Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
		/// Example: https://pastebin.com/nDrJyWq2
		/// </summary>
		public static void UiStickyFeedUpdateMessage(int _msgId, int _p1, bool _p2)
		{
			Function.Call((Hash)0xBC6F454E310124DA, _msgId, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UiStickyFeedClearMessage(int _msgId)
		{
			Function.Call((Hash)0x00A15B94CBA4F76F, _msgId);
		}
		/// <summary>
		/// kStickyFeedChannel_StatusAlert = 1
		/// </summary>
		public static bool UiStickyFeedIsChannelActive(int _stickyFeedChannel)
		{
			return Function.Call<bool>((Hash)0xC5C395C60B542A3C, _stickyFeedChannel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UiStickyFeedIsAlertScreenActive()
		{
			return Function.Call<bool>((Hash)0xF8806EC3FF840FDC);
		}
		/// <summary>
		/// Returns state of sticky feed message:
		/// 0 - INITIALIZING
		/// 1 - IN QUEUE
		/// 2 - WAITING TO SHOW
		/// 3 - ENTERING
		/// 4 - SHOWING
		/// 5 - EXITING
		/// 6 - COMPLETE
		/// 7 - COUNT
		/// </summary>
		public static int UiStickyFeedGetMessageState(int _msgId)
		{
			return Function.Call<int>((Hash)0x07954320D77F6A3D, _msgId);
		}
		// :###################: //
		// : namespace: UNLOCK : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool UnlockIsUnlockFlagSet(uint _unlockHash, int _flag)
		{
			return Function.Call<bool>((Hash)0x6B6369647F26F09F, _unlockHash, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UnlockIsUnlocked(uint _unlockHash)
		{
			return Function.Call<bool>((Hash)0xC4B660C7B6040E75, _unlockHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnlockSetUnlocked(uint _unlockHash, bool _toggle)
		{
			Function.Call((Hash)0x1B7C5ADA8A6910A0, _unlockHash, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UnlockIsVisible(uint _unlockHash)
		{
			return Function.Call<bool>((Hash)0x8588A14B75AF096B, _unlockHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnlockSetVisible(uint _unlockHash, bool _toggle)
		{
			Function.Call((Hash)0x46B901A8ECDB5A61, _unlockHash, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UnlockIsNew(uint _unlockHash)
		{
			return Function.Call<bool>((Hash)0x644166BA7AA49DEA, _unlockHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnlockSetNew(uint _unlockHash, bool _toggle)
		{
			Function.Call((Hash)0xA6D79C7AEF870A99, _unlockHash, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool UnlockIsLootable(uint _unlockHash)
		{
			return Function.Call<bool>((Hash)0x66BF197E066050DE, _unlockHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void UnlockGetItemRoleUnlockInfo(uint _unlockHash, int _outData)
		{
			Function.Call((Hash)0x7C1C2062CFAD06FE, _unlockHash, _outData);
		}
		// :####################: //
		// : namespace: VEHICLE : //
		// :####################: //
		/// <summary>
		/// Only used in R* Script beat_train_holdup: p1 = 1
		/// </summary>
		public static void Hash_0x6355602c02edc6df(int _entity, int _p1)
		{
			Function.Call((Hash)0x6355602C02EDC6DF, _entity, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleIsInHurry(int _vehicle, bool _enabled)
		{
			Function.Call((Hash)0xCE1531927AD6C9F8, _vehicle, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVehicle(uint _modelHash, float _x, float _y, float _z, float _heading, bool _isNetwork, bool _bScriptHostVeh, bool _bDontAutoCreateDraftAnimals, bool _p8)
		{
			return Function.Call<int>((Hash)0xAF35D0D2583051B0, _modelHash, _x, _y, _z, _heading, _isNetwork, _bScriptHostVeh, _bDontAutoCreateDraftAnimals, _p8);
		}
		/// <summary>
		/// Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
		/// </summary>
		public static int CreateDraftVehicle(uint _modelHash, float _x, float _y, float _z, float _heading, bool _isNetwork, bool _bScriptHostVeh, bool _bDontAutoCreateDraftAnimals, uint _draftAnimalPopGroup, bool _p9)
		{
			return Function.Call<int>((Hash)0x214651FB1DFEBA89, _modelHash, _x, _y, _z, _heading, _isNetwork, _bScriptHostVeh, _bDontAutoCreateDraftAnimals, _draftAnimalPopGroup, _p9);
		}
		/// <summary>
		/// Deletes a vehicle.
		/// The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
		/// 
		/// eg how to use:
		/// SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
		/// DELETE_VEHICLE(&vehicle);
		/// 
		/// Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
		/// </summary>
		public static void DeleteVehicle(int _vehicle)
		{
			Function.Call((Hash)0xE20A909D8C4A70F8, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FadeAndDestroyVehicle(int _vehicle)
		{
			Function.Call((Hash)0x35DC1877312FBA0F, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleFadingOut(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x5136B284B67B35C7, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleAllowHomingMissleLockon(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x1240E8596A8308B9, _vehicle, _toggle);
		}
		/// <summary>
		/// Makes the vehicle accept no passengers.
		/// </summary>
		public static void SetVehicleAllowNoPassengersLockon(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xECB9E9BC887E8060, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleModel(int _vehicle, uint _model)
		{
			return Function.Call<bool>((Hash)0x0045A54EC7A22455, _vehicle, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllVehicleGeneratorsDisabledForVolume(int _volume, bool _toggle)
		{
			Function.Call((Hash)0x424FFCB9F0D2D4B5, _volume, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllVehicleGeneratorsActiveInArea(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, bool _p6, bool _p7)
		{
			Function.Call((Hash)0xBBB134FB9D50C0CC, _x1, _y1, _z1, _x2, _y2, _z2, _p6, _p7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllVehicleGeneratorsActive()
		{
			Function.Call((Hash)0x3D596E6E88A02C24);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetVehicleOnGroundProperly(int _vehicle, bool _p1)
		{
			return Function.Call<bool>((Hash)0x7263332501E07F52, _vehicle, _p1);
		}
		/// <summary>
		/// Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
		/// 
		/// For some vehicles it returns true if the current speed is <= 0.00039999999.
		/// </summary>
		public static bool IsVehicleStopped(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x78C3311A73135241, _vehicle);
		}
		/// <summary>
		/// Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
		/// </summary>
		public static int GetVehicleNumberOfPassengers(int _vehicle)
		{
			return Function.Call<int>((Hash)0x59F3F16577CD79B2, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleMaxNumberOfPassengers(int _vehicle)
		{
			return Function.Call<int>((Hash)0xA9C55F1C15E62E06, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleModelNumberOfSeats(uint _modelHash)
		{
			return Function.Call<int>((Hash)0x9A578736FF3A17C3, _modelHash);
		}
		/// <summary>
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static bool IsSeatWarpOnly(int _vehicle, int _seatIndex)
		{
			return Function.Call<bool>((Hash)0x7892685BF6D9775E, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleTurretSeat(int _vehicle, int _seatIndex)
		{
			return Function.Call<bool>((Hash)0xFF5791B7639C2A46, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa9e185d498b9ac67(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xA9E185D498B9AC67, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0x606374EBFC27B133, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRandomVehicleDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0x1F91D44490E1EA0C, _multiplier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetParkedVehicleDensityMultiplierThisFrame(float _multiplier)
		{
			Function.Call((Hash)0xFEDFA97638D61D4A, _multiplier);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void SetDisableRandomTrainsThisFrame(bool _toggle)
		{
			Function.Call((Hash)0xD4288603E8766FF7, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDoorsLocked(int _vehicle, int _doorLockStatus)
		{
			Function.Call((Hash)0x96F78A6A075D55D9, _vehicle, _doorLockStatus);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// </summary>
		public static void SetVehicleIndividualDoorsLocked(int _vehicle, int _doorId, int _doorLockStatus)
		{
			Function.Call((Hash)0xA9F1D75195CC40F6, _vehicle, _doorId, _doorLockStatus);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDoorsLockedForPlayer(int _vehicle, int _player, bool _toggle)
		{
			Function.Call((Hash)0x359A8EA1FB8D6F0F, _vehicle, _player, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleDoorsLockedForPlayer(int _vehicle, int _player)
		{
			return Function.Call<bool>((Hash)0xFA2CDDFEB8BC898B, _vehicle, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDoorsLockedForAllPlayers(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x2381977DA948F8DC, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDoorsLockedForTeam(int _vehicle, int _team, bool _toggle)
		{
			Function.Call((Hash)0xE712BC978770F105, _vehicle, _team, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleDoorsLockedForTeam(int _vehicle, int _team)
		{
			return Function.Call<bool>((Hash)0xDD1E1393D966D39A, _vehicle, _team);
		}
		/// <summary>
		/// Explodes a selected vehicle.
		/// 
		/// Vehicle vehicle = Vehicle you want to explode.
		/// BOOL isAudible = If explosion makes a sound.
		/// BOOL isInvisible = If the explosion is invisible or not.
		/// 
		/// First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
		/// </summary>
		public static void ExplodeVehicle(int _vehicle, bool _isAudible, bool _isInvisible, int _p3, int _p4)
		{
			Function.Call((Hash)0x75DCED9EEC5769D7, _vehicle, _isAudible, _isInvisible, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x750d42c013f64ae7(int _p0, int _p1)
		{
			Function.Call((Hash)0x750D42C013F64AE7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe78993ff9022c064(int _p0)
		{
			Function.Call((Hash)0xE78993FF9022C064, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x9868c0d0134855f7(int _p0)
		{
			Function.Call((Hash)0x9868C0D0134855F7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HideHorseReins(int _vehicle)
		{
			Function.Call((Hash)0x201B8ED4FF7FE9F5, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ShowHorseReins(int _vehicle)
		{
			Function.Call((Hash)0x41CDA90EE3450921, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd21a3d421e7f09f7(int _p0, int _p1)
		{
			Function.Call((Hash)0xD21A3D421E7F09F7, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa13028e22564a1bd(int _p0, int _p1)
		{
			Function.Call((Hash)0xA13028E22564A1BD, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x485b05ef05b9aee9(int _p0, int _p1)
		{
			Function.Call((Hash)0x485B05EF05B9AEE9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBoatAnchor(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xAEAB044F05B92659, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6b53f4b811e583d2(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x6B53F4B811E583D2, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool CanAnchorBoatHere(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xC075176CFB8B4128, _vehicle);
		}
		/// <summary>
		/// Old name: _SET_BOAT_FROZEN_WHEN_ANCHORED
		/// </summary>
		public static void SetBoatRemainsAnchoredWhilePlayerIsDriver(int _vehicle, bool _p1, bool _p2)
		{
			Function.Call((Hash)0x286771F3059A37A7, _vehicle, _p1, _p2);
		}
		/// <summary>
		/// Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
		/// </summary>
		public static void SetForceLowLodAnchorMode(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x75B49ACD73617437, _vehicle, _p1);
		}
		/// <summary>
		/// Value: mostly 99999.9f
		/// 
		/// Old name: _SET_BOAT_MOVEMENT_RESISTANCE
		/// </summary>
		public static void SetBoatLowLodAnchorDistance(int _vehicle, float _value)
		{
			Function.Call((Hash)0xE3261532550D6A9F, _vehicle, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBoatSinksWhenWrecked(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x62A6D317A011EA1D, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetForceHighLodVehicle(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x1098CDA477890165, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x98a7598c579ee871(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x98A7598C579EE871, _p0, _p1, _p2);
		}
		/// <summary>
		/// Forcing high LOD buoyancy for vehicle: p1 = false
		/// _SET_A*
		/// </summary>
		public static void Hash_0x9e8711c81aa17876(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x9E8711C81AA17876, _vehicle, _p1);
		}
		/// <summary>
		/// If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
		/// </summary>
		public static void SetVehicleStrong(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xAB315515C9F8803D, _vehicle, _toggle);
		}
		/// <summary>
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
		/// </summary>
		public static bool IsVehicleSeatFree(int _vehicle, int _seatIndex)
		{
			return Function.Call<bool>((Hash)0xE052C1B1CAA4ECE4, _vehicle, _seatIndex);
		}
		/// <summary>
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static int GetPedInVehicleSeat(int _vehicle, int _seatIndex)
		{
			return Function.Call<int>((Hash)0xBB40DD2270B65366, _vehicle, _seatIndex);
		}
		/// <summary>
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static int GetLastPedInVehicleSeat(int _vehicle, int _seatIndex)
		{
			return Function.Call<int>((Hash)0x74583B19FEEAFDA7, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsDraftVehicle(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xEA44E97849E9F3DD, _vehicle);
		}
		/// <summary>
		/// enum eDraftHarness
		/// {
		/// 	DRAFT_HARNESS_LR,
		/// 	DRAFT_HARNESS_RR,
		/// 	DRAFT_HARNESS_LM,
		/// 	DRAFT_HARNESS_RM,
		/// 	DRAFT_HARNESS_LF,
		/// 	DRAFT_HARNESS_RF,
		/// 	DRAFT_HARNESS_COUNT
		/// };
		/// </summary>
		public static int GetPedInDraftHarness(int _vehicle, int _harnessId)
		{
			return Function.Call<int>((Hash)0xA8BA0BAE0173457B, _vehicle, _harnessId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleForwardSpeed(int _vehicle, float _speed)
		{
			Function.Call((Hash)0xF9F92AF49F12F6E7, _vehicle, _speed);
		}
		/// <summary>
		/// This native makes the vehicle stop immediately
		/// 
		/// distance defines how far it will travel until stopping.
		/// </summary>
		public static void BringVehicleToHalt(int _vehicle, float _distance, int _duration, bool _unknown)
		{
			Function.Call((Hash)0x260BE8F09E326A20, _vehicle, _distance, _duration, _unknown);
		}
		/// <summary>
		/// Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
		/// </summary>
		public static bool IsVehicleBroughtToHalt(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x404527BC03DA0E6C, _vehicle);
		}
		/// <summary>
		/// Old name: _STOP_BRING_VEHICLE_TO_HALT
		/// </summary>
		public static void StopBringingVehicleToHalt(int _vehicle)
		{
			Function.Call((Hash)0x7C06330BFDDA182E, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe12f5ed49f44d40d(int _p0)
		{
			Function.Call((Hash)0xE12F5ED49F44D40D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf6e3d38869d0f7ad(int _p0)
		{
			Function.Call((Hash)0xF6E3D38869D0F7AD, _p0);
		}
		/// <summary>
		/// Closes all doors of a vehicle:
		/// </summary>
		public static void SetVehicleDoorsShut(int _vehicle, bool _closeInstantly)
		{
			Function.Call((Hash)0xA4FFCD645B11F25A, _vehicle, _closeInstantly);
		}
		/// <summary>
		/// Allows you to toggle bulletproof tires.
		/// </summary>
		public static void SetVehicleTyresCanBurst(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xEBD0A4E935106FE5, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleWheelsCanBreak(int _vehicle, bool _enabled)
		{
			Function.Call((Hash)0x839137C40275FB77, _vehicle, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDoorsToOpenAtAnyDistance(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x362CEDD2A41E0747, _vehicle, _toggle);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// Can also be used on trains and its wagons
		/// </summary>
		public static void SetVehicleDoorOpen(int _vehicle, int _doorId, bool _loose, bool _openInstantly)
		{
			Function.Call((Hash)0x550CE392A4672412, _vehicle, _doorId, _loose, _openInstantly);
		}
		/// <summary>
		/// windowIndex:
		/// 0 = Front Right Window
		/// 1 = Front Left Window
		/// 2 = Back Right Window
		/// 3 = Back Left Window
		/// </summary>
		public static void RemoveVehicleWindow(int _vehicle, int _windowIndex)
		{
			Function.Call((Hash)0x745F15A215F2DDF1, _vehicle, _windowIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8878ff3eee2868a9(int _p0, int _p1)
		{
			Function.Call((Hash)0x8878FF3EEE2868A9, _p0, _p1);
		}
		/// <summary>
		/// dirtLevel: 0.0 - 1.0
		/// </summary>
		public static void SetVehicleDirtLevel2(int _vehicle, float _dirtLevel)
		{
			Function.Call((Hash)0xBAE0EEDF93F05EAA, _vehicle, _dirtLevel);
		}
		/// <summary>
		/// mudLevel: 0.0 - 1.0
		/// </summary>
		public static void SetVehicleMudLevel(int _vehicle, float _mudLevel)
		{
			Function.Call((Hash)0x4D15E49764CB328A, _vehicle, _mudLevel);
		}
		/// <summary>
		/// Sets the vehicle's lights state.
		/// </summary>
		public static void SetVehicleLights(int _vehicle, int _state)
		{
			Function.Call((Hash)0x629F0A0E952CAE7D, _vehicle, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRandomTrains(bool _toggle)
		{
			Function.Call((Hash)0x1156C6EE7E82A98A, _toggle);
		}
		/// <summary>
		/// Returns trackIndex
		/// </summary>
		public static int Hash_0x331cbd247fc5daa8(uint _configHash, float _x, float _y, float _z, bool _direction, bool _p5)
		{
			return Function.Call<int>((Hash)0x331CBD247FC5DAA8, _configHash, _x, _y, _z, _direction, _p5);
		}
		/// <summary>
		/// Takes value returned from 0x45853F4E17D847D5
		/// </summary>
		public static bool Hash_0x0516fae561276efc(int _trackIndex)
		{
			return Function.Call<bool>((Hash)0x0516FAE561276EFC, _trackIndex);
		}
		/// <summary>
		/// Returns trackIndex
		/// </summary>
		public static int GetTrainTrackFromTrainVehicle(int _train)
		{
			return Function.Call<int>((Hash)0x45853F4E17D847D5, _train);
		}
		/// <summary>
		/// Returns train
		/// </summary>
		public static int GetTrainVehicleFromTrackIndex(int _trackIndex)
		{
			return Function.Call<int>((Hash)0x6E585A616ABB8401, _trackIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x15206e88ff7617df(int _trackIndex, float _p1)
		{
			Function.Call((Hash)0x15206E88FF7617DF, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa7966807953a18ee(int _trackIndex, float _p1)
		{
			Function.Call((Hash)0xA7966807953A18EE, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6b34be961f639e21(int _trackIndex, int _p1)
		{
			Function.Call((Hash)0x6B34BE961F639E21, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe6bd7dd3fd474415(int _train, bool _p1)
		{
			Function.Call((Hash)0xE6BD7DD3FD474415, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x615b3b8e73634509(int _trackIndex, float _p1)
		{
			Function.Call((Hash)0x615B3B8E73634509, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x38e7dd70a242d5cb(int _trackIndex, int _p1)
		{
			Function.Call((Hash)0x38E7DD70A242D5CB, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x63509ddf102e08e8(int _trackIndex, int _p1)
		{
			Function.Call((Hash)0x63509DDF102E08E8, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7408b5c66ba31adb(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			Function.Call((Hash)0x7408B5C66BA31ADB, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x41365db586cd9e8e(int _trackIndex, float _p1)
		{
			Function.Call((Hash)0x41365DB586CD9E8E, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd0aabe5b9f8fa589(int _trackIndex, float _p1)
		{
			Function.Call((Hash)0xD0AABE5B9F8FA589, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x427c919e9809e370(int _trackIndex, int _p1)
		{
			Function.Call((Hash)0x427C919E9809E370, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesTrainExistOnTrack(int _trackIndex)
		{
			return Function.Call<bool>((Hash)0xC29996A337BDD099, _trackIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetTrainPositionOnTrack(int _trackIndex)
		{
			return Function.Call<Vector3>((Hash)0x1E8A921112891651, _trackIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xb4241ad8f5aee9ed(int _trackIndex)
		{
			return Function.Call<bool>((Hash)0xB4241AD8F5AEE9ED, _trackIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa230a5dde12ed374(int _p0)
		{
			Function.Call((Hash)0xA230A5DDE12ED374, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0d5fdf0d36fa10cd(int _trackIndex)
		{
			Function.Call((Hash)0x0D5FDF0D36FA10CD, _trackIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe682002db1f30669(int _p0)
		{
			Function.Call((Hash)0xE682002DB1F30669, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x718eb706b6e998a0(int _trackIndex)
		{
			Function.Call((Hash)0x718EB706B6E998A0, _trackIndex);
		}
		/// <summary>
		/// _IS_* (related to CREATE_MISSION_TRAIN)
		/// </summary>
		public static bool Hash_0xf05dfaf1adfef2cd(uint _trainConfig, float _x, float _y, float _z, bool _direction, bool _p5)
		{
			return Function.Call<bool>((Hash)0xF05DFAF1ADFEF2CD, _trainConfig, _x, _y, _z, _direction, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd1df5e54f4acbe1a(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0xD1DF5E54F4ACBE1A, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0fddee66e3465726(int _p0)
		{
			return Function.Call<int>((Hash)0x0FDDEE66E3465726, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4c05b42a8d937796()
		{
			Function.Call((Hash)0x4C05B42A8D937796);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb961dd799a837bd7()
		{
			Function.Call((Hash)0xB961DD799A837BD7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x16b86a49e072aa85()
		{
			Function.Call((Hash)0x16B86A49E072AA85);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2a7413168f6cd5a8()
		{
			Function.Call((Hash)0x2A7413168F6CD5A8);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xfffe15b433300b8c(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xFFFE15B433300B8C, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6ea1273d525427f4(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x6EA1273D525427F4, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7be0746539def0c8(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x7BE0746539DEF0C8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3137edc899e6dae4(int _p0, int _p1)
		{
			Function.Call((Hash)0x3137EDC899E6DAE4, _p0, _p1);
		}
		/// <summary>
		/// Returns trackIndex
		/// </summary>
		public static int Hash_0x6c87f49bfa181db5(float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0x6C87F49BFA181DB5, _x, _y, _z);
		}
		/// <summary>
		/// Returns trackIndex
		/// _E* - _F*
		/// </summary>
		public static int GetTrackIndexFromCoords(float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0x85D39F5E3B6D7EB0, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetNearestTrainTrackPosition(float _x, float _y, float _z)
		{
			return Function.Call<Vector3>((Hash)0x6DE03BCC15E81710, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteAllTrains()
		{
			Function.Call((Hash)0xA3120A1385F17FF7);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0e558d3a49d759d6(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x0E558D3A49D759D6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd4907ef4334c7602(int _p0, int _p1)
		{
			Function.Call((Hash)0xD4907EF4334C7602, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x68830738a6bfb370(int _p0, int _p1)
		{
			Function.Call((Hash)0x68830738A6BFB370, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTrainSpeed(int _train, float _speed)
		{
			Function.Call((Hash)0xDFBA6BBFF7CCAFBB, _train, _speed);
		}
		/// <summary>
		/// Maximum possible speed is 30.0 (108 km/h)
		/// </summary>
		public static void SetTrainMaxSpeed(int _train, float _speed)
		{
			Function.Call((Hash)0x9F29999DFDF2AEB8, _train, _speed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTrainCruiseSpeed(int _train, float _speed)
		{
			Function.Call((Hash)0x01021EB2E96B793C, _train, _speed);
		}
		/// <summary>
		/// Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
		/// _C* (O, P, Q, R)
		/// </summary>
		public static int GetTrainCarriageTrailerNumber(int _train)
		{
			return Function.Call<int>((Hash)0x60B7D1DCC312697D, _train);
		}
		/// <summary>
		/// Returns modelHash
		/// </summary>
		public static uint GetTrainModelFromTrainConfigByCarIndex(uint _trainConfig, int _trainCarIndex)
		{
			return Function.Call<uint>((Hash)0x8DF5F6A19F99F0D5, _trainConfig, _trainCarIndex);
		}
		/// <summary>
		/// Returns amount for CAN_REGISTER_MISSION_VEHICLES
		/// </summary>
		public static int GetNumCarsFromTrainConfig(uint _trainConfig)
		{
			return Function.Call<int>((Hash)0x635423D55CA84FC8, _trainConfig);
		}
		/// <summary>
		/// Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
		/// </summary>
		public static int GetTrainCar(int _train)
		{
			return Function.Call<int>((Hash)0x671A07C9A1CD50A5, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTrainStopsForStations(int _train, bool _toggle)
		{
			Function.Call((Hash)0x4182C037AA1F0091, _train, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdd100ce1ebbf37e3(int _p0, int _p1)
		{
			Function.Call((Hash)0xDD100CE1EBBF37E3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x160c1b5ab48ab87c(int _train, float _p1)
		{
			Function.Call((Hash)0x160C1B5AB48AB87C, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTrainWaitingAtStation(int _train)
		{
			return Function.Call<bool>((Hash)0xE887BD31D97793F6, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTrainHalt(int _train)
		{
			Function.Call((Hash)0x3660BCAB3A6BB734, _train);
		}
		/// <summary>
		/// Restarts the train
		/// </summary>
		public static void SetTrainLeaveStation(int _train)
		{
			Function.Call((Hash)0x787E43477746876F, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetRandomBoats(bool _toggle)
		{
			Function.Call((Hash)0xF44D446D4E36DB87, _toggle);
		}
		/// <summary>
		/// Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
		/// For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
		/// (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
		/// </summary>
		public static void RequestVehicleRecording(int _recording, string _script)
		{
			Function.Call((Hash)0xC474CF16EDA45DC9, _recording, _script);
		}
		/// <summary>
		/// See REQUEST_VEHICLE_RECORDING
		/// </summary>
		public static bool HasVehicleRecordingBeenLoaded(int _recording, string _script)
		{
			return Function.Call<bool>((Hash)0xBA9325BE372AB6EA, _recording, _script);
		}
		/// <summary>
		/// See REQUEST_VEHICLE_RECORDING
		/// </summary>
		public static void RemoveVehicleRecording(int _p0, int _p1)
		{
			Function.Call((Hash)0x139E35755418F6AA, _p0, _p1);
		}
		/// <summary>
		/// This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
		/// 
		/// See REQUEST_VEHICLE_RECORDING
		/// </summary>
		public static Vector3 GetPositionOfVehicleRecordingAtTime(int _recording, float _time, string _script)
		{
			return Function.Call<Vector3>((Hash)0x1A00961A1BE94E5E, _recording, _time, _script);
		}
		/// <summary>
		/// This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
		/// 
		/// See REQUEST_VEHICLE_RECORDING
		/// </summary>
		public static Vector3 GetRotationOfVehicleRecordingAtTime(int _recording, float _time, string _script)
		{
			return Function.Call<Vector3>((Hash)0x61787DD28B8CC0D5, _recording, _time, _script);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetTimePositionInRecording(int _vehicle)
		{
			return Function.Call<float>((Hash)0x233B51C7913FA031, _vehicle);
		}
		/// <summary>
		/// p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
		/// 
		/// See REQUEST_VEHICLE_RECORDING
		/// </summary>
		public static void StartPlaybackRecordedVehicle(int _vehicle, int _recording, string _script, bool _p3)
		{
			Function.Call((Hash)0x4932B84E3276508E, _vehicle, _recording, _script, _p3);
		}
		/// <summary>
		/// Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
		/// </summary>
		public static void ForcePlaybackRecordedVehicleUpdate(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x59ECA796021B0539, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void StopPlaybackRecordedVehicle(int _vehicle)
		{
			Function.Call((Hash)0xBF9B4D6267E8C26D, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlaybackGoingOnForVehicle(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x02774B3A9034278F, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlaybackUsingAiGoingOnForVehicle(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x5A7472606EC5B7C1, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlaybackSpeed(int _vehicle, float _speed)
		{
			Function.Call((Hash)0xD78084EED4CD94C6, _vehicle, _speed);
		}
		/// <summary>
		/// SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
		/// </summary>
		public static void SkipTimeInPlaybackRecordedVehicle(int _vehicle, float _time)
		{
			Function.Call((Hash)0x5F5E6379C59EFC56, _vehicle, _time);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetClosestVehicle(float _x, float _y, float _z, float _radius, uint _modelHash, int _flags)
		{
			return Function.Call<int>((Hash)0x52F45D033645181B, _x, _y, _z, _radius, _modelHash, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTrainCarriage(int _train, int _trailerNumber)
		{
			return Function.Call<int>((Hash)0xD0FB093A4CDB932C, _train, _trailerNumber);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteMissionTrain(int _train)
		{
			Function.Call((Hash)0x0D3630FB07E8B570, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMissionTrainAsNoLongerNeeded(int _train, bool _p1)
		{
			Function.Call((Hash)0xBBE7648349B49BE8, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMissionTrainCoords(int _train, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x7632755962AB9922, _train, _x, _y, _z);
		}
		/// <summary>
		/// Notice: BOOL p4 was wrongly named takePassengers (?)
		/// Can be used to rotate the train by setting the BOOL direction
		/// </summary>
		public static void SetMissionTrainWarpToCoords(int _train, float _x, float _y, float _z, bool _direction)
		{
			Function.Call((Hash)0xC9EA26893C9E4024, _train, _x, _y, _z, _direction);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa72b1bf3857b94d7(int _train, bool _p1)
		{
			Function.Call((Hash)0xA72B1BF3857B94D7, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThisModelADraftVehicle(uint _model)
		{
			return Function.Call<bool>((Hash)0xB9D5BDDA88E1BB66, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThisModelABoat(uint _model)
		{
			return Function.Call<bool>((Hash)0x799CFC7C5B743B15, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsThisModelATrain(uint _model)
		{
			return Function.Call<bool>((Hash)0xFC08C8F8C1EDF174, _model);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleCanBeTargetted(int _vehicle, bool _state)
		{
			Function.Call((Hash)0x05254BA0B44ADC16, _vehicle, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDontAllowPlayerToEnterVehicleIfLockedForPlayer(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x63DC1F22C903B709, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleCanBeVisiblyDamaged(int _vehicle, bool _state)
		{
			Function.Call((Hash)0x4BF8131AE811541C, _vehicle, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleHasUnbreakableLights(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xC903855E028A05F2, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleRespectsLocksWhenHasDriver(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x33992A808DF1C1BA, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleCanEjectPassengersIfLocked(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x065D03A9D6B2C6B5, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDirtLevel(int _vehicle, float _dirtLevel)
		{
			Function.Call((Hash)0x758C3460EE915D0A, _vehicle, _dirtLevel);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// </summary>
		public static bool IsVehicleDoorFullyOpen(int _vehicle, int _doorId)
		{
			return Function.Call<bool>((Hash)0x7AE191143C7A9107, _vehicle, _doorId);
		}
		/// <summary>
		/// Starts or stops the engine on the specified vehicle.
		/// 
		/// vehicle: The vehicle to start or stop the engine on.
		/// value: true to turn the vehicle on; false to turn it off.
		/// instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
		/// </summary>
		public static void SetVehicleEngineOn(int _vehicle, bool _value, bool _instantly)
		{
			Function.Call((Hash)0xB64CFA14CB9A2E78, _vehicle, _value, _instantly);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleUndriveable(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x6E884BAB713A2A94, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleProvidesCover(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x652712478F1721F4, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3053064f909b5f42(int _p0, int _p1)
		{
			Function.Call((Hash)0x3053064F909B5F42, _p0, _p1);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// </summary>
		public static void SetVehicleDoorControl(int _vehicle, int _doorId, int _speed, float _angle)
		{
			Function.Call((Hash)0xD57F10EBBA814ECF, _vehicle, _doorId, _speed, _angle);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// </summary>
		public static void SetVehicleDoorLatched(int _vehicle, int _doorId, bool _p2, bool _p3, bool _p4)
		{
			Function.Call((Hash)0x06F8A202EB312A3C, _vehicle, _doorId, _p2, _p3, _p4);
		}
		/// <summary>
		/// doorId: enum eDoorId
		/// {
		/// 	VEH_EXT_DOOR_INVALID_ID = -1,
		/// 	VEH_EXT_DOOR_DSIDE_F,
		/// 	VEH_EXT_DOOR_DSIDE_M,
		/// 	VEH_EXT_DOOR_DSIDE_M1,
		/// 	VEH_EXT_DOOR_DSIDE_M2,
		/// 	VEH_EXT_DOOR_DSIDE_R,
		/// 	VEH_EXT_DOOR_PSIDE_F,
		/// 	VEH_EXT_DOOR_PSIDE_M,
		/// 	VEH_EXT_DOOR_PSIDE_M1,
		/// 	VEH_EXT_DOOR_PSIDE_M2,
		/// 	VEH_EXT_DOOR_PSIDE_R,
		/// 	VEH_EXT_BONNET,
		/// 	VEH_EXT_BOOT
		/// };
		/// </summary>
		public static void SetVehicleDoorShut(int _vehicle, int _doorId, bool _closeInstantly)
		{
			Function.Call((Hash)0x6A3C24B91FD0EA09, _vehicle, _doorId, _closeInstantly);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// </summary>
		public static void SetVehicleDoorBroken(int _vehicle, int _doorId, bool _deleteDoor)
		{
			Function.Call((Hash)0x9666CF20A1C6D780, _vehicle, _doorId, _deleteDoor);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleCanBreak(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xC5ED9D59B4646611, _vehicle, _toggle);
		}
		/// <summary>
		/// Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
		/// </summary>
		public static void SetVehicleIsConsideredByPlayer(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x54800D386C5825E5, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleMayBeUsedByGotoPointAnyMeans(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x7549B9E841940695, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleDoorLockStatus(int _vehicle)
		{
			return Function.Call<int>((Hash)0xC867FD144F2469D3, _vehicle);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// 
		/// Old name: _SET_VEHICLE_DOOR_CAN_BREAK
		/// </summary>
		public static void SetDoorAllowedToBeBrokenOff(int _vehicle, int _doorId, bool _isBreakable)
		{
			Function.Call((Hash)0x081FB9D6422F804C, _vehicle, _doorId, _isBreakable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleOnAllWheels(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x0D5D119529654EE0, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetTrainDirection(int _train)
		{
			return Function.Call<bool>((Hash)0x3C9628A811CBD724, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetTrainDirectionFromIndex(int _trackIndex)
		{
			return Function.Call<bool>((Hash)0x67995318F5FAA496, _trackIndex);
		}
		/// <summary>
		/// _RESET_VEHICLE_*
		/// </summary>
		public static int Hash_0x09034479e6e3e269(int _train, uint _trainTrack, int _junctionIndex)
		{
			return Function.Call<int>((Hash)0x09034479E6E3E269, _train, _trainTrack, _junctionIndex);
		}
		/// <summary>
		/// Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
		/// </summary>
		public static bool GetTrainTrackJunctionAtCoords(uint _trainTrack, float _x, float _y, float _z, int _junctionIndex)
		{
			return Function.Call<bool>((Hash)0x86AFC343CF7F0B34, _trainTrack, _x, _y, _z, _junctionIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd9bf3ed8efb67ea3(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0xD9BF3ED8EFB67EA3, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0x785639d89f8451ab(int _p0, int _p1)
		{
			return Function.Call<Vector3>((Hash)0x785639D89F8451AB, _p0, _p1);
		}
		/// <summary>
		/// trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
		/// </summary>
		public static void SetTrainTrackJunctionSwitch(uint _trainTrack, int _junctionIndex, bool _enabled)
		{
			Function.Call((Hash)0xE6C5E2125EB210C1, _trainTrack, _junctionIndex, _enabled);
		}
		/// <summary>
		/// Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
		/// </summary>
		public static void Hash_0x3abfa128f5bf5a70(uint _trainTrack, int _junctionIndex, bool _enabled)
		{
			Function.Call((Hash)0x3ABFA128F5BF5A70, _trainTrack, _junctionIndex, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2c46d2a591d8c322(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x2C46D2A591D8C322, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xcaff2c9747103c02(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xCAFF2C9747103C02, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllJunctionsCleared()
		{
			Function.Call((Hash)0x138398153824E332);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x34bcf6209b9668a7(int _trackIndex, int _p1)
		{
			Function.Call((Hash)0x34BCF6209B9668A7, _trackIndex, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd0ba1853d76683c8(int _trackIndex, float _x, float _y, float _z, int _p4)
		{
			Function.Call((Hash)0xD0BA1853D76683C8, _trackIndex, _x, _y, _z, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetTrainOffsetFromStation(int _train, float _offset)
		{
			Function.Call((Hash)0x8EC47DD4300BF063, _train, _offset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc69f6913cca0b99(int _p0, int _p1)
		{
			Function.Call((Hash)0xDC69F6913CCA0B99, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x7840576c50a13dba(int _train, bool _p1)
		{
			Function.Call((Hash)0x7840576C50A13DBA, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd0116df21e6c7b36(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xD0116DF21E6C7B36, _p0, _p1);
		}
		/// <summary>
		/// Only used in train_robbery4 R* Script
		/// _C* - _DEL*
		/// </summary>
		public static void DetachWagonEntityFromTrain(int _entity)
		{
			Function.Call((Hash)0x54CBDD6E1B4CB4DF, _entity);
		}
		/// <summary>
		/// Returns p1 for 0xBA958F68031DDBFC (stationIndex)
		/// _GET_N* (NEAREST_STATION_FOR_TRAIN?)
		/// </summary>
		public static int Hash_0x1180a2974d251b7b(int _train)
		{
			return Function.Call<int>((Hash)0x1180A2974D251B7B, _train);
		}
		/// <summary>
		/// Returns p1 for 0xBA958F68031DDBFC (stationIndex)
		/// </summary>
		public static int GetCurrentStationForTrain(int _train)
		{
			return Function.Call<int>((Hash)0x86FA6D8B48667D75, _train);
		}
		/// <summary>
		/// _GET_P - _GET_T*
		/// </summary>
		public static uint Hash_0x9cc94a948eaf5372(int _trackIndex, int _stationIndex)
		{
			return Function.Call<uint>((Hash)0x9CC94A948EAF5372, _trackIndex, _stationIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xde8c5b9f65017fa1(int _train)
		{
			return Function.Call<int>((Hash)0xDE8C5B9F65017FA1, _train);
		}
		/// <summary>
		/// Returns p0 for 0xBA958F68031DDBFC (trackIndex)
		/// </summary>
		public static int GetCurrentTrackForTrain(int _train)
		{
			return Function.Call<int>((Hash)0xAF787E081AC4A8EE, _train);
		}
		/// <summary>
		/// Returns Coords of vStation
		/// p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
		/// _GET_P* - _GET_T*
		/// </summary>
		public static Vector3 GetStationCoorsFromTrainStationData(int _trackIndex, int _stationIndex)
		{
			return Function.Call<Vector3>((Hash)0xBA958F68031DDBFC, _trackIndex, _stationIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTrackIndexOfTrain(int _train)
		{
			return Function.Call<int>((Hash)0x865FEC2FA899F29C, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1a861f899ebbe17c(int _train, bool _p1)
		{
			Function.Call((Hash)0x1A861F899EBBE17C, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf8f7da13cfbd4532(int _trackIndex, bool _p1)
		{
			Function.Call((Hash)0xF8F7DA13CFBD4532, _trackIndex, _p1);
		}
		/// <summary>
		/// whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
		/// p2 = true seems to mute the sound
		/// </summary>
		public static void TriggerTrainWhistle(int _train, string _whistleSequence, bool _p2, bool _p3)
		{
			Function.Call((Hash)0xCFE122EC635CC2B2, _train, _whistleSequence, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2bb2b5bcf0df8008(int _p0, int _p1)
		{
			Function.Call((Hash)0x2BB2B5BCF0DF8008, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6703872ec09bc158(int _p0, int _p1)
		{
			Function.Call((Hash)0x6703872EC09BC158, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1bfbafcc6760ff02(int _train, bool _p1)
		{
			Function.Call((Hash)0x1BFBAFCC6760FF02, _train, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf5ea41c1408695fb(int _p0, int _p1, int _p2, int _p3)
		{
			return Function.Call<int>((Hash)0xF5EA41C1408695FB, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// This fixes a vehicle.
		/// If the vehicle's engine's broken then you cannot fix it with this native.
		/// </summary>
		public static void SetVehicleFixed(int _vehicle)
		{
			Function.Call((Hash)0x79811282A9D1AE56, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisableVehiclePetrolTankFires(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xB70986AB19B04AFF, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisableVehiclePetrolTankDamage(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x5795FBE7A2001C14, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDisableVehicleEngineFires(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xD146EE5F2B06B95E, _vehicle, _p1);
		}
		/// <summary>
		/// _SET_VEHICLE_LI*
		/// </summary>
		public static void SetVehicleLimitSpeedWhenPlayerInactive(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x8F75941C86EEBFCA, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleStopInstantlyWhenPlayerInactive(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xC84E138448507567, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveVehiclesFromGeneratorsInArea(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xC619A44639BC0CB4, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// Locks the vehicle's steering to the desired angle, explained below.
		/// 
		/// Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
		/// 
		/// Steer bias:
		/// -1.0 = full right
		/// 0.0 = centered steering
		/// 1.0 = full left
		/// </summary>
		public static void SetVehicleSteerBias(int _vehicle, float _value)
		{
			Function.Call((Hash)0x84DAAE11E9EE4FC3, _vehicle, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleExtraTurnedOn(int _vehicle, int _extraId)
		{
			return Function.Call<bool>((Hash)0xFA9A55D9C4351625, _vehicle, _extraId);
		}
		/// <summary>
		/// Note: only some vehicle have extras
		/// https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
		/// </summary>
		public static void SetVehicleExtra(int _vehicle, int _extraId, bool _disable)
		{
			Function.Call((Hash)0xBB6F89150BC9D16B, _vehicle, _extraId, _disable);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesExtraExist(int _vehicle, int _extraId)
		{
			return Function.Call<bool>((Hash)0xAF5E7E9A7620FFB5, _vehicle, _extraId);
		}
		/// <summary>
		/// Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
		/// 
		/// Radius of effect damage applied in a sphere at impact location
		/// </summary>
		public static void SetVehicleDamage(int _vehicle, float _xOffset, float _yOffset, float _zOffset, float _damage, float _radius, bool _p6)
		{
			Function.Call((Hash)0x1D7678F81452BB41, _vehicle, _xOffset, _yOffset, _zOffset, _damage, _radius, _p6);
		}
		/// <summary>
		/// Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
		/// 
		/// Minimum: -4000
		/// Maximum: 1000
		/// 
		/// -4000: Engine is destroyed
		/// 0 and below: Engine catches fire and health rapidly declines
		/// 300: Engine is smoking and losing functionality
		/// 1000: Engine is perfect
		/// </summary>
		public static float GetVehicleEngineHealth(int _vehicle)
		{
			return Function.Call<float>((Hash)0x90DBFFAC43B22081, _vehicle);
		}
		/// <summary>
		/// 1000 is max health
		/// Begins leaking gas at around 650 health
		/// -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
		/// 
		/// -------------------------
		/// Minimum: -4000
		/// Maximum: 1000
		/// 
		/// -4000: Engine is destroyed
		/// 0 and below: Engine catches fire and health rapidly declines
		/// 300: Engine is smoking and losing functionality
		/// 1000: Engine is perfect
		/// </summary>
		public static void SetVehicleEngineHealth(int _vehicle, float _health)
		{
			Function.Call((Hash)0x8BDC5B998B4654EF, _vehicle, _health);
		}
		/// <summary>
		/// 1000 is max health
		/// </summary>
		public static float GetVehiclePetrolTankHealth(int _vehicle)
		{
			return Function.Call<float>((Hash)0x1E5A9B356D5098BE, _vehicle);
		}
		/// <summary>
		/// 1000 is max health
		/// </summary>
		public static void SetVehiclePetrolTankHealth(int _vehicle, float _health)
		{
			Function.Call((Hash)0x6AB2918EE3BEC94C, _vehicle, _health);
		}
		/// <summary>
		/// VEH_STUCK_ON_ROOF = 0,
		/// VEH_STUCK_ON_SIDE,
		/// VEH_STUCK_HUNG_UP,
		/// VEH_STUCK_JAMMED
		/// </summary>
		public static bool IsVehicleStuckTimerUp(int _vehicle, int _stuckType, int _ms)
		{
			return Function.Call<bool>((Hash)0x1ABA9753939503C5, _vehicle, _stuckType, _ms);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ResetVehicleStuckTimer(int _vehicle, int _nullAttributes)
		{
			Function.Call((Hash)0x23298B468F7D88B6, _vehicle, _nullAttributes);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleDriveable(int _vehicle, bool _p1, bool _p2)
		{
			return Function.Call<bool>((Hash)0xB86D29B10F627379, _vehicle, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleWrecked(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xDDBEA5506C848227, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleOnFire(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x0E3BF7ED4169EC43, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleHasBeenOwnedByPlayer(int _vehicle, bool _owned)
		{
			Function.Call((Hash)0xBB5A3FA8ED3979C5, _vehicle, _owned);
		}
		/// <summary>
		/// Sounds the horn for the specified vehicle.
		/// 
		/// vehicle: The vehicle to activate the horn for.
		/// mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
		/// duration: The duration to sound the horn, in milliseconds.
		/// 
		/// Note: If a player is in the vehicle, it will only sound briefly.
		/// </summary>
		public static void StartVehicleHorn(int _vehicle, int _duration, uint _mode, bool _forever)
		{
			Function.Call((Hash)0xB4E3BFC39CA16057, _vehicle, _duration, _mode, _forever);
		}
		/// <summary>
		/// if true, axles won't bend.
		/// </summary>
		public static void SetVehicleHasStrongAxles(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x252253C8A45AA1FC, _vehicle, _toggle);
		}
		/// <summary>
		/// snowLevel: 0.0 - 1.0
		/// </summary>
		public static void SetVehicleSnowLevel(int _vehicle, float _snowLevel)
		{
			Function.Call((Hash)0x6F73EFAB11651D7F, _vehicle, _snowLevel);
		}
		/// <summary>
		/// wetLevel: 0.0 - 1.0
		/// </summary>
		public static void SetVehicleWetLevel(int _vehicle, float _wetLevel)
		{
			Function.Call((Hash)0x5AABB09F6FBD1F87, _vehicle, _wetLevel);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
		/// </summary>
		public static void SetVehicleTint(int _vehicle, int _tintId)
		{
			Function.Call((Hash)0x8268B098F6FCA4E2, _vehicle, _tintId);
		}
		/// <summary>
		/// https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
		/// </summary>
		public static void SetVehicleLivery(int _vehicle, int _liveryIndex)
		{
			Function.Call((Hash)0xF89D82A0582E46ED, _vehicle, _liveryIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleTint(int _vehicle)
		{
			return Function.Call<int>((Hash)0xA44D65E6C624526F, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleLivery(int _vehicle)
		{
			return Function.Call<int>((Hash)0xBB765B8FD49A796C, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleWindowIntact(int _vehicle, int _windowIndex)
		{
			return Function.Call<bool>((Hash)0x0E7910A63E05B12C, _vehicle, _windowIndex);
		}
		/// <summary>
		/// Returns false if every seat is occupied.
		/// </summary>
		public static bool AreAnyVehicleSeatsFree(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xA0A424505A1B6429, _vehicle);
		}
		/// <summary>
		/// Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
		/// </summary>
		public static void SetVehicleExplodesOnHighExplosionDamage(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xA402939C6761E1A3, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllowVehicleExplodesOnContact(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x8D3230A0ED7DE39F, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAnyVehicleNearPoint(float _x, float _y, float _z, float _radius)
		{
			return Function.Call<bool>((Hash)0x5698BA4FD04D39C4, _x, _y, _z, _radius);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestVehicleHighDetailModel(int _vehicle)
		{
			Function.Call((Hash)0x84B81EF78BD22357, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestVehicleAsset(uint _vehicleHash, int _vehicleAsset)
		{
			Function.Call((Hash)0x81A15811460FAB3A, _vehicleHash, _vehicleAsset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcf9da72002fc16bf(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xCF9DA72002FC16BF, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasVehicleAssetLoaded(int _vehicleAsset)
		{
			return Function.Call<bool>((Hash)0xB935F3154BC913C8, _vehicleAsset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveVehicleAsset(int _vehicleAsset)
		{
			Function.Call((Hash)0x888A4E675B38F5AD, _vehicleAsset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SetVehicleAutomaticallyAttaches(int _vehicle, bool _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x501354951CD942DE, _vehicle, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x104d9a7b1c0d0783(int _vehicle, float _p1)
		{
			Function.Call((Hash)0x104D9A7B1C0D0783, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleInBurnout(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x3F5029A8FC060C48, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleHandbrake(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x91BE51AEC4E99710, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void InstantlyFillVehiclePopulation()
		{
			Function.Call((Hash)0x1FF00DB43026B12F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasInstantFillVehiclePopulationFinished()
		{
			return Function.Call<bool>((Hash)0x2701D01D5E18FC31);
		}
		/// <summary>
		/// Gets the trailer of a vehicle and puts it into the trailer parameter.
		/// </summary>
		public static bool GetVehicleTrailerVehicle(int _vehicle, int _trailer)
		{
			return Function.Call<bool>((Hash)0xCF867A239EC30741, _vehicle, _trailer);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleEstimatedMaxSpeed(int _vehicle)
		{
			return Function.Call<float>((Hash)0xFE52F34491529F0B, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int AddRoadNodeSpeedZone(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10)
		{
			return Function.Call<int>((Hash)0x4C221BAC54D735C3, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool RemoveRoadNodeSpeedZone(int _speedzone)
		{
			return Function.Call<bool>((Hash)0xFE9AB3354ACE6C9C, _speedzone);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsEntryPointForSeatClear(int _ped, int _vehicle, int _seatIndex, bool _side, bool _onEnter)
		{
			return Function.Call<bool>((Hash)0x80DDCCB2F4A3EB57, _ped, _vehicle, _seatIndex, _side, _onEnter);
		}
		/// <summary>
		/// seatIndex: see CREATE_PED_INSIDE_VEHICLE
		/// </summary>
		public static bool CanShuffleSeat(int _vehicle, int _seatIndex)
		{
			return Function.Call<bool>((Hash)0xF8B2D32A2231FD24, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ModifyVehicleTopSpeed(int _vehicle, float _value)
		{
			Function.Call((Hash)0x35AD938C74CACD6A, _vehicle, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleStaysFrozenWhenCleanedUp(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x23A3AB86E0807721, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleInfluencesWantedLevel(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xC1842F40FD501DA2, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsBoatGrounded(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x30D86B2B7622D0EB, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleNotStealableAmbiently(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x09C970AE59ABF6B2, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void LockDoorsWhenNoLongerNeeded(int _vehicle)
		{
			Function.Call((Hash)0x1EF36558FBDE2DAA, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLastDrivenVehicle()
		{
			return Function.Call<int>((Hash)0xA94F3E0AB9695E19);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearLastDrivenVehicle()
		{
			Function.Call((Hash)0x0EFC5DC62E67609B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedOwnsVehicle(int _ped, int _vehicle)
		{
			Function.Call((Hash)0x838C216C2B05A009, _ped, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleOwner(int _vehicle)
		{
			return Function.Call<int>((Hash)0xB729679356A889AE, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleLodMultiplier(int _vehicle, float _multiplier)
		{
			Function.Call((Hash)0x5F5E2B1B9EAECC0F, _vehicle, _multiplier);
		}
		/// <summary>
		/// Ranges from -1 to 2? (internal type is int8)
		/// https://imgur.com/a/bPzHcft
		/// </summary>
		public static void SetVehicleLodLevel(int _vehicle, int _lodLevel)
		{
			Function.Call((Hash)0x3FA7D7D1E0EA809E, _vehicle, _lodLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetForceVehicleEngineDamageByBullet(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x7F8E2B131E1DCA6C, _vehicle, _toggle);
		}
		/// <summary>
		/// Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
		/// </summary>
		public static void CopyVehicleDamages(int _sourceVehicle, int _targetVehicle)
		{
			Function.Call((Hash)0xDBC28A8C683CD80B, _sourceVehicle, _targetVehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleShootAtTarget(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			Function.Call((Hash)0xB79BE78C665B3E6D, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetForceHdVehicle(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x373CB1283308BD7B, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TrackVehicleVisibility(int _vehicle)
		{
			Function.Call((Hash)0x1F3969B140DEE157, _vehicle);
		}
		/// <summary>
		/// Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
		/// </summary>
		public static bool IsVehicleVisible(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x424910CD5DE8C246, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x13c190302369308b(int _p0)
		{
			return Function.Call<int>((Hash)0x13C190302369308B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetEnableVehicleSlipstreaming(bool _p0)
		{
			Function.Call((Hash)0x73F1E4F6DF26FE30, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleInactiveDuringPlayback(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x4EA71B4C9DB3C3F1, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleEngineCanDegrade(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x48E4C137A71C2688, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleIsStolen(int _vehicle, bool _isStolen)
		{
			Function.Call((Hash)0x6C32FC81DFF25C9A, _vehicle, _isStolen);
		}
		/// <summary>
		/// Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
		/// </summary>
		public static void Hash_0xcbf88256e44d5d39(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xCBF88256E44D5D39, _vehicle, _p1);
		}
		/// <summary>
		/// Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
		/// </summary>
		public static void Hash_0xc325a6baa62cf8a2(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xC325A6BAA62CF8A2, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0cd7914d17a970ab(int _p0, int _p1)
		{
			Function.Call((Hash)0x0CD7914D17A970AB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x23f66c36f8e5eaab(int _p0, int _p1)
		{
			Function.Call((Hash)0x23F66C36F8E5EAAB, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x697df68f3a761a50(int _p0)
		{
			Function.Call((Hash)0x697DF68F3A761A50, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x27e3f2b57209fa54(int _p0, int _p1)
		{
			Function.Call((Hash)0x27E3F2B57209FA54, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableVehicleWeapon(bool _disabled, uint _weaponHash, int _vehicle, int _owner)
		{
			Function.Call((Hash)0x94B1E71B144356A5, _disabled, _weaponHash, _vehicle, _owner);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleCanBeUsedByFleeingPeds(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xE42952510F84AFDB, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleKeepEngineOnWhenAbandoned(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x1549BA7FE83A2383, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleWheelsCanBreakOffWhenBlowUp(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xC462C79379ABBCB1, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x15cc8c33d7ffcc4a(int _vehicle, int _p1)
		{
			Function.Call((Hash)0x15CC8C33D7FFCC4A, _vehicle, _p1);
		}
		/// <summary>
		/// Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
		/// </summary>
		public static void SetVehicleAiCanUseExclusiveSeats(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0x0893DAFBFA67110E, _vehicle, _toggle);
		}
		/// <summary>
		/// index: 0 - 1
		/// 
		/// Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
		/// </summary>
		public static void SetVehicleExclusiveDriver(int _vehicle, int _ped, int _index)
		{
			Function.Call((Hash)0xC6B9BF123B9463B6, _vehicle, _ped, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedExclusiveDriverOfVehicle(int _ped, int _vehicle, int _outIndex)
		{
			return Function.Call<bool>((Hash)0xB213D2A560B2E48B, _ped, _vehicle, _outIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc0556d0f484ecaa(int _p0)
		{
			Function.Call((Hash)0xDC0556D0F484ECAA, _p0);
		}
		/// <summary>
		/// Old name: _SET_DISABLE_SUPERDUMMY_MODE
		/// </summary>
		public static void SetDisableSuperdummy(int _vehicle, bool _disable)
		{
			Function.Call((Hash)0x1716D787D9B94202, _vehicle, _disable);
		}
		/// <summary>
		/// Seems related to vehicle health, like the one in IV.
		/// Max 1000, min 0.
		/// Vehicle does not necessarily explode or become undrivable at 0.
		/// </summary>
		public static float GetVehicleBodyHealth(int _vehicle)
		{
			return Function.Call<float>((Hash)0x42113B857E33C16E, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleBodyHealth(int _vehicle, float _value)
		{
			Function.Call((Hash)0x55CCAAE4F28C67A0, _vehicle, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xe777ddf3e78397e8(int _p0)
		{
			return Function.Call<int>((Hash)0xE777DDF3E78397E8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleBrokenPartsDontAffectAiHandling(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xCEC4CA2CAB8FA98C, _vehicle, _p1);
		}
		/// <summary>
		/// Only used in SP Scripts.
		/// Related to Vehicle Speed.
		/// </summary>
		public static void Hash_0x012701ed938b85de(float _p0, float _p1)
		{
			Function.Call((Hash)0x012701ED938B85DE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8379e05871ad24e0()
		{
			Function.Call((Hash)0x8379E05871AD24E0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetHorseTrafficGroupingDistribution(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xF5FFB08976911B50, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool AttachDraftVehicleHarnessPed(int _mount, int _draft, int _harnessId)
		{
			return Function.Call<bool>((Hash)0x316CDB5B6E8F4110, _mount, _draft, _harnessId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DetachDraftVehicleHarnessFromIndex(int _draft, int _harnessId)
		{
			return Function.Call<bool>((Hash)0x4402960666000E62, _draft, _harnessId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DetachDraftVehicleHarnessPed(int _draft, int _ped)
		{
			return Function.Call<bool>((Hash)0xB36D3EC70963BE60, _draft, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0f7f603bde08c4d3(int _p0)
		{
			Function.Call((Hash)0x0F7F603BDE08C4D3, _p0);
		}
		/// <summary>
		/// Returns number of horses a wagon can have
		/// </summary>
		public static int GetNumDraftVehicleHarnessPed(uint _modelHash)
		{
			return Function.Call<int>((Hash)0x5B1A26BB18E7D451, _modelHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetCheckpointTrainSpawnLocation(int _trackIndex, float _x, float _y, float _z, float _distance, bool _direction)
		{
			return Function.Call<Vector3>((Hash)0x35D302397E524939, _trackIndex, _x, _y, _z, _distance, _direction);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc399cc89fba05da0(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xC399CC89FBA05DA0, _vehicle, _p1);
		}
		/// <summary>
		/// Returns handles of boat paddles entities.
		/// </summary>
		public static void GetRowingOars(int _vehicle, int _left, int _right)
		{
			Function.Call((Hash)0xA6E210FB4283B767, _vehicle, _left, _right);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetDriverOfVehicle(int _vehicle)
		{
			return Function.Call<int>((Hash)0x2963B5C1637E8A27, _vehicle);
		}
		/// <summary>
		/// Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
		/// </summary>
		public static void SetForceCoachRobberyLoot(int _vehicle, uint _coachrobberyLoot)
		{
			Function.Call((Hash)0xF489F94BFEE12BB0, _vehicle, _coachrobberyLoot);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x0ba4250d20007c2e(int _p0)
		{
			return Function.Call<int>((Hash)0x0BA4250D20007C2E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2200ab13cbd10f4e(int _vehicle, float _x, float _y, float _z, bool _p4, float _p5)
		{
			Function.Call((Hash)0x2200AB13CBD10F4E, _vehicle, _x, _y, _z, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb42c87521d1bdd2f(int _vehicle, float _x, float _y, float _z)
		{
			Function.Call((Hash)0xB42C87521D1BDD2F, _vehicle, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc351394b932a6a50(int _p0)
		{
			Function.Call((Hash)0xC351394B932A6A50, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x172e9dd35858dcd7(int _p0)
		{
			Function.Call((Hash)0x172E9DD35858DCD7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetBreakableVehicleLocksState(int _vehicle)
		{
			return Function.Call<int>((Hash)0xE015CF1F2C0959D8, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x877ea24eb1614495(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x877EA24EB1614495, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetBreakableVehicleLockObject(int _vehicle, int _index)
		{
			return Function.Call<int>((Hash)0x58F2244C1286D09A, _vehicle, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumBreakableVehicleLockObjects(int _vehicle)
		{
			return Function.Call<int>((Hash)0x2FA86833E3617E2D, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetBreakableVehicleLocksUnbreakable(int _vehicle, bool _toggle)
		{
			Function.Call((Hash)0xBC4735F48CD983EF, _vehicle, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9d12796ef4bf9ea9(int _p0)
		{
			Function.Call((Hash)0x9D12796EF4BF9EA9, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x850ce59dec2028f3(int _vehicle, int _p1)
		{
			Function.Call((Hash)0x850CE59DEC2028F3, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x0355fe37240e2c77(int _p0, int _p1)
		{
			Function.Call((Hash)0x0355FE37240E2C77, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3d86997a86feef0d(int _p0, int _p1)
		{
			Function.Call((Hash)0x3D86997A86FEEF0D, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd826690b5cf3beff(int _vehicle, int _p1)
		{
			Function.Call((Hash)0xD826690B5CF3BEFF, _vehicle, _p1);
		}
		/// <summary>
		/// Params: destroyingForce is usually 100f in R* Scripts
		/// Similar to 0xD4F5EFB55769D272, _A*
		/// </summary>
		public static void BreakOffDraftWheel(int _vehicle, int _wheelIndex, float _destroyingForce)
		{
			Function.Call((Hash)0xC372B6A88F6E4AD8, _vehicle, _wheelIndex, _destroyingForce);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetDraftAnimalCount(int _vehicle, int _expected, int _actual)
		{
			return Function.Call<bool>((Hash)0xA19447D83294E29F, _vehicle, _expected, _actual);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x165be2001e5e4b75(int _p0)
		{
			Function.Call((Hash)0x165BE2001E5E4B75, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDraftVehicleAnimalsCanDetach(int _draft, bool _canDetach)
		{
			Function.Call((Hash)0x6090A031C69F384E, _draft, _canDetach);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDraftVehicleYokeCanBreak(int _draft, bool _canBreak)
		{
			Function.Call((Hash)0x226C6A4E3346D288, _draft, _canBreak);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddTrainTemporaryStop(int _train, int _trackIndex, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x41503629D1139ABC, _train, _trackIndex, _x, _y, _z);
		}
		/// <summary>
		/// _SET_VEHICLE_S*
		/// </summary>
		public static void Hash_0x0794199b25e499e1(int _wagon, bool _p1)
		{
			Function.Call((Hash)0x0794199B25E499E1, _wagon, _p1);
		}
		/// <summary>
		/// _SET_VEHICLE_WHEELS_*
		/// </summary>
		public static void Hash_0x73118a3ee9c9b6db(int _wagon, int _p1, bool _p2)
		{
			Function.Call((Hash)0x73118A3EE9C9B6DB, _wagon, _p1, _p2);
		}
		/// <summary>
		/// Only used in R* SP Script rcm_abigail31: p1 = 5
		/// _GET_VEHICLE_T* - _GET_VO*
		/// </summary>
		public static bool Hash_0xe1c0f8781bf130c2(int _wagon, int _p1)
		{
			return Function.Call<bool>((Hash)0xE1C0F8781BF130C2, _wagon, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleWheelDestroyed(int _vehicle, int _wheel)
		{
			return Function.Call<bool>((Hash)0xCB2CA620C48BC875, _vehicle, _wheel);
		}
		/// <summary>
		/// _ARE_ANY_VEHICLE_(WHEELS_DESTROYED?)*
		/// </summary>
		public static bool Hash_0x18714953cced17d3(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x18714953CCED17D3, _vehicle);
		}
		/// <summary>
		/// _H*
		/// </summary>
		public static void Hash_0x41f0b254ddf71473(int _wagon)
		{
			Function.Call((Hash)0x41F0B254DDF71473, _wagon);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleDeterioration(int _vehicle, float _amount, int _p2, bool _p3)
		{
			Function.Call((Hash)0x8E5DA070BAD3279E, _vehicle, _amount, _p2, _p3);
		}
		/// <summary>
		/// doorId: see SET_VEHICLE_DOOR_SHUT
		/// </summary>
		public static bool IsVehicleDoorBroken(int _vehicle, int _doorId)
		{
			return Function.Call<bool>((Hash)0xE979BB5602AD3402, _vehicle, _doorId);
		}
		/// <summary>
		/// wheelIndex 0: left, wheelIndex 1: right, 4 & 5: unknown
		/// </summary>
		public static int BreakOffVehicleWheel(int _vehicle, int _wheelIndex)
		{
			return Function.Call<int>((Hash)0xD4F5EFB55769D272, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// Spawn without lanterns set
		/// </summary>
		public static bool DeleteVehicleLanterns(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xE1A83D4A3B5D7938, _vehicle);
		}
		/// <summary>
		/// _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
		/// </summary>
		public static void Hash_0x6de072ac8a95ffc1(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x6DE072AC8A95FFC1, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDraftVehicleDesiredSpeed(int _vehicle, float _speed)
		{
			Function.Call((Hash)0x0C3F0F7F92CA847C, _vehicle, _speed);
		}
		/// <summary>
		/// Returns rage::NumericLimits<float>::kMax (3.402823466e+38) if vehicle is not a valid vehicle of type VEHICLE_TYPE_DRAFT.
		/// </summary>
		public static float GetDraftVehicleDesiredSpeed(int _vehicle)
		{
			return Function.Call<float>((Hash)0xC6D7DDC843176701, _vehicle);
		}
		/// <summary>
		/// _SET_DRAFT_VEHICLE_(STOP?)*
		/// </summary>
		public static void Hash_0xc4a2c11fc0d41916(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xC4A2C11FC0D41916, _vehicle, _p1);
		}
		/// <summary>
		/// _SET_DRAFT_VEHICLE_*
		/// </summary>
		public static void Hash_0xfc4f15a7dddc47b1(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0xFC4F15A7DDDC47B1, _vehicle, _p1);
		}
		/// <summary>
		/// Params: p1 usually true in R* Scripts
		/// _SET_DRAFT_VEHICLE_*
		/// </summary>
		public static void Hash_0x4c60c333f9cca2b6(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x4C60C333F9CCA2B6, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcf342503ca4c8df1(int _vehicle, float _p1)
		{
			Function.Call((Hash)0xCF342503CA4C8DF1, _vehicle, _p1);
		}
		/// <summary>
		/// _SET_TRAIN_*
		/// </summary>
		public static void Hash_0x06a09a6e0c6d2a84(int _train, bool _p1)
		{
			Function.Call((Hash)0x06A09A6E0C6D2A84, _train, _p1);
		}
		/// <summary>
		/// _SET_TRAIN_*
		/// </summary>
		public static void Hash_0xae7e66a61e7c17a5(int _train, bool _p1)
		{
			Function.Call((Hash)0xAE7E66A61E7C17A5, _train, _p1);
		}
		/// <summary>
		/// _SET_TRAIN_*
		/// </summary>
		public static void Hash_0xef28a614b4b264b8(int _train, bool _p1)
		{
			Function.Call((Hash)0xEF28A614B4B264B8, _train, _p1);
		}
		/// <summary>
		/// _SET_VEHICLE_*
		/// </summary>
		public static void Hash_0x04f0579dbdd32f34(int _vehicle)
		{
			Function.Call((Hash)0x04F0579DBDD32F34, _vehicle);
		}
		/// <summary>
		/// Params: coords = GET_ENTITY_VELOCITY
		/// _SET_VELOCITY*
		/// </summary>
		public static void Hash_0x12f6c6ed3eff42de(int _vehicle, float _x, float _y, float _z)
		{
			Function.Call((Hash)0x12F6C6ED3EFF42DE, _vehicle, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x87b974e54c71ba7b(int _vehicle, bool _p1)
		{
			Function.Call((Hash)0x87B974E54C71BA7B, _vehicle, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasTrainLoaded(int _train)
		{
			return Function.Call<bool>((Hash)0xBD3C4A2ED509205E, _train);
		}
		/// <summary>
		/// configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
		/// For more information, see trainconfigs.ymt
		/// To make the train AI controlled, set conductor to true and set the speed once.
		/// </summary>
		public static int CreateMissionTrain(uint _configHash, float _x, float _y, float _z, bool _direction, bool _passengers, bool _p6, bool _conductor)
		{
			return Function.Call<int>((Hash)0xC239DBD9A57D2A71, _configHash, _x, _y, _z, _direction, _passengers, _p6, _conductor);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd1efa8d68bf5d63d(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xD1EFA8D68BF5D63D, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x1121b07088ed3013(int _p0)
		{
			return Function.Call<int>((Hash)0x1121B07088ED3013, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x42404d57d621601a(int _p0)
		{
			return Function.Call<int>((Hash)0x42404D57D621601A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x288cbb414c3c2fbb(int _p0)
		{
			return Function.Call<int>((Hash)0x288CBB414C3C2FBB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6fd7bdf10304363a(int _p0, int _p1)
		{
			Function.Call((Hash)0x6FD7BDF10304363A, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xceb1f1eed484a5b4(int _p0, int _p1)
		{
			Function.Call((Hash)0xCEB1F1EED484A5B4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf57db8e83dcd8349(int _p0)
		{
			return Function.Call<int>((Hash)0xF57DB8E83DCD8349, _p0);
		}
		/// <summary>
		/// Params: 1.0f will make balloon hover
		/// </summary>
		public static void SetBalloonHoverState(int _balloon, float _p1)
		{
			Function.Call((Hash)0x7C9E45A4CED2E8DA, _balloon, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDraftVehicleAllowDraftAnimalAutoCreation(int _vehicle, bool _allow)
		{
			Function.Call((Hash)0x87344305778E5415, _vehicle, _allow);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6835afea10e186f4(int _p0, int _p1)
		{
			Function.Call((Hash)0x6835AFEA10E186F4, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetDraftAnimalRandomSeed(int _vehicle, int _seed)
		{
			Function.Call((Hash)0x8C6D9A399126C194, _vehicle, _seed);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x14da8c4bc2ccd90a(int _p0)
		{
			return Function.Call<int>((Hash)0x14DA8C4BC2CCD90A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xcacab2b123bbdbd6(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0xCACAB2B123BBDBD6, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xff2b1f59fb892f14(int _p0)
		{
			Function.Call((Hash)0xFF2B1F59FB892F14, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x5aadc7bbbb1bceeb(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			Function.Call((Hash)0x5AADC7BBBB1BCEEB, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleIsPropSetApplied(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xD798DF5DB67B1659, _vehicle);
		}
		/// <summary>
		/// Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
		/// Screenshot: https://imgur.com/a/nsomtiv
		/// </summary>
		public static void SetBatchTarpHeight(int _vehicle, float _height, bool _immediately)
		{
			Function.Call((Hash)0x31F343383F19C987, _vehicle, _height, _immediately);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x07e2e21e799080a0(int _p0, int _p1)
		{
			Function.Call((Hash)0x07E2E21E799080A0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc2e62678d602853c(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			Function.Call((Hash)0xC2E62678D602853C, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x873aaf600cc36dac(int _p0)
		{
			Function.Call((Hash)0x873AAF600CC36DAC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x51c7694e140fae43(int _p0)
		{
			return Function.Call<int>((Hash)0x51C7694E140FAE43, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8decd262602548b9(int _p0, int _p1)
		{
			Function.Call((Hash)0x8DECD262602548B9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xcbc7b6f9a56b79f6(int _p0, int _p1)
		{
			Function.Call((Hash)0xCBC7B6F9A56B79F6, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x37d238be69f7378a(int _trackIndex)
		{
			return Function.Call<bool>((Hash)0x37D238BE69F7378A, _trackIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x703d4fb366da4452(int _p0, int _p1)
		{
			Function.Call((Hash)0x703D4FB366DA4452, _p0, _p1);
		}
		/// <summary>
		/// Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
		/// </summary>
		public static void Hash_0x762fdc4c19e5a981(int _trainCarriage, bool _p1)
		{
			Function.Call((Hash)0x762FDC4C19E5A981, _trainCarriage, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2045429505158d1a(int _p0)
		{
			return Function.Call<int>((Hash)0x2045429505158D1A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x13eb275bf81636d1(int _p0, int _p1)
		{
			Function.Call((Hash)0x13EB275BF81636D1, _p0, _p1);
		}
		// :##################: //
		// : namespace: VOICE : //
		// :##################: //
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xccf71fcfa0070b1a()
		{
			return Function.Call<bool>((Hash)0xCCF71FCFA0070B1A);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x79f478ff5f9f4f05(bool _p0)
		{
			Function.Call((Hash)0x79F478FF5F9F4F05, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xaa35fd9abab490a3(int _player)
		{
			return Function.Call<bool>((Hash)0xAA35FD9ABAB490A3, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x356135b9b10a2a82(int _gamerHandle)
		{
			return Function.Call<bool>((Hash)0x356135B9B10A2A82, _gamerHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xef6f2a35faaf2ed7(int _player)
		{
			return Function.Call<bool>((Hash)0xEF6F2A35FAAF2ED7, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x49623bcfc3a3d829(int _player, bool _muted)
		{
			return Function.Call<bool>((Hash)0x49623BCFC3A3D829, _player, _muted);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x919af2d93e9aa89d(int _player)
		{
			return Function.Call<bool>((Hash)0x919AF2D93E9AA89D, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x0ded260a1958a82e(int _player)
		{
			return Function.Call<bool>((Hash)0x0DED260A1958A82E, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x8e462db1eaa9c47c(int _player)
		{
			return Function.Call<bool>((Hash)0x8E462DB1EAA9C47C, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0x5ca7fb7d6de49dcc(int _player)
		{
			return Function.Call<float>((Hash)0x5CA7FB7D6DE49DCC, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x58125b691f6827d5(float _proximity)
		{
			Function.Call((Hash)0x58125B691F6827D5, _proximity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float Hash_0x2f82cab262c8ae26(int _player)
		{
			return Function.Call<float>((Hash)0x2F82CAB262C8AE26, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x08797a8c03868cb8(float _threshold)
		{
			Function.Call((Hash)0x08797A8C03868CB8, _threshold);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb779f4fa19269aec(int _p0)
		{
			Function.Call((Hash)0xB779F4FA19269AEC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1fbf7f5ba7e4be3a(int _p0)
		{
			Function.Call((Hash)0x1FBF7F5BA7E4BE3A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xdc9b361cb7776673(int _player)
		{
			Function.Call((Hash)0xDC9B361CB7776673, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xec8703e4536a9952()
		{
			Function.Call((Hash)0xEC8703E4536A9952);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xdb622ecd3dcbe078(int _player)
		{
			return Function.Call<int>((Hash)0xDB622ECD3DCBE078, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb6e79850b759a30e(int _teamId, bool _allow)
		{
			Function.Call((Hash)0xB6E79850B759A30E, _teamId, _allow);
		}
		/// <summary>
		/// Params: p1 = 2; p2 = 3 in R* Script net_main_offline
		/// </summary>
		public static void Hash_0x4791899615d70fa2(int _player, int _p1, int _p2)
		{
			Function.Call((Hash)0x4791899615D70FA2, _player, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf8938cf3984092a5(int _player)
		{
			Function.Call((Hash)0xF8938CF3984092A5, _player);
		}
		/// <summary>
		/// Returns p2 value of 0x4791899615D70FA2
		/// </summary>
		public static int Hash_0x767931c727df2ed7(int _player, int _p1)
		{
			return Function.Call<int>((Hash)0x767931C727DF2ED7, _player, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x1c38c3577901af1f()
		{
			Function.Call((Hash)0x1C38C3577901AF1F);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb3e8841f6bdaf83e()
		{
			Function.Call((Hash)0xB3E8841F6BDAF83E);
		}
		// :###################: //
		// : namespace: VOLUME : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeByHash(uint _volumeType, float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			return Function.Call<int>((Hash)0x502022FA1AF9DC86, _volumeType, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeBox(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			return Function.Call<int>((Hash)0xDF85637F22706891, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeCylinder(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			return Function.Call<int>((Hash)0x0522D4774B82E3E6, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeSphere(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			return Function.Call<int>((Hash)0xB3FB80A32BAE3065, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeAggregate()
		{
			return Function.Call<int>((Hash)0x59F6F5C1D129F106);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeByHashWithCustomName(uint _volumeType, float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ, string _name)
		{
			return Function.Call<int>((Hash)0x1F85E4AC774A201E, _volumeType, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateAntiGriefVolume(uint _volumeType, float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			return Function.Call<int>((Hash)0x0EB78C2B156635B1, _volumeType, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAntiGriefVolumeBlocksHorse(int _volume, bool _toggle)
		{
			Function.Call((Hash)0xBE551C2CC421185D, _volume, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAntiGriefVolumeBlocksPlayer(int _volume, bool _toggle)
		{
			Function.Call((Hash)0x5B23DFF8E0948BB2, _volume, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateWalkAndTalkVolume(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12)
		{
			return Function.Call<int>((Hash)0xFD0E389CD44434B6, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateSpeedVolume(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6, int _p7, int _p8, int _p9, int _p10, int _p11, int _p12, int _p13, int _p14)
		{
			return Function.Call<int>((Hash)0xBBE768E3AE76E07C, _p0, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9, _p10, _p11, _p12, _p13, _p14);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeBoxWithCustomName(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ, string _name)
		{
			return Function.Call<int>((Hash)0xF68485C7495D848E, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeCylinderWithCustomName(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ, string _name)
		{
			return Function.Call<int>((Hash)0xDF1E350EDDF06E59, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeSphereWithCustomName(float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ, string _name)
		{
			return Function.Call<int>((Hash)0x10157BC3247FF3BA, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ, _name);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateVolumeAggregateWithCustomName(string _name)
		{
			return Function.Call<int>((Hash)0x5D580DE6398BB162, _name);
		}
		/// <summary>
		/// _ADD_R* - _ADD_V(OLUME?)*
		/// </summary>
		public static void AddBoundsToAggregateVolume(int _volume, int _aggregate)
		{
			Function.Call((Hash)0x6E0D3C3F828DA773, _volume, _aggregate);
		}
		/// <summary>
		/// _REMOVE_E* - _REMOVE_R*
		/// </summary>
		public static void RemoveBoundsFromAggregateVolume(int _volume, int _aggregate)
		{
			Function.Call((Hash)0xF92FA8890DECECF6, _volume, _aggregate);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddVolumeToVolumeAggregate(int _aggregate, uint _typeHash, float _x, float _y, float _z, float _rotX, float _rotY, float _rotZ, float _scaleX, float _scaleY, float _scaleZ)
		{
			Function.Call((Hash)0x12FCAA23F2320422, _aggregate, _typeHash, _x, _y, _z, _rotX, _rotY, _rotZ, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddBoxVolumeToVolumeAggregate(int _aggregate, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9)
		{
			Function.Call((Hash)0x39816F6F94F385AD, _aggregate, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddCylinderVolumeToVolumeAggregate(int _aggregate, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9)
		{
			Function.Call((Hash)0xBCE668AAF83608BE, _aggregate, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddSphereVolumeToVolumeAggregate(int _aggregate, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9)
		{
			Function.Call((Hash)0x5B7D7BF36D2DE18B, _aggregate, _p1, _p2, _p3, _p4, _p5, _p6, _p7, _p8, _p9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteVolume(int _volume)
		{
			Function.Call((Hash)0x43F867EF5C463A53, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesVolumeExist(int _volume)
		{
			return Function.Call<bool>((Hash)0x92A78D0BEDB332A3, _volume);
		}
		/// <summary>
		/// Old name: _IS_POSITION_INSIDE_VOLUME
		/// </summary>
		public static bool IsPointInVolume(int _volume, float _x, float _y, float _z)
		{
			return Function.Call<bool>((Hash)0xF256A75210C5C0EB, _volume, _x, _y, _z);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetVolumeCoords(int _volume)
		{
			return Function.Call<Vector3>((Hash)0xF70F00013A62F866, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetVolumeCoords(int _volume, float _posX, float _posY, float _posZ)
		{
			return Function.Call<bool>((Hash)0x541B8576615C33DE, _volume, _posX, _posY, _posZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetVolumeRotation(int _volume)
		{
			return Function.Call<Vector3>((Hash)0x18675BC914891122, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetVolumeRotation(int _volume, float _rotX, float _rotY, float _rotZ)
		{
			return Function.Call<bool>((Hash)0xA07CF1B21B56F041, _volume, _rotX, _rotY, _rotZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetVolumeScale(int _volume)
		{
			return Function.Call<Vector3>((Hash)0x3E2A25B2416DD67E, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetVolumeScale(int _volume, float _scaleX, float _scaleY, float _scaleZ)
		{
			return Function.Call<bool>((Hash)0xA46E98BDC407E23D, _volume, _scaleX, _scaleY, _scaleZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVolumeBounds(int _volume, Vector3 _min, Vector3 _max)
		{
			Function.Call((Hash)0x5737199AF2DC609F, _volume, _min, _max);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x748c5f51a18cb8f0(int _p0)
		{
			Function.Call((Hash)0x748C5F51A18CB8F0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x2b32b11520626229(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<int>((Hash)0x2B32B11520626229, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x40f769d31a00d5a0(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x40F769D31A00D5A0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0xd882c5b3991575b7(int _p0, int _p1, int _p2, int _p3, int _p4)
		{
			return Function.Call<Vector3>((Hash)0xD882C5B3991575B7, _p0, _p1, _p2, _p3, _p4);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb469cfd9e065eb99(int _p0, int _p1)
		{
			Function.Call((Hash)0xB469CFD9E065EB99, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x7fd78dfd0c5d7b9b(int _p0)
		{
			return Function.Call<int>((Hash)0x7FD78DFD0C5D7B9B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xee1d6ff54caf7714(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xEE1D6FF54CAF7714, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd52df30355ea7c8e(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD52DF30355EA7C8E, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVolumeOwnerPersistentCharacter(int _volume, int _persChar, bool _p2)
		{
			Function.Call((Hash)0xE2BE6FFA4A13CBB0, _volume, _persChar, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x6d5f9e69ba1be783(int _p0)
		{
			Function.Call((Hash)0x6D5F9E69BA1BE783, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x998202b206872672(int _p0)
		{
			Function.Call((Hash)0x998202B206872672, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4a8fefc43fd8ac9b(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x4A8FEFC43FD8AC9B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf3a2fba5985c8cd5(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xF3A2FBA5985C8CD5, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x53d05d60e5f5b40c(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0x53D05D60E5F5B40C, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xca5c90d40665d5ce(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xCA5C90D40665D5CE, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x3efabb21e14a6bd1(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x3EFABB21E14A6BD1, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAggregateVolume(int _volume)
		{
			return Function.Call<bool>((Hash)0xFEFF01B5725BCD22, _volume);
		}
		/// <summary>
		/// Params: p5 is always 0
		/// </summary>
		public static int CreateVolumeLock(float _x, float _y, float _z, float _radius, int _flag, int _p5)
		{
			return Function.Call<int>((Hash)0x00BBF7CEAE8C666A, _x, _y, _z, _radius, _flag, _p5);
		}
		/// <summary>
		/// Params: p3 is always 0
		/// </summary>
		public static int CreateVolumeLockAttachedToEntity(int _entity, float _radius, int _flag, int _p3)
		{
			return Function.Call<int>((Hash)0xF383E96C4904DF0C, _entity, _radius, _flag, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVolumeLockRequestValid2(int _volLockRequestId)
		{
			return Function.Call<bool>((Hash)0xF6A8A652A6B186CD, _volLockRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 Hash_0xc4019cf9ae8e931a(int _p0)
		{
			return Function.Call<Vector3>((Hash)0xC4019CF9AE8E931A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf6ce6f9c3897804e(int _p0)
		{
			return Function.Call<int>((Hash)0xF6CE6F9C3897804E, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf6f5447d418daa82(int _p0)
		{
			return Function.Call<int>((Hash)0xF6F5447D418DAA82, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd4fa73fe628fec63(int _p0, int _p1)
		{
			Function.Call((Hash)0xD4FA73FE628FEC63, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb440f4e35393fc39(int _p0, int _p1)
		{
			Function.Call((Hash)0xB440F4E35393FC39, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd460135c98940274(int _p0, int _p1)
		{
			Function.Call((Hash)0xD460135C98940274, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xeba87b9273835cf3(int _p0, int _p1)
		{
			Function.Call((Hash)0xEBA87B9273835CF3, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xaa9ee2aafc717623(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xAA9EE2AAFC717623, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x870e9981ed27c815(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0x870E9981ED27C815, _p0, _p1, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesVolumeCollideWithAnyVolumeLock(float _x, float _y, float _z, float _radius, bool _p4, int _p5, int _p6)
		{
			return Function.Call<bool>((Hash)0x397769175A7DBB30, _x, _y, _z, _radius, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x769bb7626b8cdb06(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0x769BB7626B8CDB06, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x51e52c9687fcdeec(int _p0, int _p1, int _p2, int _p3, int _p4, int _p5, int _p6)
		{
			return Function.Call<int>((Hash)0x51E52C9687FCDEEC, _p0, _p1, _p2, _p3, _p4, _p5, _p6);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int FindVolumeLockRequestIdWithArgs(int _args)
		{
			return Function.Call<int>((Hash)0x77A6E4AD0C496F81, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xec43c2ffb70e3f30(int _p0, int _p1, int _p2, int _p3)
		{
			Function.Call((Hash)0xEC43C2FFB70E3F30, _p0, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x695dac2db928f308(int _p0, int _p1)
		{
			Function.Call((Hash)0x695DAC2DB928F308, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ReleaseLockVolume(int _volLockRequestId)
		{
			Function.Call((Hash)0xFDFECC6EE4491E11, _volLockRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xac355980681a7f89(int _p0)
		{
			Function.Call((Hash)0xAC355980681A7F89, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x58d3803fa639a3bb(int _p0)
		{
			return Function.Call<bool>((Hash)0x58D3803FA639A3BB, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc61e2fd926dbb406()
		{
			Function.Call((Hash)0xC61E2FD926DBB406);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RequestVolumeLock(float _x, float _y, float _z, float _radius, int _p4, int _p5)
		{
			return Function.Call<int>((Hash)0xF14BCEF290F869E1, _x, _y, _z, _radius, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RequestVolumeLockWithArgs(int _args)
		{
			return Function.Call<int>((Hash)0x183C0B6CFEFFCAE4, _args);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVolumeLockRequestValid(int _volLockRequestId)
		{
			return Function.Call<bool>((Hash)0xA4A4359320345B34, _volLockRequestId);
		}
		/// <summary>
		/// enum eVolumeLockRequestStatus
		/// {
		/// 	VOLUME_LOCK_REQUEST_STATUS_INVALID,
		/// 	VOLUME_LOCK_REQUEST_STATUS_READY,
		/// 	VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
		/// 	VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
		/// 	VOLUME_LOCK_REQUEST_STATUS_FAILED
		/// };
		/// </summary>
		public static int GetVolumeLockRequestStatus(int _volLockRequestId)
		{
			return Function.Call<int>((Hash)0xB33A604345F58202, _volLockRequestId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x351d71b8b72b858b(int _p0)
		{
			return Function.Call<int>((Hash)0x351D71B8B72B858B, _p0);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xfa15c9a320e707b0()
		{
			Function.Call((Hash)0xFA15C9A320E707B0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x52572b331e693aed(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x52572B331E693AED, _p0, _p1, _p2);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x128fc3a893bf853a(int _p0)
		{
			Function.Call((Hash)0x128FC3A893BF853A, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVolumeRelationship(int _volume, uint _relationshipGroup)
		{
			Function.Call((Hash)0xFD010A2154B40676, _volume, _relationshipGroup);
		}
		/// <summary>
		/// Returns relationshipGroup Hash
		/// </summary>
		public static uint GetVolumeRelationship(int _volume)
		{
			return Function.Call<uint>((Hash)0x666C2F53ABEFC952, _volume);
		}
		// :##################: //
		// : namespace: WATER : //
		// :##################: //
		/// <summary>
		/// Must be called every frame to take full effect.
		/// </summary>
		public static void DisableWaterLookup()
		{
			Function.Call((Hash)0x754616EC6965D1FB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableWaterLookup()
		{
			Function.Call((Hash)0x754616EC6965D1BF);
		}
		/// <summary>
		/// Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
		/// </summary>
		public static bool GetWaterHeight(float _x, float _y, float _z, float _height)
		{
			return Function.Call<bool>((Hash)0xFCA8B23F28813F69, _x, _y, _z, _height);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetWaterHeightNoWaves(float _x, float _y, float _z, float _height)
		{
			return Function.Call<bool>((Hash)0xDCF3690AA262C03F, _x, _y, _z, _height);
		}
		/// <summary>
		/// enum eScriptWaterTestResult
		/// {
		/// 	SCRIPT_WATER_TEST_RESULT_NONE,
		/// 	SCRIPT_WATER_TEST_RESULT_WATER,
		/// 	SCRIPT_WATER_TEST_RESULT_BLOCKED,
		/// };
		/// </summary>
		public static int TestProbeAgainstAllWater(float _x1, float _y1, float _z1, float _x2, float _y2, float _z2, int _flags, float _waterHeight)
		{
			return Function.Call<int>((Hash)0x8974647ED222EA5F, _x1, _y1, _z1, _x2, _y2, _z2, _flags, _waterHeight);
		}
		/// <summary>
		/// Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
		/// 
		/// See TEST_PROBE_AGAINST_ALL_WATER.
		/// </summary>
		public static int TestVerticalProbeAgainstAllWater(float _x, float _y, float _z, int _flags, float _waterHeight)
		{
			return Function.Call<int>((Hash)0x2B3451FA1E3142E2, _x, _y, _z, _flags, _waterHeight);
		}
		/// <summary>
		/// Only used in rcm_crackpot1 R* Script: p0 = 0
		/// </summary>
		public static void RemoveExtraCalmingQuad(int _index)
		{
			Function.Call((Hash)0x4BEF8DD75AF6C71C, _index);
		}
		/// <summary>
		/// Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
		/// _REMOVE_*
		/// </summary>
		public static void Hash_0x09a1c7dfdce54fbc(int _p0)
		{
			Function.Call((Hash)0x09A1C7DFDCE54FBC, _p0);
		}
		/// <summary>
		/// Only used in fishing_core R* Script
		/// </summary>
		public static void Hash_0xf0fbf193f1f5c0ea(int _ped)
		{
			Function.Call((Hash)0xF0FBF193F1F5C0EA, _ped);
		}
		/// <summary>
		/// Only used in fishing_core R* Script
		/// </summary>
		public static void Hash_0xa33f5069b0cb89b8()
		{
			Function.Call((Hash)0xA33F5069B0CB89B8);
		}
		/// <summary>
		/// Used in bounty1, fanale3, sean1 R* Scripts
		/// </summary>
		public static void Hash_0xb34a6009a0db80b8(int _entity)
		{
			Function.Call((Hash)0xB34A6009A0DB80B8, _entity);
		}
		/// <summary>
		/// Only used in R* Script guama1
		/// </summary>
		public static void SetOceanGuarmaWaterQuadrant(float _wavesHeight, float _p1, int _p2, float _p3, float _p4, float _p5, float _p6, float _wavesStrength, int _p8)
		{
			Function.Call((Hash)0xC63540AEF8384732, _wavesHeight, _p1, _p2, _p3, _p4, _p5, _p6, _wavesStrength, _p8);
		}
		/// <summary>
		/// Only used in guama1 / guama3 R* Script
		/// _REQUEST_* or _RESET_*
		/// </summary>
		public static void Hash_0xc63540aef8384769()
		{
			Function.Call((Hash)0xC63540AEF8384769);
		}
		/// <summary>
		/// 0 = World
		/// 1 = Guarma
		/// </summary>
		public static void SetWorldWaterType(int _waterType)
		{
			Function.Call((Hash)0xE8770EE02AEE45C2, _waterType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetWorldWaterType()
		{
			return Function.Call<int>((Hash)0x189739A7631C1867);
		}
		/// <summary>
		/// Only used in native_son1 R* Script: p1 = 1
		/// </summary>
		public static void Hash_0x0dcec6a92e497e17(int _entity, int _p1)
		{
			Function.Call((Hash)0x0DCEC6A92E497E17, _entity, _p1);
		}
		/// <summary>
		/// Only used in fussar1 / train_robbery2 R* Script
		/// </summary>
		public static void Hash_0xe8126623008372aa()
		{
			Function.Call((Hash)0xE8126623008372AA);
		}
		// :###################: //
		// : namespace: WEAPON : //
		// :###################: //
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetWeaponUnlock(uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0x865F36299079FB75, _weaponHash);
		}
		/// <summary>
		/// addReason:
		/// enum eAddItemReason : Hash
		/// {
		/// 	ADD_REASON_AWARDS = 0xB784AD1E,
		/// 	ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
		/// 	ADD_REASON_DEBUG = 0x5C05C64D,
		/// 	ADD_REASON_DEFAULT = 0x2CD419DC,
		/// 	ADD_REASON_GET_INVENTORY = 0xD8188685,
		/// 	ADD_REASON_INCENTIVE = 0x8ADC2E95,
		/// 	ADD_REASON_LOADOUT = 0xCA3454E6,
		/// 	ADD_REASON_LOAD_SAVEGAME = 0x56212906,
		/// 	ADD_REASON_LOOTED = 0xCA806A55,
		/// 	ADD_REASON_MELEE = 0x7B9BDCE7,
		/// 	ADD_REASON_MP_MISSION = 0xEC0E0194,
		/// 	ADD_REASON_NOTIFICATION = 0xC56292D2,
		/// 	ADD_REASON_PICKUP = 0x1A770E22,
		/// 	ADD_REASON_PURCHASED = 0x4A6726C9,
		/// 	ADD_REASON_SET_AMOUNT = 0x4504731E,
		/// 	ADD_REASON_SYNCING = 0x8D4B4FF4,
		/// 	ADD_REASON_USE_FAILED = 0xD385B670
		/// };
		/// </summary>
		public static void AddAmmoToPed(int _ped, uint _weaponHash, int _amount, uint _addReason)
		{
			Function.Call((Hash)0xB190BCA3F4042F95, _ped, _weaponHash, _amount, _addReason);
		}
		/// <summary>
		/// addReason: see _ADD_AMMO_TO_PED
		/// </summary>
		public static void AddAmmoToPedByType(int _ped, uint _ammoType, int _amount, uint _addReason)
		{
			Function.Call((Hash)0x106A811C6D3035F3, _ped, _ammoType, _amount, _addReason);
		}
		/// <summary>
		/// removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
		/// 
		/// removeReason: see REMOVE_WEAPON_FROM_PED
		/// </summary>
		public static void RemoveAmmoFromPed(int _ped, uint _weaponHash, int _amount, uint _removeReason)
		{
			Function.Call((Hash)0xF4823C813CB8277D, _ped, _weaponHash, _amount, _removeReason);
		}
		/// <summary>
		/// removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
		/// 
		/// removeReason: see REMOVE_WEAPON_FROM_PED
		/// </summary>
		public static void RemoveAmmoFromPedByType(int _ped, uint _ammoHash, int _amount, uint _removeReason)
		{
			Function.Call((Hash)0xB6CFEC32E3742779, _ped, _ammoHash, _amount, _removeReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAllPedAmmo(int _ped)
		{
			Function.Call((Hash)0x1B83C0DEEBCBB214, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAmmo(int _ped, uint _weaponHash, int _ammo)
		{
			Function.Call((Hash)0x14E56BC5B5DB6A19, _ped, _weaponHash, _ammo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x8a779706da5ca3dd(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0x8A779706DA5CA3DD, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x9409c62504a8f9e9(int _p0, int _p1)
		{
			Function.Call((Hash)0x9409C62504A8F9E9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleWeaponHeadingLimits(int _vehicle, int _p1, float _minHeading, float _maxHeading)
		{
			Function.Call((Hash)0x56CB3B4305A4F7CE, _vehicle, _p1, _minHeading, _maxHeading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int SetVehicleWeaponHeadingLimits2(int _vehicle, int _p1, float _minHeading, float _maxHeading)
		{
			return Function.Call<int>((Hash)0xBF5987E1CDE63501, _vehicle, _p1, _minHeading, _maxHeading);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleWeaponHeading(int _vehicle, int _seatIndex, float _heading, bool _p3)
		{
			Function.Call((Hash)0x194D877FC5597B7D, _vehicle, _seatIndex, _heading, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedInfiniteAmmo(int _ped, bool _toggle, uint _weaponHash)
		{
			Function.Call((Hash)0x3EDCB0505123623B, _ped, _toggle, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedInfiniteAmmoClip(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xFBAA1E06B6BCA741, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetAmmoInPedWeapon(int _ped, uint _weaponHash)
		{
			return Function.Call<int>((Hash)0x015A522136D7F951, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetMaxAmmoInClip(int _ped, uint _weaponHash, bool _p2)
		{
			return Function.Call<int>((Hash)0xA38DCFFCEA8962FA, _ped, _weaponHash, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetAmmoInClip(int _ped, int _ammo, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x2E1202248937775C, _ped, _ammo, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetAmmoInClipByInventoryUid(int _ped, int _ammo, int _inventoryUid)
		{
			return Function.Call<bool>((Hash)0x678F00858980F516, _ped, _ammo, _inventoryUid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetAmmoInClip(int _ped, uint _weaponHash, int _ammo)
		{
			return Function.Call<bool>((Hash)0xDCD2A934D65CB497, _ped, _weaponHash, _ammo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RefillAmmoInClip(int _ped, int _clipInventoryUid, int _p2)
		{
			return Function.Call<int>((Hash)0xDF4A3404D022ADDE, _ped, _clipInventoryUid, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetMaxAmmo(int _ped, int _ammo, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xDC16122C7A20C933, _ped, _ammo, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAmmoByType(int _ped, uint _ammoType, int _ammo)
		{
			Function.Call((Hash)0x5FD1E1F011E76D7E, _ped, _ammoType, _ammo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedAmmoByType(int _ped, uint _ammoType)
		{
			return Function.Call<int>((Hash)0x39D22031557946C1, _ped, _ammoType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAmmoToDrop(int _ped, int _p1, int _p2)
		{
			Function.Call((Hash)0xA4EFEF9440A5B0EF, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetAmmoTypeForWeapon(uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0x5C2EA6C44F515F34, _weaponHash);
		}
		/// <summary>
		/// Returns the current ammo type of the specified ped's specified weapon.
		/// </summary>
		public static uint GetPedAmmoTypeFromWeapon(int _ped, uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0x7FEAD38B326B9F74, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetWeaponTypeFromAmmoType(uint _ammoType)
		{
			return Function.Call<uint>((Hash)0x7AA043F6C41D151E, _ammoType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetWeaponComponentTypeModel(uint _componentHash)
		{
			return Function.Call<uint>((Hash)0x59DE03442B6C9598, _componentHash);
		}
		/// <summary>
		/// Gets the model hash from the weapon hash.
		/// </summary>
		public static uint GetWeapontypeModel(uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0xF70825EB340E7D15, _weaponHash);
		}
		/// <summary>
		/// Returns hash where WEAPON_ is replaced with SLOT_
		/// </summary>
		public static uint GetWeapontypeSlot(uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0x46F032B8DDF46CDE, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetWeapontypeGroup(uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0xEDCA14CA5199FF25, _weaponHash);
		}
		/// <summary>
		/// Returns weaponHash
		/// </summary>
		public static uint Hash_0xf8204ef17410bf43(uint _weaponGroupHash, float _p1, float _p2, int _p3)
		{
			return Function.Call<uint>((Hash)0xF8204EF17410BF43, _weaponGroupHash, _p1, _p2, _p3);
		}
		/// <summary>
		/// Returns true when the weapon passed is either a lasso, the camera or the binoculars
		/// _IS_WEAPON_M* - _IS_WEAPON_P*
		/// </summary>
		public static bool IsWeaponKit(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x6ABAD7B0A854F8FB, _weaponHash);
		}
		/// <summary>
		/// Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
		/// _IS_WEAPON_M* - _IS_WEAPON_P*
		/// </summary>
		public static bool IsWeaponKit2(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x49E40483948AF062, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponBow(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xC4DEC3CA8C365A5D, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponLantern(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x79407D33328286C6, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponTorch(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x506F1DE1BFC75304, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GiveWeaponToPedWithOptions(int _ped, int _data, int _outData)
		{
			return Function.Call<bool>((Hash)0xBE7E42B07FD317AC, _ped, _data, _outData);
		}
		/// <summary>
		/// Gives the ped the weapon.
		/// List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
		/// 
		/// Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
		/// attachPoint: see SET_CURRENT_PED_WEAPON
		/// addReason: see _ADD_AMMO_TO_PED
		/// permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
		/// </summary>
		public static uint GiveWeaponToPed(int _ped, uint _weaponHash, int _ammoCount, bool _bForceInHand, bool _bForceInHolster, int _attachPoint, bool _bAllowMultipleCopies, float _p7, float _p8, uint _addReason, bool _bIgnoreUnlocks, float _permanentDegradation, bool _p12)
		{
			return Function.Call<uint>((Hash)0x5E3BDDBCB83F3D84, _ped, _weaponHash, _ammoCount, _bForceInHand, _bForceInHolster, _attachPoint, _bAllowMultipleCopies, _p7, _p8, _addReason, _bIgnoreUnlocks, _permanentDegradation, _p12);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetForceCurrentWeaponIntoCockedState(int _ped, int _attachPoint)
		{
			Function.Call((Hash)0x5230D3F6EE56CFE6, _ped, _attachPoint);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9f0e1892c7f228a8(int _p0)
		{
			return Function.Call<int>((Hash)0x9F0E1892C7F228A8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void HolsterPedWeapons(int _ped, bool _p1, bool _p2, bool _p3, bool _immediately)
		{
			Function.Call((Hash)0x94A3C1B804D291EC, _ped, _p1, _p2, _p3, _immediately);
		}
		/// <summary>
		/// Unequip current weapon and set current weapon to WEAPON_UNARMED.
		/// p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
		/// immediately: if true it will instantly switch to unarmed
		/// </summary>
		public static void HidePedWeapons(int _ped, int _p0, bool _immediately)
		{
			Function.Call((Hash)0xFCCC886EDE3C63EC, _ped, _p0, _immediately);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x4820a6939d7cef28(int _p0, int _p1)
		{
			Function.Call((Hash)0x4820A6939D7CEF28, _p0, _p1);
		}
		/// <summary>
		/// attachPoint:
		/// enum eWeaponAttachPoint
		/// {
		/// 	WEAPON_ATTACH_POINT_INVALID = -1,
		/// 	WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
		/// 	WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
		/// 	WEAPON_ATTACH_POINT_PISTOL_R = 2,
		/// 	MAX_HAND_WEAPON_ATTACH_POINTS = 2,
		/// 	WEAPON_ATTACH_POINT_PISTOL_L = 3,
		/// 	WEAPON_ATTACH_POINT_KNIFE = 4,
		/// 	WEAPON_ATTACH_POINT_LASSO = 5,
		/// 	WEAPON_ATTACH_POINT_THROWER = 6,
		/// 	WEAPON_ATTACH_POINT_BOW = 7,
		/// 	WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
		/// 	WEAPON_ATTACH_POINT_RIFLE = 9,
		/// 	WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
		/// 	WEAPON_ATTACH_POINT_LANTERN = 11,
		/// 	WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
		/// 	WEAPON_ATTACH_POINT_MELEE = 13,
		/// 	MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
		/// 	WEAPON_ATTACH_POINT_HIP = 14,
		/// 	WEAPON_ATTACH_POINT_BOOT = 15,
		/// 	WEAPON_ATTACH_POINT_BACK = 16,
		/// 	WEAPON_ATTACH_POINT_FRONT = 17,
		/// 	WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
		/// 	WEAPON_ATTACH_POINT_LEFTBREAST = 19,
		/// 	WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
		/// 	WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
		/// 	WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
		/// 	WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
		/// 	WEAPON_ATTACH_POINT_SATCHEL = 24,
		/// 	WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
		/// 	WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
		/// 	WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
		/// 	WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
		/// 	MAX_WEAPON_ATTACH_POINTS = 29
		/// };
		/// </summary>
		public static void SetCurrentPedWeapon(int _ped, uint _weaponHash, bool _equipNow, int _attachPoint, bool _p4, bool _p5)
		{
			Function.Call((Hash)0xADF692B254977C0C, _ped, _weaponHash, _equipNow, _attachPoint, _p4, _p5);
		}
		/// <summary>
		/// attachPoint: see SET_CURRENT_PED_WEAPON
		/// </summary>
		public static bool GetCurrentPedWeapon(int _ped, uint _weaponHash, bool _p2, int _attachPoint, bool _p4)
		{
			return Function.Call<bool>((Hash)0x3A87E44BB9A01D54, _ped, _weaponHash, _p2, _attachPoint, _p4);
		}
		/// <summary>
		/// Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
		/// </summary>
		public static int GetCurrentPedWeaponEntityIndex(int _ped, int _attachPoint)
		{
			return Function.Call<int>((Hash)0x3B390A939AF0B5FC, _ped, _attachPoint);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool EnableWeaponRestore(int _ped)
		{
			return Function.Call<bool>((Hash)0xC395355843BE134B, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedBackupWeapon(int _ped, bool _p1)
		{
			return Function.Call<uint>((Hash)0xC71FE230A513C30F, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x486c96a0dcd2bc92(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x486C96A0DCD2BC92, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedWorstWeapon(int _ped, bool _p1, bool _p2, bool _p3)
		{
			return Function.Call<uint>((Hash)0xDA37A053C1522F5D, _ped, _p1, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetBestPedWeapon(int _ped, bool _p1, bool _p2)
		{
			return Function.Call<uint>((Hash)0x8483E98E8B888AE2, _ped, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetBestPedWeaponInInventory(int _ped, int _p1, int _guidPrimary)
		{
			return Function.Call<int>((Hash)0x7B98500614C8E8B8, _ped, _p1, _guidPrimary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetBestPedShortarmGuid(int _ped, int _outGUID, bool _p2, bool _p3)
		{
			Function.Call((Hash)0xF52BD94B47CCF736, _ped, _outGUID, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedWeaponGuidAtAttachPoint(int _ped, int _attachPoint, int _weaponGuid)
		{
			return Function.Call<bool>((Hash)0x6929E22158E52265, _ped, _attachPoint, _weaponGuid);
		}
		/// <summary>
		/// If near your horse when called, weapons stored on your horse will be considered
		/// Returns weaponHash
		/// </summary>
		public static uint GetBestPedWeaponInGroup(int _ped, uint _weaponGroup, bool _p2, bool _p3)
		{
			return Function.Call<uint>((Hash)0x9F67929D98E7C6E8, _ped, _weaponGroup, _p2, _p3);
		}
		/// <summary>
		/// Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
		/// Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
		/// </summary>
		public static uint GetDefaultUnarmedWeaponHash(int _ped)
		{
			return Function.Call<uint>((Hash)0x08FF1099ED2E6E21, _ped);
		}
		/// <summary>
		/// turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
		/// </summary>
		public static void SetAmmoInTurret(int _vehicle, uint _turretHash, int _ammo)
		{
			Function.Call((Hash)0xBDDA0C290C228159, _vehicle, _turretHash, _ammo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetCurrentPedVehicleWeapon(int _ped, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x75C55983C2C39DAA, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetCurrentPedVehicleWeapon(int _ped, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x1017582BCD3832DC, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedArmed(int _ped, int _flags)
		{
			return Function.Call<bool>((Hash)0xCB690F680A3EA971, _ped, _flags);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xa2091482ed42ef85(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xA2091482ED42EF85, _p0, _p1);
		}
		/// <summary>
		/// Returns true if ped is holstering/unholstering a weapon
		/// </summary>
		public static bool Hash_0x2387d6e9c6b478aa(int _ped)
		{
			return Function.Call<bool>((Hash)0x2387D6E9C6B478AA, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponValid(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x937C71165CF334B3, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAmmoValid(uint _ammoHash)
		{
			return Function.Call<bool>((Hash)0x1F7977C9101F807F, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x23bf601a42f329a0(int _p0)
		{
			return Function.Call<int>((Hash)0x23BF601A42F329A0, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedCarryingWeapon(int _ped, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xF29A186ED428B552, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPedGotWeapon(int _ped, uint _weaponHash, int _p2, bool _p3)
		{
			return Function.Call<bool>((Hash)0x8DECB02F88F428BC, _ped, _weaponHash, _p2, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x07e1c35f0078c3f9(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x07E1C35F0078C3F9, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedWeaponReadyToShoot(int _ped)
		{
			return Function.Call<bool>((Hash)0xB80CA294F2F26749, _ped);
		}
		/// <summary>
		/// slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
		/// </summary>
		public static uint GetPedWeaponInSlot(int _ped, uint _slotHash)
		{
			return Function.Call<uint>((Hash)0xDBC4B552B2AE9A83, _ped, _slotHash);
		}
		/// <summary>
		/// addReason: see _ADD_AMMO_TO_PED
		/// </summary>
		public static void GiveDelayedWeaponToPed(int _ped, uint _weaponHash, int _ammoCount, bool _p3, uint _addReason)
		{
			Function.Call((Hash)0xB282DC6EBD803C75, _ped, _weaponHash, _ammoCount, _p3, _addReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveAllPedWeapons(int _ped, bool _p1, bool _p2)
		{
			Function.Call((Hash)0xF25DF915FA38C5F3, _ped, _p1, _p2);
		}
		/// <summary>
		/// removeReason:
		/// enum eRemoveItemReason : Hash
		/// {
		/// 	REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
		/// 	REMOVE_REASON_COALESCE = 0x2ABE393E,
		/// 	REMOVE_REASON_DEBUG = 0xA07362E6,
		/// 	REMOVE_REASON_DEFAULT = 0xF77DE93D,
		/// 	REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
		/// 	REMOVE_REASON_DROPPED = 0xEC7FB5D5,
		/// 	REMOVE_REASON_DUPLICATE = 0x19047132,
		/// 	REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
		/// 	REMOVE_REASON_GIVEN = 0xAD5377D4,
		/// 	REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
		/// 	REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
		/// 	REMOVE_REASON_LOADOUT = 0x1B94E3BA,
		/// 	REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
		/// 	REMOVE_REASON_SOLD = 0x76C4B482,
		/// 	REMOVE_REASON_USED = 0x2188E0A3,
		/// 	REMOVE_REASON_USE_FAILED = 0x671F9EAD
		/// };
		/// </summary>
		public static void RemoveWeaponFromPed(int _ped, uint _weaponHash, bool _p2, uint _removeReason)
		{
			Function.Call((Hash)0x4899CB088EDF59B8, _ped, _weaponHash, _p2, _removeReason);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveWeaponFromPedByGuid(int _ped, int _weaponGuid, uint _removeReason)
		{
			Function.Call((Hash)0x51C3B71591811485, _ped, _weaponGuid, _removeReason);
		}
		/// <summary>
		/// Hides the ped's weapon during a cutscene.
		/// </summary>
		public static void HidePedWeaponForScriptedCutscene(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x6F6981D2253C208F, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedCurrentWeaponVisible(int _ped, bool _visible, bool _deselectWeapon, bool _p3, bool _p4)
		{
			Function.Call((Hash)0x0725A4CCFDED9A70, _ped, _visible, _deselectWeapon, _p3, _p4);
		}
		/// <summary>
		/// attachPoint: see SET_CURRENT_PED_WEAPON
		/// </summary>
		public static void SetPedWeaponAttachPointVisibility(int _ped, int _attachPoint, bool _visible)
		{
			Function.Call((Hash)0x67E21ACC5C0C970C, _ped, _attachPoint, _visible);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedAllWeaponsVisibility(int _ped, bool _visible)
		{
			Function.Call((Hash)0x4F806A6CFED89468, _ped, _visible);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDropsWeaponsWhenDead(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x476AE72C1D19D1A8, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x431240a58484d5d0(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x431240A58484D5D0, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x45e57fdd531c9477(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x45E57FDD531C9477, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xf08d8feb455f2c8c(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xF08D8FEB455F2C8C, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x16d9841a85fa627e(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x16D9841A85FA627E, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPedLastWeaponImpactCoord(int _ped, Vector3 _coords)
		{
			return Function.Call<bool>((Hash)0x6C4D0409BA1A2BC2, _ped, _coords);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ClearPedLastWeaponDamage(int _ped)
		{
			Function.Call((Hash)0x087D8F4BC65F68E4, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenDamagedByWeapon(int _entity, uint _weaponName, int _weaponType)
		{
			return Function.Call<bool>((Hash)0xDCF06D0CDFF68424, _entity, _weaponName, _weaponType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPedDropsInventoryWeapon(int _ped, uint _weaponHash, float _xOffset, float _yOffset, float _zOffset, int _ammoCount)
		{
			Function.Call((Hash)0x208A1888007FC0E6, _ped, _weaponHash, _xOffset, _yOffset, _zOffset, _ammoCount);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb0fb9b196a3d13f0(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xB0FB9B196A3D13F0, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x2ebf70e1d8c06683(int _p0, int _p1)
		{
			Function.Call((Hash)0x2EBF70E1D8C06683, _p0, _p1);
		}
		/// <summary>
		/// Only used in R* Script fme_escaped_convicts, p0 = 0
		/// </summary>
		public static void Hash_0x63b83a526329afbc(int _p0)
		{
			Function.Call((Hash)0x63B83A526329AFBC, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int MakePedReload(int _ped)
		{
			return Function.Call<int>((Hash)0x79E1E511FF7EFB13, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int RefillAmmoInCurrentPedWeapon(int _ped)
		{
			return Function.Call<int>((Hash)0x0A2AB7B7ABC055F4, _ped);
		}
		/// <summary>
		/// Old name: _DROP_CURRENT_PED_WEAPON
		/// </summary>
		public static int MakePedDropWeapon(int _ped, bool _p1, int _attachPoint, bool _p3, bool _p4)
		{
			return Function.Call<int>((Hash)0xCEF4C65DE502D367, _ped, _p1, _attachPoint, _p3, _p4);
		}
		/// <summary>
		/// Returns eCurrentHeldWeapon
		/// _GET_R* - _GET_T*
		/// </summary>
		public static uint GetPedCurrentHeldWeapon(int _ped)
		{
			return Function.Call<uint>((Hash)0x8425C5F057012DAB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllowAnyWeaponDrop(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x78030C7867D8B9B6, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa3716a77dcf17424(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xA3716A77DCF17424, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x457b16951ad77c1b(int _p0)
		{
			Function.Call((Hash)0x457B16951AD77C1B, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x3799efcc3c8cd5e1(int _p0)
		{
			return Function.Call<int>((Hash)0x3799EFCC3C8CD5E1, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetMaxLockonDistanceOfCurrentPedWeapon(int _ped)
		{
			return Function.Call<float>((Hash)0x79B1A6E780266DB0, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveWeaponComponentFromPed(int _ped, uint _componentHash, uint _weaponHash)
		{
			Function.Call((Hash)0x19F70C4D80494FF8, _ped, _componentHash, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasPedGotWeaponComponent(int _ped, uint _componentHash, uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xBBC67A6F965C688A, _ped, _componentHash, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPedCurrentWeaponHolstered(int _ped)
		{
			return Function.Call<bool>((Hash)0xBDD9C235D8D1052E, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xd2209866b0cb72ea(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xD2209866B0CB72EA, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RequestWeaponAsset(uint _weaponHash, int _p1, bool _p2)
		{
			Function.Call((Hash)0x72D4CB5DB927009C, _weaponHash, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasWeaponAssetLoaded(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xFF07CF465F48B830, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveWeaponAsset(uint _weaponHash)
		{
			Function.Call((Hash)0xC3896D03E2852236, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xe9b3fec825668291(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xE9B3FEC825668291, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x9cca3131e6b53c68(int _p0, int _p1, int _p2)
		{
			return Function.Call<int>((Hash)0x9CCA3131E6B53C68, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetWeaponName2(uint _weaponHash)
		{
			return Function.Call<string>((Hash)0x6D3AC61694A791C5, _weaponHash);
		}
		/// <summary>
		/// Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
		/// </summary>
		public static string GetWeaponName(uint _weaponHash)
		{
			return Function.Call<string>((Hash)0x89CF5FF3D363311E, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetWeaponNameWithPermanentDegradation(uint _weaponHash, float _permanentDegradationLevel)
		{
			return Function.Call<string>((Hash)0x7A56D66C78D8EF8E, _weaponHash, _permanentDegradationLevel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xb832f1a686b9b810(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xB832F1A686B9B810, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5a695bd328586b44(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x5A695BD328586B44, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x641351e9ad103890(int _p0, int _p1)
		{
			Function.Call((Hash)0x641351E9AD103890, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInstantlyEquipWeaponPickups(int _ped, bool _toggle)
		{
			Function.Call((Hash)0x739B9C6D0E7F7F93, _ped, _toggle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetForceAutoEquip(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xBE711B14A159E84F, _ped, _toggle);
		}
		/// <summary>
		/// Appears to just send specified weapon to your horse holster without having to be close
		/// However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
		/// </summary>
		public static void SendWeaponToInventory(int _ped, uint _weaponHash)
		{
			Function.Call((Hash)0xE9BD19F8121ADE3E, _ped, _weaponHash);
		}
		/// <summary>
		/// Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
		/// _A* or _B*
		/// </summary>
		public static void Hash_0x14ff0c2545527f9b(int _horse, uint _weaponHash, int _ped)
		{
			Function.Call((Hash)0x14FF0C2545527F9B, _horse, _weaponHash, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd4c6e24d955ff061(int _p0)
		{
			Function.Call((Hash)0xD4C6E24D955FF061, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xaffd0ccf31f469b8(int _p0)
		{
			return Function.Call<int>((Hash)0xAFFD0CCF31F469B8, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetWeaponStatId(uint _weaponHash)
		{
			return Function.Call<uint>((Hash)0x8EC44AE8DECFF841, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenDamagedByWeaponRecently(int _entity, uint _weaponHash, int _ms)
		{
			return Function.Call<bool>((Hash)0x9E2D5D6BC97A5F1E, _entity, _weaponHash, _ms);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedHogtieWeapon(int _ped)
		{
			return Function.Call<uint>((Hash)0x90EB1CB189923587, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int CreateWeaponObject(uint _weaponHash, int _ammoCount, float _x, float _y, float _z, bool _showWorldModel, float _scale)
		{
			return Function.Call<int>((Hash)0x9888652B8BA77F73, _weaponHash, _ammoCount, _x, _y, _z, _showWorldModel, _scale);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RemoveWeaponComponentFromWeaponObject(int _weaponObject, uint _component)
		{
			Function.Call((Hash)0xF7D82B0D66777611, _weaponObject, _component);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasWeaponGotWeaponComponent(int _weapon, uint _addonHash)
		{
			return Function.Call<bool>((Hash)0x76A18844E743BF91, _weapon, _addonHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GiveWeaponComponentToWeaponObject(int _weaponObject, int _ped, uint _componentHash, bool _p3)
		{
			Function.Call((Hash)0x1A47699E8D533E8F, _weaponObject, _ped, _componentHash, _p3);
		}
		/// <summary>
		/// Detaches the weapon from the ped and actually removes the ped's weapon
		/// </summary>
		public static int GetWeaponObjectFromPed(int _ped, bool _p1)
		{
			return Function.Call<int>((Hash)0xC6A6789BB405D11C, _ped, _p1);
		}
		/// <summary>
		/// _GET_M* - _GET_PED_A*
		/// </summary>
		public static int GetPedWeaponObject(int _ped, bool _p1)
		{
			return Function.Call<int>((Hash)0x6CA484C9A7377E4F, _ped, _p1);
		}
		/// <summary>
		/// entity can be a ped or weapon object.
		/// </summary>
		public static void GiveWeaponComponentToEntity(int _entity, uint _componentHash, uint _weaponHash, bool _p3)
		{
			Function.Call((Hash)0x74C9090FDD1BB48E, _entity, _componentHash, _weaponHash, _p3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x74c9080fdd1bb48e(int _p0, int _p1)
		{
			Function.Call((Hash)0x74C9080FDD1BB48E, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x74c9080fdd1bb48f(int _p0, int _p1)
		{
			Function.Call((Hash)0x74C9080FDD1BB48F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x74c2365fdd1bb48f(int _p0, int _p1)
		{
			Function.Call((Hash)0x74C2365FDD1BB48F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x74c90aaacc1dd48f(int _p0)
		{
			Function.Call((Hash)0x74C90AAACC1DD48F, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x74c8000fdd1bb111(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x74C8000FDD1BB111, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x74c8000fdd1bb222(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x74C8000FDD1BB222, _p0, _p1);
		}
		/// <summary>
		/// Returns iSpinHash
		/// </summary>
		public static uint GetWeaponGunSpinningWeaponEmoteTrickTypeHash(uint _emote, int _weaponEmoteTrickType)
		{
			return Function.Call<uint>((Hash)0xF4601C1203B1A78D, _emote, _weaponEmoteTrickType);
		}
		/// <summary>
		/// emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
		/// </summary>
		public static void SetActiveGunSpinningEquipKitEmoteTwirl(int _ped, uint _emote)
		{
			Function.Call((Hash)0xCBCFFF805F1B4596, _ped, _emote);
		}
		/// <summary>
		/// Returns emote Hash
		/// </summary>
		public static uint GetPedGunSpinningEquippedKitEmoteTwirl(int _ped)
		{
			return Function.Call<uint>((Hash)0x2C4FEC3D0EFA9FC0, _ped);
		}
		/// <summary>
		/// spinHash can be -1, 0 to disable
		/// </summary>
		public static void SetActiveGunSpinningKitEmoteTwirl(int _ped, int _weaponEmoteTrickType, uint _spin)
		{
			Function.Call((Hash)0x01F661BB9C71B465, _ped, _weaponEmoteTrickType, _spin);
		}
		/// <summary>
		/// Returns iSpinHash / iVariationSpin
		/// </summary>
		public static uint GetPedGunSpinningHashFromWeaponEmoteVariation(int _ped, int _weaponEmoteVariation)
		{
			return Function.Call<uint>((Hash)0xF3B1620B920D1708, _ped, _weaponEmoteVariation);
		}
		/// <summary>
		/// Returns weaponEmoteVariation
		/// 
		/// WEAPON_EMOTE_VARIATION_INVALID = -2,
		/// WEAPON_EMOTE_VARIATION_BASE,
		/// WEAPON_EMOTE_VARIATION_A,
		/// WEAPON_EMOTE_VARIATION_B,
		/// WEAPON_EMOTE_VARIATION_C,
		/// WEAPON_EMOTE_VARIATION_D,
		/// WEAPON_EMOTE_VARIATION_PREVIEW,
		/// WEAPON_EMOTE_NUM_VARIATIONS
		/// </summary>
		public static int GetWeaponEmoteVariation(int _ped, int _variation)
		{
			return Function.Call<int>((Hash)0x86147D05FA831D3A, _ped, _variation);
		}
		/// <summary>
		/// _STOP_* - _TEST_*
		/// </summary>
		public static void SetGunSpinningInventorySlotIdActivate(int _ped, int _emoteType)
		{
			Function.Call((Hash)0x408CF580C5E96D49, _ped, _emoteType);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetCanTwirlWeapon(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x6554ECCE226F2A2A, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xcd356b42c57bfe01(int _ped, int _p1)
		{
			return Function.Call<bool>((Hash)0xCD356B42C57BFE01, _ped, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbc9444f2ff94a9c0(int _p0)
		{
			return Function.Call<int>((Hash)0xBC9444F2FF94A9C0, _p0);
		}
		/// <summary>
		/// Returns weaponCollection Hash
		/// Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
		/// </summary>
		public static uint GetDefaultPedWeaponCollection(uint _pedModel)
		{
			return Function.Call<uint>((Hash)0xD42514C182121C23, _pedModel);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GiveWeaponCollectionToPed(int _ped, uint _weaponCollection)
		{
			Function.Call((Hash)0x899A04AFCC725D04, _ped, _weaponCollection);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0xf252a85b8f3f8c58(uint _weaponCollection, uint _dualwieldVariant)
		{
			return Function.Call<bool>((Hash)0xF252A85B8F3F8C58, _weaponCollection, _dualwieldVariant);
		}
		/// <summary>
		/// Returns weaponHash
		/// </summary>
		public static uint Hash_0x9eefd670f10656d7(uint _weaponCollection, uint _weaponGroup)
		{
			return Function.Call<uint>((Hash)0x9EEFD670F10656D7, _weaponCollection, _weaponGroup);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xf2f585411e748b9c(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xF2F585411E748B9C, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetWeaponClipSize(uint _weaponHash)
		{
			return Function.Call<int>((Hash)0xD3750CCC00635FC2, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xa769d753922b031b(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xA769D753922B031B, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xc5899c4cd2e2495d(int _p0)
		{
			Function.Call((Hash)0xC5899C4CD2E2495D, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetAllowDualWield(int _ped)
		{
			return Function.Call<bool>((Hash)0x918990BD9CE08582, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAllowDualWield(int _ped, bool _allow)
		{
			Function.Call((Hash)0x83B8D50EB9446BBA, _ped, _allow);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool Hash_0x44c8f4908f1b2622(int _ped, uint _ammoHash)
		{
			return Function.Call<bool>((Hash)0x44C8F4908F1B2622, _ped, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponKnife(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x792E3EF76C911959, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponRevolver(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xC212F1D05A8232BB, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponPistol(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xDDC64F5E31EEDAB6, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponRepeater(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xDDB2578E95EF7138, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponRifle(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x0A82317B7EBFC420, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponShotgun(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xC75386174ECE95D5, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponSniper(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x6AD66548840472E5, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponMeleeWeapon(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x959383DCD42040DA, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponThrowable(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x30E7C16B12DA8211, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponLasso(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x6E4E1A82081EABED, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponBinoculars(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xC853230E76A152DF, _weaponHash);
		}
		/// <summary>
		/// Returns true if CWeaponInfoFlags::Flags::Gun is set.
		/// </summary>
		public static bool IsWeaponAGun(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x705BE297EEBDB95D, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponTwoHanded(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x0556E9D2ECF39D01, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponOneHanded(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0xD955FEE4B87AFA07, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsWeaponSilent(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x5809DBCA0A37C82B, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xea522f991e120d45(int _p0)
		{
			return Function.Call<int>((Hash)0xEA522F991E120D45, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAmmoSilent(uint _ammoHash)
		{
			return Function.Call<bool>((Hash)0xD2866CBA797E872E, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAmmoSilent2(uint _ammoHash)
		{
			return Function.Call<bool>((Hash)0x7EFACC589B98C488, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool ShouldWeaponBeDiscardedWhenSwapped(uint _weaponHash)
		{
			return Function.Call<bool>((Hash)0x2C83212A7AA51D3D, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x5b235f24472f2c3b(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x5B235F24472F2C3B, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xbfca7afabf9d7967(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xBFCA7AFABF9D7967, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x495a04caec263af8(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x495A04CAEC263AF8, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x95ca12e2c68043e5(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x95CA12E2C68043E5, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xabc18a28bad4b46f(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0xABC18A28BAD4B46F, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x80bb243789008a82(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x80BB243789008A82, _p0, _p1);
		}
		/// <summary>
		/// Related to weapon visual damage, not actual damage.
		/// </summary>
		public static float GetWeaponDamage(int _weaponObject)
		{
			return Function.Call<float>((Hash)0x904103D5D2333977, _weaponObject);
		}
		/// <summary>
		/// Related to weapon visual damage, not actual damage.
		/// </summary>
		public static void SetWeaponDamage(int _weaponObject, float _level, bool _p2)
		{
			Function.Call((Hash)0xE22060121602493B, _weaponObject, _level, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetWeaponDirt(int _weaponObject)
		{
			return Function.Call<float>((Hash)0x810E8AE9AFEA7E54, _weaponObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeaponDirt(int _weaponObject, float _level, bool _p2)
		{
			Function.Call((Hash)0x812CE61DEBCAB948, _weaponObject, _level, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetWeaponSoot(int _weaponObject)
		{
			return Function.Call<float>((Hash)0x4BF66F8878F67663, _weaponObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeaponSoot(int _weaponObject, float _level, bool _p2)
		{
			Function.Call((Hash)0xA9EF4AD10BDDDB57, _weaponObject, _level, _p2);
		}
		/// <summary>
		/// every other level will have the max value of (brokeLevel - threshold)
		/// </summary>
		public static void SetWeaponLevelThreshold(int _weaponObject, float _threshold)
		{
			Function.Call((Hash)0xD4071EFC83794B2F, _weaponObject, _threshold);
		}
		/// <summary>
		/// 0.0: good condition, 1.0: poor condition
		/// </summary>
		public static float GetWeaponDegradation(int _weaponObject)
		{
			return Function.Call<float>((Hash)0x0D78E1097F89E637, _weaponObject);
		}
		/// <summary>
		/// Related to rust of weapons
		/// </summary>
		public static float GetWeaponPermanentDegradation(int _weaponObject)
		{
			return Function.Call<float>((Hash)0xD56E5F336C675EFA, _weaponObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeaponDegradation(int _weaponObject, float _level)
		{
			Function.Call((Hash)0xA7A57E89E965D839, _weaponObject, _level);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ListenProjectileHitEvents(bool _listen)
		{
			Function.Call((Hash)0xDA5D3F2C6DD5B5D4, _listen);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetWeaponScale(int _weaponObject)
		{
			return Function.Call<float>((Hash)0x22084CA699219624, _weaponObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetWeaponScale(int _weaponObject, float _scale)
		{
			Function.Call((Hash)0xC3544AD0522E69B4, _weaponObject, _scale);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x58425fca3d3a2d15(int _p0)
		{
			return Function.Call<int>((Hash)0x58425FCA3D3A2D15, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0xec97101a8f311282(int _p0)
		{
			return Function.Call<int>((Hash)0xEC97101A8F311282, _p0);
		}
		/// <summary>
		/// Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
		/// </summary>
		public static uint GetCurrentPedWeaponAmmoType(int _ped, int _weaponObject)
		{
			return Function.Call<uint>((Hash)0x7E7B19A4355FEE13, _ped, _weaponObject);
		}
		/// <summary>
		/// Returns ammoHash
		/// </summary>
		public static uint GetCurrentAmmoTypeFromGuid(int _ped, int _weaponGuid)
		{
			return Function.Call<uint>((Hash)0xAF9D167A5656D6A6, _ped, _weaponGuid);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAmmoTypeValidForWeapon(uint _weaponHash, uint _ammoHash)
		{
			return Function.Call<bool>((Hash)0xC570B881754DF609, _weaponHash, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmmoTypeForPedWeapon(int _ped, uint _weaponHash, uint _ammoHash)
		{
			Function.Call((Hash)0xCC9C4393523833E2, _ped, _weaponHash, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x183ce355115b6e75(int _p0, int _p1)
		{
			Function.Call((Hash)0x183CE355115B6E75, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetAmmoTypeForPedWeaponInventory(int _ped, int _weaponInventoryUid, uint _ammoHash)
		{
			Function.Call((Hash)0xEBE46B501BC3FBCF, _ped, _weaponInventoryUid, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableAmmoTypeForPedWeapon(int _ped, uint _weaponHash, uint _ammoHash)
		{
			Function.Call((Hash)0xF0D728EEA3C99775, _ped, _weaponHash, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DisableAmmoTypeForPed(int _ped, uint _ammoHash)
		{
			Function.Call((Hash)0xAA5A52204E077883, _ped, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd63b4ba3a02a99e0(int _p0, int _p1)
		{
			Function.Call((Hash)0xD63B4BA3A02A99E0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableAmmoTypeForPedWeapon(int _ped, uint _weaponHash, uint _ammoHash)
		{
			Function.Call((Hash)0x23FB9FACA28779C1, _ped, _weaponHash, _ammoHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableAmmoTypeForPed(int _ped, uint _weaponHash)
		{
			Function.Call((Hash)0x3B7B7908B7ADFB4B, _ped, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x404514d231db27a0(int _p0, int _p1)
		{
			Function.Call((Hash)0x404514D231DB27A0, _p0, _p1);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xd53846b9c931c181(int _p0, int _p1, int _p2)
		{
			Function.Call((Hash)0xD53846B9C931C181, _p0, _p1, _p2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0x000fa7a4a8443af7(int _p0)
		{
			Function.Call((Hash)0x000FA7A4A8443AF7, _p0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void Hash_0xecbb26529a737ef6(int _p0)
		{
			Function.Call((Hash)0xECBB26529A737EF6, _p0);
		}
		/// <summary>
		/// Returns WeaponAttachPoint
		/// </summary>
		public static int GetWeaponAttachPoint(int _ped, int _attachPoint)
		{
			return Function.Call<int>((Hash)0xCAD4FE9398820D24, _ped, _attachPoint);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int Hash_0x4823f13a21f51964(int _p0, int _p1)
		{
			return Function.Call<int>((Hash)0x4823F13A21F51964, _p0, _p1);
		}
		/// <summary>
		/// Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
		/// </summary>
		public static void SetCurrentPedWeaponByGuid(int _ped, int _weaponUid, bool _p2, bool _p3, bool _p4, bool _p5)
		{
			Function.Call((Hash)0x12FB95FE3D579238, _ped, _weaponUid, _p2, _p3, _p4, _p5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetPlayerPedQuickSwapWeaponByGuid(int _ped, int _guidPrimary, int _guidSecondary)
		{
			Function.Call((Hash)0xEC1F85DA51D3D6C4, _ped, _guidPrimary, _guidSecondary);
		}
		/// <summary>
		/// Outputs cached guids
		/// </summary>
		public static void GetPlayerPedQuickSwapWeaponByGuid(int _ped, int _guidPrimary, int _guidSecondary)
		{
			Function.Call((Hash)0xB7E52A058B07C7E2, _ped, _guidPrimary, _guidSecondary);
		}
		/// <summary>
		/// _GET_D* - _GET_L*
		/// </summary>
		public static bool Hash_0x0de0944eccb3df5d(int _p0)
		{
			return Function.Call<bool>((Hash)0x0DE0944ECCB3DF5D, _p0);
		}
		/// <summary>
		/// _GET_NUM_*
		/// </summary>
		public static int Hash_0x46d42883e873c1d7(int _ped)
		{
			return Function.Call<int>((Hash)0x46D42883E873C1D7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsTargetPedConstrainedByPedUsingBolas(int _ped, int _targetPed)
		{
			return Function.Call<bool>((Hash)0x8D50F43298AB9545, _ped, _targetPed);
		}
		/// <summary>
		/// Returns attachPoint
		/// </summary>
		public static int Hash_0x65dc4ac5b96614cb(uint _weaponHash)
		{
			return Function.Call<int>((Hash)0x65DC4AC5B96614CB, _weaponHash);
		}
		// :#################: //
		// : namespace: ZONE : //
		// :#################: //
		/// <summary>
		/// Returns name hash, see common:/data/levels/rdr3/mapzones.meta
		/// 
		/// type (-1 matches any type):
		/// class CMapZone
		/// {
		/// public:
		/// 	enum class Type
		/// 	{
		/// 		STATE,
		/// 		TOWN,
		/// 		LAKE,
		/// 		RIVER,
		/// 		OIL_SPILL,
		/// 		SWAMP,
		/// 		OCEAN,
		/// 		CREEK,
		/// 		POND,
		/// 		GLACIER,
		/// 		DISTRICT,
		/// 		TEXT_PRINTED,
		/// 		TEXT_WRITTEN
		/// 	};
		/// };
		/// 
		/// https://github.com/femga/rdr3_discoveries/tree/master/zones & https://alloc8or.re/rdr3/doc/enums/CMapZone__Type.txt
		/// </summary>
		public static uint GetMapZoneAtCoords(float _x, float _y, float _z, int _type)
		{
			return Function.Call<uint>((Hash)0x43AD8FC02B429D33, _x, _y, _z, _type);
		}
		/// <summary>
		/// Returns the zone's name hash if its type matches one of the following:
		/// - LAKE
		/// - RIVER
		/// - OIL_SPILL
		/// - SWAMP
		/// - OCEAN
		/// - CREEK
		/// - POND
		/// - GLACIER
		/// </summary>
		public static uint GetWaterMapZoneAtCoords(float _x, float _y, float _z)
		{
			return Function.Call<uint>((Hash)0x5BA7A68A346A5A91, _x, _y, _z);
		}
		// :####################: //
		// : namespace: COMPAPP : //
		// :####################: //
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xb6fd96420c0126a1(uint _p0, bool _p1)
		{
			Function.Call((Hash)0xB6FD96420C0126A1, _p0, _p1);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x74bcceb233ad95b2(uint _p0, int _p1)
		{
			Function.Call((Hash)0x74BCCEB233AD95B2, _p0, _p1);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0x29c733459a9011eb(uint _p0, string _p1)
		{
			Function.Call((Hash)0x29C733459A9011EB, _p0, _p1);
		}
		/// <summary>
		/// Hardcoded to return false.
		/// </summary>
		public static bool Hash_0x7af1bb4504ea5ed9()
		{
			return Function.Call<bool>((Hash)0x7AF1BB4504EA5ED9);
		}
		/// <summary>
		/// nullsub, doesn't do anything
		/// </summary>
		public static void Hash_0xccb4635a071fb62d()
		{
			Function.Call((Hash)0xCCB4635A071FB62D);
		}
		// :################: //
		// : namespace: CFX : //
		// :################: //
		/// <summary>
		/// Adds an output for the specified audio submix.
		/// </summary>
		public static void AddAudioSubmixOutput(int _submixId, int _outputSubmixId)
		{
			Function.Call((Hash)0xAC6E290D, _submixId, _outputSubmixId);
		}
		/// <summary>
		/// Loads a minimap overlay from a GFx file in the current resource.
		/// </summary>
		public static int AddMinimapOverlay(string _name)
		{
			return Function.Call<int>((Hash)0x4AFD2499, _name);
		}
		/// <summary>
		/// Experimental natives, please do not use in a live environment.
		/// </summary>
		public static void AddReplaceTexture(string _origTxd, string _origTxn, string _newTxd, string _newTxn)
		{
			Function.Call((Hash)0xA66F8F75, _origTxd, _origTxn, _newTxd, _newTxn);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddTextEntry(string _entryKey, string _entryText)
		{
			Function.Call((Hash)0x32CA01C3, _entryKey, _entryText);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void AddTextEntryByHash(uint _entryKey, string _entryText)
		{
			Function.Call((Hash)0x289DA860, _entryKey, _entryText);
		}
		/// <summary>
		/// Cancels the currently executing event.
		/// </summary>
		public static void CancelEvent()
		{
			Function.Call((Hash)0xFA29D35D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndFindObject(int _findHandle)
		{
			Function.Call((Hash)0xDEDA4E50, _findHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndFindKvp(int _handle)
		{
			Function.Call((Hash)0xB3210203, _handle);
		}
		/// <summary>
		/// Returns whether or not the specified player has enough information to start a commerce session for.
		/// </summary>
		public static bool CanPlayerStartCommerceSession(string _playerSrc)
		{
			return Function.Call<bool>((Hash)0x429461C3, _playerSrc);
		}
		/// <summary>
		/// This is similar to the PushScaleformMovieFunction natives, except it calls in the `TIMELINE` of a minimap overlay.
		/// </summary>
		public static bool CallMinimapScaleformFunction(int _miniMap, string _fnName)
		{
			return Function.Call<bool>((Hash)0x4C89C0ED, _miniMap, _fnName);
		}
		/// <summary>
		/// Adds a handler for changes to a state bag.
		/// 
		/// The function called expects to match the following signature:
		/// 
		/// ```ts
		/// function StateBagChangeHandler(bagName: string, key: string, value: any, reserved: number, replicated: boolean);
		/// ```
		/// 
		/// *   **bagName**: The internal bag ID for the state bag which changed. This is usually `player:Source`, `entity:NetID`
		///     or `localEntity:Handle`.
		/// *   **key**: The changed key.
		/// *   **value**: The new value stored at key. The old value is still stored in the state bag at the time this callback executes.
		/// *   **reserved**: Currently unused.
		/// *   **replicated**: Whether the set is meant to be replicated.
		/// 
		/// At this time, the change handler can't opt to reject changes.
		/// 
		/// If bagName refers to an entity, use [GET_ENTITY_FROM_STATE_BAG_NAME](?\_0x4BDF1868) to get the entity handle
		/// If bagName refers to a player, use [GET_PLAYER_FROM_STATE_BAG_NAME](?\_0xA56135E0) to get the player handle
		/// </summary>
		public static int AddStateBagChangeHandler(string _keyFilter, string _bagFilter, InputArgument _handler)
		{
			return Function.Call<int>((Hash)0x5BA35AAF, _keyFilter, _bagFilter, _handler);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndFindPed(int _findHandle)
		{
			Function.Call((Hash)0x9615C2AD, _findHandle);
		}
		/// <summary>
		/// Removes vehicle xenon lights custom RGB color.
		/// </summary>
		public static void ClearVehicleXenonLightsCustomColor(int _vehicle)
		{
			Function.Call((Hash)0x2867ED8C, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndFindVehicle(int _findHandle)
		{
			Function.Call((Hash)0x9227415A, _findHandle);
		}
		/// <summary>
		/// Commits the backing pixels to the specified runtime texture.
		/// </summary>
		public static void CommitRuntimeTexture(long _tex)
		{
			Function.Call((Hash)0x19D81F4E, _tex);
		}
		/// <summary>
		/// Internal function for ensuring an entity has a state bag.
		/// </summary>
		public static void EnsureEntityStateBag(int _entity)
		{
			Function.Call((Hash)0x3BB78F05, _entity);
		}
		/// <summary>
		/// Creates a volume where water effects do not apply.
		/// Useful for preventing water collisions from flooding areas underneath them.
		/// This has no effect on waterquads, only water created from drawables and collisions.
		/// Don't create volumes when your local ped is swimming (e.g. use IS_PED_SWIMMING in your scripts before you call this)
		/// </summary>
		public static int CreateDryVolume(float _xMin, float _yMin, float _zMin, float _xMax, float _yMax, float _zMax)
		{
			return Function.Call<int>((Hash)0xEB1C6DD, _xMin, _yMin, _zMin, _xMax, _yMax, _zMax);
		}
		/// <summary>
		/// Creates an audio submix with the specified name, or gets the existing audio submix by that name.
		/// </summary>
		public static int CreateAudioSubmix(string _name)
		{
			return Function.Call<int>((Hash)0x658D2BC8, _name);
		}
		/// <summary>
		/// Creates a DUI browser. This can be used to draw on a runtime texture using CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
		/// </summary>
		public static long CreateDui(string _url, int _width, int _height)
		{
			return Function.Call<long>((Hash)0x23EAF899, _url, _width, _height);
		}
		/// <summary>
		/// Returns the current console output buffer.
		/// </summary>
		public static string GetConsoleBuffer()
		{
			return Function.Call<string>((Hash)0xE57429FA);
		}
		/// <summary>
		/// Creates a runtime texture dictionary with the specified name.
		/// Example:
		/// 
		/// ```lua
		/// local txd = CreateRuntimeTxd('meow')
		/// ```
		/// </summary>
		public static long CreateRuntimeTxd(string _name)
		{
			return Function.Call<long>((Hash)0x1F3AC778, _name);
		}
		/// <summary>
		/// Creates a runtime texture from a DUI handle.
		/// </summary>
		public static long CreateRuntimeTextureFromDuiHandle(long _txd, string _txn, string _duiHandle)
		{
			return Function.Call<long>((Hash)0xB135472B, _txd, _txn, _duiHandle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void ExecuteCommand(string _commandString)
		{
			Function.Call((Hash)0x561C060B, _commandString);
		}
		/// <summary>
		/// This native is not implemented.
		/// </summary>
		public static int ExperimentalLoadCloneCreate(string _data, int _objectId, string _tree)
		{
			return Function.Call<int>((Hash)0xD2CB95A3, _data, _objectId, _tree);
		}
		/// <summary>
		/// Deletes the specified entity.
		/// </summary>
		public static void DeleteEntity_CFX(int _entity)
		{
			Function.Call((Hash)0xFAA3D236, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EndFindPickup(int _findHandle)
		{
			Function.Call((Hash)0x3C407D53, _findHandle);
		}
		/// <summary>
		/// Creates a runtime texture from the specified file in the current resource or a base64 data URL.
		/// </summary>
		public static long CreateRuntimeTextureFromImage(long _txd, string _txn, string _fileName)
		{
			return Function.Call<long>((Hash)0x786D8BC3, _txd, _txn, _fileName);
		}
		/// <summary>
		/// Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inverse.
		/// </summary>
		public static void GetCamMatrix(int _camera, Vector3 _rightVector, Vector3 _forwardVector, Vector3 _upVector, Vector3 _position)
		{
			Function.Call((Hash)0x8F57A89D, _camera, _rightVector, _forwardVector, _upVector, _position);
		}
		/// <summary>
		/// Creates a blank runtime texture.
		/// </summary>
		public static long CreateRuntimeTexture(long _txd, string _txn, int _width, int _height)
		{
			return Function.Call<long>((Hash)0xFEC3766D, _txd, _txn, _width, _height);
		}
		/// <summary>
		/// This native is not implemented.
		/// </summary>
		public static void ExperimentalLoadCloneSync(int _entity, string _data)
		{
			Function.Call((Hash)0x6BC189AC, _entity, _data);
		}
		/// <summary>
		/// Can be used to get a console variable of type `char*`, for example a string.
		/// </summary>
		public static string GetConvar(string _varName, string _default_)
		{
			return Function.Call<string>((Hash)0x6CCD2564, _varName, _default_);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteResourceKvp(string _key)
		{
			Function.Call((Hash)0x7389B5DF, _key);
		}
		/// <summary>
		/// This native is not implemented.
		/// </summary>
		public static string ExperimentalSaveCloneCreate(int _entity)
		{
			return Function.Call<string>((Hash)0x9D65CAD2, _entity);
		}
		/// <summary>
		/// Nonsynchronous [DELETE_RESOURCE_KVP](#\_0x7389B5DF) operation; see [FLUSH_RESOURCE_KVP](#\_0x5240DA5A).
		/// </summary>
		public static void DeleteResourceKvpNoSync(string _key)
		{
			Function.Call((Hash)0x4152C90, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int FindFirstObject(int _outEntity)
		{
			return Function.Call<int>((Hash)0xFAA6CB5D, _outEntity);
		}
		/// <summary>
		/// This native returns the currently used game's name.
		/// </summary>
		public static string GetCurrentGameName()
		{
			return Function.Call<string>((Hash)0xACA18ECD);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DeleteFunctionReference(string _referenceIdentity)
		{
			Function.Call((Hash)0x1E86F206, _referenceIdentity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int FindFirstPed(int _outEntity)
		{
			return Function.Call<int>((Hash)0xFB012961, _outEntity);
		}
		/// <summary>
		/// This native is not implemented.
		/// </summary>
		public static string ExperimentalSaveCloneSync(int _entity)
		{
			return Function.Call<string>((Hash)0x38D19210, _entity);
		}
		/// <summary>
		/// Disables the game's afk camera that starts panning around after 30 seconds of inactivity.
		/// </summary>
		public static void DisableIdleCamera(bool _state)
		{
			Function.Call((Hash)0x3D5AB7F0, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int FindFirstPickup(int _outEntity)
		{
			return Function.Call<int>((Hash)0x3FF9D340, _outEntity);
		}
		/// <summary>
		/// Destroys a DUI browser.
		/// </summary>
		public static void DestroyDui(long _duiObject)
		{
			Function.Call((Hash)0xA085CB10, _duiObject);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool FindNextPickup(int _findHandle, int _outEntity)
		{
			return Function.Call<bool>((Hash)0x4107EF0F, _findHandle, _outEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int DoorSystemGetSize()
		{
			return Function.Call<int>((Hash)0x237613B3);
		}
		/// <summary>
		/// Returns the name of the currently executing resource.
		/// </summary>
		public static string GetCurrentResourceName()
		{
			return Function.Call<string>((Hash)0xE5E9EBBB);
		}
		/// <summary>
		/// Requests whether or not the player owns the specified SKU.
		/// </summary>
		public static bool DoesPlayerOwnSku(string _playerSrc, int _skuId)
		{
			return Function.Call<bool>((Hash)0x167ABA27, _playerSrc, _skuId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorEntitiesExtents(int _interiorId, float _bbMinX, float _bbMinY, float _bbMinZ, float _bbMaxX, float _bbMaxY, float _bbMaxZ)
		{
			Function.Call((Hash)0x322B1192, _interiorId, _bbMinX, _bbMinY, _bbMinZ, _bbMaxX, _bbMaxY, _bbMaxZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool FindNextObject(int _findHandle, int _outEntity)
		{
			return Function.Call<bool>((Hash)0x4E129DBF, _findHandle, _outEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInstanceId()
		{
			return Function.Call<int>((Hash)0x9F1C4383);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string FindKvp(int _handle)
		{
			return Function.Call<string>((Hash)0xBD7BEBC5, _handle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool FindNextPed(int _findHandle, int _outEntity)
		{
			return Function.Call<bool>((Hash)0xAB09B548, _findHandle, _outEntity);
		}
		/// <summary>
		/// Can be used to get a console variable casted back to `int` (an integer value).
		/// </summary>
		public static int GetConvarInt(string _varName, int _default_)
		{
			return Function.Call<int>((Hash)0x935C0AB2, _varName, _default_);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int FindFirstVehicle(int _outEntity)
		{
			return Function.Call<int>((Hash)0x15E55694, _outEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool DoesEntityExist_CFX(int _entity)
		{
			return Function.Call<bool>((Hash)0x3AC90869, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void EnableEnhancedHostSupport(bool _enabled)
		{
			Function.Call((Hash)0xF97B1C93, _enabled);
		}
		/// <summary>
		/// Returns a list of door system entries: a door system hash (see [ADD_DOOR_TO_SYSTEM](#\_0x6F8838D03D1DC226)) and its object handle.
		/// 
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [{doorHash1, doorHandle1}, ..., {doorHashN, doorHandleN}]
		/// ```
		/// </summary>
		public static InputArgument DoorSystemGetActive()
		{
			return Function.Call<InputArgument>((Hash)0xF65BBA4B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string DuplicateFunctionReference(string _referenceIdentity)
		{
			return Function.Call<string>((Hash)0xF4E2079D, _referenceIdentity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void DropPlayer(string _playerSrc, string _reason)
		{
			Function.Call((Hash)0xBA0613E1, _playerSrc, _reason);
		}
		/// <summary>
		/// Returns entity's archetype name, if available.
		/// </summary>
		public static string GetEntityArchetypeName(int _entity)
		{
			return Function.Call<string>((Hash)0x47B870F5, _entity);
		}
		/// <summary>
		/// Returns the NUI window handle for a specified DUI browser object.
		/// </summary>
		public static string GetDuiHandle(long _duiObject)
		{
			return Function.Call<string>((Hash)0x1655D41D, _duiObject);
		}
		/// <summary>
		/// Requests whether or not the player owns the specified package.
		/// </summary>
		public static bool DoesPlayerOwnSkuExt(string _playerSrc, int _skuId)
		{
			return Function.Call<bool>((Hash)0xDEF0480B, _playerSrc, _skuId);
		}
		/// <summary>
		/// Returns the peer address of the remote game server that the user is currently connected to.
		/// </summary>
		public static string GetCurrentServerEndpoint()
		{
			return Function.Call<string>((Hash)0xEA11BFBA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void FlagServerAsPrivate(bool _private_)
		{
			Function.Call((Hash)0x13B6855D, _private_);
		}
		/// <summary>
		/// Gets the entity that this entity is attached to.
		/// </summary>
		public static int GetEntityAttachedTo_CFX(int _entity)
		{
			return Function.Call<int>((Hash)0xFE1589F9, _entity);
		}
		/// <summary>
		/// Returns all player indices for 'active' physical players known to the client.
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [127, 42, 13, 37]
		/// ```
		/// </summary>
		public static InputArgument GetActivePlayers()
		{
			return Function.Call<InputArgument>((Hash)0xCF143FB9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumResources()
		{
			return Function.Call<int>((Hash)0x863F27B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorPortalCornerPosition(int _interiorId, int _portalIndex, int _cornerIndex, float _posX, float _posY, float _posZ)
		{
			Function.Call((Hash)0xF772BB2C, _interiorId, _portalIndex, _cornerIndex, _posX, _posY, _posZ);
		}
		/// <summary>
		/// Returns all object handles known to the server.
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [127, 42, 13, 37]
		/// ```
		/// </summary>
		public static InputArgument GetAllObjects()
		{
			return Function.Call<InputArgument>((Hash)0x6886C3FE);
		}
		/// <summary>
		/// Gets the current coordinates for a specified entity. This native is used server side when using OneSync.
		/// 
		/// See [GET_ENTITY_COORDS](#\_0x3FEF770D40960D5A) for client side.
		/// </summary>
		public static Vector3 GetEntityCoords_CFX(int _entity)
		{
			return Function.Call<Vector3>((Hash)0x1647F1CB, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetEntityRotationVelocity(int _entity)
		{
			return Function.Call<Vector3>((Hash)0x9BF8A73F, _entity);
		}
		/// <summary>
		/// Currently it only works with peds.
		/// </summary>
		public static int GetEntityHealth_CFX(int _entity)
		{
			return Function.Call<int>((Hash)0x8E3222B7, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetEntityHeading_CFX(int _entity)
		{
			return Function.Call<float>((Hash)0x972CC383, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetAirDragMultiplierForPlayersVehicle(string _playerSrc)
		{
			return Function.Call<float>((Hash)0x62FC38D0, _playerSrc);
		}
		/// <summary>
		/// Returns all rope handles. The data returned adheres to the following layout:
		/// 
		/// ```
		/// [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
		/// ```
		/// </summary>
		public static InputArgument GetAllRopes()
		{
			return Function.Call<InputArgument>((Hash)0x760A2D67);
		}
		/// <summary>
		/// Gets the amount of metadata values with the specified key existing in the specified resource's manifest.
		/// See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
		/// </summary>
		public static int GetNumResourceMetadata(string _resourceName, string _metadataKey)
		{
			return Function.Call<int>((Hash)0x776E864, _resourceName, _metadataKey);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetEntityRotation_CFX(int _entity)
		{
			return Function.Call<Vector3>((Hash)0x8FF45B04, _entity);
		}
		/// <summary>
		/// Currently it only works with peds.
		/// </summary>
		public static int GetEntityMaxHealth_CFX(int _entity)
		{
			return Function.Call<int>((Hash)0xC7AE6AA1, _entity);
		}
		/// <summary>
		/// Returns all vehicle handles known to the server.
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [127, 42, 13, 37]
		/// ```
		/// </summary>
		public static InputArgument GetAllVehicles()
		{
			return Function.Call<InputArgument>((Hash)0x332169F5);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetEntityModel_CFX(int _entity)
		{
			return Function.Call<uint>((Hash)0xDAFCB3EC, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalEntityCount(int _interiorId, int _portalIndex)
		{
			return Function.Call<int>((Hash)0xC68021B, _interiorId, _portalIndex);
		}
		/// <summary>
		/// A getter for [SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME](#\_0x90B6DA738A9A25DA).
		/// </summary>
		public static float GetAmbientVehicleRangeMultiplier()
		{
			return Function.Call<float>((Hash)0x667EC929);
		}
		/// <summary>
		/// A getter for [SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME](#\_0x0B919E1FB47CC4E0).
		/// </summary>
		public static float GetAmbientPedRangeMultiplier()
		{
			return Function.Call<float>((Hash)0xB550232D);
		}
		/// <summary>
		/// This native gets an entity's population type.
		/// </summary>
		public static int GetEntityPopulationType_CFX(int _entity)
		{
			return Function.Call<int>((Hash)0xFC30DDFF, _entity);
		}
		/// <summary>
		/// Returns the entity handle for the specified state bag name. For use with [ADD_STATE_BAG_CHANGE_HANDLER](?\_0x5BA35AAF).
		/// </summary>
		public static int GetEntityFromStateBagName(string _bagName)
		{
			return Function.Call<int>((Hash)0x4BDF1867, _bagName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalCount(int _interiorId)
		{
			return Function.Call<int>((Hash)0xD05BB8B1, _interiorId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorPortalEntityPosition(int _interiorId, int _portalIndex, int _entityIndex, float _posX, float _posY, float _posZ)
		{
			Function.Call((Hash)0x9B7AB83C, _interiorId, _portalIndex, _entityIndex, _posX, _posY, _posZ);
		}
		/// <summary>
		/// Returns all peds handles known to the server.
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [127, 42, 13, 37]
		/// ```
		/// </summary>
		public static InputArgument GetAllPeds()
		{
			return Function.Call<InputArgument>((Hash)0xB8584FEF);
		}
		/// <summary>
		/// Nonsynchronous operations will not wait for a disk/filesystem flush before returning from a write or delete call. They will be much faster than their synchronous counterparts (e.g., bulk operations), however, a system crash may lose the data to some recent operations.
		/// 
		/// This native ensures all `_NO_SYNC` operations are synchronized with the disk/filesystem.
		/// </summary>
		public static void FlushResourceKvp()
		{
			Function.Call((Hash)0xE27C97A0);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorPortalEntityRotation(int _interiorId, int _portalIndex, int _entityIndex, float _rotX, float _rotY, float _rotZ, float _rotW)
		{
			Function.Call((Hash)0x9F9CEB63, _interiorId, _portalIndex, _entityIndex, _rotX, _rotY, _rotZ, _rotW);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalEntityArchetype(int _interiorId, int _portalIndex, int _entityIndex)
		{
			return Function.Call<int>((Hash)0x9A0E1700, _interiorId, _portalIndex, _entityIndex);
		}
		/// <summary>
		/// Returns all registered vehicle model names, including non-dlc vehicles and custom vehicles in no particular order.
		/// 
		/// **Example output**
		/// 
		/// ```
		/// 	["dubsta", "dubsta2", "dubsta3", "myverycoolcar", "sultan", "sultanrs", ...]
		/// ```
		/// 
		/// This native will not return vehicles that are unregistered (i.e from a resource being stopped) during runtime.
		/// </summary>
		public static InputArgument GetAllVehicleModels()
		{
			return Function.Call<InputArgument>((Hash)0xD7531645);
		}
		/// <summary>
		/// Forces the game snow pass to render.
		/// </summary>
		public static void ForceSnowPass(bool _enabled)
		{
			Function.Call((Hash)0xE6E16170, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerMaxArmour(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x2A50657, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 GetEntityVelocity_CFX(int _entity)
		{
			return Function.Call<Vector3>((Hash)0xC14C9B6B, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetEntityScript_CFX(int _entity)
		{
			return Function.Call<string>((Hash)0xB7F70784, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerLastMsg(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x427E8E6A, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static uint GetPedCauseOfDeath_CFX(int _ped)
		{
			return Function.Call<uint>((Hash)0x63458C27, _ped);
		}
		/// <summary>
		/// A getter for [SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xEAE6DCC7EEE3DB1D).
		/// </summary>
		public static float GetParkedVehicleDensityMultiplier()
		{
			return Function.Call<float>((Hash)0xFF72DF84);
		}
		/// <summary>
		/// Returns the current game being executed.
		/// 
		/// Possible values:
		/// 
		/// | Return value | Meaning                        |
		/// | ------------ | ------------------------------ |
		/// | `fxserver`   | Server-side code ('Duplicity') |
		/// | `fivem`      | FiveM for GTA V                |
		/// | `libertym`   | LibertyM for GTA IV            |
		/// | `redm`       | RedM for Red Dead Redemption 2 |
		/// </summary>
		public static string GetGameName()
		{
			return Function.Call<string>((Hash)0xE8EAA18B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalEntityFlag(int _interiorId, int _portalIndex, int _entityIndex)
		{
			return Function.Call<int>((Hash)0x9DA2E811, _interiorId, _portalIndex, _entityIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPasswordHash(string _password)
		{
			return Function.Call<string>((Hash)0x23473EA4, _password);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool FindNextVehicle(int _findHandle, int _outEntity)
		{
			return Function.Call<bool>((Hash)0x8839120D, _findHandle, _outEntity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalRoomFrom(int _interiorId, int _portalIndex)
		{
			return Function.Call<int>((Hash)0xAA9C141D, _interiorId, _portalIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorPosition_CFX(int _interiorId, float _posX, float _posY, float _posZ)
		{
			Function.Call((Hash)0x77A435B0, _interiorId, _posX, _posY, _posZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetInteriorRoomName(int _interiorId, int _roomIndex)
		{
			return Function.Call<string>((Hash)0x11755DF2, _interiorId, _roomIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorRoomExtents(int _interiorId, int _roomIndex, float _bbMinX, float _bbMinY, float _bbMinZ, float _bbMaxX, float _bbMaxY, float _bbMaxZ)
		{
			Function.Call((Hash)0xF9E795DD, _interiorId, _roomIndex, _bbMinX, _bbMinY, _bbMinZ, _bbMaxX, _bbMaxY, _bbMaxZ);
		}
		/// <summary>
		/// Gets the current game timer in milliseconds.
		/// </summary>
		public static long GetGameTimer_CFX()
		{
			return Function.Call<long>((Hash)0xA4EA0691);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorRoomIndexByHash(int _interiorId, int _roomHash)
		{
			return Function.Call<int>((Hash)0xE0EE05F8, _interiorId, _roomHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorRoomFlag(int _interiorId, int _roomIndex)
		{
			return Function.Call<int>((Hash)0x6B7AF743, _interiorId, _roomIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalRoomTo(int _interiorId, int _portalIndex)
		{
			return Function.Call<int>((Hash)0x3F47F0E8, _interiorId, _portalIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetHeliTailRotorHealth(int _vehicle)
		{
			return Function.Call<float>((Hash)0xA41BC13D, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetHeliMainRotorHealth(int _vehicle)
		{
			return Function.Call<float>((Hash)0xF01E2AAB, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorRoomTimecycle(int _interiorId, int _roomIndex)
		{
			return Function.Call<int>((Hash)0x82BA3F88, _interiorId, _roomIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetHostId()
		{
			return Function.Call<string>((Hash)0x5F70F5A3);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorPortalFlag(int _interiorId, int _portalIndex)
		{
			return Function.Call<int>((Hash)0xC74DA47C, _interiorId, _portalIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetRopeLengthChangeRate(int _rope)
		{
			return Function.Call<float>((Hash)0x66D70EA3, _rope);
		}
		/// <summary>
		/// Returns a list of entity handles (script GUID) for all entities in the specified pool - the data returned is an array as
		/// follows:
		/// 
		/// ```json
		/// [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
		/// ```
		/// 
		/// ### Supported pools
		/// 
		/// *   `CPed`: Peds (including animals) and players.
		/// *   `CObject`: Objects (props), doors, and projectiles.
		/// *   `CVehicle`: Vehicles.
		/// *   `CPickup`: Pickups.
		/// </summary>
		public static InputArgument GetGamePool(string _poolName)
		{
			return Function.Call<InputArgument>((Hash)0x2B9D4F50, _poolName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPedDesiredHeading(int _ped)
		{
			return Function.Call<float>((Hash)0xC182F76E, _ped);
		}
		/// <summary>
		/// Gets the entity type (as an integer), which can be one of the following defined down below:
		/// 
		/// **The following entities will return type `2`:**
		/// 
		/// *   Automobile
		/// *   Bike
		/// *   Boat
		/// *   Heli
		/// *   Plane
		/// *   Submarine
		/// *   Trailer
		/// *   Train
		/// *   DraftVeh (Red Dead Redemption 2)
		/// 
		/// **The following entities will return type `1`:**
		/// 
		/// *   Ped
		/// *   Player
		/// *   Animal (Red Dead Redemption 2)
		/// *   Horse (Red Dead Redemption 2)
		/// 
		/// **The following entities will return type `3`:**
		/// 
		/// *   Object
		/// *   Door
		/// *   Pickup
		/// 
		/// Otherwise, a value of `0` will be returned.
		/// </summary>
		public static int GetEntityType_CFX(int _entity)
		{
			return Function.Call<int>((Hash)0xB1BD08D, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerMaxHealth(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x8154E470, _playerSrc);
		}
		/// <summary>
		/// This native converts the passed string to a hash.
		/// </summary>
		public static uint GetHashKey_CFX(string _model)
		{
			return Function.Call<uint>((Hash)0x98EFF6F1, _model);
		}
		/// <summary>
		/// Returns the internal build number of the current game being executed.
		/// 
		/// Possible values:
		/// 
		/// *   FiveM
		///     *   1604
		///     *   2060
		///     *   2189
		///     *   2372
		///     *   2545
		///     *   2612
		///     *   2699
		/// *   RedM
		///     *   1311
		///     *   1355
		///     *   1436
		///     *   1491
		/// *   LibertyM
		///     *   43
		/// *   FXServer
		///     *   0
		/// </summary>
		public static int GetGameBuildNumber()
		{
			return Function.Call<int>((Hash)0x804B9F7B);
		}
		/// <summary>
		/// Returns a list of decorations applied to a ped.
		/// 
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [ [ collectionHash1, overlayHash1 ], ..., [c ollectionHashN, overlayHashN ] ]
		/// ```
		/// 
		/// This command will return undefined data if invoked on a remote player ped.
		/// </summary>
		public static InputArgument GetPedDecorations(int _ped)
		{
			return Function.Call<InputArgument>((Hash)0x7CCE1163, _ped);
		}
		/// <summary>
		/// Gets the current speed of the entity in meters per second.
		/// 
		/// ```
		/// To convert to MPH: speed * 2.236936
		/// To convert to KPH: speed * 3.6
		/// ```
		/// </summary>
		public static float GetEntitySpeed_CFX(int _entity)
		{
			return Function.Call<float>((Hash)0x9E1E4798, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetInvokingResource()
		{
			return Function.Call<string>((Hash)0x4D52FE5B);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedMovementClipset(int _ped)
		{
			return Function.Call<int>((Hash)0x69E81E3D, _ped);
		}
		/// <summary>
		/// A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
		/// </summary>
		public static int GetPedHairHighlightColor(int _ped)
		{
			return Function.Call<int>((Hash)0x4B087305, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetInteriorRoomCount(int _interiorId)
		{
			return Function.Call<int>((Hash)0xA2737C2C, _interiorId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetRopeTimeMultiplier(int _rope)
		{
			return Function.Call<float>((Hash)0xF341E6CA, _rope);
		}
		/// <summary>
		/// A getter for [SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER](#\_0xAE540335B4ABC4E2).
		/// </summary>
		public static float GetPlayerMeleeWeaponDefenseModifier(int _playerId)
		{
			return Function.Call<float>((Hash)0x27E94EF8, _playerId);
		}
		/// <summary>
		/// A getter for [SET_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x95E3D6257B166CF2).
		/// </summary>
		public static float GetPedDensityMultiplier()
		{
			return Function.Call<float>((Hash)0xF5A904F9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerMaxStamina(int _playerId)
		{
			return Function.Call<float>((Hash)0xD014AB79, _playerId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsVehicleSecondaryColourCustom(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x288AD228, _vehicle);
		}
		/// <summary>
		/// Gets the script task command currently assigned to the ped.
		/// </summary>
		public static uint GetPedScriptTaskCommand(int _ped)
		{
			return Function.Call<uint>((Hash)0x84FE084, _ped);
		}
		/// <summary>
		/// A getter for [\_SET_PED_FACE_FEATURE](#\_0x71A5C1DBA060049E). Returns 0.0 if fails to get.
		/// </summary>
		public static float GetPedFaceFeature_CFX(int _ped, int _index)
		{
			return Function.Call<float>((Hash)0xBA352ADD, _ped, _index);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedMaxHealth_CFX(int _ped)
		{
			return Function.Call<int>((Hash)0xA45B6C8D, _ped);
		}
		/// <summary>
		/// A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
		/// </summary>
		public static int GetPedHairColor(int _ped)
		{
			return Function.Call<int>((Hash)0xA3EA2893, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedInVehicleSeat_CFX(int _vehicle, int _seatIndex)
		{
			return Function.Call<int>((Hash)0x388FDE9A, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumPlayerIndices()
		{
			return Function.Call<int>((Hash)0x63D13184);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPedArmour(int _ped)
		{
			return Function.Call<int>((Hash)0x2CE311A7, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetLastPedInVehicleSeat_CFX(int _vehicle, int _seatIndex)
		{
			return Function.Call<int>((Hash)0xF7C6792D, _vehicle, _seatIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerPing(string _playerSrc)
		{
			return Function.Call<int>((Hash)0xFF1290D4, _playerSrc);
		}
		/// <summary>
		/// Gets the stage of the peds scripted task.
		/// </summary>
		public static int GetPedScriptTaskStage(int _ped)
		{
			return Function.Call<int>((Hash)0x44B0E5E2, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetNetworkWalkMode()
		{
			return Function.Call<bool>((Hash)0x2CAFD5E9);
		}
		/// <summary>
		/// Gets the routing bucket for the specified entity.
		/// 
		/// Routing buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware.
		/// </summary>
		public static int GetEntityRoutingBucket(int _entity)
		{
			return Function.Call<int>((Hash)0xED4B0486, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumPlayerIdentifiers(string _playerSrc)
		{
			return Function.Call<int>((Hash)0xFF7F66AB, _playerSrc);
		}
		/// <summary>
		/// A getter for [\_SET_PED_EYE_COLOR](#\_0x50B56988B170AFDF). Returns -1 if fails to get.
		/// </summary>
		public static int GetPedEyeColor(int _ped)
		{
			return Function.Call<int>((Hash)0xA47B860F, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardWaterTemp()
		{
			return Function.Call<float>((Hash)0x8E3B3E42);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerPed_CFX(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x6E31E993, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetRopeUpdateOrder(int _rope)
		{
			return Function.Call<int>((Hash)0x2AB2E0F6, _rope);
		}
		/// <summary>
		/// Get the entity that killed the ped. This native is used server side when using OneSync.
		/// </summary>
		public static int GetPedSourceOfDeath_CFX(int _ped)
		{
			return Function.Call<int>((Hash)0x84ADF9EB, _ped);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPlayerName_CFX(string _playerSrc)
		{
			return Function.Call<string>((Hash)0x406B4B20, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerTeam_CFX(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x9873E404, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardVacuum()
		{
			return Function.Call<float>((Hash)0xFABE67A9);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetNumPlayerTokens(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x619E4A3D, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsVehiclePrimaryColourCustom(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xD7EC8760, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetNuiCursorPosition(int _x, int _y)
		{
			Function.Call((Hash)0xBDBA226F, _x, _y);
		}
		/// <summary>
		/// Returns the zoom level data by index from mapzoomdata.meta file.
		/// </summary>
		public static bool GetMapZoomDataLevel(int _index, float _zoomScale, float _zoomSpeed, float _scrollSpeed, float _tilesX, float _tilesY)
		{
			return Function.Call<bool>((Hash)0x1363A998, _index, _zoomScale, _zoomSpeed, _scrollSpeed, _tilesX, _tilesY);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerServerId(int _player)
		{
			return Function.Call<int>((Hash)0x4D97BCC7, _player);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetPlayerStamina_CFX(int _playerId)
		{
			return Function.Call<float>((Hash)0xE415EC5C, _playerId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetIsVehicleEngineRunning(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x7DC6D022, _vehicle);
		}
		/// <summary>
		/// Gets the width of the specified runtime texture.
		/// </summary>
		public static int GetRuntimeTextureWidth(long _tex)
		{
			return Function.Call<int>((Hash)0xC9F55558, _tex);
		}
		/// <summary>
		/// See the client-side [GET_LANDING_GEAR_STATE](#\_0x9B0F3DCA3DB0F4CD) native for a description of landing gear states.
		/// </summary>
		public static int GetLandingGearState(int _vehicle)
		{
			return Function.Call<int>((Hash)0xA6F02670, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPlayerFromIndex(int _index)
		{
			return Function.Call<string>((Hash)0xC8A9CE08, _index);
		}
		/// <summary>
		/// Gets the current known coordinates for the specified player from cops perspective. This native is used server side when using OneSync.
		/// </summary>
		public static Vector3 GetPlayerWantedCentrePosition(string _playerSrc)
		{
			return Function.Call<Vector3>((Hash)0x821F2D2C, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetPlayerInvincible_CFX(string _playerSrc)
		{
			return Function.Call<bool>((Hash)0x680C90EE, _playerSrc);
		}
		/// <summary>
		/// Gets a player's token. Tokens can be used to enhance banning logic, however are specific to a server.
		/// </summary>
		public static string GetPlayerToken(string _playerSrc, int _index)
		{
			return Function.Call<string>((Hash)0x54C06897, _playerSrc, _index);
		}
		/// <summary>
		/// A getter for [SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER](#\_0x4A3DC7ECCC321032).
		/// </summary>
		public static float GetPlayerMeleeWeaponDamageModifier(int _playerId)
		{
			return Function.Call<float>((Hash)0x8689A825, _playerId);
		}
		/// <summary>
		/// A getter for [SET_PLAYER_VEHICLE_DEFENSE_MODIFIER](#\_0x4C60E6EFDAFF2462).
		/// </summary>
		public static float GetPlayerVehicleDefenseModifier(int _playerId)
		{
			return Function.Call<float>((Hash)0x8326E7CD, _playerId);
		}
		/// <summary>
		/// A getter for [SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x245A6883D966D537).
		/// </summary>
		public static float GetVehicleDensityMultiplier()
		{
			return Function.Call<float>((Hash)0xEF7C6538);
		}
		/// <summary>
		/// Returns the value of a state bag key.
		/// </summary>
		public static InputArgument GetStateBagValue(string _bagName, string _key)
		{
			return Function.Call<InputArgument>((Hash)0x637F4C75, _bagName, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPlayerIdentifier(string _playerSrc, int _identifier)
		{
			return Function.Call<string>((Hash)0x7302DBCF, _playerSrc, _identifier);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPlayerEndpoint(string _playerSrc)
		{
			return Function.Call<string>((Hash)0xFEE404F9, _playerSrc);
		}
		/// <summary>
		/// A getter for [SET_PLAYER_VEHICLE_DAMAGE_MODIFIER](#\_0xA50E117CDDF82F0C).
		/// </summary>
		public static float GetPlayerVehicleDamageModifier(int _playerId)
		{
			return Function.Call<float>((Hash)0x78F27B1F, _playerId);
		}
		/// <summary>
		/// Returns a hash of selected ped weapon.
		/// </summary>
		public static uint GetSelectedPedWeapon(int _ped)
		{
			return Function.Call<uint>((Hash)0xD240123E, _ped);
		}
		/// <summary>
		/// ```
		/// Returns given players wanted level server-side.
		/// ```
		/// </summary>
		public static int GetPlayerWantedLevel_CFX(string _playerSrc)
		{
			return Function.Call<int>((Hash)0xBDCDD163, _playerSrc);
		}
		/// <summary>
		/// Gets the door count for the specified train.
		/// </summary>
		public static int GetTrainDoorCount(int _train)
		{
			return Function.Call<int>((Hash)0x99974721, _train);
		}
		/// <summary>
		/// Gets the height of the specified runtime texture.
		/// </summary>
		public static int GetRuntimeTextureHeight(long _tex)
		{
			return Function.Call<int>((Hash)0x3574AACE, _tex);
		}
		/// <summary>
		/// Gets the routing bucket for the specified player.
		/// 
		/// Routing buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware.
		/// </summary>
		public static int GetPlayerRoutingBucket(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x52441C34, _playerSrc);
		}
		/// <summary>
		/// A getter for [SET_PED_HEAD_OVERLAY](#\_0x48F44967FA05CC1E) and [\_SET_PED_HEAD_OVERLAY_COLOR](#\_0x497BF74A7B9CB952) natives.
		/// </summary>
		public static bool GetPedHeadOverlayData(int _ped, int _index, int _overlayValue, int _colourType, int _firstColour, int _secondColour, float _overlayOpacity)
		{
			return Function.Call<bool>((Hash)0xC46EE605, _ped, _index, _overlayValue, _colourType, _firstColour, _secondColour, _overlayOpacity);
		}
		/// <summary>
		/// A getter for [SET_PLAYER_WEAPON_DEFENSE_MODIFIER](#\_0x2D83BC011CA14A3C).
		/// </summary>
		public static float GetPlayerWeaponDefenseModifier(int _playerId)
		{
			return Function.Call<float>((Hash)0xF1543251, _playerId);
		}
		/// <summary>
		/// Gets the current camera rotation for a specified player. This native is used server side when using OneSync.
		/// </summary>
		public static Vector3 GetPlayerCameraRotation(string _playerSrc)
		{
			return Function.Call<Vector3>((Hash)0x433C765D, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetPlayerGuid(string _playerSrc)
		{
			return Function.Call<string>((Hash)0xE52D9680, _playerSrc);
		}
		/// <summary>
		/// Unlike [GET_PLAYER_INVINCIBLE](#\_0xB721981B2B939E07) this native gets both [SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED](#\_0x6BC97F4F4BB3C04B) and [SET_PLAYER_INVINCIBLE](#\_0x239528EACDC3E7DE) invincibility state.
		/// </summary>
		public static bool GetPlayerInvincible2(int _player)
		{
			return Function.Call<bool>((Hash)0xF2E3912B, _player);
		}
		/// <summary>
		/// A getter for [SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x7A556143A1C03898).
		/// </summary>
		public static float GetScenarioPedDensityMultiplier()
		{
			return Function.Call<float>((Hash)0x77C598B2);
		}
		/// <summary>
		/// On the server this will return the players source, on the client it will return the player handle.
		/// </summary>
		public static int GetPlayerFromStateBagName(string _bagName)
		{
			return Function.Call<int>((Hash)0xA56135E0, _bagName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetInteriorRotation(int _interiorId, float _rotx, float _rotY, float _rotZ, float _rotW)
		{
			Function.Call((Hash)0x5A039998, _interiorId, _rotx, _rotY, _rotZ, _rotW);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehiclePetrolTankHealth_CFX(int _vehicle)
		{
			return Function.Call<float>((Hash)0xE41595CE, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetPlayerFromServerId(int _serverId)
		{
			return Function.Call<int>((Hash)0x344EA166, _serverId);
		}
		/// <summary>
		/// Gets the vehicle the specified Ped is/was in depending on bool value. This native is used server side when using OneSync.
		/// </summary>
		public static int GetVehiclePedIsIn_CFX(int _ped, bool _lastVehicle)
		{
			return Function.Call<int>((Hash)0xAFE92319, _ped, _lastVehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTrainCarriageIndex(int _train)
		{
			return Function.Call<int>((Hash)0x4B8285CF, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleClutch(int _vehicle)
		{
			return Function.Call<float>((Hash)0x1DAD4583, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTrainCurrentTrackNode(int _train)
		{
			return Function.Call<int>((Hash)0xE015E854, _train);
		}
		/// <summary>
		/// Gets the type of a ped's specific task given an index of the CPedTaskSpecificDataNode nodes.
		/// A ped will typically have a task at index 0, if a ped has multiple tasks at once they will be in the order 0, 1, 2, etc.
		/// </summary>
		public static int GetPedSpecificTaskType(int _ped, int _index)
		{
			return Function.Call<int>((Hash)0x7F4563D3, _ped, _index);
		}
		/// <summary>
		/// Currently it only works when set to "all players".
		/// </summary>
		public static int GetVehicleDoorsLockedForPlayer_CFX(int _vehicle)
		{
			return Function.Call<int>((Hash)0x1DC50247, _vehicle);
		}
		/// <summary>
		/// Gets the current fake wanted level for a specified player. This native is used server side when using OneSync.
		/// </summary>
		public static int GetPlayerFakeWantedLevel(string _playerSrc)
		{
			return Function.Call<int>((Hash)0x98D244, _playerSrc);
		}
		/// <summary>
		/// Gets the row pitch of the specified runtime texture, for use when creating data for `SET_RUNTIME_TEXTURE_ARGB_DATA`.
		/// </summary>
		public static int GetRuntimeTexturePitch(long _tex)
		{
			return Function.Call<int>((Hash)0xCA0A085F, _tex);
		}
		/// <summary>
		/// A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938).
		/// </summary>
		public static float GetResourceKvpFloat(string _key)
		{
			return Function.Call<float>((Hash)0x35BDCEEA, _key);
		}
		/// <summary>
		/// Returns the current state of the specified resource.
		/// </summary>
		public static string GetResourceState(string _resourceName)
		{
			return Function.Call<string>((Hash)0x4039B485, _resourceName);
		}
		/// <summary>
		/// A getter for [SET_VEHICLE_CHEAT_POWER_INCREASE](#\_0xB59E4BD37AE292DB).
		/// </summary>
		public static float GetVehicleCheatPowerIncrease(int _vehicle)
		{
			return Function.Call<float>((Hash)0xC3C93F28, _vehicle);
		}
		/// <summary>
		/// Returns the physical on-disk path of the specified resource.
		/// </summary>
		public static string GetResourcePath(string _resourceName)
		{
			return Function.Call<string>((Hash)0x61DCF017, _resourceName);
		}
		/// <summary>
		/// Returns all commands that are registered in the command system.
		/// The data returned adheres to the following layout:
		/// 
		/// ```
		/// [
		/// {
		/// "name": "cmdlist"
		/// },
		/// {
		/// "name": "command1"
		/// }
		/// ]
		/// ```
		/// </summary>
		public static InputArgument GetRegisteredCommands()
		{
			return Function.Call<InputArgument>((Hash)0xD4BEF069);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleEngineHealth_CFX(int _vehicle)
		{
			return Function.Call<float>((Hash)0x8880038A, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleFuelLevel(int _vehicle)
		{
			return Function.Call<float>((Hash)0x5F739BB8, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleAlarmTimeLeft(int _vehicle)
		{
			return Function.Call<int>((Hash)0xC62AAC98, _vehicle);
		}
		/// <summary>
		/// Gets a vehicle's multiplier used with a wheel's GET_VEHICLE_WHEEL_STEERING_ANGLE to determine the angle the wheel is rendered.
		/// </summary>
		public static float GetVehicleDrawnWheelAngleMult(int _vehicle)
		{
			return Function.Call<float>((Hash)0x21C1DA8E, _vehicle);
		}
		/// <summary>
		/// ```
		/// Gets the amount of time player has spent evading the cops.
		/// Counter starts and increments only when cops are chasing the player.
		/// If the player is evading, the timer will pause.
		/// ```
		/// </summary>
		public static int GetPlayerTimeInPursuit(string _playerSrc, bool _lastPursuit)
		{
			return Function.Call<int>((Hash)0x7ADE63E1, _playerSrc, _lastPursuit);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleBodyHealth_CFX(int _vehicle)
		{
			return Function.Call<float>((Hash)0x2B2FCC28, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetTrainCarriageEngine(int _train)
		{
			return Function.Call<int>((Hash)0x95070FA, _train);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleColours(int _vehicle, int _colorPrimary, int _colorSecondary)
		{
			Function.Call((Hash)0x40D82D88, _vehicle, _colorPrimary, _colorSecondary);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleCurrentRpm(int _vehicle)
		{
			return Function.Call<float>((Hash)0xE7B12B54, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleRadioStationIndex(int _vehicle)
		{
			return Function.Call<int>((Hash)0x57037960, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDirtLevel(int _vehicle)
		{
			return Function.Call<float>((Hash)0xFD15C065, _vehicle);
		}
		/// <summary>
		/// A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B).
		/// </summary>
		public static string GetResourceKvpString(string _key)
		{
			return Function.Call<string>((Hash)0x5240DA5A, _key);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleDoorStatus(int _vehicle)
		{
			return Function.Call<int>((Hash)0x6E35C49C, _vehicle);
		}
		/// <summary>
		/// ```cpp
		/// enum eRopeFlags
		/// {
		///     DrawShadowEnabled = 2,
		/// 	Breakable = 4,
		/// 	RopeUnwindingFront = 8,
		/// 	RopeWinding = 32
		/// }
		/// ```
		/// </summary>
		public static int GetRopeFlags(int _rope)
		{
			return Function.Call<int>((Hash)0xA80FFE99, _rope);
		}
		/// <summary>
		/// A getter for [SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xB3B3359379FE77D3).
		/// Same as vehicle density multiplier.
		/// </summary>
		public static float GetRandomVehicleDensityMultiplier()
		{
			return Function.Call<float>((Hash)0x7B0D00C5);
		}
		/// <summary>
		/// A getter for [SET_WEAPON_ANIMATION_OVERRIDE](\_0x1055AC3A667F09D9).
		/// </summary>
		public static uint GetWeaponAnimationOverride(int _ped)
		{
			return Function.Call<uint>((Hash)0x63ED2E7, _ped);
		}
		/// <summary>
		/// Get the last entity that damaged the ped. This native is used server side when using OneSync.
		/// </summary>
		public static int GetPedSourceOfDamage(int _ped)
		{
			return Function.Call<int>((Hash)0x535DB43F, _ped);
		}
		/// <summary>
		/// Gets the metadata value at a specified key/index from a resource's manifest.
		/// See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
		/// </summary>
		public static string GetResourceMetadata(string _resourceName, string _metadataKey, int _index)
		{
			return Function.Call<string>((Hash)0x964BAB1D, _resourceName, _metadataKey, _index);
		}
		/// <summary>
		/// Returns vehicle xenon lights custom RGB color values. Do note this native doesn't return non-RGB colors that was set with [\_SET_VEHICLE_XENON_LIGHTS_COLOR](#\_0xE41033B25D003A07).
		/// </summary>
		public static bool GetVehicleXenonLightsCustomColor(int _vehicle, int _red, int _green, int _blue)
		{
			return Function.Call<bool>((Hash)0xC715F730, _vehicle, _red, _green, _blue);
		}
		/// <summary>
		/// Returns the effective handling data of a vehicle as a vector value.
		/// Example: `local inertiaMultiplier = GetVehicleHandlingVector(vehicle, 'CHandlingData', 'vecInertiaMultiplier')`
		/// </summary>
		public static Vector3 GetVehicleHandlingVector(int _vehicle, string _class_, string _fieldName)
		{
			return Function.Call<Vector3>((Hash)0xFB341304, _vehicle, _class_, _fieldName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleExtraColours(int _vehicle, int _pearlescentColor, int _wheelColor)
		{
			Function.Call((Hash)0x80E4659B, _vehicle, _pearlescentColor, _wheelColor);
		}
		/// <summary>
		/// A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8).
		/// </summary>
		public static int GetResourceKvpInt(string _key)
		{
			return Function.Call<int>((Hash)0x557B586A, _key);
		}
		/// <summary>
		/// Gets the flight nozzel position for the specified vehicle. See the client-side [\_GET_VEHICLE_FLIGHT_NOZZLE_POSITION](#\_0xDA62027C8BDB326E) native for usage examples.
		/// </summary>
		public static float GetVehicleFlightNozzlePosition(int _vehicle)
		{
			return Function.Call<float>((Hash)0xAD40AD55, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetResourceByFindIndex(int _findIndex)
		{
			return Function.Call<string>((Hash)0x387246B7, _findIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardSpeed(int _vehicle)
		{
			return Function.Call<float>((Hash)0x9AAD420E, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardFuel()
		{
			return Function.Call<float>((Hash)0x19B0B2CE);
		}
		/// <summary>
		/// ```lua
		/// enum_VehicleLockStatus = {
		///     None = 0,
		///     Locked = 2,
		///     LockedForPlayer = 3,
		///     StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
		///     CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
		///     CanBeBrokenIntoPersist = 8, -- Can be broken into persist
		///     CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
		/// }
		/// ```
		/// 
		/// It should be [noted](https://forum.cfx.re/t/4863241) that while the [client-side command](#\_0x25BC98A59C2EA962) and its
		/// setter distinguish between states 0 (unset) and 1 (unlocked), the game will synchronize both as state 0, so the server-side
		/// command will return only '0' if unlocked.
		/// </summary>
		public static int GetVehicleDoorLockStatus_CFX(int _vehicle)
		{
			return Function.Call<int>((Hash)0xD72CEF2, _vehicle);
		}
		/// <summary>
		/// A getter for [\_SET_PLAYER_WEAPON_DEFENSE_MODIFIER\_2](#\_0xBCFDE9EDE4CF27DC).
		/// </summary>
		public static float GetPlayerWeaponDefenseModifier2(int _playerId)
		{
			return Function.Call<float>((Hash)0x986B65FF, _playerId);
		}
		/// <summary>
		/// Returns the effective handling data of a vehicle as an integer value.
		/// Example: `local modelFlags = GetVehicleHandlingInt(vehicle, 'CHandlingData', 'strModelFlags')`
		/// </summary>
		public static int GetVehicleHandlingInt(int _vehicle, string _class_, string _fieldName)
		{
			return Function.Call<int>((Hash)0x27396C75, _vehicle, _class_, _fieldName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleHandbrake(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x483B013C, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleSteeringScale(int _vehicle)
		{
			return Function.Call<float>((Hash)0x954465DE, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardRpm()
		{
			return Function.Call<float>((Hash)0xF9716A11);
		}
		/// <summary>
		/// Gets the ratio that a door is open for on a train.
		/// </summary>
		public static float GetTrainDoorOpenRatio(int _train, int _doorIndex)
		{
			return Function.Call<float>((Hash)0x40B16551, _train, _doorIndex);
		}
		/// <summary>
		/// Returns the effective handling data of a vehicle as a floating-point value.
		/// Example: `local fSteeringLock = GetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock')`
		/// </summary>
		public static float GetVehicleHandlingFloat(int _vehicle, string _class_, string _fieldName)
		{
			return Function.Call<float>((Hash)0x642FC12F, _vehicle, _class_, _fieldName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleTurboPressure(int _vehicle)
		{
			return Function.Call<float>((Hash)0xE02B51D7, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleEngineTemperature(int _vehicle)
		{
			return Function.Call<float>((Hash)0xF4F495CB, _vehicle);
		}
		/// <summary>
		/// A getter for `CWeaponAccuracyModifier` in a weapon component.
		/// </summary>
		public static float GetWeaponComponentAccuracyModifier(uint _componentHash)
		{
			return Function.Call<float>((Hash)0xC693E278, _componentHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardTemp()
		{
			return Function.Call<float>((Hash)0x6B6ADAFA);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardOilPressure()
		{
			return Function.Call<float>((Hash)0x3856D767);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardOilTemp()
		{
			return Function.Call<float>((Hash)0x1F5996AA);
		}
		/// <summary>
		/// A getter for [MODIFY_VEHICLE_TOP_SPEED](#\_0x93A3996368C94158). Returns -1.0 if a modifier is not set.
		/// </summary>
		public static float GetVehicleTopSpeedModifier(int _vehicle)
		{
			return Function.Call<float>((Hash)0x998B7FEE, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleHeadlightsColour(int _vehicle)
		{
			return Function.Call<int>((Hash)0xD7147656, _vehicle);
		}
		/// <summary>
		/// Gets the lock on state for the specified vehicle. See the client-side [GET_VEHICLE_HOMING_LOCKON_STATE](#\_0xE6B0E8CFC3633BF0) native for a description of lock on states.
		/// </summary>
		public static int GetVehicleHomingLockonState(int _vehicle)
		{
			return Function.Call<int>((Hash)0xFBDE9FD8, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleCustomSecondaryColour(int _vehicle, int _r, int _g, int _b)
		{
			Function.Call((Hash)0x3FF247A2, _vehicle, _r, _g, _b);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleDashboardBoost()
		{
			return Function.Call<float>((Hash)0xDFFABA2A);
		}
		/// <summary>
		/// Gets the state of the player vehicle's dashboard lights as a bit set
		/// indicator_left = 1
		/// indicator_right = 2
		/// handbrakeLight = 4
		/// engineLight = 8
		/// ABSLight = 16
		/// gasLight = 32
		/// oilLight = 64
		/// headlights = 128
		/// highBeam = 256
		/// batteryLight = 512
		/// </summary>
		public static int GetVehicleDashboardLights()
		{
			return Function.Call<int>((Hash)0x500FFE9D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleRoofLivery(int _vehicle)
		{
			return Function.Call<int>((Hash)0x872CF42, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleDashboardColour(int _vehicle, int _color)
		{
			Function.Call((Hash)0xA0DBD08D, _vehicle, _color);
		}
		/// <summary>
		/// Gets the flags of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static int GetVehicleWheelFlags(int _vehicle, int _wheelIndex)
		{
			return Function.Call<int>((Hash)0xC70FA0C7, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleThrottleOffset(int _vehicle)
		{
			return Function.Call<float>((Hash)0xD1D07351, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleSteeringAngle(int _vehicle)
		{
			return Function.Call<float>((Hash)0x1382FCEA, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleCustomPrimaryColour(int _vehicle, int _r, int _g, int _b)
		{
			Function.Call((Hash)0x1C2B9FEF, _vehicle, _r, _g, _b);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleAlarmSet(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xDC921211, _vehicle);
		}
		/// <summary>
		/// A getter for [SET_PLAYER_WEAPON_DAMAGE_MODIFIER](#\_0xCE07B9F7817AADA3).
		/// </summary>
		public static float GetPlayerWeaponDamageModifier(int _playerId)
		{
			return Function.Call<float>((Hash)0x2A3D7CDA, _playerId);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Returns whether an asynchronous streaming file registration completed.
		/// </summary>
		public static bool IsStreamingFileReady(string _registerAs)
		{
			return Function.Call<bool>((Hash)0xA194934D, _registerAs);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleNumberPlateTextIndex(int _vehicle)
		{
			return Function.Call<int>((Hash)0x499747B6, _vehicle);
		}
		/// <summary>
		/// Gets brake pressure of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// Normal values around 1.0f when braking.
		/// </summary>
		public static float GetVehicleWheelBrakePressure(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0x70FE2EFF, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleWheelRimColliderSize(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xCEE21AB2, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleLivery_CFX(int _vehicle)
		{
			return Function.Call<int>((Hash)0xEC82A51D, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleTyreSmokeColor(int _vehicle, int _r, int _g, int _b)
		{
			Function.Call((Hash)0x75280015, _vehicle, _r, _g, _b);
		}
		/// <summary>
		/// A getter for `ReticuleHash` in a weapon scope component.
		/// </summary>
		public static int GetWeaponComponentReticuleHash(uint _componentHash)
		{
			return Function.Call<int>((Hash)0xF9AB9297, _componentHash);
		}
		/// <summary>
		/// List of known states:
		/// 
		/// ```
		/// 1: Not wheeling.
		/// 65: Vehicle is ready to do wheelie (burnouting).
		/// 129: Vehicle is doing wheelie.
		/// ```
		/// </summary>
		public static int GetVehicleWheelieState(int _vehicle)
		{
			return Function.Call<int>((Hash)0x137260D1, _vehicle);
		}
		/// <summary>
		/// Gets power being sent to a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static float GetVehicleWheelPower(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xD203287, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// A getter for `CWeaponFallOffModifier` range modifier value in a weapon component.
		/// </summary>
		public static float GetWeaponComponentRangeModifier(uint _componentHash)
		{
			return Function.Call<float>((Hash)0x2FD0BC1B, _componentHash);
		}
		/// <summary>
		/// Gets speed of a wheel at the tyre.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static float GetVehicleWheelSpeed(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0x149C9DA0, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// A getter for `CWeaponDamageModifier` in a weapon component.
		/// </summary>
		public static float GetWeaponComponentDamageModifier(uint _componentHash)
		{
			return Function.Call<float>((Hash)0x4A0E3855, _componentHash);
		}
		/// <summary>
		/// A getter for `CWeaponFallOffModifier` damage modifier value in a weapon component.
		/// </summary>
		public static float GetWeaponComponentRangeDamageModifier(uint _componentHash)
		{
			return Function.Call<float>((Hash)0xE134FB8D, _componentHash);
		}
		/// <summary>
		/// Gets the rotation speed of a wheel.
		/// This is used internally to calcuate GET_VEHICLE_WHEEL_SPEED.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static float GetVehicleWheelRotationSpeed(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xEA1859E5, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasEntityBeenMarkedAsNoLongerNeeded(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x9C9A3BE0, _vehicle);
		}
		/// <summary>
		/// A getter for `CameraHash` in a weapon scope component.
		/// </summary>
		public static int GetWeaponComponentCameraHash(uint _componentHash)
		{
			return Function.Call<int>((Hash)0xACB7E68F, _componentHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleNumberOfWheels(int _vehicle)
		{
			return Function.Call<int>((Hash)0xEDF4B0FC, _vehicle);
		}
		/// <summary>
		/// Gets the vehicle that is locked on to for the specified vehicle.
		/// </summary>
		public static int GetVehicleLockOnTarget(int _vehicle)
		{
			return Function.Call<int>((Hash)0x4A557117, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleGravityAmount(int _vehicle)
		{
			return Function.Call<float>((Hash)0xB48A1292, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleOilLevel(int _vehicle)
		{
			return Function.Call<float>((Hash)0xFC7F8EF4, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void GetVehicleInteriorColour(int _vehicle, int _color)
		{
			Function.Call((Hash)0xCCFF3B6E, _vehicle, _color);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string GetVehicleNumberPlateText(int _vehicle)
		{
			return Function.Call<string>((Hash)0xE8522D58, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleNextGear(int _vehicle)
		{
			return Function.Call<int>((Hash)0xDDB298AE, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleCurrentGear(int _vehicle)
		{
			return Function.Call<int>((Hash)0xB4F4E566, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleLightMultiplier(int _vehicle)
		{
			return Function.Call<float>((Hash)0x7E6E219C, _vehicle);
		}
		/// <summary>
		/// Gets whether the wheel is powered.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// This is a shortcut to a flag in GET_VEHICLE_WHEEL_FLAGS.
		/// </summary>
		public static bool GetVehicleWheelIsPowered(int _vehicle, int _wheelIndex)
		{
			return Function.Call<bool>((Hash)0x3CCF1B49, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleEngineStarting(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xBB340D04, _vehicle);
		}
		/// <summary>
		/// Returns the type of the passed vehicle.
		/// 
		/// ### Vehicle types
		/// 
		/// *   automobile
		/// *   bike
		/// *   boat
		/// *   heli
		/// *   plane
		/// *   submarine
		/// *   trailer
		/// *   train
		/// </summary>
		public static string GetVehicleType(int _vehicle)
		{
			return Function.Call<string>((Hash)0xA273060E, _vehicle);
		}
		/// <summary>
		/// A getter for `ClipSize` in a weapon component.
		/// </summary>
		public static int GetWeaponComponentClipSize(uint _componentHash)
		{
			return Function.Call<int>((Hash)0xE14CF665, _componentHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool HasVehicleBeenOwnedByPlayer(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xE4E83A5B, _vehicle);
		}
		/// <summary>
		/// A getter for the recoil shake amplitude of a weapon.
		/// </summary>
		public static float GetWeaponRecoilShakeAmplitude(uint _weaponHash)
		{
			return Function.Call<float>((Hash)0x5E1AF5F, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsAceAllowed(string _object)
		{
			return Function.Call<bool>((Hash)0x7EBB9929, _object);
		}
		/// <summary>
		/// Gets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both
		/// </summary>
		public static int GetVehicleIndicatorLights(int _vehicle)
		{
			return Function.Call<int>((Hash)0x83070354, _vehicle);
		}
		/// <summary>
		/// Converts a screen coordinate into its relative world coordinate.
		/// </summary>
		public static void GetWorldCoordFromScreenCoord(float _screenX, float _screenY, Vector3 _worldVector, Vector3 _normalVector)
		{
			Function.Call((Hash)0xC81D0659, _screenX, _screenY, _worldVector, _normalVector);
		}
		/// <summary>
		/// <!-- Native implemented by Disquse. 0xFFF65C63 -->
		/// 
		/// Returns true if the minimap is currently expanded. False if it's the normal minimap state.
		/// Use [`IsBigmapFull`](#\_0x66EE14B2) to check if the full map is currently revealed on the minimap.
		/// </summary>
		public static bool IsBigmapActive()
		{
			return Function.Call<bool>((Hash)0xFFF65C63);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleWheelYRotation(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0x2EA4AFFE, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool GetVehicleLightsState(int _vehicle, bool _lightsOn, bool _highbeamsOn)
		{
			return Function.Call<bool>((Hash)0x7C278621, _vehicle, _lightsOn, _highbeamsOn);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleWheelTireColliderWidth(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xEF65929C, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehiclePreviouslyOwnedByPlayer(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xF849ED67, _vehicle);
		}
		/// <summary>
		/// Returns vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
		/// Only works on non-default wheels (returns 0 in case of default wheels).
		/// </summary>
		public static float GetVehicleWheelWidth(int _vehicle)
		{
			return Function.Call<float>((Hash)0x9C7B59F9, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleSirenOn(int _vehicle)
		{
			return Function.Call<bool>((Hash)0x25EB5873, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleWheelSurfaceMaterial(int _vehicle, int _wheelIndex)
		{
			return Function.Call<int>((Hash)0xA7F04022, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleNeedsToBeHotwired(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xF9933BF4, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleWheelType(int _vehicle)
		{
			return Function.Call<int>((Hash)0xDA58D7AE, _vehicle);
		}
		/// <summary>
		/// Gets the traction vector length of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static float GetVehicleWheelTractionVectorLength(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0x3BCFEE14, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleInteriorLightOn(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xA411F72C, _vehicle);
		}
		/// <summary>
		/// Requests the commerce data for the specified player, including the owned SKUs. Use `IS_PLAYER_COMMERCE_INFO_LOADED` to check if it has loaded.
		/// </summary>
		public static void LoadPlayerCommerceData(string _playerSrc)
		{
			Function.Call((Hash)0xA8F63EAB, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleWanted(int _vehicle)
		{
			return Function.Call<bool>((Hash)0xA7DAF7C, _vehicle);
		}
		/// <summary>
		/// Adds the specified player to the target list for the specified Mumble voice target ID.
		/// </summary>
		public static void MumbleAddVoiceTargetPlayerByServerId(int _targetId, int _serverId)
		{
			Function.Call((Hash)0x25F2B65F, _targetId, _serverId);
		}
		/// <summary>
		/// Gets whether or not this is the CitizenFX server.
		/// </summary>
		public static bool IsDuplicityVersion()
		{
			return Function.Call<bool>((Hash)0xCF24C52E);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleWheelHealth(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0x54A677F5, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleTyreBurst(int _vehicle, int _wheelID, bool _completely)
		{
			return Function.Call<bool>((Hash)0x48C80210, _vehicle, _wheelID, _completely);
		}
		/// <summary>
		/// <!-- Native implemented by Disquse. 0x66EE14B2 -->
		/// </summary>
		public static bool IsBigmapFull()
		{
			return Function.Call<bool>((Hash)0x66EE14B2);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleHighGear(int _vehicle)
		{
			return Function.Call<int>((Hash)0xF1D1D689, _vehicle);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float GetVehicleWheelTireColliderSize(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xE0BA9FE6, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// A getter for [\_SET_WEAPON_DAMAGE_MODIFIER](#\_0x4757F00BC6323CFE).
		/// </summary>
		public static float GetWeaponDamageModifier(uint _weaponHash)
		{
			return Function.Call<float>((Hash)0xD979143, _weaponHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int GetVehicleWindowTint(int _vehicle)
		{
			return Function.Call<int>((Hash)0x13D53892, _vehicle);
		}
		/// <summary>
		/// Adds the specified channel to the target list for the specified Mumble voice target ID.
		/// </summary>
		public static void MumbleAddVoiceTargetChannel(int _targetId, int _channel)
		{
			Function.Call((Hash)0x4D386C9E, _targetId, _channel);
		}
		/// <summary>
		/// Returns the offset of the specified wheel relative to the wheel's axle center.
		/// </summary>
		public static float GetVehicleWheelXOffset(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xCC90CBCA, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerUsingSuperJump(string _playerSrc)
		{
			return Function.Call<bool>((Hash)0xC7D2C20C, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MumbleClearVoiceChannel()
		{
			Function.Call((Hash)0xBF847807);
		}
		/// <summary>
		/// Clears channels from the target list for the specified Mumble voice target ID.
		/// </summary>
		public static void MumbleClearVoiceTargetChannels(int _targetId)
		{
			Function.Call((Hash)0x5EA72E76, _targetId);
		}
		/// <summary>
		/// Clears players from the target list for the specified Mumble voice target ID.
		/// </summary>
		public static void MumbleClearVoiceTargetPlayers(int _targetId)
		{
			Function.Call((Hash)0x912E21DA, _targetId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static string InvokeFunctionReference(string _referenceIdentity, string _argsSerialized, int _argsLength, int _retvalLength)
		{
			return Function.Call<string>((Hash)0xE3551879, _referenceIdentity, _argsSerialized, _argsLength, _retvalLength);
		}
		/// <summary>
		/// Checks if the player is currently muted
		/// </summary>
		public static bool MumbleIsPlayerMuted(int _playerSrc)
		{
			return Function.Call<bool>((Hash)0x1D5D50C2, _playerSrc);
		}
		/// <summary>
		/// Removes the specified player from the user's voice targets.
		/// 
		/// Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_PLAYER_BY_SERVER_ID](#\_0x25F2B65F)
		/// </summary>
		public static void MumbleRemoveVoiceTargetPlayerByServerId(int _targetId, int _serverId)
		{
			Function.Call((Hash)0x930BD34B, _targetId, _serverId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MumbleIsPlayerTalking(int _player)
		{
			return Function.Call<bool>((Hash)0x33EEF97F, _player);
		}
		/// <summary>
		/// This native checks if the given ped is a player.
		/// </summary>
		public static bool IsPedAPlayer_CFX(int _ped)
		{
			return Function.Call<bool>((Hash)0x404794CA, _ped);
		}
		/// <summary>
		/// Requests the commerce data from Tebex for the specified player, including the owned SKUs. Use `IS_PLAYER_COMMERCE_INFO_LOADED` to check if it has loaded.
		/// </summary>
		public static void LoadPlayerCommerceDataExt(string _playerSrc)
		{
			Function.Call((Hash)0x7995539E, _playerSrc);
		}
		/// <summary>
		/// Gets steering angle of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static float GetVehicleWheelSteeringAngle(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0xA0867448, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// Stops listening to the specified channel.
		/// </summary>
		public static void MumbleRemoveVoiceChannelListen(int _channel)
		{
			Function.Call((Hash)0x231523B7, _channel);
		}
		/// <summary>
		/// Gets the current suspension compression of a wheel.
		/// Returns a positive value. 0 means the suspension is fully extended, the wheel is off the ground.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static float GetVehicleWheelSuspensionCompression(int _vehicle, int _wheelIndex)
		{
			return Function.Call<float>((Hash)0x2B48175B, _vehicle, _wheelIndex);
		}
		/// <summary>
		/// Requests whether or not the commerce data for the specified player has loaded.
		/// </summary>
		public static bool IsPlayerCommerceInfoLoaded(string _playerSrc)
		{
			return Function.Call<bool>((Hash)0xBEFE93F4, _playerSrc);
		}
		/// <summary>
		/// Requests whether or not the commerce data for the specified player has loaded from Tebex.
		/// </summary>
		public static bool IsPlayerCommerceInfoLoadedExt(string _playerSrc)
		{
			return Function.Call<bool>((Hash)0x1D14F4FE, _playerSrc);
		}
		/// <summary>
		/// This native checks if the given entity is visible.
		/// </summary>
		public static bool IsEntityVisible_CFX(int _entity)
		{
			return Function.Call<bool>((Hash)0x120B4ED5, _entity);
		}
		/// <summary>
		/// Returns the mumble voice channel from a player's server id.
		/// </summary>
		public static int MumbleGetVoiceChannelFromServerId(int _serverId)
		{
			return Function.Call<int>((Hash)0x221C09F1, _serverId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPlayerAceAllowed(string _playerSrc, string _object)
		{
			return Function.Call<bool>((Hash)0xDEDAE23D, _playerSrc, _object);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool MumbleIsActive()
		{
			return Function.Call<bool>((Hash)0xE820BC10);
		}
		/// <summary>
		/// Adds the specified player to the target list for the specified Mumble voice target ID.
		/// </summary>
		public static void MumbleAddVoiceTargetPlayer(int _targetId, int _player)
		{
			Function.Call((Hash)0x32C5355A, _targetId, _player);
		}
		/// <summary>
		/// Checks if keyboard input is enabled during NUI focus using `SET_NUI_FOCUS_KEEP_INPUT`.
		/// </summary>
		public static bool IsNuiFocusKeepingInput()
		{
			return Function.Call<bool>((Hash)0x39C9DC92);
		}
		/// <summary>
		/// Changes the Mumble server address to connect to, and reconnects to the new address.
		/// </summary>
		public static void MumbleSetServerAddress(string _address, int _port)
		{
			Function.Call((Hash)0xE6EB2CD8, _address, _port);
		}
		/// <summary>
		/// Returns whether or not the specific minimap overlay has loaded.
		/// </summary>
		public static bool HasMinimapOverlayLoaded(int _id)
		{
			return Function.Call<bool>((Hash)0xF7535F32, _id);
		}
		/// <summary>
		/// This native will return true if the user succesfully connected to the voice server.
		/// If the user disabled the voice-chat setting it will return false.
		/// </summary>
		public static bool MumbleIsConnected()
		{
			return Function.Call<bool>((Hash)0xB816370A);
		}
		/// <summary>
		/// Removes the specified voice channel from the user's voice targets.
		/// 
		/// Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_CHANNEL](#\_0x4D386C9E)
		/// </summary>
		public static void MumbleRemoveVoiceTargetChannel(int _targetId, int _channel)
		{
			Function.Call((Hash)0x268DB867, _targetId, _channel);
		}
		/// <summary>
		/// Returns true if the profiler is active.
		/// </summary>
		public static bool ProfilerIsRecording()
		{
			return Function.Call<bool>((Hash)0xF8B7D7BB);
		}
		/// <summary>
		/// Registers a specified font name for use with text draw commands.
		/// </summary>
		public static int RegisterFontId(string _fontName)
		{
			return Function.Call<int>((Hash)0xACF6D8EE, _fontName);
		}
		/// <summary>
		/// Removes the specified player from the user's voice targets.
		/// 
		/// Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_PLAYER](#\_0x32C5355A)
		/// </summary>
		public static void MumbleRemoveVoiceTargetPlayer(int _targetId, int _player)
		{
			Function.Call((Hash)0x88CD646F, _targetId, _player);
		}
		/// <summary>
		/// Returns vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
		/// Only works on non-default wheels (returns 0 in case of default wheels).
		/// </summary>
		public static float GetVehicleWheelSize(int _vehicle)
		{
			return Function.Call<float>((Hash)0x4046B66, _vehicle);
		}
		/// <summary>
		/// Returns the first owner ID of the specified entity.
		/// </summary>
		public static int NetworkGetFirstEntityOwner(int _entity)
		{
			return Function.Call<int>((Hash)0x1E546224, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsVehicleExtraTurnedOn_CFX(int _vehicle, int _extraId)
		{
			return Function.Call<bool>((Hash)0x42098B5, _vehicle, _extraId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static Vector3 NetworkGetVoiceProximityOverride(string _playerSrc)
		{
			return Function.Call<Vector3>((Hash)0x7A6462F4, _playerSrc);
		}
		/// <summary>
		/// Returns the owner ID of the specified entity.
		/// </summary>
		public static int NetworkGetEntityOwner(int _entity)
		{
			return Function.Call<int>((Hash)0x526FEE31, _entity);
		}
		/// <summary>
		/// Reads the contents of a text file in a specified resource.
		/// If executed on the client, this file has to be included in `files` in the resource manifest.
		/// Example: `local data = LoadResourceFile("devtools", "data.json")`
		/// </summary>
		public static string LoadResourceFile(string _resourceName, string _fileName)
		{
			return Function.Call<string>((Hash)0x76A9EE1F, _resourceName, _fileName);
		}
		/// <summary>
		/// Sets the audio submix ID for a specified player using Mumble 'Native Audio' functionality.
		/// </summary>
		public static void MumbleSetSubmixForServerId(int _serverId, int _submixId)
		{
			Function.Call((Hash)0xFE3A3054, _serverId, _submixId);
		}
		/// <summary>
		/// Use this native to disable noise suppression and high pass filters.
		/// 
		/// The possible intents for this are as follows (backticks are used to represent hashes):
		/// 
		/// | Index | Description |
		/// |-|-|
		/// | \`speech\` | Default intent |
		/// | \`music\` | Disable noise suppression and high pass filter |
		/// </summary>
		public static void MumbleSetAudioInputIntent(uint _intentHash)
		{
			Function.Call((Hash)0x6383526B, _intentHash);
		}
		/// <summary>
		/// Replaces the `popgroups` (CPopGroupList) meta file with the file in the specified path.
		/// </summary>
		public static void OverridePopGroups(string _path)
		{
			Function.Call((Hash)0xD3BC438F, _path);
		}
		/// <summary>
		/// Scope exit for profiler.
		/// </summary>
		public static void ProfilerExitScope()
		{
			Function.Call((Hash)0xB39CA35C);
		}
		/// <summary>
		/// Overrides the output volume for a particular player on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
		/// 
		/// Set to -1.0 to reset the Volume override.
		/// </summary>
		public static void MumbleSetVolumeOverride(int _player, float _volume)
		{
			Function.Call((Hash)0x61C309E3, _player, _volume);
		}
		/// <summary>
		/// Create a permanent voice channel.
		/// </summary>
		public static void MumbleCreateChannel(int _id)
		{
			Function.Call((Hash)0x262663C5, _id);
		}
		/// <summary>
		/// Overrides the output volume for a particular player with the specified server id and player name on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
		/// </summary>
		public static void MumbleSetVolumeOverrideByServerId(int _serverId, float _volume)
		{
			Function.Call((Hash)0xCE8E25B4, _serverId, _volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool IsPrincipalAceAllowed(string _principal, string _object)
		{
			return Function.Call<bool>((Hash)0x37CF52CE, _principal, _object);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Registers a set of entities with the game engine. These should match `CEntityDef` class information from the game.
		/// At this time, this function **should not be used in a live environment**.
		/// </summary>
		public static void RegisterEntities(InputArgument _factory)
		{
			Function.Call((Hash)0x410DA7D3, _factory);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetEntityFromNetworkId_CFX(int _netId)
		{
			return Function.Call<int>((Hash)0x5B912C3F, _netId);
		}
		/// <summary>
		/// Overrides whether or not peds can stand on top of the specified vehicle.
		/// 
		/// Note this flag is not replicated automatically, you will have to manually do so.
		/// </summary>
		public static void OverrideVehiclePedsCanStandOnTopFlag(int _vehicle, bool _can)
		{
			Function.Call((Hash)0x7FA03E76, _vehicle, _can);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Registers a file from an URL as a streaming asset in the GTA streaming subsystem. This will asynchronously register the asset, and caching is done based on the URL itself - cache headers are ignored.
		/// 
		/// Use `IS_STREAMING_FILE_READY` to check if the asset has been registered successfully.
		/// </summary>
		public static void RegisterStreamingFileFromUrl(string _registerAs, string _url)
		{
			Function.Call((Hash)0xF44BFB95, _registerAs, _url);
		}
		/// <summary>
		/// Registers a listener for console output messages.
		/// </summary>
		public static void RegisterConsoleListener(InputArgument _listener)
		{
			Function.Call((Hash)0x281B5448, _listener);
		}
		/// <summary>
		/// Sends a message to the specific DUI root page. This is similar to SEND_NUI_MESSAGE.
		/// </summary>
		public static void SendDuiMessage(long _duiObject, string _jsonString)
		{
			Function.Call((Hash)0xCD380DA9, _duiObject, _jsonString);
		}
		/// <summary>
		/// An internal function which allows the current resource's HLL script runtimes to receive state for the specified event.
		/// </summary>
		public static void RegisterResourceAsEventHandler(string _eventName)
		{
			Function.Call((Hash)0xD233A168, _eventName);
		}
		/// <summary>
		/// Sets the current Mumble voice target ID to broadcast voice to.
		/// </summary>
		public static void MumbleSetVoiceTarget(int _targetId)
		{
			Function.Call((Hash)0x960A4A95, _targetId);
		}
		/// <summary>
		/// ```
		/// This will return true if the player is evading wanted level, meaning that the wanted level stars are blink.
		/// Otherwise will return false.
		/// 
		/// If the player is not wanted, it simply returns false.
		/// ```
		/// </summary>
		public static bool IsPlayerEvadingWantedLevel(string _playerSrc)
		{
			return Function.Call<bool>((Hash)0x89A3881A, _playerSrc);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PerformHttpRequestInternalEx(InputArgument _requestData)
		{
			return Function.Call<int>((Hash)0x6B171E87, _requestData);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int PerformHttpRequestInternal(string _requestData, int _requestDataLength)
		{
			return Function.Call<int>((Hash)0x8E8CC653, _requestData, _requestDataLength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static float MumbleGetTalkerProximity()
		{
			return Function.Call<float>((Hash)0x84E02A32);
		}
		/// <summary>
		/// A getter for [FREEZE_ENTITY_POSITION](#\_0x428CA6DBD1094446).
		/// </summary>
		public static bool IsEntityPositionFrozen(int _entity)
		{
			return Function.Call<bool>((Hash)0xEDBE6ADD, _entity);
		}
		/// <summary>
		/// Returns the current NUI focus state previously set with `SET_NUI_FOCUS`.
		/// </summary>
		public static bool IsNuiFocused()
		{
			return Function.Call<bool>((Hash)0x98545E6D);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int NetworkGetNetworkIdFromEntity_CFX(int _entity)
		{
			return Function.Call<int>((Hash)0x9E35DAB6, _entity);
		}
		/// <summary>
		/// Registered commands can be executed by entering them in the client console (this works for client side and server side registered commands). Or by entering them in the server console/through an RCON client (only works for server side registered commands). Or if you use a supported chat resource, like the default one provided in the cfx-server-data repository, then you can enter the command in chat by prefixing it with a `/`.
		/// 
		/// Commands registered using this function can also be executed by resources, using the [`ExecuteCommand` native](#\_0x561C060B).
		/// 
		/// The restricted bool is not used on the client side. Permissions can only be checked on the server side, so if you want to limit your command with an ace permission automatically, make it a server command (by registering it in a server script).
		/// 
		/// **Example result**:
		/// 
		/// ![](https://i.imgur.com/TaCnG09.png)
		/// </summary>
		public static void RegisterCommand(string _commandName, InputArgument _handler, bool _restricted)
		{
			Function.Call((Hash)0x5FA79B0F, _commandName, _handler, _restricted);
		}
		/// <summary>
		/// Clears the target list for the specified Mumble voice target ID.
		/// </summary>
		public static void MumbleClearVoiceTarget(int _targetId)
		{
			Function.Call((Hash)0x8555DCBA, _targetId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RegisterRawNuiCallback(string _callbackType, InputArgument _callback)
		{
			Function.Call((Hash)0xA8AE9C2F, _callbackType, _callback);
		}
		/// <summary>
		/// Used to replicate a server variable onto clients.
		/// </summary>
		public static void SetConvarReplicated(string _varName, string _value)
		{
			Function.Call((Hash)0xF292858C, _varName, _value);
		}
		/// <summary>
		/// Requests the specified player to buy the passed SKU. This'll pop up a prompt on the client, which upon acceptance
		/// will open the browser prompting further purchase details.
		/// </summary>
		public static void RequestPlayerCommerceSession(string _playerSrc, int _skuId)
		{
			Function.Call((Hash)0x96F93CCE, _playerSrc, _skuId);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Removes a handler for changes to a state bag.
		/// </summary>
		public static void RemoveStateBagChangeHandler(int _cookie)
		{
			Function.Call((Hash)0xD36BE661, _cookie);
		}
		/// <summary>
		/// Experimental natives, please do not use in a live environment.
		/// </summary>
		public static void RemoveReplaceTexture(string _origTxd, string _origTxn)
		{
			Function.Call((Hash)0xA896B20A, _origTxd, _origTxn);
		}
		/// <summary>
		/// Injects a 'mouse move' event for a DUI object. Coordinates are in browser space.
		/// </summary>
		public static void SendDuiMouseMove(long _duiObject, int _x, int _y)
		{
			Function.Call((Hash)0xD9D7A0AA, _duiObject, _x, _y);
		}
		/// <summary>
		/// Injects a 'mouse up' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
		/// </summary>
		public static void SendDuiMouseUp(long _duiObject, string _button)
		{
			Function.Call((Hash)0x1D735B93, _duiObject, _button);
		}
		/// <summary>
		/// Sets an integer parameter for a submix effect.
		/// </summary>
		public static void SetAudioSubmixEffectParamInt(int _submixId, int _effectSlot, int _paramIndex, int _paramValue)
		{
			Function.Call((Hash)0x77FAE2B8, _submixId, _effectSlot, _paramIndex, _paramValue);
		}
		/// <summary>
		/// Starts listening to the specified channel, when available.
		/// </summary>
		public static void MumbleAddVoiceChannelListen(int _channel)
		{
			Function.Call((Hash)0xC79F44BF, _channel);
		}
		/// <summary>
		/// Registers a build task factory for resources.
		/// The function should return an object (msgpack map) with the following fields:
		/// 
		/// ```
		/// {
		/// // returns whether the specific resource should be built
		/// shouldBuild = func(resourceName: string): bool,
		/// 
		/// // asynchronously start building the specific resource.
		/// // call cb when completed
		/// build = func(resourceName: string, cb: func(success: bool, status: string): void): void
		/// }
		/// ```
		/// </summary>
		public static void RegisterResourceBuildTaskFactory(string _factoryId, InputArgument _factoryFn)
		{
			Function.Call((Hash)0x285B43CA, _factoryId, _factoryFn);
		}
		/// <summary>
		/// Registers a specified .gfx file as GFx font library.
		/// The .gfx file has to be registered with the streamer already.
		/// </summary>
		public static void RegisterFontFile(string _fileName)
		{
			Function.Call((Hash)0x1B3A363, _fileName);
		}
		/// <summary>
		/// Writes the specified data to a file in the specified resource.
		/// Using a length of `-1` will automatically detect the length assuming the data is a C string.
		/// </summary>
		public static bool SaveResourceFile(string _resourceName, string _fileName, string _data, int _dataLength)
		{
			return Function.Call<bool>((Hash)0xA09E7E7B, _resourceName, _fileName, _data, _dataLength);
		}
		/// <summary>
		/// This native sets the hover text of the image asset for the discord rich presence implementation.
		/// </summary>
		public static void SetDiscordRichPresenceAssetText(string _text)
		{
			Function.Call((Hash)0xB029D2FA, _text);
		}
		/// <summary>
		/// Scope entry for profiler.
		/// </summary>
		public static void ProfilerEnterScope(string _scopeName)
		{
			Function.Call((Hash)0xC795A4A9, _scopeName);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Registers a cached resource asset with the resource system, similar to the automatic scanning of the `stream/` folder.
		/// </summary>
		public static string RegisterResourceAsset(string _resourceName, string _fileName)
		{
			return Function.Call<string>((Hash)0x9862B266, _resourceName, _fileName);
		}
		/// <summary>
		/// Resets parameters which is used by the game for checking is ped needs to fly through windscreen after a crash to default values.
		/// </summary>
		public static void ResetFlyThroughWindscreenParams()
		{
			Function.Call((Hash)0x6D712937);
		}
		/// <summary>
		/// Returns whether or not a browser is created for a specified DUI browser object.
		/// </summary>
		public static bool IsDuiAvailable(long _duiObject)
		{
			return Function.Call<bool>((Hash)0x7AAC3B4C, _duiObject);
		}
		/// <summary>
		/// Sends a message to the `loadingScreen` NUI frame, which contains the HTML page referenced in `loadscreen` resources.
		/// </summary>
		public static bool SendLoadingScreenMessage(string _jsonString)
		{
			return Function.Call<bool>((Hash)0x8BBE6CC0, _jsonString);
		}
		/// <summary>
		/// Injects a 'mouse wheel' event for a DUI object.
		/// </summary>
		public static void SendDuiMouseWheel(long _duiObject, int _deltaY, int _deltaX)
		{
			Function.Call((Hash)0x2D62133A, _duiObject, _deltaY, _deltaX);
		}
		/// <summary>
		/// Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
		/// Example: `SetHandlingField('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
		/// </summary>
		public static void SetHandlingField(string _vehicle, string _class_, string _fieldName, int _value)
		{
			Function.Call((Hash)0xFE8064E3, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// Removes a dry volume from the game session.
		/// See CREATE_DRY_VOLUME for more info
		/// </summary>
		public static void RemoveDryVolume(int _handle)
		{
			Function.Call((Hash)0x7BCAA6E7, _handle);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Registers a dynamic streaming asset from the server with the GTA streaming module system.
		/// </summary>
		public static void RegisterStreamingFileFromCache(string _resourceName, string _fileName, string _cacheString)
		{
			Function.Call((Hash)0xCEAD2D4B, _resourceName, _fileName, _cacheString);
		}
		/// <summary>
		/// Sets whether peds can stand on top of *all* vehicles without falling off.
		/// 
		/// Note this flag is not replicated automatically, you will have to manually do so.
		/// </summary>
		public static void OverridePedsCanStandOnTopFlag(bool _flag)
		{
			Function.Call((Hash)0x90A9E0B2, _flag);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MumbleSetActive(bool _state)
		{
			Function.Call((Hash)0xD932A3F3, _state);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Registers a set of archetypes with the game engine. These should match `CBaseArchetypeDef` class information from the game.
		/// </summary>
		public static void RegisterArchetypes(InputArgument _factory)
		{
			Function.Call((Hash)0x3C2F9037, _factory);
		}
		/// <summary>
		/// Navigates the specified DUI browser to a different URL.
		/// </summary>
		public static void SetDuiUrl(long _duiObject, string _url)
		{
			Function.Call((Hash)0xF761D9F3, _duiObject, _url);
		}
		/// <summary>
		/// Adds a cooldown between instances of moving and then aiming.
		/// Can be optionally used to hinder 'speedboosting'
		/// To turn off, set value to 0
		/// </summary>
		public static void SetAimCooldown(int _value)
		{
			Function.Call((Hash)0xA42A3DBF, _value);
		}
		/// <summary>
		/// Sets the volumes for the sound channels in a submix effect.
		/// Values can be between 0.0 and 1.0.
		/// Channel 5 and channel 6 are not used in voice chat but are believed to be center and LFE channels.
		/// Output slot starts at 0 for the first ADD_AUDIO_SUBMIX_OUTPUT call then incremented by 1 on each subsequent call.
		/// </summary>
		public static void SetAudioSubmixOutputVolumes(int _submixId, int _outputSlot, float _frontLeftVolume, float _frontRightVolume, float _rearLeftVolume, float _rearRightVolume, float _channel5Volume, float _channel6Volume)
		{
			Function.Call((Hash)0x825DC0D1, _submixId, _outputSlot, _frontLeftVolume, _frontRightVolume, _rearLeftVolume, _rearRightVolume, _channel5Volume, _channel6Volume);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MumbleSetTalkerProximity(float _value)
		{
			Function.Call((Hash)0x74E927B0, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetGameType(string _gametypeName)
		{
			Function.Call((Hash)0xF90B7469, _gametypeName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetConvarServerInfo(string _varName, string _value)
		{
			Function.Call((Hash)0x9338D547, _varName, _value);
		}
		/// <summary>
		/// Injects a 'mouse down' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
		/// </summary>
		public static void SendDuiMouseDown(long _duiObject, string _button)
		{
			Function.Call((Hash)0x5D01F191, _duiObject, _button);
		}
		/// <summary>
		/// Assigns a RadioFX effect to a submix effect slot.
		/// 
		/// The parameter values for this effect are as follows (backticks are used to represent hashes):
		/// 
		/// | Index | Type | Description |
		/// |-|-|-|
		/// | \`enabled\` | int | Enables or disables RadioFX on this DSP. |
		/// | \`default\` | int | Sets default parameters for the RadioFX DSP and enables it. |
		/// | \`freq_low\` | float |  |
		/// | \`freq_hi\` | float |  |
		/// | \`fudge\` | float |  |
		/// | \`rm_mod_freq\` | float |  |
		/// | \`rm_mix\` | float |  |
		/// | \`o_freq_lo\` | float |  |
		/// | \`o_freq_hi\` | float |  |
		/// </summary>
		public static void SetAudioSubmixEffectRadioFx(int _submixId, int _effectSlot)
		{
			Function.Call((Hash)0xAAA94D53, _submixId, _effectSlot);
		}
		/// <summary>
		/// Sets the current input distance. The player will be able to talk to other players within this distance.
		/// </summary>
		public static void MumbleSetAudioInputDistance(float _distance)
		{
			Function.Call((Hash)0x1B1052E2, _distance);
		}
		/// <summary>
		/// This native sets the image asset for the discord rich presence implementation.
		/// </summary>
		public static void SetDiscordRichPresenceAsset(string _assetName)
		{
			Function.Call((Hash)0x53DFD530, _assetName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetMapName(string _mapName)
		{
			Function.Call((Hash)0xB7BA82DC, _mapName);
		}
		/// <summary>
		/// Sets the default number plate text pattern for vehicles seen on the local client with the specified plate index as their *default* index (`plateProbabilities` from carvariations).
		/// 
		/// For consistency, this should be used with the same value on all clients, since vehicles *without* custom text will use a seeded random number generator with this pattern to determine the default plate text.
		/// 
		/// The default value is `11AAA111`, and using this or a NULL string will revert to the default game RNG.
		/// 
		/// ### Pattern string format
		/// 
		/// *   `1` will lead to a random number from 0-9.
		/// *   `A` will lead to a random letter from A-Z.
		/// *   `.` will lead to a random letter *or* number, with 50% probability of being either.
		/// *   `^1` will lead to a literal `1` being emitted.
		/// *   `^A` will lead to a literal `A` being emitted.
		/// *   Any other character will lead to said character being emitted.
		/// *   A string shorter than 8 characters will be padded on the right.
		/// </summary>
		public static void SetDefaultVehicleNumberPlateTextPattern(int _plateIndex, string _pattern)
		{
			Function.Call((Hash)0x79780FD2, _plateIndex, _pattern);
		}
		/// <summary>
		/// Sets the current output distance. The player will be able to hear other players talking within this distance.
		/// </summary>
		public static void MumbleSetAudioOutputDistance(float _distance)
		{
			Function.Call((Hash)0x74C597D9, _distance);
		}
		/// <summary>
		/// This native sets the hover text of the small image asset for the discord rich presence implementation.
		/// </summary>
		public static void SetDiscordRichPresenceAssetSmallText(string _text)
		{
			Function.Call((Hash)0x35E62B6A, _text);
		}
		/// <summary>
		/// Schedules the specified resource to run a tick as soon as possible, bypassing the server's fixed tick rate.
		/// </summary>
		public static void ScheduleResourceTick(string _resourceName)
		{
			Function.Call((Hash)0xB88A73AD, _resourceName);
		}
		/// <summary>
		/// Sets the routing bucket for the specified entity.
		/// 
		/// Routing buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware.
		/// </summary>
		public static void SetEntityRoutingBucket(int _entity, int _bucket)
		{
			Function.Call((Hash)0x635E5289, _entity, _bucket);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorRoomExtents(int _interiorId, int _roomIndex, float _bbMinX, float _bbMinY, float _bbMinZ, float _bbMaxX, float _bbMaxY, float _bbMaxZ)
		{
			Function.Call((Hash)0x4FDCF51E, _interiorId, _roomIndex, _bbMinX, _bbMinY, _bbMinZ, _bbMaxX, _bbMaxY, _bbMaxZ);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void MumbleSetVoiceChannel(int _channel)
		{
			Function.Call((Hash)0x8737EEE8, _channel);
		}
		/// <summary>
		/// Mutes or unmutes the specified player
		/// </summary>
		public static void MumbleSetPlayerMuted(int _playerSrc, bool _toggle)
		{
			Function.Call((Hash)0xCC6C2EB1, _playerSrc, _toggle);
		}
		/// <summary>
		/// Possible Types:
		/// 
		/// ```
		/// 0 = Off,
		/// 1 = Regular,
		/// 2 = Expanded,
		/// 3 = Simple,
		/// ```
		/// </summary>
		public static void SetMinimapType(int _type)
		{
			Function.Call((Hash)0x5FB53015, _type);
		}
		/// <summary>
		/// Resets whether or not peds can stand on top of the specified vehicle.
		/// 
		/// Note this flag is not replicated automatically, you will have to manually do so.
		/// </summary>
		public static void ResetVehiclePedsCanStandOnTopFlag(int _vehicle)
		{
			Function.Call((Hash)0xDF62CFE2, _vehicle);
		}
		/// <summary>
		/// Resets values from the zoom level data by index to defaults from mapzoomdata.meta.
		/// </summary>
		public static void ResetMapZoomDataLevel(int _index)
		{
			Function.Call((Hash)0x11A5B7ED, _index);
		}
		/// <summary>
		/// Overrides how many real ms are equal to one game minute.
		/// A setter for [`GetMillisecondsPerGameMinute`](#\_0x2F8B4D1C595B11DB).
		/// </summary>
		public static void SetMillisecondsPerGameMinute_CFX(int _value)
		{
			Function.Call((Hash)0x36CA2554, _value);
		}
		/// <summary>
		/// It overrides the default distance culling radius of an entity. Set to `0.0` to reset.
		/// If you want to interact with an entity outside of your players' scopes set the radius to a huge number.
		/// </summary>
		public static void SetEntityDistanceCullingRadius(int _entity, float _radius)
		{
			Function.Call((Hash)0xD3A183A3, _entity, _radius);
		}
		/// <summary>
		/// Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
		/// </summary>
		public static void SetHandlingInt(string _vehicle, string _class_, string _fieldName, int _value)
		{
			Function.Call((Hash)0x8AB3F46C, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// Registers a key mapping for the current resource.
		/// 
		/// See the related [cookbook post](https://cookbook.fivem.net/2020/01/06/using-the-new-console-key-bindings/) for more information.
		/// </summary>
		public static void RegisterKeyMapping(string _commandString, string _description, string _defaultMapper, string _defaultParameter)
		{
			Function.Call((Hash)0xD7664FD1, _commandString, _description, _defaultMapper, _defaultParameter);
		}
		/// <summary>
		/// Sets the maximum distance at which all tags will be visible and which beyond will not be displayed. Distance is measured from the camera position.
		/// </summary>
		public static void SetMpGamerTagsVisibleDistance(float _distance)
		{
			Function.Call((Hash)0xD61676B3, _distance);
		}
		/// <summary>
		/// Sets the culling radius for the specified player.
		/// Set to `0.0` to reset.
		/// </summary>
		public static void SetPlayerCullingRadius(string _playerSrc, float _radius)
		{
			Function.Call((Hash)0x8A2FBAD4, _playerSrc, _radius);
		}
		/// <summary>
		/// Allows Weapon-Flashlight beams to stay visible while moving. Normally it only stays on while aiming.
		/// </summary>
		public static void SetFlashLightKeepOnWhileMoving(bool _state)
		{
			Function.Call((Hash)0x7635B349, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SendNuiMessage(string _jsonString)
		{
			return Function.Call<bool>((Hash)0x78608ACB, _jsonString);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNuiFocusKeepInput(bool _keepInput)
		{
			Function.Call((Hash)0x3FF5E5F8, _keepInput);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void RegisterNuiCallbackType(string _callbackType)
		{
			Function.Call((Hash)0xCD03CDA9, _callbackType);
		}
		/// <summary>
		/// Sets a floating-point parameter for a submix effect.
		/// </summary>
		public static void SetAudioSubmixEffectParamFloat(int _submixId, int _effectSlot, int _paramIndex, float _paramValue)
		{
			Function.Call((Hash)0x9A209B3C, _submixId, _effectSlot, _paramIndex, _paramValue);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetCursorLocation(float _x, float _y)
		{
			return Function.Call<bool>((Hash)0x8A7A8DAC, _x, _y);
		}
		/// <summary>
		/// Sets a clickable button to be displayed in a player's Discord rich presence.
		/// </summary>
		public static void SetDiscordRichPresenceAction(int _index, string _label, string _url)
		{
			Function.Call((Hash)0xCBBC3FAC, _index, _label, _url);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorRoomFlag(int _interiorId, int _roomIndex, int _flag)
		{
			Function.Call((Hash)0x5518D60B, _interiorId, _roomIndex, _flag);
		}
		/// <summary>
		/// Set's the ropes length change rate, which is the speed that rope should wind if started.
		/// </summary>
		public static void SetRopeLengthChangeRate(int _rope, float _lengthChangeRate)
		{
			Function.Call((Hash)0x69B680A7, _rope, _lengthChangeRate);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorPortalEntityFlag(int _interiorId, int _portalIndex, int _entityIndex, int _flag)
		{
			Function.Call((Hash)0x8349CD76, _interiorId, _portalIndex, _entityIndex, _flag);
		}
		/// <summary>
		/// This native sets the app id for the discord rich presence implementation.
		/// </summary>
		public static void SetDiscordAppId(string _appId)
		{
			Function.Call((Hash)0x6A02254D, _appId);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorPortalRoomTo(int _interiorId, int _portalIndex, int _roomTo)
		{
			Function.Call((Hash)0x58982680, _interiorId, _portalIndex, _roomTo);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetModelHeadlightConfiguration(uint _modelHash, float _ratePerSecond, float _headlightRotation, bool _invertRotation)
		{
			Function.Call((Hash)0x7F6B8D75, _modelHash, _ratePerSecond, _headlightRotation, _invertRotation);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorPortalCornerPosition(int _interiorId, int _portalIndex, int _cornerIndex, float _posX, float _posY, float _posZ)
		{
			Function.Call((Hash)0x87F43553, _interiorId, _portalIndex, _cornerIndex, _posX, _posY, _posZ);
		}
		/// <summary>
		/// A setter for [GET_RESOURCE_KVP_STRING](#\_0x5240DA5A).
		/// </summary>
		public static void SetResourceKvp(string _key, string _value)
		{
			Function.Call((Hash)0x21C7A35B, _key, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetSnakeoilForEntry(string _name, string _path, string _data)
		{
			Function.Call((Hash)0xA7DD3209, _name, _path, _data);
		}
		/// <summary>
		/// **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
		/// 
		/// Registers a KVP value as an asset with the GTA streaming module system. This function currently won't work.
		/// </summary>
		public static void RegisterStreamingFileFromKvs(string _kvsKey)
		{
			Function.Call((Hash)0x1493DCC1, _kvsKey);
		}
		/// <summary>
		/// This native sets the small image asset for the discord rich presence implementation.
		/// </summary>
		public static void SetDiscordRichPresenceAssetSmall(string _assetName)
		{
			Function.Call((Hash)0xF61D04C4, _assetName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNetworkWalkMode(bool _enabled)
		{
			Function.Call((Hash)0x55188D2D, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorPortalRoomFrom(int _interiorId, int _portalIndex, int _roomFrom)
		{
			Function.Call((Hash)0x298FC783, _interiorId, _portalIndex, _roomFrom);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetHttpHandler(InputArgument _handler)
		{
			Function.Call((Hash)0xF5C6330C, _handler);
		}
		/// <summary>
		/// Sets values to the zoom level data by index.
		/// </summary>
		public static void SetMapZoomDataLevel(int _index, float _zoomScale, float _zoomSpeed, float _scrollSpeed, float _tilesX, float _tilesY)
		{
			Function.Call((Hash)0x447C718E, _index, _zoomScale, _zoomSpeed, _scrollSpeed, _tilesX, _tilesY);
		}
		/// <summary>
		/// Overrides the minimap component data (from `common:/data/ui/frontend.xml`) for a specified component.
		/// </summary>
		public static void SetMinimapComponentPosition(string _name, string _alignX, string _alignY, float _posX, float _posY, float _sizeX, float _sizeY)
		{
			Function.Call((Hash)0x3E882B23, _name, _alignX, _alignY, _posX, _posY, _sizeX, _sizeY);
		}
		/// <summary>
		/// Overrides a ped model personality type.
		/// </summary>
		public static void SetPedModelPersonality(uint _modelHash, uint _personalityHash)
		{
			Function.Call((Hash)0x46F6B38B, _modelHash, _personalityHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleEngineTemperature(int _vehicle, float _temperature)
		{
			Function.Call((Hash)0x6C93C4A9, _vehicle, _temperature);
		}
		/// <summary>
		/// Sets some in-game parameters which is used for checks is ped needs to fly through windscreen after a crash.
		/// </summary>
		public static bool SetFlyThroughWindscreenParams(float _vehMinSpeed, float _unkMinSpeed, float _unkModifier, float _minDamage)
		{
			return Function.Call<bool>((Hash)0x4D3118ED, _vehMinSpeed, _unkMinSpeed, _unkModifier, _minDamage);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorPortalFlag(int _interiorId, int _portalIndex, int _flag)
		{
			Function.Call((Hash)0x88B2355E, _interiorId, _portalIndex, _flag);
		}
		/// <summary>
		/// Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
		/// Example: `SetHandlingVector('AIRTUG', 'CHandlingData', 'vecCentreOfMassOffset', vector3(0.0, 0.0, -5.0))`
		/// </summary>
		public static void SetHandlingVector(string _vehicle, string _class_, string _fieldName, Vector3 _value)
		{
			Function.Call((Hash)0x7F9D543, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// the status of default voip system. It affects on `NETWORK_IS_PLAYER_TALKING` and `mp_facial` animation.
		/// This function doesn't need to be called every frame, it works like a switcher.
		/// </summary>
		public static void SetPlayerTalkingOverride(int _player, bool _state)
		{
			Function.Call((Hash)0xFC02CAF6, _player, _state);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetPlayerMaxStamina(int _playerId, float _maxStamina)
		{
			return Function.Call<bool>((Hash)0x35594F67, _playerId, _maxStamina);
		}
		/// <summary>
		/// Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
		/// Example: `SetHandlingFloat('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
		/// </summary>
		public static void SetHandlingFloat(string _vehicle, string _class_, string _fieldName, float _value)
		{
			Function.Call((Hash)0x90DD01C, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// Sets whether or not `SHUTDOWN_LOADING_SCREEN` automatically shuts down the NUI frame for the loading screen. If this is enabled,
		/// you will have to manually invoke `SHUTDOWN_LOADING_SCREEN_NUI` whenever you want to hide the NUI loading screen.
		/// </summary>
		public static void SetManualShutdownLoadingScreenNui(bool _manualShutdown)
		{
			Function.Call((Hash)0x1722C938, _manualShutdown);
		}
		/// <summary>
		/// Sets the display info for a minimap overlay.
		/// </summary>
		public static void SetMinimapOverlayDisplay(int _miniMap, float _x, float _y, float _xScale, float _yScale, float _alpha)
		{
			Function.Call((Hash)0x6A48B3CA, _miniMap, _x, _y, _xScale, _yScale, _alpha);
		}
		/// <summary>
		/// Internal function for setting a state bag value.
		/// </summary>
		public static void SetStateBagValue(string _bagName, string _keyName, string _valueData, int _valueLength, bool _replicated)
		{
			Function.Call((Hash)0x8D50E33A, _bagName, _keyName, _valueData, _valueLength, _replicated);
		}
		/// <summary>
		/// Sets the entity lockdown mode for a specific routing bucket.
		/// 
		/// Lockdown modes are:
		/// 
		/// | Mode       | Meaning                                                    |
		/// | ---------- | ---------------------------------------------------------- |
		/// | `strict`   | No entities can be created by clients at all.              |
		/// | `relaxed`  | Only script-owned entities created by clients are blocked. |
		/// | `inactive` | Clients can create any entity they want.                   |
		/// </summary>
		public static void SetRoutingBucketEntityLockdownMode(int _bucketId, string _mode)
		{
			Function.Call((Hash)0xA0F2201F, _bucketId, _mode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleTurboPressure(int _vehicle, float _pressure)
		{
			Function.Call((Hash)0x6485615E, _vehicle, _pressure);
		}
		/// <summary>
		/// Sets the type for the minimap blip clipping object to be either rectangular or rounded.
		/// </summary>
		public static void SetMinimapClipType(int _type)
		{
			Function.Call((Hash)0xB8B4490C, _type);
		}
		/// <summary>
		/// Sets the rotation speed of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static void SetVehicleWheelRotationSpeed(int _vehicle, int _wheelIndex, float _speed)
		{
			Function.Call((Hash)0x35ED100D, _vehicle, _wheelIndex, _speed);
		}
		/// <summary>
		/// Nonsynchronous [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8) operation; see [FLUSH_RESOURCE_KVP](#\_0x5240DA5A).
		/// </summary>
		public static void SetResourceKvpIntNoSync(string _key, int _value)
		{
			Function.Call((Hash)0x26AEB707, _key, _value);
		}
		/// <summary>
		/// Sets the routing bucket for the specified player.
		/// 
		/// Routing buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware.
		/// </summary>
		public static void SetPlayerRoutingBucket(string _playerSrc, int _bucket)
		{
			Function.Call((Hash)0x6504EB38, _playerSrc, _bucket);
		}
		/// <summary>
		/// Sets whether or not the specified routing bucket has automatically-created population enabled.
		/// </summary>
		public static void SetRoutingBucketPopulationEnabled(int _bucketId, bool _mode)
		{
			Function.Call((Hash)0xCE51AC2C, _bucketId, _mode);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetConvar(string _varName, string _value)
		{
			Function.Call((Hash)0x341B16D2, _varName, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetNuiFocus(bool _hasFocus, bool _hasCursor)
		{
			Function.Call((Hash)0x5B98AE30, _hasFocus, _hasCursor);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetInteriorRoomTimecycle(int _interiorId, int _roomIndex, int _timecycleHash)
		{
			Function.Call((Hash)0x31C9A848, _interiorId, _roomIndex, _timecycleHash);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleWheelHealth(int _vehicle, int _wheelIndex, float _health)
		{
			Function.Call((Hash)0xB22ECEFD, _vehicle, _wheelIndex, _health);
		}
		/// <summary>
		/// Disables the vehicle from being repaired when a vehicle extra is enabled.
		/// </summary>
		public static void SetVehicleAutoRepairDisabled(int _vehicle, bool _value)
		{
			Function.Call((Hash)0x5F3A3574, _vehicle, _value);
		}
		/// <summary>
		/// Sets a pixel in the specified runtime texture. This will have to be committed using `COMMIT_RUNTIME_TEXTURE` to have any effect.
		/// </summary>
		public static void SetRuntimeTexturePixel(long _tex, int _x, int _y, int _r, int _g, int _b, int _a)
		{
			Function.Call((Hash)0xAB65ACEE, _tex, _x, _y, _r, _g, _b, _a);
		}
		/// <summary>
		/// Nonsynchronous [SET_RESOURCE_KVP](#\_0x21C7A35B) operation; see [FLUSH_RESOURCE_KVP](#\_0x5240DA5A).
		/// </summary>
		public static void SetResourceKvpNoSync(string _key, string _value)
		{
			Function.Call((Hash)0xCF9A2FF, _key, _value);
		}
		/// <summary>
		/// Sets the ratio that a door is open for on a train.
		/// </summary>
		public static void SetTrainDoorOpenRatio(int _train, int _doorIndex, float _ratio)
		{
			Function.Call((Hash)0x2468DBE8, _train, _doorIndex, _ratio);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleCurrentRpm(int _vehicle, float _rpm)
		{
			Function.Call((Hash)0x2A01A8FC, _vehicle, _rpm);
		}
		/// <summary>
		/// Sets the player's rich presence detail state for social platform providers to a specified string.
		/// </summary>
		public static void SetRichPresence(string _presenceState)
		{
			Function.Call((Hash)0x7BDCBD45, _presenceState);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetRuntimeTextureArgbData(long _tex, string _buffer, int _length)
		{
			return Function.Call<bool>((Hash)0x3963D527, _tex, _buffer, _length);
		}
		/// <summary>
		/// Sets whether the wheel is powered.
		/// On all wheel drive cars this works to change which wheels receive power, but if a car's fDriveBiasFront doesn't send power to that wheel, it won't get power anyway. This can be fixed by changing the fDriveBiasFront with SET_VEHICLE_HANDLING_FLOAT.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// This is a shortcut to a flag in SET_VEHICLE_WHEEL_FLAGS.
		/// </summary>
		public static void SetVehicleWheelIsPowered(int _vehicle, int _wheelIndex, bool _powered)
		{
			Function.Call((Hash)0xBD5291A0, _vehicle, _wheelIndex, _powered);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleSteeringScale(int _vehicle, float _scale)
		{
			Function.Call((Hash)0xEB46596F, _vehicle, _scale);
		}
		/// <summary>
		/// A setter for [GET_RESOURCE_KVP_FLOAT](#\_0x35BDCEEA).
		/// </summary>
		public static void SetResourceKvpFloat(string _key, float _value)
		{
			Function.Call((Hash)0x9ADD2938, _key, _value);
		}
		/// <summary>
		/// Nonsynchronous [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938) operation; see [FLUSH_RESOURCE_KVP](#\_0x5240DA5A).
		/// </summary>
		public static void SetResourceKvpFloatNoSync(string _key, float _value)
		{
			Function.Call((Hash)0x3517BFBE, _key, _value);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleFuelLevel(int _vehicle, float _level)
		{
			Function.Call((Hash)0xBA970511, _vehicle, _level);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetPlayerStamina(int _playerId, float _stamina)
		{
			return Function.Call<bool>((Hash)0xA9EC16C7, _playerId, _stamina);
		}
		/// <summary>
		/// Enables or disables whether train doors should be forced open whilst a player is inside the train. This is enabled by default in multiplayer.
		/// </summary>
		public static void SetTrainsForceDoorsOpen(bool _forceOpen)
		{
			Function.Call((Hash)0xD4D1BA63, _forceOpen);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool SetTextChatEnabled(bool _enabled)
		{
			return Function.Call<bool>((Hash)0x97B2F9F8, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool VerifyPasswordHash(string _password, string _hash)
		{
			return Function.Call<bool>((Hash)0x2E310ACD, _password, _hash);
		}
		/// <summary>
		/// Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FIELD`, this might require some experimentation.
		/// Example: `SetVehicleHandlingField(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
		/// </summary>
		public static void SetVehicleHandlingField(int _vehicle, string _class_, string _fieldName, int _value)
		{
			Function.Call((Hash)0x2BA40795, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// Sets the flags of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static void SetVehicleWheelFlags(int _vehicle, int _wheelIndex, int _flags)
		{
			Function.Call((Hash)0xD2B9E90D, _vehicle, _wheelIndex, _flags);
		}
		/// <summary>
		/// Sets whether all tags should group (normal game behavior) or should remain independent and above each ped's respective head when in a vehicle.
		/// </summary>
		public static void SetMpGamerTagsUseVehicleBehavior(bool _enabled)
		{
			Function.Call((Hash)0x7A27BC93, _enabled);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleAlarmTimeLeft(int _vehicle, int _time)
		{
			Function.Call((Hash)0xC108EE6F, _vehicle, _time);
		}
		/// <summary>
		/// Sets the height of the vehicle's suspension.
		/// This changes the same value set by Suspension in the mod shop.
		/// Negatives values raise the car. Positive values lower the car.
		/// 
		/// This is change is visual only. The collision of the vehicle will not move.
		/// </summary>
		public static void SetVehicleSuspensionHeight(int _vehicle, float _newHeight)
		{
			Function.Call((Hash)0xB3439A01, _vehicle, _newHeight);
		}
		/// <summary>
		/// A setter for [GET_RESOURCE_KVP_INT](#\_0x557B586A).
		/// </summary>
		public static void SetResourceKvpInt(string _key, int _value)
		{
			Function.Call((Hash)0x6A2B1E8, _key, _value);
		}
		/// <summary>
		/// Disables the editor runtime mode, changing game behavior to not track entity metadata.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static void DisableEditorRuntime()
		{
			Function.Call((Hash)0xB1622B17);
		}
		/// <summary>
		/// Adjusts the offset of the specified wheel relative to the wheel's axle center.
		/// Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise.
		/// This function can be especially useful to set the track width of a vehicle, for example:
		/// 
		/// ```
		/// function SetVehicleFrontTrackWidth(vehicle, width)
		/// SetVehicleWheelXOffset(vehicle, 0, -width/2)
		/// SetVehicleWheelXOffset(vehicle, 1, width/2)
		/// end
		/// ```
		/// </summary>
		public static void SetVehicleWheelXOffset(int _vehicle, int _wheelIndex, float _offset)
		{
			Function.Call((Hash)0xBD6357D, _vehicle, _wheelIndex, _offset);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleSteeringAngle(int _vehicle, float _angle)
		{
			Function.Call((Hash)0xFFCCC2EA, _vehicle, _angle);
		}
		/// <summary>
		/// Draws a gizmo. This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// 
		/// This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
		/// 
		/// Matrix layout is as follows:
		/// 
		/// *   Element \[0], \[1] and \[2] should represent the right vector.
		/// *   Element \[4], \[5] and \[6] should represent the forward vector.
		/// *   Element \[8], \[9] and \[10] should represent the up vector.
		/// *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
		/// *   All other elements should be \[0, 0, 0, 1].
		/// </summary>
		public static bool DrawGizmo(long _matrixPtr, string _id)
		{
			return Function.Call<bool>((Hash)0xEB2EDCA2, _matrixPtr, _id);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleClutch(int _vehicle, float _clutch)
		{
			Function.Call((Hash)0x2F70ACED, _vehicle, _clutch);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleWheelYRotation(int _vehicle, int _wheelIndex, float _value)
		{
			Function.Call((Hash)0xC6C2171F, _vehicle, _wheelIndex, _value);
		}
		/// <summary>
		/// Use along with SetVehicleWheelWidth to resize the wheels (this native sets the collider width affecting physics while SetVehicleWheelWidth will change visual width).
		/// </summary>
		public static void SetVehicleWheelTireColliderWidth(int _vehicle, int _wheelIndex, float _value)
		{
			Function.Call((Hash)0x47BD0270, _vehicle, _wheelIndex, _value);
		}
		/// <summary>
		/// Sets whether or not the weather should be owned by the network subsystem.
		/// 
		/// To be able to use [\_SET_WEATHER_TYPE_TRANSITION](#\_0x578C752848ECFA0C), this has to be set to false.
		/// </summary>
		public static void SetWeatherOwnedByNetwork(bool _network)
		{
			Function.Call((Hash)0x2703D582, _network);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleGravityAmount(int _vehicle, float _gravity)
		{
			Function.Call((Hash)0x1A963E58, _vehicle, _gravity);
		}
		/// <summary>
		/// Returns mapdata's entity matrix. This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// 
		/// This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
		/// 
		/// Matrix layout is as follows:
		/// 
		/// *   Element \[0], \[1] and \[2] should represent the right vector.
		/// *   Element \[4], \[5] and \[6] should represent the forward vector.
		/// *   Element \[8], \[9] and \[10] should represent the up vector.
		/// *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
		/// *   All other elements should be \[0, 0, 0, 1].
		/// </summary>
		public static bool GetMapdataEntityMatrix(int _mapDataHash, int _entityInternalIdx, long _matrixPtr)
		{
			return Function.Call<bool>((Hash)0x2C3CDA93, _mapDataHash, _entityInternalIdx, _matrixPtr);
		}
		/// <summary>
		/// Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FLOAT`, this might require some experimentation.
		/// Example: `SetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
		/// </summary>
		public static void SetVehicleHandlingFloat(int _vehicle, string _class_, string _fieldName, float _value)
		{
			Function.Call((Hash)0x488C86D2, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// The backing function for TriggerEvent.
		/// </summary>
		public static void TriggerEventInternal(string _eventName, string _eventPayload, int _payloadLength)
		{
			Function.Call((Hash)0x91310870, _eventName, _eventPayload, _payloadLength);
		}
		/// <summary>
		/// Sets power being sent to a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static void SetVehicleWheelPower(int _vehicle, int _wheelIndex, float _power)
		{
			Function.Call((Hash)0xC6146043, _vehicle, _wheelIndex, _power);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleOilLevel(int _vehicle, float _level)
		{
			Function.Call((Hash)0x90D1CAD1, _vehicle, _level);
		}
		/// <summary>
		/// Sets vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
		/// Only works on non-default wheels.
		/// Returns whether change was successful (can be false if trying to set width for non-default wheels).
		/// </summary>
		public static bool SetVehicleWheelWidth(int _vehicle, float _width)
		{
			return Function.Call<bool>((Hash)0x64C3F1C0, _vehicle, _width);
		}
		/// <summary>
		/// The backing function for TriggerClientEvent.
		/// </summary>
		public static void TriggerClientEventInternal(string _eventName, string _eventTarget, string _eventPayload, int _payloadLength)
		{
			Function.Call((Hash)0x2F7A49E6, _eventName, _eventTarget, _eventPayload, _payloadLength);
		}
		/// <summary>
		/// Sets custom vehicle xenon lights color, allowing to use RGB palette. The game will ignore lights color set by [\_SET_VEHICLE_XENON_LIGHTS_COLOR](#\_0xE41033B25D003A07) when custom color is active. This native is not synced between players. Requires xenon lights mod to be set on vehicle.
		/// </summary>
		public static void SetVehicleXenonLightsCustomColor(int _vehicle, int _red, int _green, int _blue)
		{
			Function.Call((Hash)0x1683E7F0, _vehicle, _red, _green, _blue);
		}
		/// <summary>
		/// Overrides a floating point value from `visualsettings.dat` temporarily.
		/// </summary>
		public static void SetVisualSettingFloat(string _name, float _value)
		{
			Function.Call((Hash)0xD1D31681, _name, _value);
		}
		/// <summary>
		/// A setter for the recoil shake amplitude of a weapon.
		/// </summary>
		public static void SetWeaponRecoilShakeAmplitude(uint _weaponHash, float _amplitude)
		{
			Function.Call((Hash)0x9864312F, _weaponHash, _amplitude);
		}
		/// <summary>
		/// Toggles whether the usage of [ADD_ROPE](#\_0xE832D760399EB220) should create an underlying CNetworkRopeWorldStateData. By default this is set to false.
		/// </summary>
		public static void SetRopesCreateNetworkWorldState(bool _shouldCreate)
		{
			Function.Call((Hash)0xE62FC73, _shouldCreate);
		}
		/// <summary>
		/// Shuts down the `loadingScreen` NUI frame, similarly to `SHUTDOWN_LOADING_SCREEN`.
		/// </summary>
		public static void ShutdownLoadingScreenNui()
		{
			Function.Call((Hash)0xB9234AFB);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void SetVehicleHighGear(int _vehicle, int _gear)
		{
			Function.Call((Hash)0x20B1B3E6, _vehicle, _gear);
		}
		/// <summary>
		/// Sets vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
		/// Only works on non-default wheels.
		/// Returns whether change was successful (can be false if trying to set size for non-default wheels).
		/// </summary>
		public static bool SetVehicleWheelSize(int _vehicle, float _size)
		{
			return Function.Call<bool>((Hash)0x53AB5C35, _vehicle, _size);
		}
		/// <summary>
		/// Example script: https://pastebin.com/J6XGbkCW
		/// 
		/// List of known states:
		/// 
		/// ```
		/// 1: Not wheeling.
		/// 65: Vehicle is ready to do wheelie (burnouting).
		/// 129: Vehicle is doing wheelie.
		/// ```
		/// </summary>
		public static void SetVehicleWheelieState(int _vehicle, int _state)
		{
			Function.Call((Hash)0xEAB8DB65, _vehicle, _state);
		}
		/// <summary>
		/// Clear a ped's tasks. Stop animations and other tasks created by scripts.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CLEAR_PED_TASKS](?\_0xE1EF3C1216AFF2CD).**
		/// </summary>
		public static void ClearPedTasks_CFX(int _ped)
		{
			Function.Call((Hash)0xDE3316AB, _ped);
		}
		/// <summary>
		/// Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_VECTOR`, this might require some experimentation.
		/// </summary>
		public static void SetVehicleHandlingVector(int _vehicle, string _class_, string _fieldName, Vector3 _value)
		{
			Function.Call((Hash)0x12497890, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// Sets brake pressure of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// Normal values around 1.0f
		/// </summary>
		public static void SetVehicleWheelBrakePressure(int _vehicle, int _wheelIndex, float _pressure)
		{
			Function.Call((Hash)0xE80F4E31, _vehicle, _wheelIndex, _pressure);
		}
		/// <summary>
		/// Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_INT`, this might require some experimentation.
		/// </summary>
		public static void SetVehicleHandlingInt(int _vehicle, string _class_, string _fieldName, int _value)
		{
			Function.Call((Hash)0xC37F4CF9, _vehicle, _class_, _fieldName, _value);
		}
		/// <summary>
		/// Gets the selected entity at the current mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static int SelectEntityAtCursor(int _hitFlags, bool _precise)
		{
			return Function.Call<int>((Hash)0x3DD8130F, _hitFlags, _precise);
		}
		/// <summary>
		/// The backing function for TriggerServerEvent.
		/// </summary>
		public static void TriggerServerEventInternal(string _eventName, string _eventPayload, int _payloadLength)
		{
			Function.Call((Hash)0x7FDD1128, _eventName, _eventPayload, _payloadLength);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static void TempBanPlayer(string _playerSrc, string _reason)
		{
			Function.Call((Hash)0x1E35DBBA, _playerSrc, _reason);
		}
		/// <summary>
		/// Disables the game's built-in auto-reloading.
		/// </summary>
		public static void SetWeaponsNoAutoreload(bool _state)
		{
			Function.Call((Hash)0x311150E5, _state);
		}
		/// <summary>
		/// Returns whether or not the currently executing event was canceled.
		/// </summary>
		public static bool WasEventCanceled()
		{
			return Function.Call<bool>((Hash)0x58382A19);
		}
		/// <summary>
		/// Sets color for entity outline. `255, 0, 255, 255` by default.
		/// </summary>
		public static void SetEntityDrawOutlineColor(int _red, int _green, int _blue, int _alpha)
		{
			Function.Call((Hash)0xB41A56C2, _red, _green, _blue, _alpha);
		}
		/// <summary>
		/// Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
		/// collection - PedDecorationCollection filename hash
		/// overlay - Item name hash
		/// Example:
		/// Entry inside "mpbeach_overlays.xml" -
		/// <Item>
		/// <uvPos x="0.500000" y="0.500000" />
		/// <scale x="0.600000" y="0.500000" />
		/// <rotation value="0.000000" />
		/// <nameHash>FM_Hair_Fuzz</nameHash>
		/// <txdHash>mp_hair_fuzz</txdHash>
		/// <txtHash>mp_hair_fuzz</txtHash>
		/// <zone>ZONE_HEAD</zone>
		/// <type>TYPE_TATTOO</type>
		/// <faction>FM</faction>
		/// <garment>All</garment>
		/// <gender>GENDER_DONTCARE</gender>
		/// <award />
		/// <awardLevel />
		/// </Item>
		/// Code:
		/// PED::\_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
		/// 
		/// **This is the server-side RPC native equivalent of the client native [ADD_PED_DECORATION_FROM_HASHES](?\_0x5F5D1665E352A839).**
		/// </summary>
		public static void AddPedDecorationFromHashes(int _ped, uint _collection, uint _overlay)
		{
			Function.Call((Hash)0x70559AC7, _ped, _collection, _overlay);
		}
		/// <summary>
		/// The backing function for TriggerLatentClientEvent.
		/// </summary>
		public static void TriggerLatentClientEventInternal(string _eventName, string _eventTarget, string _eventPayload, int _payloadLength, int _bps)
		{
			Function.Call((Hash)0x70B35890, _eventName, _eventTarget, _eventPayload, _payloadLength, _bps);
		}
		/// <summary>
		/// Gets the selected entity at the specified mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static int SelectEntityAtPos(float _fracX, float _fracY, int _hitFlags, bool _precise)
		{
			return Function.Call<int>((Hash)0xAFE8D405, _fracX, _fracY, _hitFlags, _precise);
		}
		/// <summary>
		/// Leaves cursor mode. This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static void LeaveCursorMode()
		{
			Function.Call((Hash)0xADECF19E);
		}
		/// <summary>
		/// A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938), but for a specified resource.
		/// </summary>
		public static float GetExternalKvpFloat(string _resource, string _key)
		{
			return Function.Call<float>((Hash)0x3CC98B25, _resource, _key);
		}
		/// <summary>
		/// Disables autoswapping to another weapon when the current weapon runs out of ammo.
		/// </summary>
		public static void SetWeaponsNoAutoswap(bool _state)
		{
			Function.Call((Hash)0x2A7B50E, _state);
		}
		/// <summary>
		/// Sets the traction vector length of a wheel.
		/// Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
		/// </summary>
		public static void SetVehicleWheelTractionVectorLength(int _vehicle, int _wheelIndex, float _length)
		{
			Function.Call((Hash)0x85C85A3A, _vehicle, _wheelIndex, _length);
		}
		/// <summary>
		/// Transiently updates the entity with the specified mapdata index and entity index.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static void UpdateMapdataEntity(int _mapdata, int _entity, InputArgument _entityDef)
		{
			Function.Call((Hash)0xFC52CB91, _mapdata, _entity, _entityDef);
		}
		/// <summary>
		/// The backing function for TriggerLatentServerEvent.
		/// </summary>
		public static void TriggerLatentServerEventInternal(string _eventName, string _eventPayload, int _payloadLength, int _bps)
		{
			Function.Call((Hash)0x128737EA, _eventName, _eventPayload, _payloadLength, _bps);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [CLEAR_PED_SECONDARY_TASK](?\_0x176CECF6F920D707).**
		/// </summary>
		public static void ClearPedSecondaryTask_CFX(int _ped)
		{
			Function.Call((Hash)0xA635F451, _ped);
		}
		/// <summary>
		/// Enters cursor mode, suppressing mouse movement to the game and displaying a mouse cursor instead. This function supports
		/// SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static void EnterCursorMode()
		{
			Function.Call((Hash)0x780DA86);
		}
		/// <summary>
		/// Creates an object (prop) with the specified model centered at the specified position.
		/// This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CREATE_OBJECT_NO_OFFSET](?\_0x9A294B2138ABB884).**
		/// </summary>
		public static int CreateObjectNoOffset_CFX(uint _modelHash, float _x, float _y, float _z, bool _isNetwork, bool _netMissionEntity, bool _doorFlag)
		{
			return Function.Call<int>((Hash)0x58040420, _modelHash, _x, _y, _z, _isNetwork, _netMissionEntity, _doorFlag);
		}
		/// <summary>
		/// Draws an outline around a given entity. This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static void SetEntityDrawOutline(int _entity, bool _enabled)
		{
			Function.Call((Hash)0x76180407, _entity, _enabled);
		}
		/// <summary>
		/// Not sure what this changes, probably determines physical rim size in case the tire is blown.
		/// </summary>
		public static void SetVehicleWheelRimColliderSize(int _vehicle, int _wheelIndex, float _value)
		{
			Function.Call((Hash)0xF380E184, _vehicle, _wheelIndex, _value);
		}
		/// <summary>
		/// Resets mapdata entity transform matrix to its original state.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static bool ResetMapdataEntityMatrix(int _mapDataHash, int _entityInternalIdx)
		{
			return Function.Call<bool>((Hash)0x8143FA4F, _mapDataHash, _entityInternalIdx);
		}
		/// <summary>
		/// Will unregister and cleanup a registered NUI callback handler.
		/// 
		/// Use along side the REGISTER_RAW_NUI_CALLBACK native.
		/// </summary>
		public static void UnregisterRawNuiCallback(string _callbackType)
		{
			Function.Call((Hash)0x7FB46432, _callbackType);
		}
		/// <summary>
		/// Sets the armor of the specified ped.
		/// ped: The Ped to set the armor of.
		/// amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_ARMOUR](?\_0xCEA04D83135264CC).**
		/// </summary>
		public static void SetPedArmour(int _ped, int _amount)
		{
			Function.Call((Hash)0x4E3A0CC4, _ped, _amount);
		}
		/// <summary>
		/// Prints 'structured trace' data to the server `file descriptor 3` channel. This is not generally useful outside of
		/// server monitoring utilities.
		/// </summary>
		public static void PrintStructuredTrace(string _jsonString)
		{
			Function.Call((Hash)0x90892DED, _jsonString);
		}
		/// <summary>
		/// Use along with SetVehicleWheelSize to resize the wheels (this native sets the collider size affecting physics while SetVehicleWheelSize will change visual size).
		/// </summary>
		public static void SetVehicleWheelTireColliderSize(int _vehicle, int _wheelIndex, float _value)
		{
			Function.Call((Hash)0xB962D05C, _vehicle, _wheelIndex, _value);
		}
		/// <summary>
		/// Returns the transient entity index for a specified mapdata/entity pair.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static int GetEntityIndexFromMapdata(int _mapdata, int _entity)
		{
			return Function.Call<int>((Hash)0xEE43540D, _mapdata, _entity);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StartResource(string _resourceName)
		{
			return Function.Call<bool>((Hash)0x29B440DC, _resourceName);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static bool StopResource(string _resourceName)
		{
			return Function.Call<bool>((Hash)0x21783161, _resourceName);
		}
		/// <summary>
		/// Equivalent to CREATE_VEHICLE, but it uses 'server setter' logic (like the former CREATE_AUTOMOBILE) as a workaround for
		/// reliability concerns regarding entity creation RPC.
		/// 
		/// Unlike CREATE_AUTOMOBILE, this supports other vehicle types as well.
		/// </summary>
		public static int CreateVehicleServerSetter(uint _modelHash, string _type, float _x, float _y, float _z, float _heading)
		{
			return Function.Call<int>((Hash)0x6AE51D4B, _modelHash, _type, _x, _y, _z, _heading);
		}
		/// <summary>
		/// This native removes a specified weapon from your selected ped.
		/// Weapon Hashes: pastebin.com/0wwDZgkF
		/// Example:
		/// C#:
		/// Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
		/// C++:
		/// WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);
		/// The code above removes the knife from the player.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [REMOVE_WEAPON_FROM_PED](?\_0x4899CB088EDF59B8).**
		/// </summary>
		public static void RemoveWeaponFromPed_CFX(int _ped, uint _weaponHash)
		{
			Function.Call((Hash)0x9C37F220, _ped, _weaponHash);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [GIVE_WEAPON_COMPONENT_TO_PED](?\_0xD966D51AA5B28BB9).**
		/// </summary>
		public static void GiveWeaponComponentToPed(int _ped, uint _weaponHash, uint _componentHash)
		{
			Function.Call((Hash)0x3E1E286D, _ped, _weaponHash, _componentHash);
		}
		/// <summary>
		/// <!--
		/// _loc1_.map((name, idx) => `| ${idx} | ${name} | ![${name}](https://runtime.fivem.net/blips/${name}.svg) |`).join('\n')
		/// -->
		/// 
		/// Sets the displayed sprite for a specific blip.
		/// There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_BLIP_SPRITE](?\_0xDF735600A4696DAF).**
		/// </summary>
		public static void SetBlipSprite_CFX(int _blip, int _spriteId)
		{
			Function.Call((Hash)0x8DBBB0B9, _blip, _spriteId);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [CREATE_PED_INSIDE_VEHICLE](?\_0x7DD959874C1FD534).**
		/// </summary>
		public static int CreatePedInsideVehicle_CFX(int _vehicle, int _pedType, uint _modelHash, int _seat, bool _isNetwork, bool _bScriptHostPed)
		{
			return Function.Call<int>((Hash)0x3000F092, _vehicle, _pedType, _modelHash, _seat, _isNetwork, _bScriptHostPed);
		}
		/// <summary>
		/// Equivalent of [START_FIND_KVP](#\_0xDD379006), but for another resource than the current one.
		/// </summary>
		public static int StartFindExternalKvp(string _resourceName, string _prefix)
		{
			return Function.Call<int>((Hash)0x8F2EECC3, _resourceName, _prefix);
		}
		/// <summary>
		/// Create a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use [AddBlipCoords](#\_0xC6F43D0E))
		/// Example image:
		/// ![example](https://i.imgur.com/9hQl3DB.png)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [ADD_BLIP_FOR_RADIUS](?\_0x46818D79B1F7499A).**
		/// </summary>
		public static int AddBlipForRadius(float _posX, float _posY, float _posZ, float _radius)
		{
			return Function.Call<int>((Hash)0x4626756C, _posX, _posY, _posZ, _radius);
		}
		/// <summary>
		/// Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
		/// This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CREATE_OBJECT](?\_0x509D5878EB39E842).**
		/// </summary>
		public static int CreateObject_CFX(uint _modelHash, float _x, float _y, float _z, bool _isNetwork, bool _netMissionEntity, bool _doorFlag)
		{
			return Function.Call<int>((Hash)0x2F7AA05C, _modelHash, _x, _y, _z, _isNetwork, _netMissionEntity, _doorFlag);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [REMOVE_WEAPON_COMPONENT_FROM_PED](?\_0x1E8BE90C74FB4C09).**
		/// </summary>
		public static void RemoveWeaponComponentFromPed_CFX(int _ped, uint _weaponHash, uint _componentHash)
		{
			Function.Call((Hash)0x412AA00D, _ped, _weaponHash, _componentHash);
		}
		/// <summary>
		/// Create a blip that by default is red (enemy), you can use [SET_BLIP_AS_FRIENDLY](#\_0xC6F43D0E) to make it blue (friend).\
		/// Can be used for objects, vehicles and peds.
		/// Example of enemy:
		/// ![enemy](https://i.imgur.com/fl78svv.png)
		/// Example of friend:
		/// ![friend](https://i.imgur.com/Q16ho5d.png)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [ADD_BLIP_FOR_ENTITY](?\_0x5CDE92C702A8FCE7).**
		/// </summary>
		public static int AddBlipForEntity(int _entity)
		{
			return Function.Call<int>((Hash)0x30822554, _entity);
		}
		/// <summary>
		/// Applies a force to the specified entity.
		/// **List of force types (p1)**:
		/// 
		/// ```
		/// public enum ForceType
		/// {
		/// MinForce = 0,
		/// MaxForceRot = 1,
		/// MinForce2 = 2,
		/// MaxForceRot2 = 3,
		/// ForceNoRot = 4,
		/// ForceRotPlusForce = 5
		/// }
		/// ```
		/// 
		/// Research/documentation on the gtaforums can be found [here](https://gtaforums.com/topic/885669-precisely-define-object-physics/) and [here](https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/).
		/// 
		/// **This is the server-side RPC native equivalent of the client native [APPLY_FORCE_TO_ENTITY](?\_0xC5F68BE9613E2D18).**
		/// </summary>
		public static void ApplyForceToEntity_CFX(int _entity, int _forceType, float _x, float _y, float _z, float _offX, float _offY, float _offZ, int _boneIndex, bool _isDirectionRel, bool _ignoreUpVec, bool _isForceRel, bool _p12, bool _p13)
		{
			Function.Call((Hash)0xC1C0855A, _entity, _forceType, _x, _y, _z, _offX, _offY, _offZ, _boneIndex, _isDirectionRel, _ignoreUpVec, _isForceRel, _p12, _p13);
		}
		/// <summary>
		/// ...
		/// </summary>
		public static int StartFindKvp(string _prefix)
		{
			return Function.Call<int>((Hash)0xDD379006, _prefix);
		}
		/// <summary>
		/// Sets variant of shader that will be used to draw entity outline.
		/// 
		/// Variants are:
		/// 
		/// *   **0**: Default value, gauss shader.
		/// *   **1**: 2px wide solid color outline.
		/// *   **2**: Fullscreen solid color except for entity.
		/// </summary>
		public static void SetEntityDrawOutlineShader(int _shader)
		{
			Function.Call((Hash)0x5261A01A, _shader);
		}
		/// <summary>
		/// List of component/props ID
		/// gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CLEAR_PED_PROP](?\_0x0943E5B8E078E76E).**
		/// </summary>
		public static void ClearPedProp(int _ped, int _propId)
		{
			Function.Call((Hash)0x2D23D743, _ped, _propId);
		}
		/// <summary>
		/// Retrieves the map data entity handle.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static bool GetMapdataEntityHandle(int _mapDataHash, int _entityInternalIdx, int _entityHandle)
		{
			return Function.Call<bool>((Hash)0x30AA6911, _mapDataHash, _entityInternalIdx, _entityHandle);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_CAN_RAGDOLL](?\_0xB128377056A54E2A).**
		/// </summary>
		public static void SetPedCanRagdoll_CFX(int _ped, bool _toggle)
		{
			Function.Call((Hash)0xCF1384C4, _ped, _toggle);
		}
		/// <summary>
		/// This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
		/// 
		/// ### MP Freemode list of props
		/// 
		/// **0**: Hat\
		/// **1**: Glass\
		/// **2**: Ear\
		/// **6**: Watch\
		/// **7**: Bracelet
		/// 
		/// ### Related and useful natives
		/// 
		/// [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47)\
		/// [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171)
		/// [List of component/props ID](https://gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_PROP_INDEX](?\_0x93376B65A266EB5F).**
		/// </summary>
		public static void SetPedPropIndex(int _ped, int _componentId, int _drawableId, int _textureId, bool _attach)
		{
			Function.Call((Hash)0x829F2E2, _ped, _componentId, _drawableId, _textureId, _attach);
		}
		/// <summary>
		/// A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B), but for a specified resource.
		/// </summary>
		public static string GetExternalKvpString(string _resource, string _key)
		{
			return Function.Call<string>((Hash)0x9080363A, _resource, _key);
		}
		/// <summary>
		/// Returns the transient map data index for a specified hash.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static int GetMapdataFromHashKey(uint _mapdataHandle)
		{
			return Function.Call<int>((Hash)0xD29D8EDD, _mapdataHandle);
		}
		/// <summary>
		/// Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_ENTITY_COORDS](?\_0x06843DA7060A026B).**
		/// </summary>
		public static void SetEntityCoords_CFX(int _entity, float _xPos, float _yPos, float _zPos, bool _alive, bool _deadFlag, bool _ragdollFlag, bool _clearArea)
		{
			Function.Call((Hash)0xDF70B41B, _entity, _xPos, _yPos, _zPos, _alive, _deadFlag, _ragdollFlag, _clearArea);
		}
		/// <summary>
		/// Enables the editor runtime mode, changing game behavior to track entity metadata.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static void EnableEditorRuntime()
		{
			Function.Call((Hash)0xC383871D);
		}
		/// <summary>
		/// Sets an entity's matrix. Arguments are in the same order as with GET_ENTITY_MATRIX.
		/// </summary>
		public static void SetEntityMatrix(int _entity, float _forwardX, float _forwardY, float _forwardZ, float _rightX, float _rightY, float _rightZ, float _upX, float _upY, float _upZ, float _atX, float _atY, float _atZ)
		{
			Function.Call((Hash)0xFB0639B, _entity, _forwardX, _forwardY, _forwardZ, _rightX, _rightY, _rightZ, _upX, _upY, _upZ, _atX, _atY, _atZ);
		}
		/// <summary>
		/// Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
		/// Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_COLOUR_COMBINATION](?\_0x33E8CD3322E2FE31).**
		/// </summary>
		public static void SetVehicleColourCombination(int _vehicle, int _colorCombination)
		{
			Function.Call((Hash)0xA557AEAD, _vehicle, _colorCombination);
		}
		/// <summary>
		/// Sets Ped Default Clothes
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_DEFAULT_COMPONENT_VARIATION](?\_0x45EEE61580806D63).**
		/// </summary>
		public static void SetPedDefaultComponentVariation(int _ped)
		{
			Function.Call((Hash)0xC866A984, _ped);
		}
		/// <summary>
		/// Retrieves the map data and entity handles from a specific entity.
		/// This function supports SDK infrastructure and is not intended to be used directly from your code.
		/// </summary>
		public static bool GetEntityMapdataOwner(int _entity, int _mapdataHandle, int _entityHandle)
		{
			return Function.Call<bool>((Hash)0xF6B815C5, _entity, _mapdataHandle, _entityHandle);
		}
		/// <summary>
		/// Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_ENTITY_VELOCITY](?\_0x1C99BB7B6E96D16F).**
		/// </summary>
		public static void SetEntityVelocity_CFX(int _entity, float _x, float _y, float _z)
		{
			Function.Call((Hash)0xFF5A1988, _entity, _x, _y, _z);
		}
		/// <summary>
		/// This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);
		/// PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CLEAR_PLAYER_WANTED_LEVEL](?\_0xB302540597885499).**
		/// </summary>
		public static void ClearPlayerWantedLevel_CFX(int _player)
		{
			Function.Call((Hash)0x54EA5BCC, _player);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [SET_ENTITY_ROTATION](?\_0x8524A8B0171D5E07).**
		/// </summary>
		public static void SetEntityRotation_CFX(int _entity, float _pitch, float _roll, float _yaw, int _rotationOrder, bool _p5)
		{
			Function.Call((Hash)0xA345EFE, _entity, _pitch, _roll, _yaw, _rotationOrder, _p5);
		}
		/// <summary>
		/// Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [ADD_BLIP_FOR_COORD](?\_0x5A039BB0BCA604B6).**
		/// </summary>
		public static int AddBlipForCoord(float _x, float _y, float _z)
		{
			return Function.Call<int>((Hash)0xC6F43D0E, _x, _y, _z);
		}
		/// <summary>
		/// Adds a rectangular blip for the specified coordinates/area.
		/// It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
		/// By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.
		/// Example image:
		/// ![minimap](https://w.wew.wtf/pdcjig.png)
		/// ![big map](https://w.wew.wtf/zgcjcm.png)
		/// (Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [\_ADD_BLIP_FOR_AREA](?\_0xCE5D0E5E315DB238).**
		/// </summary>
		public static int AddBlipForArea(float _x, float _y, float _z, float _width, float _height)
		{
			return Function.Call<int>((Hash)0x6228F159, _x, _y, _z, _width, _height);
		}
		/// <summary>
		/// In the scripts, p3 was always -1.
		/// p3 seems to be duration or timeout of turn animation.
		/// Also facingPed can be 0 or -1 so ped will just raise hands up.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_HANDS_UP](?\_0xF2EAB31979A7F910).**
		/// </summary>
		public static void TaskHandsUp_CFX(int _ped, int _duration, int _facingPed, int _p3, bool _p4)
		{
			Function.Call((Hash)0x8DCC19C5, _ped, _duration, _facingPed, _p3, _p4);
		}
		/// <summary>
		/// A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8), but for a specified resource.
		/// </summary>
		public static int GetExternalKvpInt(string _resource, string _key)
		{
			return Function.Call<int>((Hash)0x12B8D689, _resource, _key);
		}
		/// <summary>
		/// Used for freemode (online) characters.
		/// Indices:
		/// 
		/// 1.  black
		/// 2.  very light blue/green
		/// 3.  dark blue
		/// 4.  brown
		/// 5.  darker brown
		/// 6.  light brown
		/// 7.  blue
		/// 8.  light blue
		/// 9.  pink
		/// 10. yellow
		/// 11. purple
		/// 12. black
		/// 13. dark green
		/// 14. light brown
		/// 15. yellow/black pattern
		/// 16. light colored spiral pattern
		/// 17. shiny red
		/// 18. shiny half blue/half red
		/// 19. half black/half light blue
		/// 20. white/red perimter
		/// 21. green snake
		/// 22. red snake
		/// 23. dark blue snake
		/// 24. dark yellow
		/// 25. bright yellow
		/// 26. all black
		/// 27. red small pupil
		/// 28. devil blue/black
		/// 29. white small pupil
		/// 30. glossed over
		/// 
		/// **This is the server-side RPC native equivalent of the client native [\_SET_PED_EYE_COLOR](?\_0x50B56988B170AFDF).**
		/// </summary>
		public static void SetPedEyeColor(int _ped, int _index)
		{
			Function.Call((Hash)0xEC09DB1B, _ped, _index);
		}
		/// <summary>
		/// colorPrimary & colorSecondary are the paint indexes for the vehicle.
		/// For a list of valid paint indexes, view: pastebin.com/pwHci0xK
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_COLOURS](?\_0x4F1D4BE3A7F24601).**
		/// </summary>
		public static void SetVehicleColours(int _vehicle, int _colorPrimary, int _colorSecondary)
		{
			Function.Call((Hash)0x57F24253, _vehicle, _colorPrimary, _colorSecondary);
		}
		/// <summary>
		/// PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
		/// Known values:
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_RESET_FLAG](?\_0xC1E8A365BF3B29F2).**
		/// </summary>
		public static void SetPedResetFlag_CFX(int _ped, int _flagId, bool _doReset)
		{
			Function.Call((Hash)0xCFF6FF66, _ped, _flagId, _doReset);
		}
		/// <summary>
		/// Immediately stops the pedestrian from whatever it's doing. The difference between this and [CLEAR_PED_TASKS](#\_0xE1EF3C1216AFF2CD) is that this one teleports the ped but does not change the position of the ped.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CLEAR_PED_TASKS_IMMEDIATELY](?\_0xAAA34F8A7CB32098).**
		/// </summary>
		public static void ClearPedTasksImmediately_CFX(int _ped)
		{
			Function.Call((Hash)0xBC045625, _ped);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [TASK_EVERYONE_LEAVE_VEHICLE](?\_0x7F93691AB4B92272).**
		/// </summary>
		public static void TaskEveryoneLeaveVehicle(int _vehicle)
		{
			Function.Call((Hash)0xC1971F30, _vehicle);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_ALARM](?\_0xCDE5E70C1DDB954C).**
		/// </summary>
		public static void SetVehicleAlarm(int _vehicle, bool _state)
		{
			Function.Call((Hash)0x24877D84, _vehicle, _state);
		}
		/// <summary>
		/// Parameter `p1` does not seem to be used or referenced in game binaries.\
		/// **Note:** When called for networked entities, a `CRemoveAllWeaponsEvent` will be created per request.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [REMOVE_ALL_PED_WEAPONS](?\_0xF25DF915FA38C5F3).**
		/// </summary>
		public static void RemoveAllPedWeapons_CFX(int _ped, bool _p1)
		{
			Function.Call((Hash)0xA44CE817, _ped, _p1);
		}
		/// <summary>
		/// p2 often set to 1000.0 in the decompiled scripts.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_BODY_HEALTH](?\_0xB77D05AC8C78AADB).**
		/// </summary>
		public static void SetVehicleBodyHealth_CFX(int _vehicle, float _value)
		{
			Function.Call((Hash)0x920C2517, _vehicle, _value);
		}
		/// <summary>
		/// p4/p5: Unusued in TU27
		/// 
		/// ### Ragdoll Types
		/// 
		/// **0**: CTaskNMRelax
		/// **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
		/// **Else**: CTaskNMBalance
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_TO_RAGDOLL](?\_0xAE99FB955581844A).**
		/// </summary>
		public static void SetPedToRagdoll_CFX(int _ped, int _time1, int _time2, int _ragdollType, bool _p4, bool _p5, bool _p6)
		{
			Function.Call((Hash)0x83CB5052, _ped, _time1, _time2, _ragdollType, _p4, _p5, _p6);
		}
		/// <summary>
		/// Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
		/// This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
		/// (e.g. using REQUEST_MODEL).
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CREATE_PED](?\_0xD49F9B0955C367DE).**
		/// </summary>
		public static int CreatePed_CFX(int _pedType, uint _modelHash, float _x, float _y, float _z, float _heading, bool _isNetwork, bool _bScriptHostPed)
		{
			return Function.Call<int>((Hash)0x389EF71, _pedType, _modelHash, _x, _y, _z, _heading, _isNetwork, _bScriptHostPed);
		}
		/// <summary>
		/// ```
		/// OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
		/// overlayID       Part                  Index, to disable
		/// 0               Blemishes             0 - 23, 255
		/// 1               Facial Hair           0 - 28, 255
		/// 2               Eyebrows              0 - 33, 255
		/// 3               Ageing                0 - 14, 255
		/// 4               Makeup                0 - 74, 255
		/// 5               Blush                 0 - 6, 255
		/// 6               Complexion            0 - 11, 255
		/// 7               Sun Damage            0 - 10, 255
		/// 8               Lipstick              0 - 9, 255
		/// 9               Moles/Freckles        0 - 17, 255
		/// 10              Chest Hair            0 - 16, 255
		/// 11              Body Blemishes        0 - 11, 255
		/// 12              Add Body Blemishes    0 - 1, 255
		/// ```
		/// 
		/// **Note:**
		/// You may need to call [`SetPedHeadBlendData`](#0x9414E18B9434C2FE) prior to calling this native in order for it to work.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_HEAD_OVERLAY](?\_0x48F44967FA05CC1E).**
		/// </summary>
		public static void SetPedHeadOverlay(int _ped, int _overlayID, int _index, float _opacity)
		{
			Function.Call((Hash)0xD28DBA90, _ped, _overlayID, _index, _opacity);
		}
		/// <summary>
		/// NativeDB Added Parameter 4: BOOL p3
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_AMMO](?\_0x14E56BC5B5DB6A19).**
		/// </summary>
		public static void SetPedAmmo_CFX(int _ped, uint _weaponHash, int _ammo)
		{
			Function.Call((Hash)0xBF90DF1A, _ped, _weaponHash, _ammo);
		}
		/// <summary>
		/// Sets the various freemode face features, e.g. nose length, chin shape.
		/// **Indexes (From 0 to 19):**
		/// Parentheses indicate morph scale/direction as in (-1.0 to 1.0)
		/// 
		/// *   **0**: Nose Width (Thin/Wide)
		/// *   **1**: Nose Peak (Up/Down)
		/// *   **2**: Nose Length (Long/Short)
		/// *   **3**: Nose Bone Curveness (Crooked/Curved)
		/// *   **4**: Nose Tip (Up/Down)
		/// *   **5**: Nose Bone Twist (Left/Right)
		/// *   **6**: Eyebrow (Up/Down)
		/// *   **7**: Eyebrow (In/Out)
		/// *   **8**: Cheek Bones (Up/Down)
		/// *   **9**: Cheek Sideways Bone Size (In/Out)
		/// *   **10**: Cheek Bones Width (Puffed/Gaunt)
		/// *   **11**: Eye Opening (Both) (Wide/Squinted)
		/// *   **12**: Lip Thickness (Both) (Fat/Thin)
		/// *   **13**: Jaw Bone Width (Narrow/Wide)
		/// *   **14**: Jaw Bone Shape (Round/Square)
		/// *   **15**: Chin Bone (Up/Down)
		/// *   **16**: Chin Bone Length (In/Out or Backward/Forward)
		/// *   **17**: Chin Bone Shape (Pointed/Square)
		/// *   **18**: Chin Hole (Chin Bum)
		/// *   **19**: Neck Thickness (Thin/Thick)
		///     **Note:**
		///     You may need to call [`SetPedHeadBlendData`](#0x9414E18B9434C2FE) prior to calling this native in order for it to work.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [\_SET_PED_FACE_FEATURE](?\_0x71A5C1DBA060049E).**
		/// </summary>
		public static void SetPedFaceFeature_CFX(int _ped, int _index, float _scale)
		{
			Function.Call((Hash)0x6C8D4458, _ped, _index, _scale);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [SET_CURRENT_PED_WEAPON](?\_0xADF692B254977C0C).**
		/// </summary>
		public static void SetCurrentPedWeapon_CFX(int _ped, uint _weaponHash, bool _bForceInHand)
		{
			Function.Call((Hash)0xB8278882, _ped, _weaponHash, _bForceInHand);
		}
		/// <summary>
		/// Example:
		/// TASK::TASK_DRIVE_BY(l\_467\[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
		/// Needs working example. Doesn't seem to do anything.
		/// I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
		/// I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
		/// I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_DRIVE_BY](?\_0x2F8AF0E82773A171).**
		/// </summary>
		public static void TaskDriveBy_CFX(int _driverPed, int _targetPed, int _targetVehicle, float _targetX, float _targetY, float _targetZ, float _distanceToShoot, int _pedAccuracy, bool _p8, uint _firingPattern)
		{
			Function.Call((Hash)0x2B84D1C4, _driverPed, _targetPed, _targetVehicle, _targetX, _targetY, _targetZ, _distanceToShoot, _pedAccuracy, _p8, _firingPattern);
		}
		/// <summary>
		/// Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
		/// script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
		/// 
		/// ```
		/// NativeDB Added Parameter 8: BOOL p7
		/// ```
		/// 
		/// **This is the server-side RPC native equivalent of the client native [CREATE_VEHICLE](?\_0xAF35D0D2583051B0).**
		/// </summary>
		public static int CreateVehicle_CFX(uint _modelHash, float _x, float _y, float _z, float _heading, bool _isNetwork, bool _netMissionEntity)
		{
			return Function.Call<int>((Hash)0xDD75460A, _modelHash, _x, _y, _z, _heading, _isNetwork, _netMissionEntity);
		}
		/// <summary>
		/// Return variable is never used in R\*'s scripts.
		/// Not sure what p2 does. It seems like it would be a time judging by it's usage in R\*'s scripts, but didn't seem to affect anything in my testings.
		/// x, y, and z are coordinates, most likely to where the ped will fall.
		/// p7 is probably the force of the fall, but untested, so I left the variable name the same.
		/// p8 to p13 are always 0f in R\*'s scripts.
		/// (Simplified) Example of the usage of the function from R\*'s scripts:
		/// ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_TO_RAGDOLL_WITH_FALL](?\_0xD76632D99E4966C8).**
		/// </summary>
		public static void SetPedToRagdollWithFall_CFX(int _ped, int _time, int _p2, int _ragdollType, float _x, float _y, float _z, float _p7, float _p8, float _p9, float _p10, float _p11, float _p12, float _p13)
		{
			Function.Call((Hash)0xFA12E286, _ped, _time, _p2, _ragdollType, _x, _y, _z, _p7, _p8, _p9, _p10, _p11, _p12, _p13);
		}
		/// <summary>
		/// List of component/props ID
		/// gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_RANDOM_PROPS](?\_0xC44AA05345C992C6).**
		/// </summary>
		public static void SetPedRandomProps(int _ped)
		{
			Function.Call((Hash)0xE3318E0E, _ped);
		}
		/// <summary>
		/// Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [FREEZE_ENTITY_POSITION](?\_0x428CA6DBD1094446).**
		/// </summary>
		public static void FreezeEntityPosition_CFX(int _entity, bool _toggle)
		{
			Function.Call((Hash)0x65C16D57, _entity, _toggle);
		}
		/// <summary>
		/// p1 is always 0 in R\* scripts; and a quick disassembly seems to indicate that p1 is unused.
		/// List of component/props ID:
		/// gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_RANDOM_COMPONENT_VARIATION](?\_0xC8A9481A01E63C28).**
		/// </summary>
		public static void SetPedRandomComponentVariation_CFX(int _ped, int _p1)
		{
			Function.Call((Hash)0x4111BA46, _ped, _p1);
		}
		/// <summary>
		/// Removes the blip from your map.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [REMOVE_BLIP](?\_0x86A652570E5F25DD).**
		/// </summary>
		public static void RemoveBlip_CFX(int _blip)
		{
			Function.Call((Hash)0xD8C3C1CD, _blip);
		}
		/// <summary>
		/// For more info please refer to [this](https://gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained) topic.
		/// **Other information:**
		/// IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.</br>
		/// This native function is often called prior to calling natives such as:
		/// 
		/// *   [`SetPedHairColor`](#0xBB43F090)
		/// *   [`SetPedHeadOverlayColor`](#0x78935A27)
		/// *   [`SetPedHeadOverlay`](#0xD28DBA90)
		/// *   [`SetPedFaceFeature`](#0x6C8D4458)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_HEAD_BLEND_DATA](?\_0x9414E18B9434C2FE).**
		/// </summary>
		public static void SetPedHeadBlendData(int _ped, int _shapeFirstID, int _shapeSecondID, int _shapeThirdID, int _skinFirstID, int _skinSecondID, int _skinThirdID, float _shapeMix, float _skinMix, float _thirdMix, bool _isParent)
		{
			Function.Call((Hash)0x60746B88, _ped, _shapeFirstID, _shapeSecondID, _shapeThirdID, _skinFirstID, _skinSecondID, _skinThirdID, _shapeMix, _skinMix, _thirdMix, _isParent);
		}
		/// <summary>
		/// The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
		/// Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
		/// Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
		/// Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_GO_TO_ENTITY](?\_0x6A071245EB0D1882).**
		/// </summary>
		public static void TaskGoToEntity_CFX(int _entity, int _target, int _duration, float _distance, float _speed, float _p5, int _p6)
		{
			Function.Call((Hash)0x374827C2, _entity, _target, _duration, _distance, _speed, _p5, _p6);
		}
		/// <summary>
		/// Used for freemode (online) characters.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [\_SET_PED_HAIR_COLOR](?\_0x4CFFC65454C93A49).**
		/// </summary>
		public static void SetPedHairColor(int _ped, int _colorID, int _highlightColorID)
		{
			Function.Call((Hash)0xBB43F090, _ped, _colorID, _highlightColorID);
		}
		/// <summary>
		/// Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any reference to the old ped should be reset
		/// Make sure to request the model first and wait until it has loaded.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PLAYER_MODEL](?\_0x00A1CADD00108836).**
		/// </summary>
		public static void SetPlayerModel_CFX(int _player, uint _model)
		{
			Function.Call((Hash)0x774A4C54, _player, _model);
		}
		/// <summary>
		/// Simply sets you as invincible (Health will not deplete).
		/// Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
		/// \*(DWORD \*)(playerPedAddress + 0x188) |= (1 << 9);
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PLAYER_INVINCIBLE](?\_0x239528EACDC3E7DE).**
		/// </summary>
		public static void SetPlayerInvincible_CFX(int _player, bool _toggle)
		{
			Function.Call((Hash)0xDFB9A2A2, _player, _toggle);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_INTO_VEHICLE](?\_0xF75B0D629E1C063D).**
		/// </summary>
		public static void SetPedIntoVehicle_CFX(int _ped, int _vehicle, int _seatIndex)
		{
			Function.Call((Hash)0x7500C79, _ped, _vehicle, _seatIndex);
		}
		/// <summary>
		/// Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
		/// wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
		/// disableNoMission-  Disables When Off Mission- appears to always be false
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PLAYER_WANTED_LEVEL](?\_0x39FF19C64EF7DA5B).**
		/// </summary>
		public static void SetPlayerWantedLevel_CFX(int _player, int _wantedLevel, bool _disableNoMission)
		{
			Function.Call((Hash)0xB7A0914B, _player, _wantedLevel, _disableNoMission);
		}
		/// <summary>
		/// //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
		/// Entity aimedentity;
		/// Player player = PLAYER::PLAYER_ID();
		/// PLAYER::\_GET_AIMED_ENTITY(player, \&aimedentity);
		/// //bg is an array of peds
		/// TASK::TASK_SHOOT_AT_ENTITY(bg\[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
		/// in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
		/// Firing Pattern Hash Information: https://pastebin.com/Px036isB
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_SHOOT_AT_ENTITY](?\_0x08DA95E8298AE772).**
		/// </summary>
		public static void TaskShootAtEntity_CFX(int _entity, int _target, int _duration, uint _firingPattern)
		{
			Function.Call((Hash)0xAC0631C9, _entity, _target, _duration, _firingPattern);
		}
		/// <summary>
		/// Set the heading of an entity in degrees also known as "Yaw".
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_ENTITY_HEADING](?\_0x8E2530AA8ADA980E).**
		/// </summary>
		public static void SetEntityHeading_CFX(int _entity, float _heading)
		{
			Function.Call((Hash)0xE0FF064D, _entity, _heading);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [TASK_GO_STRAIGHT_TO_COORD](?\_0xD76B57B44F1E6F8B).**
		/// </summary>
		public static void TaskGoStraightToCoord_CFX(int _ped, float _x, float _y, float _z, float _speed, int _timeout, float _targetHeading, float _distanceToSlide)
		{
			Function.Call((Hash)0x80A9E7A7, _ped, _x, _y, _z, _speed, _timeout, _targetHeading, _distanceToSlide);
		}
		/// <summary>
		/// Makes the specified ped attack the target ped.
		/// p2 should be 0
		/// p3 should be 16
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_COMBAT_PED](?\_0xF166E48407BAC484).**
		/// </summary>
		public static void TaskCombatPed_CFX(int _ped, int _targetPed, int _p2, int _p3)
		{
			Function.Call((Hash)0xCB0D8932, _ped, _targetPed, _p2, _p3);
		}
		/// <summary>
		/// See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_DOOR_BROKEN](?\_0xD4D4F6A4AB575A33).**
		/// </summary>
		public static void SetVehicleDoorBroken_CFX(int _vehicle, int _doorIndex, bool _deleteDoor)
		{
			Function.Call((Hash)0x8147FEA7, _vehicle, _doorIndex, _deleteDoor);
		}
		/// <summary>
		/// p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_CUSTOM_SECONDARY_COLOUR](?\_0x36CED73BFED89754).**
		/// </summary>
		public static void SetVehicleCustomSecondaryColour(int _vehicle, int _r, int _g, int _b)
		{
			Function.Call((Hash)0x9D77259E, _vehicle, _r, _g, _b);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [GIVE_WEAPON_TO_PED](?\_0xBF0FD6E56C964FCB).**
		/// </summary>
		public static void GiveWeaponToPed_CFX(int _ped, uint _weaponHash, int _ammoCount, bool _isHidden, bool _bForceInHand)
		{
			Function.Call((Hash)0xC4D88A85, _ped, _weaponHash, _ammoCount, _isHidden, _bForceInHand);
		}
		/// <summary>
		/// ```
		/// Used for freemode (online) characters.
		/// Called after SET_PED_HEAD_OVERLAY().
		/// ```
		/// 
		/// **Note:**
		/// You may need to call [`SetPedHeadBlendData`](#0x9414E18B9434C2FE) prior to calling this native in order for it to work.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [\_SET_PED_HEAD_OVERLAY_COLOR](?\_0x497BF74A7B9CB952).**
		/// </summary>
		public static void SetPedHeadOverlayColor(int _ped, int _overlayID, int _colorType, int _colorID, int _secondColorID)
		{
			Function.Call((Hash)0x78935A27, _ped, _overlayID, _colorType, _colorID, _secondColorID);
		}
		/// <summary>
		/// p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_CUSTOM_PRIMARY_COLOUR](?\_0x7141766F91D15BEA).**
		/// </summary>
		public static void SetVehicleCustomPrimaryColour(int _vehicle, int _r, int _g, int _b)
		{
			Function.Call((Hash)0x8DF9F9BC, _vehicle, _r, _g, _b);
		}
		/// <summary>
		/// cpp
		/// // Potential names and hash collisions included as comments
		/// enum ePedConfigFlags {
		/// \_0x67D1A445 = 0,
		/// \_0xC63DE95E = 1,
		/// CPED_CONFIG_FLAG_NoCriticalHits = 2,
		/// CPED_CONFIG_FLAG_DrownsInWater = 3,
		/// CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
		/// \_0x37D196F4 = 5,
		/// \_0xE2462399 = 6,
		/// CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
		/// \_0xEDDEB838 = 8,
		/// \_0xB398B6FD = 9,
		/// \_0xF6664E68 = 10,
		/// \_0xA05E7CA3 = 11,
		/// \_0xCE394045 = 12,
		/// CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
		/// \_0xCD8D1411 = 14,
		/// \_0xB031F1A9 = 15,
		/// \_0xFE65BEE3 = 16,
		/// CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
		/// \_0x380165BD = 18,
		/// \_0x07C045C7 = 19,
		/// \_0x583B5E2D = 20,
		/// \_0x475EDA58 = 21,
		/// \_0x8629D05B = 22,
		/// \_0x1522968B = 23,
		/// CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
		/// \_0x4CC09C4B = 25,
		/// \_0x034F3053 = 26,
		/// \_0xD91BA7CC = 27,
		/// \_0x5C8DC66E = 28,
		/// \_0x8902EAA0 = 29,
		/// \_0x6580B9D2 = 30,
		/// \_0x0EF7A297 = 31,
		/// \_0x6BF86E5B = 32,
		/// CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
		/// CPED_CONFIG_FLAG_HasHelmet = 34,
		/// CPED_CONFIG_FLAG_UseHelmet = 35,
		/// \_0xEEB3D630 = 36,
		/// \_0xB130D17B = 37,
		/// \_0x5F071200 = 38,
		/// CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
		/// \_0xC287AAFF = 40,
		/// \_0x203328CC = 41,
		/// CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
		/// CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
		/// CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
		/// \_0xEC4A8ACF = 45,
		/// \_0xDB115BFA = 46,
		/// CPED_CONFIG_FLAG_PedBeingDeleted = 47,
		/// CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
		/// \_0xF8E99565 = 49,
		/// \_0xDD17FEE6 = 50,
		/// \_0x7ED9B2C9 = 51,
		/// \_0x655E8618 = 52,
		/// \_0x5A6C1F6E = 53,
		/// \_0xD749FC41 = 54,
		/// \_0x357F63F3 = 55,
		/// \_0xC5E60961 = 56,
		/// \_0x29275C3E = 57,
		/// CPED_CONFIG_FLAG_IsFiring = 58,
		/// CPED_CONFIG_FLAG_WasFiring = 59,
		/// CPED_CONFIG_FLAG_IsStanding = 60,
		/// CPED_CONFIG_FLAG_WasStanding = 61,
		/// CPED_CONFIG_FLAG_InVehicle = 62,
		/// CPED_CONFIG_FLAG_OnMount = 63,
		/// CPED_CONFIG_FLAG_AttachedToVehicle = 64,
		/// CPED_CONFIG_FLAG_IsSwimming = 65,
		/// CPED_CONFIG_FLAG_WasSwimming = 66,
		/// CPED_CONFIG_FLAG_IsSkiing = 67,
		/// CPED_CONFIG_FLAG_IsSitting = 68,
		/// CPED_CONFIG_FLAG_KilledByStealth = 69,
		/// CPED_CONFIG_FLAG_KilledByTakedown = 70,
		/// CPED_CONFIG_FLAG_Knockedout = 71,
		/// \_0x3E3C4560 = 72,
		/// \_0x2994C7B7 = 73,
		/// \_0x6D59D275 = 74,
		/// CPED_CONFIG_FLAG_UsingCoverPoint = 75,
		/// CPED_CONFIG_FLAG_IsInTheAir = 76,
		/// \_0x2D493FB7 = 77,
		/// CPED_CONFIG_FLAG_IsAimingGun = 78,
		/// \_0x14D69875 = 79,
		/// \_0x40B05311 = 80,
		/// \_0x8B230BC5 = 81,
		/// \_0xC74E5842 = 82,
		/// \_0x9EA86147 = 83,
		/// \_0x674C746C = 84,
		/// \_0x3E56A8C2 = 85,
		/// \_0xC144A1EF = 86,
		/// \_0x0548512D = 87,
		/// \_0x31C93909 = 88,
		/// \_0xA0269315 = 89,
		/// \_0xD4D59D4D = 90,
		/// \_0x411D4420 = 91,
		/// \_0xDF4AEF0D = 92,
		/// CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
		/// \_0x300E4CD3 = 94,
		/// \_0xF1C5BF04 = 95,
		/// \_0x89C2EF13 = 96,
		/// CPED_CONFIG_FLAG_VaultFromCover = 97,
		/// \_0x02A852C8 = 98,
		/// \_0x3D9407F1 = 99,
		/// \_0x319B4558 = 100,
		/// CPED_CONFIG_FLAG_ForcedAim = 101,
		/// \_0xB942D71A = 102,
		/// \_0xD26C55A8 = 103,
		/// \_0xB89E703B = 104,
		/// CPED_CONFIG_FLAG_ForceReload = 105,
		/// \_0xD9E73DA2 = 106,
		/// \_0xFF71DC2C = 107,
		/// \_0x1E27E8D8 = 108,
		/// \_0xF2C53966 = 109,
		/// \_0xC4DBE247 = 110,
		/// \_0x83C0A4BF = 111,
		/// \_0x0E0FAF8C = 112,
		/// \_0x26616660 = 113,
		/// \_0x43B80B79 = 114,
		/// \_0x0D2A9309 = 115,
		/// \_0x12C1C983 = 116,
		/// CPED_CONFIG_FLAG_BumpedByPlayer = 117,
		/// \_0xE586D504 = 118,
		/// \_0x52374204 = 119,
		/// CPED_CONFIG_FLAG_IsHandCuffed = 120,
		/// CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
		/// CPED_CONFIG_FLAG_DisableMelee = 122,
		/// \_0xFE714397 = 123,
		/// \_0xB3E660BD = 124,
		/// \_0x5FED6BFD = 125,
		/// \_0xC9D6F66F = 126,
		/// \_0x519BC986 = 127,
		/// CPED_CONFIG_FLAG_CanBeAgitated = 128,
		/// \_0x9A4B617C = 129, // CPED_CONFIG_FLAG_FaceDirInsult
		/// \_0xDAB70E9F = 130,
		/// \_0xE569438A = 131,
		/// \_0xBBC77D6D = 132,
		/// \_0xCB59EF0F = 133,
		/// \_0x8C5EA971 = 134,
		/// CPED_CONFIG_FLAG_IsScuba = 135,
		/// CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
		/// \_0xDCE59B58 = 137,
		/// CPED_CONFIG_FLAG_RidingTrain = 138,
		/// CPED_CONFIG_FLAG_ArrestResult = 139,
		/// CPED_CONFIG_FLAG_CanAttackFriendly = 140,
		/// \_0x98A4BE43 = 141,
		/// \_0x6901E731 = 142,
		/// \_0x9EC9BF6C = 143,
		/// \_0x42841A8F = 144,
		/// CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
		/// CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
		/// CPED_CONFIG_FLAG_StairsDetected = 147,
		/// CPED_CONFIG_FLAG_SlopeDetected = 148,
		/// \_0x1A15670B = 149,
		/// \_0x61786EE5 = 150,
		/// \_0xCB9186BD = 151,
		/// \_0xF0710152 = 152,
		/// \_0x43DFE310 = 153,
		/// \_0xC43C624E = 154,
		/// CPED_CONFIG_FLAG_CanPerformArrest = 155,
		/// CPED_CONFIG_FLAG_CanPerformUncuff = 156,
		/// CPED_CONFIG_FLAG_CanBeArrested = 157,
		/// \_0xF7960FF5 = 158,
		/// \_0x59564113 = 159,
		/// \_0x0C6C3099 = 160,
		/// \_0x645F927A = 161,
		/// \_0xA86549B9 = 162,
		/// \_0x8AAF337A = 163,
		/// \_0x13BAA6E7 = 164,
		/// \_0x5FB9D1F5 = 165,
		/// CPED_CONFIG_FLAG_IsInjured = 166,
		/// \_0x6398A20B = 167,
		/// \_0xD8072639 = 168,
		/// \_0xA05B1845 = 169,
		/// \_0x83F6D220 = 170,
		/// \_0xD8430331 = 171,
		/// \_0x4B547520 = 172,
		/// \_0xE66E1406 = 173,
		/// \_0x1C4BFE0C = 174,
		/// \_0x90008BFA = 175,
		/// \_0x07C7A910 = 176,
		/// \_0xF15F8191 = 177,
		/// \_0xCE4E8BE2 = 178,
		/// \_0x1D46E4F2 = 179,
		/// CPED_CONFIG_FLAG_IsInCustody = 180,
		/// \_0xE4FD9B3A = 181,
		/// \_0x67AE0812 = 182,
		/// CPED_CONFIG_FLAG_IsAgitated = 183,
		/// CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
		/// \_0x7B2D325E = 185,
		/// CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
		/// CPED_CONFIG_FLAG_HasHurtStarted = 187,
		/// CPED_CONFIG_FLAG_DisableHurt = 188,
		/// CPED_CONFIG_FLAG_PlayerIsWeird = 189,
		/// \_0x32FC208B = 190,
		/// \_0x0C296E5A = 191,
		/// \_0xE63B73EC = 192,
		/// \_0x04E9CC80 = 193,
		/// CPED_CONFIG_FLAG_UsingScenario = 194,
		/// CPED_CONFIG_FLAG_VisibleOnScreen = 195,
		/// \_0xD88C58A1 = 196,
		/// \_0x5A3DCF43 = 197, // CPED_CONFIG_FLAG_AvoidUnderSide
		/// \_0xEA02B420 = 198,
		/// \_0x3F559CFF = 199,
		/// \_0x8C55D029 = 200,
		/// \_0x5E6466F6 = 201,
		/// \_0xEB5AD706 = 202,
		/// \_0x0EDDDDE7 = 203,
		/// \_0xA64F7B1D = 204,
		/// \_0x48532CBA = 205,
		/// \_0xAA25A9E7 = 206,
		/// \_0x415B26B9 = 207,
		/// CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
		/// CPED_CONFIG_FLAG_DodgedPlayer = 209,
		/// \_0x67405504 = 210,
		/// \_0x75DDD68C = 211,
		/// \_0x2AD879B4 = 212,
		/// \_0x51486F91 = 213,
		/// \_0x32F79E21 = 214,
		/// \_0xBF099213 = 215,
		/// \_0x054AC8E2 = 216,
		/// \_0x14E495CC = 217,
		/// \_0x3C7DF9DF = 218,
		/// \_0x848FFEF2 = 219,
		/// CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
		/// \_0x2618E1CF = 221,
		/// \_0x84F722FA = 222,
		/// \_0xD1B87B1F = 223,
		/// \_0x728AA918 = 224,
		/// CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
		/// CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
		/// \_0x59E91185 = 227,
		/// \_0x1EA7225F = 228,
		/// CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
		/// \_0x6DCA7D88 = 230,
		/// \_0xFC3E572D = 231,
		/// \_0x08E9F9CF = 232,
		/// \_0x2D3BA52D = 233,
		/// \_0xFD2F53EA = 234,
		/// \_0x31A1B03B = 235,
		/// CPED_CONFIG_FLAG_IsHoldingProp = 236,
		/// \_0x82ED0A66 = 237, // CPED_CONFIG_FLAG_BlocksPathingWhenDead
		/// \_0xCE57C9A3 = 238,
		/// \_0x26149198 = 239,
		/// \_0x1B33B598 = 240,
		/// \_0x719B6E87 = 241,
		/// \_0x13E8E8E8 = 242,
		/// \_0xF29739AE = 243,
		/// \_0xABEA8A74 = 244,
		/// \_0xB60EA2BA = 245,
		/// \_0x536B0950 = 246,
		/// \_0x0C754ACA = 247,
		/// CPED_CONFIG_FLAG_DisableVehicleSeatRandomAnimations = 248,
		/// \_0x12659168 = 249,
		/// \_0x1BDF2F04 = 250,
		/// \_0x7728FAA3 = 251,
		/// \_0x6A807ED8 = 252,
		/// CPED_CONFIG_FLAG_OnStairs = 253,
		/// \_0xE1A2F73F = 254,
		/// \_0x5B3697C8 = 255,
		/// \_0xF1EB20A9 = 256,
		/// \_0x8B7DF407 = 257,
		/// \_0x329DCF1A = 258,
		/// \_0x8D90DD1B = 259,
		/// \_0xB8A292B7 = 260,
		/// \_0x8374B087 = 261,
		/// \_0x2AF558F0 = 262,
		/// \_0x82251455 = 263,
		/// \_0x30CF498B = 264,
		/// \_0xE1CD50AF = 265,
		/// \_0x72E4AE48 = 266,
		/// \_0xC2657EA1 = 267,
		/// \_0x29FF6030 = 268,
		/// \_0x8248A5EC = 269,
		/// CPED_CONFIG_FLAG_OnStairSlope = 270,
		/// \_0xA0897933 = 271,
		/// CPED_CONFIG_FLAG_DontBlipCop = 272,
		/// CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
		/// \_0xF7823618 = 274,
		/// \_0xDC305CCE = 275, // CPED_CONFIG_FLAG_KillWhenTrapped
		/// CPED_CONFIG_FLAG_EdgeDetected = 276,
		/// \_0x92B67896 = 277,
		/// \_0xCAD677C9 = 278,
		/// CPED_CONFIG_FLAG_AvoidTearGas = 279,
		/// \_0x5276AC7B = 280,
		/// \_0x1032692A = 281,
		/// \_0xDA23E7F1 = 282,
		/// \_0x9139724D = 283,
		/// \_0xA1457461 = 284,
		/// \_0x4186E095 = 285,
		/// \_0xAC68E2EB = 286,
		/// CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
		/// CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
		/// \_0x1B9EE8A1 = 289,
		/// \_0xF3F5758C = 290,
		/// \_0x2A9307F1 = 291,
		/// \_0x7403D216 = 292,
		/// \_0xA06A3C6C = 293,
		/// CPED_CONFIG_FLAG_DisableShockingEvents = 294,
		/// \_0xF8DA25A5 = 295,
		/// \_0x7EF55802 = 296,
		/// \_0xB31F1187 = 297,
		/// \_0x84315402 = 298,
		/// \_0x0FD69867 = 299,
		/// \_0xC7829B67 = 300,
		/// CPED_CONFIG_FLAG_DisablePedConstraints = 301,
		/// \_0x6D23CF25 = 302,
		/// \_0x2ADA871B = 303,
		/// \_0x47BC8A58 = 304,
		/// \_0xEB692FA5 = 305,
		/// \_0x4A133C50 = 306,
		/// \_0xC58099C3 = 307,
		/// \_0xF3D76D41 = 308,
		/// \_0xB0EEE9F2 = 309,
		/// CPED_CONFIG_FLAG_IsInCluster = 310,
		/// \_0x0FA153EF = 311,
		/// \_0xD73F5CD3 = 312,
		/// \_0xD4136C22 = 313,
		/// \_0xE404CA6B = 314,
		/// \_0xB9597446 = 315,
		/// \_0xD5C98277 = 316,
		/// \_0xD5060A9C = 317,
		/// \_0x3E5F1CBB = 318,
		/// \_0xD8BE1D54 = 319,
		/// \_0x0B1F191F = 320,
		/// \_0xC995167A = 321,
		/// CPED_CONFIG_FLAG_HasHighHeels = 322,
		/// \_0x86B01E54 = 323,
		/// \_0x3A56FE15 = 324,
		/// \_0xC03B736C = 325, // CPED_CONFIG_FLAG_SpawnedAtScenario
		/// \_0xBBF47729 = 326,
		/// \_0x22B668A8 = 327,
		/// \_0x2624D4D4 = 328,
		/// CPED_CONFIG_FLAG_DisableTalkTo = 329,
		/// CPED_CONFIG_FLAG_DontBlip = 330,
		/// CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
		/// \_0x630F55F3 = 332,
		/// \_0x150468FD = 333,
		/// \_0x914EBD6B = 334,
		/// \_0x79AF3B6D = 335,
		/// \_0x75C7A632 = 336,
		/// \_0x52D530E2 = 337,
		/// \_0xDB2A90E0 = 338,
		/// \_0x5922763D = 339,
		/// \_0x12ADB567 = 340,
		/// \_0x105C8518 = 341,
		/// \_0x106F703D = 342,
		/// \_0xED152C3E = 343,
		/// \_0xA0EFE6A8 = 344,
		/// \_0xBF348C82 = 345,
		/// \_0xCDDFE830 = 346,
		/// \_0x7B59BD9B = 347,
		/// \_0x0124C788 = 348,
		/// CPED_CONFIG_FLAG_EquipJetpack = 349,
		/// \_0x08D361A5 = 350,
		/// \_0xE13D1F7C = 351,
		/// \_0x40E25FB9 = 352,
		/// \_0x930629D9 = 353,
		/// \_0xECCF0C7F = 354,
		/// \_0xB6E9613B = 355,
		/// \_0x490C0478 = 356,
		/// \_0xE8865BEA = 357,
		/// \_0xF3C34A29 = 358,
		/// CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
		/// \_0xF660E115 = 360,
		/// \_0xAB0E6DED = 361,
		/// CPED_CONFIG_FLAG_HasReserveParachute = 362,
		/// CPED_CONFIG_FLAG_UseReserveParachute = 363,
		/// \_0x5C5D9CD3 = 364,
		/// \_0x8F7701F3 = 365,
		/// \_0xBC4436AD = 366,
		/// \_0xD7E07D37 = 367,
		/// \_0x03C4FD24 = 368,
		/// \_0x7675789A = 369,
		/// \_0xB7288A88 = 370,
		/// \_0xC06B6291 = 371,
		/// \_0x95A4A805 = 372,
		/// \_0xA8E9A042 = 373,
		/// CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
		/// \_0xBAC674B3 = 375,
		/// \_0x147F1FFB = 376,
		/// \_0x4376DD79 = 377,
		/// \_0xCD3DB518 = 378,
		/// \_0xFE4BA4B6 = 379,
		/// \_0x5DF03A55 = 380,
		/// \_0xBCD816CD = 381,
		/// \_0xCF02DD69 = 382,
		/// \_0xF73AFA2E = 383,
		/// \_0x80B9A9D0 = 384,
		/// \_0xF601F7EE = 385,
		/// \_0xA91350FC = 386,
		/// \_0x3AB23B96 = 387,
		/// CPED_CONFIG_FLAG_IsClimbingLadder = 388,
		/// CPED_CONFIG_FLAG_HasBareFeet = 389,
		/// \_0xB4B1CD4C = 390,
		/// \_0x5459AFB8 = 391,
		/// \_0x54F27667 = 392,
		/// \_0xC11D3E8F = 393,
		/// \_0x5419EB3E = 394,
		/// \_0x82D8DBB4 = 395,
		/// \_0x33B02D2F = 396,
		/// \_0xAE66176D = 397,
		/// \_0xA2692593 = 398,
		/// \_0x714C7E31 = 399,
		/// \_0xEC488AC7 = 400,
		/// \_0xAE398504 = 401,
		/// \_0xABC58D72 = 402,
		/// \_0x5E5B9591 = 403,
		/// \_0x6BA1091E = 404,
		/// \_0x77840177 = 405,
		/// \_0x1C7ACAC4 = 406,
		/// \_0x124420E9 = 407,
		/// \_0x75A65587 = 408,
		/// \_0xDFD2D55B = 409,
		/// \_0xBDD39919 = 410,
		/// \_0x43DEC267 = 411,
		/// \_0xE42B7797 = 412,
		/// CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
		/// \_0x4F8149F5 = 414,
		/// \_0xDD9ECA7A = 415,
		/// \_0x9E7EF9D2 = 416,
		/// \_0x2C6ED942 = 417,
		/// CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
		/// \_0xA488727D = 419,
		/// \_0xCFF5F6DE = 420,
		/// \_0x6D614599 = 421,
		/// CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
		/// \_0xFE401D26 = 423,
		/// CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
		/// \_0x2B42AE82 = 425,
		/// \_0x7A95734F = 426,
		/// \_0xDF4D8617 = 427,
		/// \_0x578F1F14 = 428,
		/// CPED_CONFIG_FLAG_DisableStartEngine = 429,
		/// CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
		/// \_0x153C9500 = 431,
		/// \_0xCB7A632E = 432,
		/// \_0xDE727981 = 433,
		/// CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
		/// \_0x12BBB935 = 435,
		/// \_0xAD0A1277 = 436,
		/// \_0xEA6AA46A = 437,
		/// CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
		/// \_0xCB7F3A1E = 439,
		/// \_0x50178878 = 440,
		/// \_0x051B4F0D = 441,
		/// \_0x2FC3DECC = 442,
		/// \_0xC0030B0B = 443,
		/// \_0xBBDAF1E9 = 444,
		/// \_0x944FE59C = 445,
		/// \_0x506FBA39 = 446,
		/// \_0xDD45FE84 = 447,
		/// \_0xE698AE75 = 448,
		/// \_0x199633F8 = 449,
		/// CPED_CONFIG_FLAG_PedIsArresting = 450,
		/// CPED_CONFIG_FLAG_IsDecoyPed = 451,
		/// \_0x3A251D83 = 452,
		/// \_0xA56F6986 = 453,
		/// \_0x1D19C622 = 454,
		/// \_0xB68D3EAB = 455,
		/// CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
		/// \_0x4BD5EBAD = 457,
		/// }
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_CONFIG_FLAG](?\_0x1913FE4CBF41C463).**
		/// </summary>
		public static void SetPedConfigFlag_CFX(int _ped, int _flagId, bool _value)
		{
			Function.Call((Hash)0x9CFBE10D, _ped, _flagId, _value);
		}
		/// <summary>
		/// // Source GTA VC miss2 leak, matching constants for 0/2/4, testing
		/// // They use 10 in am_mp_property_int, don't know what it does atm.
		/// enum eCarLock {
		/// CARLOCK_NONE = 0,
		/// CARLOCK_UNLOCKED = 1,
		/// CARLOCK_LOCKED = 2,
		/// CARLOCK_LOCKOUT_PLAYER_ONLY = 3,
		/// CARLOCK_LOCKED_PLAYER_INSIDE = 4,
		/// CARLOCK_LOCKED_INITIALLY = 5,
		/// CARLOCK_FORCE_SHUT_DOORS = 6,
		/// CARLOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7
		/// };
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_DOORS_LOCKED](?\_0xB664292EAECF7FA6).**
		/// </summary>
		public static void SetVehicleDoorsLocked_CFX(int _vehicle, int _doorLockStatus)
		{
			Function.Call((Hash)0x4CDD35D0, _vehicle, _doorLockStatus);
		}
		/// <summary>
		/// Firing Pattern Hash Information: https://pastebin.com/Px036isB
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_SHOOT_AT_COORD](?\_0x46A6CC01E0826106).**
		/// </summary>
		public static void TaskShootAtCoord_CFX(int _ped, float _x, float _y, float _z, int _duration, uint _firingPattern)
		{
			Function.Call((Hash)0x601C22E3, _ped, _x, _y, _z, _duration, _firingPattern);
		}
		/// <summary>
		/// Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#\_0xD3DBCE61A490BE02)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_LEAVE_ANY_VEHICLE](?\_0x504D54DF3F6F2247).**
		/// </summary>
		public static void TaskLeaveAnyVehicle_CFX(int _ped, int _p1, int _flags)
		{
			Function.Call((Hash)0xDBDD79FA, _ped, _p1, _flags);
		}
		/// <summary>
		/// Flags:
		/// SPC_AMBIENT_SCRIPT = (1 << 1),
		/// SPC_CLEAR_TASKS = (1 << 2),
		/// SPC_REMOVE_FIRES = (1 << 3),
		/// SPC_REMOVE_EXPLOSIONS = (1 << 4),
		/// SPC_REMOVE_PROJECTILES = (1 << 5),
		/// SPC_DEACTIVATE_GADGETS = (1 << 6),
		/// SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
		/// SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
		/// SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
		/// SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
		/// SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
		/// SPC_ALLOW_PAD_SHAKE = (1 << 12)
		/// See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PLAYER_CONTROL](?\_0x8D32347D6D4C40A2).**
		/// </summary>
		public static void SetPlayerControl_CFX(int _player, bool _bHasControl, int _flags)
		{
			Function.Call((Hash)0xD17AFCD8, _player, _bHasControl, _flags);
		}
		/// <summary>
		/// This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
		/// 
		/// ### MP Freemode list of components
		/// 
		/// **0**: Face\
		/// **1**: Mask\
		/// **2**: Hair\
		/// **3**: Torso\
		/// **4**: Leg\
		/// **5**: Parachute / bag\
		/// **6**: Shoes\
		/// **7**: Accessory\
		/// **8**: Undershirt\
		/// **9**: Kevlar\
		/// **10**: Badge\
		/// **11**: Torso 2
		/// 
		/// ### Related and useful natives
		/// 
		/// [GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS](#\_0x27561561732A7842)\
		/// [GET_NUMBER_OF_PED_TEXTURE_VARIATIONS](#\_0x8F7156A3142A6BAD)
		/// [List of component/props ID](gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_PED_COMPONENT_VARIATION](?\_0x262B14F48D29DE80).**
		/// </summary>
		public static void SetPedComponentVariation(int _ped, int _componentId, int _drawableId, int _textureId, int _paletteId)
		{
			Function.Call((Hash)0xD4F7B05C, _ped, _componentId, _drawableId, _textureId, _paletteId);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [TASK_WARP_PED_INTO_VEHICLE](?\_0x9A7D091411C5F684).**
		/// </summary>
		public static void TaskWarpPedIntoVehicle_CFX(int _ped, int _vehicle, int _seatIndex)
		{
			Function.Call((Hash)0x65D4A35D, _ped, _vehicle, _seatIndex);
		}
		/// <summary>
		/// speed 1.0 = walk, 2.0 = run
		/// p5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle
		/// p6 is always 0
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_ENTER_VEHICLE](?\_0xC20E50AA46D09CA8).**
		/// </summary>
		public static void TaskEnterVehicle_CFX(int _ped, int _vehicle, int _timeout, int _seatIndex, float _speed, int _flag, int _p6)
		{
			Function.Call((Hash)0xB8689B4E, _ped, _vehicle, _timeout, _seatIndex, _speed, _flag, _p6);
		}
		/// <summary>
		/// Flags from decompiled scripts:
		/// 0 = normal exit and closes door.
		/// 1 = normal exit and closes door.
		/// 16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)
		/// 64 = normal exit and closes door, maybe a bit slower animation than 0.
		/// 256 = normal exit but does not close the door.
		/// 4160 = ped is throwing himself out, even when the vehicle is still.
		/// 262144 = ped moves to passenger seat first, then exits normally
		/// Others to be tried out: 320, 512, 131072.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_LEAVE_VEHICLE](?\_0xD3DBCE61A490BE02).**
		/// </summary>
		public static void TaskLeaveVehicle_CFX(int _ped, int _vehicle, int _flags)
		{
			Function.Call((Hash)0x7B1141C6, _ped, _vehicle, _flags);
		}
		/// <summary>
		/// It's similar to the one above, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).
		/// [Animations list](https://alexguirre.github.io/animations-list/)
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_PLAY_ANIM_ADVANCED](?\_0x83CDB10EA29B370B).**
		/// </summary>
		public static void TaskPlayAnimAdvanced_CFX(int _ped, string _animDict, string _animName, float _posX, float _posY, float _posZ, float _rotX, float _rotY, float _rotZ, float _animEnterSpeed, float _animExitSpeed, int _duration, int _flag, float _animTime, int _p14, int _p15)
		{
			Function.Call((Hash)0x3DDEB0E6, _ped, _animDict, _animName, _posX, _posY, _posZ, _rotX, _rotY, _rotZ, _animEnterSpeed, _animExitSpeed, _duration, _flag, _animTime, _p14, _p15);
		}
		/// <summary>
		/// Sets the dirt level of the passed vehicle.
		/// 
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_DIRT_LEVEL](?\_0x79D3B596FE44EE8B).**
		/// </summary>
		public static void SetVehicleDirtLevel_CFX(int _vehicle, float _dirtLevel)
		{
			Function.Call((Hash)0x2B39128B, _vehicle, _dirtLevel);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [SET_VEHICLE_NUMBER_PLATE_TEXT](?\_0x95A88F0B409CDA47).**
		/// </summary>
		public static void SetVehicleNumberPlateText(int _vehicle, string _plateText)
		{
			Function.Call((Hash)0x400F9556, _vehicle, _plateText);
		}
		/// <summary>
		/// **This is the server-side RPC native equivalent of the client native [TASK_REACT_AND_FLEE_PED](?\_0x72C896464915D1B1).**
		/// </summary>
		public static void TaskReactAndFleePed(int _ped, int _fleeTarget)
		{
			Function.Call((Hash)0x8A632BD8, _ped, _fleeTarget);
		}
		/// <summary>
		/// example from fm_mission_controller
		/// TASK::TASK_GO_TO_COORD_ANY_MEANS(l\_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_GO_TO_COORD_ANY_MEANS](?\_0x5BC448CB78FA3E88).**
		/// </summary>
		public static void TaskGoToCoordAnyMeans_CFX(int _ped, float _x, float _y, float _z, float _speed, int _p5, bool _p6, int _walkingStyle, float _p8)
		{
			Function.Call((Hash)0xF91DF93B, _ped, _x, _y, _z, _speed, _p5, _p6, _walkingStyle, _p8);
		}
		/// <summary>
		/// [Animations list](https://alexguirre.github.io/animations-list/)
		/// 
		/// ```
		/// float blendInSpeed > normal speed is 8.0f
		/// ----------------------
		/// float blendOutSpeed > normal speed is 8.0f
		/// ----------------------
		/// int duration: time in millisecond
		/// ----------------------
		/// -1 _ _ _ _ _ _ _> Default (see flag)
		/// 0 _ _ _ _ _ _ _ > Not play at all
		/// Small value _ _ > Slow down animation speed
		/// Other _ _ _ _ _ > freeze player control until specific time (ms) has
		/// _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
		/// _ _ _ _ _ _ _ _ _ controllable.)
		/// int flag:
		/// ----------------------
		/// enum eAnimationFlags
		/// {
		/// ANIM_FLAG_NORMAL = 0,
		/// ANIM_FLAG_REPEAT = 1,
		/// ANIM_FLAG_STOP_LAST_FRAME = 2,
		/// ANIM_FLAG_UPPERBODY = 16,
		/// ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
		/// ANIM_FLAG_CANCELABLE = 120,
		/// };
		/// Odd number : loop infinitely
		/// Even number : Freeze at last frame
		/// Multiple of 4: Freeze at last frame but controllable
		/// 01 to 15 > Full body
		/// 10 to 31 > Upper body
		/// 32 to 47 > Full body > Controllable
		/// 48 to 63 > Upper body > Controllable
		/// ...
		/// 001 to 255 > Normal
		/// 256 to 511 > Garbled
		/// ...
		/// playbackRate:
		/// values are between 0.0 and 1.0
		/// lockX:
		/// 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
		/// > 1 for mini@sprunk
		/// lockY:
		/// 0 in most cases
		/// 1 for missfam5_yoga, missfra1mcs_2_crew_react
		/// lockZ:
		/// 0 for single player
		/// Can be 1 but only for MP
		/// ```
		/// 
		/// **This is the server-side RPC native equivalent of the client native [TASK_PLAY_ANIM](?\_0xEA47FE3719165B94).**
		/// </summary>
		public static void TaskPlayAnim_CFX(int _ped, string _animDictionary, string _animationName, float _blendInSpeed, float _blendOutSpeed, int _duration, int _flag, float _playbackRate, bool _lockX, bool _lockY, bool _lockZ)
		{
			Function.Call((Hash)0x5AB552C6, _ped, _animDictionary, _animationName, _blendInSpeed, _blendOutSpeed, _duration, _flag, _playbackRate, _lockX, _lockY, _lockZ);
		}
	}
}